import { UseCollectionOptions, UseCollectionResult } from '@awsui/collection-hooks';
import { TableProps } from '@awsui/components-react/table';
import { ITreeNode } from '../Model/TreeNode';
export interface UseTreeCollection<T> extends UseCollectionOptions<ITreeNode<T>> {
    keyPropertyName: string;
    parentKeyPropertyName: string;
    columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;
}
export interface UseTreeCollectionResult<T> extends UseCollectionResult<ITreeNode<T>> {
    expandNode: (node: ITreeNode<T>) => void;
    reset: () => void;
}
export declare const useTreeCollection: <T>(items: T[], props: UseTreeCollection<T>, expanded?: boolean) => UseTreeCollectionResult<T>;
//# sourceMappingURL=useTreeCollection.d.ts.map