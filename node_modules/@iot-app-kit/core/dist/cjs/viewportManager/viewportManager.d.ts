import type { Viewport } from '../data-module/data-cache/requestTypes';
type ViewportListener = (viewport: Viewport, topic?: string) => void;
/**
 * Publicly exposed manager of viewport groups. Allows components, both internally to IoT App Kit,
 * and external components / code to broadcast updates to viewports within a group.
 *
 * Utilized to allow widgets to provide a synchronized view into data - an example can be
 * found at https://synchrocharts.com/#/Features/Synchronization
 */
export declare const viewportManager: {
    /**
     * Resets all state related to viewport groups.
     */
    reset: () => void;
    /**
     * Subscribe to viewport group
     *
     * @param viewportGroup - group to subscribe to
     * @param viewportListener - listener for viewport group updates. Called every time an update to the group is called. Not called upon initial subscription
     */
    subscribe: (viewportGroup: string, viewportListener: ViewportListener) => {
        unsubscribe: () => void;
        viewport: Viewport | null;
    };
    update: (viewportGroup: string, viewport: Viewport, topic?: string) => void;
};
export {};
//# sourceMappingURL=viewportManager.d.ts.map