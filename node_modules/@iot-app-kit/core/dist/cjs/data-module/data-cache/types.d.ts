import { AggregateType } from '@aws-sdk/client-iotsitewise';
import type { IntervalStructure } from '../../common/intervalStructure';
import type { ErrorDetails } from '../../common/types';
import type { DataPoint, DataStream } from '../types';
type TTL = number;
export type TTLDurationMapping = {
    [durationMS: number]: TTL;
};
export type HistoricalRequest = {
    start: Date;
    end: Date;
    requestedAt: Date;
};
export type DataStreamStore = {
    id: string;
    resolution: number;
    dataCache: IntervalStructure<DataPoint>;
    requestCache: IntervalStructure<DataPoint>;
    requestHistory: HistoricalRequest[];
    isLoading: boolean;
    isRefreshing: boolean;
    aggregationType?: AggregateType;
    error?: ErrorDetails;
    numOutgoingRequests?: number;
} & Omit<DataStream, 'data'>;
export type AggregationStreamStore = {
    [aggregationType in AggregateType]?: DataStreamStore | undefined;
};
export type DataStoreForID = {
    resolutions?: {
        [resolution: number]: AggregationStreamStore | undefined;
    } | undefined;
    rawData?: DataStreamStore | undefined;
};
export type DataStreamsStore = {
    [dataStreamId: string]: DataStoreForID | undefined;
};
export type CacheSettings = {
    ttlDurationMapping: TTLDurationMapping;
};
export {};
//# sourceMappingURL=types.d.ts.map