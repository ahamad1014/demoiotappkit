"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.combineProviders = void 0;
/**
 * Utility to compose multiple providers into a single provider.
 */
const noop = () => { };
const combineProviders = (providers) => {
    if (providers.length === 0) {
        return {
            updateViewport: noop,
            unsubscribe: noop,
            subscribe: noop,
        };
    }
    if (providers.length === 1) {
        return providers[0];
    }
    return {
        updateViewport(viewport) {
            providers.forEach((provider) => {
                provider.updateViewport(viewport);
            });
        },
        subscribe(observer) {
            const results = {};
            const next = (index) => (result) => {
                results[index] = result;
                const combinedResults = Object.values(results).flat();
                observer.next(combinedResults);
            };
            providers.forEach((provider, i) => {
                provider.subscribe({ next: next(i), error: observer.error });
            });
        },
        unsubscribe: () => {
            providers.forEach(({ unsubscribe }) => {
                unsubscribe();
            });
        },
    };
};
exports.combineProviders = combineProviders;
