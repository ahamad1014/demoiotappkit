"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNumeric = exports.round = void 0;
const MAX_PRECISION = 4;
/**
 * Rounds a number to a pre-determined precision
 *
 * i.e. round(100000.1234) => 100000.1234
 *      round(100000.12345678) => 100000.1234
 *      round(.02345678) => 0.02346
 */
const round = (num) => {
    if (Number.isNaN(num) || num === Infinity || num === -Infinity) {
        return num;
    }
    const absoluteValue = Math.abs(num);
    if (absoluteValue < 1) {
        return Number(num.toPrecision(MAX_PRECISION));
    }
    const integer = Math.trunc(num);
    // in case of negative number, we need to remove the first 3 characters from decimal string eg. -0.123 => 123
    const decimal = (num - integer)
        .toFixed(MAX_PRECISION)
        .substring(num !== absoluteValue ? 3 : 2);
    return Number(`${integer}.${decimal}`);
};
exports.round = round;
/**
 * Checks if value can be used as a number
 */
const isNumeric = (value) => /^(\+|-)?(Infinity|\d+)(\.\d+)?e?((\+|-)?\d+)?$/.test(String(value));
exports.isNumeric = isNumeric;
