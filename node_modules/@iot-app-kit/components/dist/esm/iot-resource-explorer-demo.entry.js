import { r as registerInstance, h as h$2 } from './index-7d5b2a6a.js';
import { H as HttpRequest$2, t as toHex$1, f as fromHex$1, a as fromUtf8$4, e as escapeUri$1, b as toUtf8$4, c as HttpResponse$1, d as toEndpointV1$1, g as constructStack$1, h as fromBase64$1, A as AlgorithmId$1, i as toBase64$1, p as parseUrl$1, F as FetchHttpHandler$1, C as Command$1, j as getSerdePlugin$1, k as getEndpointPlugin$1, s as se_BatchGetAssetPropertyAggregatesCommand, l as de_BatchGetAssetPropertyAggregatesCommand, S as SMITHY_CONTEXT_KEY, m as se_BatchGetAssetPropertyValueCommand, n as de_BatchGetAssetPropertyValueCommand, o as se_BatchGetAssetPropertyValueHistoryCommand, q as de_BatchGetAssetPropertyValueHistoryCommand, r as se_DescribeAssetModelCommand, u as de_DescribeAssetModelCommand, v as se_GetAssetPropertyAggregatesCommand, w as de_GetAssetPropertyAggregatesCommand, x as se_GetAssetPropertyValueCommand, y as de_GetAssetPropertyValueCommand, z as se_GetAssetPropertyValueHistoryCommand, B as de_GetAssetPropertyValueHistoryCommand, D as se_ListAssetsCommand, E as de_ListAssetsCommand, G as se_ListAssociatedAssetsCommand, I as de_ListAssociatedAssetsCommand, J as decorateServiceException, K as InternalFailureException, L as InvalidRequestException, R as ResourceNotFoundException, M as ServiceUnavailableException, T as ThrottlingException, N as IoTEventsServiceException, O as parse, P as pointBisector, Q as AWSUI_RED_600, U as ALARM_STATUS_MAP, V as COMPARISON_OPERATOR, W as ALARM_STATUS, X as StreamType, Y as lodash_merge, Z as LoadingStateEnum, _ as HIERARCHY_ROOT_ID, $ as assetHierarchyQueryKey, a0 as ListAssetsFilter, a1 as TraversalDirection, a2 as BranchReference, a3 as DescribeAssetCommand, a4 as DescribeModeledDataStreamRequest, a5 as lodash_uniqwith, a6 as lodash_isequal, a7 as TimeOrdering, a8 as RESOLUTION_TO_MS_MAPPING, a9 as dataloader, aa as SupportedResolutions, ab as MINUTE_IN_MS$1, ac as HOUR_IN_MS, ad as DAY_IN_MS, ae as IoTEventsToSynchroChartsComparisonOperator, af as COMPARISON_SYMBOL } from './resolution-2064ad48.js';
import { _ as __asyncGenerator$5, a as __await$5, b as __awaiter$5, c as __asyncValues$5 } from './tslib.es6-1e5d7044.js';
import { g as getAugmentedNamespace, c as createCommonjsModule, a as getDefaultExportFromCjs, b as commonjsGlobal } from './_commonjsHelpers-f9dc4873.js';

const getHttpHandlerExtensionConfiguration = (runtimeConfig) => {
    let httpHandler = runtimeConfig.httpHandler;
    return {
        setHttpHandler(handler) {
            httpHandler = handler;
        },
        httpHandler() {
            return httpHandler;
        },
        updateHttpClientConfig(key, value) {
            httpHandler.updateHttpClientConfig(key, value);
        },
        httpHandlerConfigs() {
            return httpHandler.httpHandlerConfigs();
        },
    };
};
const resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {
    return {
        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),
    };
};

function resolveHostHeaderConfig$1(input) {
    return input;
}
const hostHeaderMiddleware$1 = (options) => (next) => async (args) => {
    if (!HttpRequest$2.isInstance(args.request))
        return next(args);
    const { request } = args;
    const { handlerProtocol = "" } = options.requestHandler.metadata || {};
    if (handlerProtocol.indexOf("h2") >= 0 && !request.headers[":authority"]) {
        delete request.headers["host"];
        request.headers[":authority"] = request.hostname + (request.port ? ":" + request.port : "");
    }
    else if (!request.headers["host"]) {
        let host = request.hostname;
        if (request.port != null)
            host += `:${request.port}`;
        request.headers["host"] = host;
    }
    return next(args);
};
const hostHeaderMiddlewareOptions$1 = {
    name: "hostHeaderMiddleware",
    step: "build",
    priority: "low",
    tags: ["HOST"],
    override: true,
};
const getHostHeaderPlugin$1 = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(hostHeaderMiddleware$1(options), hostHeaderMiddlewareOptions$1);
    },
});

const loggerMiddleware$1 = () => (next, context) => async (args) => {
    try {
        const response = await next(args);
        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;
        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;
        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;
        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;
        const { $metadata, ...outputWithoutMetadata } = response.output;
        logger?.info?.({
            clientName,
            commandName,
            input: inputFilterSensitiveLog(args.input),
            output: outputFilterSensitiveLog(outputWithoutMetadata),
            metadata: $metadata,
        });
        return response;
    }
    catch (error) {
        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;
        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;
        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;
        logger?.error?.({
            clientName,
            commandName,
            input: inputFilterSensitiveLog(args.input),
            error,
            metadata: error.$metadata,
        });
        throw error;
    }
};
const loggerMiddlewareOptions$1 = {
    name: "loggerMiddleware",
    tags: ["LOGGER"],
    step: "initialize",
    override: true,
};
const getLoggerPlugin$1 = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(loggerMiddleware$1(), loggerMiddlewareOptions$1);
    },
});

const TRACE_ID_HEADER_NAME$1 = "X-Amzn-Trace-Id";
const ENV_LAMBDA_FUNCTION_NAME$1 = "AWS_LAMBDA_FUNCTION_NAME";
const ENV_TRACE_ID$1 = "_X_AMZN_TRACE_ID";
const recursionDetectionMiddleware$1 = (options) => (next) => async (args) => {
    const { request } = args;
    if (!HttpRequest$2.isInstance(request) ||
        options.runtime !== "node" ||
        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME$1)) {
        return next(args);
    }
    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME$1];
    const traceId = process.env[ENV_TRACE_ID$1];
    const nonEmptyString = (str) => typeof str === "string" && str.length > 0;
    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {
        request.headers[TRACE_ID_HEADER_NAME$1] = traceId;
    }
    return next({
        ...args,
        request,
    });
};
const addRecursionDetectionMiddlewareOptions$1 = {
    step: "build",
    tags: ["RECURSION_DETECTION"],
    name: "recursionDetectionMiddleware",
    override: true,
    priority: "low",
};
const getRecursionDetectionPlugin$1 = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(recursionDetectionMiddleware$1(options), addRecursionDetectionMiddlewareOptions$1);
    },
});

const memoize$1 = (provider, isExpired, requiresRefresh) => {
    let resolved;
    let pending;
    let hasResult;
    let isConstant = false;
    const coalesceProvider = async () => {
        if (!pending) {
            pending = provider();
        }
        try {
            resolved = await pending;
            hasResult = true;
            isConstant = false;
        }
        finally {
            pending = undefined;
        }
        return resolved;
    };
    if (isExpired === undefined) {
        return async (options) => {
            if (!hasResult || options?.forceRefresh) {
                resolved = await coalesceProvider();
            }
            return resolved;
        };
    }
    return async (options) => {
        if (!hasResult || options?.forceRefresh) {
            resolved = await coalesceProvider();
        }
        if (isConstant) {
            return resolved;
        }
        if (requiresRefresh && !requiresRefresh(resolved)) {
            isConstant = true;
            return resolved;
        }
        if (isExpired(resolved)) {
            await coalesceProvider();
            return resolved;
        }
        return resolved;
    };
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$4 = function(d, b) {
    extendStatics$4 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$4(d, b);
};

function __extends$4(d, b) {
    extendStatics$4(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$4 = function() {
    __assign$4 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$4.apply(this, arguments);
};

function __rest$5(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate$4(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param$4(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata$4(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter$4(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator$4(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding$4(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar$4(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values$4(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read$4(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$4() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$4(arguments[i]));
    return ar;
}

function __spreadArrays$4() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}
function __await$4(v) {
    return this instanceof __await$4 ? (this.v = v, this) : new __await$4(v);
}

function __asyncGenerator$4(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await$4 ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator$4(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await$4(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues$4(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values$4 === "function" ? __values$4(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject$4(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}
function __importStar$4(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault$4(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet$4(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet$4(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}

const tslib_es6$4 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    __extends: __extends$4,
    get __assign () { return __assign$4; },
    __rest: __rest$5,
    __decorate: __decorate$4,
    __param: __param$4,
    __metadata: __metadata$4,
    __awaiter: __awaiter$4,
    __generator: __generator$4,
    __createBinding: __createBinding$4,
    __exportStar: __exportStar$4,
    __values: __values$4,
    __read: __read$4,
    __spread: __spread$4,
    __spreadArrays: __spreadArrays$4,
    __await: __await$4,
    __asyncGenerator: __asyncGenerator$4,
    __asyncDelegator: __asyncDelegator$4,
    __asyncValues: __asyncValues$4,
    __makeTemplateObject: __makeTemplateObject$4,
    __importStar: __importStar$4,
    __importDefault: __importDefault$4,
    __classPrivateFieldGet: __classPrivateFieldGet$4,
    __classPrivateFieldSet: __classPrivateFieldSet$4
});

var fromUtf8$3 = function (input) {
    var bytes = [];
    for (var i = 0, len = input.length; i < len; i++) {
        var value = input.charCodeAt(i);
        if (value < 0x80) {
            bytes.push(value);
        }
        else if (value < 0x800) {
            bytes.push((value >> 6) | 192, (value & 63) | 128);
        }
        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);
            bytes.push((surrogatePair >> 18) | 240, ((surrogatePair >> 12) & 63) | 128, ((surrogatePair >> 6) & 63) | 128, (surrogatePair & 63) | 128);
        }
        else {
            bytes.push((value >> 12) | 224, ((value >> 6) & 63) | 128, (value & 63) | 128);
        }
    }
    return Uint8Array.from(bytes);
};
var toUtf8$3 = function (input) {
    var decoded = "";
    for (var i = 0, len = input.length; i < len; i++) {
        var byte = input[i];
        if (byte < 0x80) {
            decoded += String.fromCharCode(byte);
        }
        else if (192 <= byte && byte < 224) {
            var nextByte = input[++i];
            decoded += String.fromCharCode(((byte & 31) << 6) | (nextByte & 63));
        }
        else if (240 <= byte && byte < 365) {
            var surrogatePair = [byte, input[++i], input[++i], input[++i]];
            var encoded = "%" + surrogatePair.map(function (byteValue) { return byteValue.toString(16); }).join("%");
            decoded += decodeURIComponent(encoded);
        }
        else {
            decoded += String.fromCharCode(((byte & 15) << 12) | ((input[++i] & 63) << 6) | (input[++i] & 63));
        }
    }
    return decoded;
};

function fromUtf8$2(input) {
    return new TextEncoder().encode(input);
}
function toUtf8$2(input) {
    return new TextDecoder("utf-8").decode(input);
}

var fromUtf8$1 = function (input) {
    return typeof TextEncoder === "function" ? fromUtf8$2(input) : fromUtf8$3(input);
};
var toUtf8$1 = function (input) {
    return typeof TextDecoder === "function" ? toUtf8$2(input) : toUtf8$3(input);
};

const distEs$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    fromUtf8: fromUtf8$1,
    toUtf8: toUtf8$1
});

const util_utf8_browser_1 = /*@__PURE__*/getAugmentedNamespace(distEs$1);

var convertToBuffer_1 = createCommonjsModule(function (module, exports) {
// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertToBuffer = void 0;

// Quick polyfill
var fromUtf8 = typeof Buffer !== "undefined" && Buffer.from
    ? function (input) { return Buffer.from(input, "utf8"); }
    : util_utf8_browser_1.fromUtf8;
function convertToBuffer(data) {
    // Already a Uint8, do nothing
    if (data instanceof Uint8Array)
        return data;
    if (typeof data === "string") {
        return fromUtf8(data);
    }
    if (ArrayBuffer.isView(data)) {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
    }
    return new Uint8Array(data);
}
exports.convertToBuffer = convertToBuffer;
//# sourceMappingURL=convertToBuffer.js.map
});

var isEmptyData_1$1 = createCommonjsModule(function (module, exports) {
// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEmptyData = void 0;
function isEmptyData(data) {
    if (typeof data === "string") {
        return data.length === 0;
    }
    return data.byteLength === 0;
}
exports.isEmptyData = isEmptyData;
//# sourceMappingURL=isEmptyData.js.map
});

var numToUint8_1 = createCommonjsModule(function (module, exports) {
// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.numToUint8 = void 0;
function numToUint8(num) {
    return new Uint8Array([
        (num & 0xff000000) >> 24,
        (num & 0x00ff0000) >> 16,
        (num & 0x0000ff00) >> 8,
        num & 0x000000ff,
    ]);
}
exports.numToUint8 = numToUint8;
//# sourceMappingURL=numToUint8.js.map
});

var uint32ArrayFrom_1 = createCommonjsModule(function (module, exports) {
// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.uint32ArrayFrom = void 0;
// IE 11 does not support Array.from, so we do it manually
function uint32ArrayFrom(a_lookUpTable) {
    if (!Uint32Array.from) {
        var return_array = new Uint32Array(a_lookUpTable.length);
        var a_index = 0;
        while (a_index < a_lookUpTable.length) {
            return_array[a_index] = a_lookUpTable[a_index];
            a_index += 1;
        }
        return return_array;
    }
    return Uint32Array.from(a_lookUpTable);
}
exports.uint32ArrayFrom = uint32ArrayFrom;
//# sourceMappingURL=uint32ArrayFrom.js.map
});

var build$5 = createCommonjsModule(function (module, exports) {
// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;

Object.defineProperty(exports, "convertToBuffer", { enumerable: true, get: function () { return convertToBuffer_1.convertToBuffer; } });

Object.defineProperty(exports, "isEmptyData", { enumerable: true, get: function () { return isEmptyData_1$1.isEmptyData; } });

Object.defineProperty(exports, "numToUint8", { enumerable: true, get: function () { return numToUint8_1.numToUint8; } });

Object.defineProperty(exports, "uint32ArrayFrom", { enumerable: true, get: function () { return uint32ArrayFrom_1.uint32ArrayFrom; } });
//# sourceMappingURL=index.js.map
});

const tslib_1$4 = /*@__PURE__*/getAugmentedNamespace(tslib_es6$4);

var aws_crc32 = createCommonjsModule(function (module, exports) {
// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.AwsCrc32 = void 0;



var AwsCrc32 = /** @class */ (function () {
    function AwsCrc32() {
        this.crc32 = new build$4.Crc32();
    }
    AwsCrc32.prototype.update = function (toHash) {
        if ((0, build$5.isEmptyData)(toHash))
            return;
        this.crc32.update((0, build$5.convertToBuffer)(toHash));
    };
    AwsCrc32.prototype.digest = function () {
        return tslib_1$4.__awaiter(this, void 0, void 0, function () {
            return tslib_1$4.__generator(this, function (_a) {
                return [2 /*return*/, (0, build$5.numToUint8)(this.crc32.digest())];
            });
        });
    };
    AwsCrc32.prototype.reset = function () {
        this.crc32 = new build$4.Crc32();
    };
    return AwsCrc32;
}());
exports.AwsCrc32 = AwsCrc32;
//# sourceMappingURL=aws_crc32.js.map
});

var build$4 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.AwsCrc32 = exports.Crc32 = exports.crc32 = void 0;


function crc32(data) {
    return new Crc32().update(data).digest();
}
exports.crc32 = crc32;
var Crc32 = /** @class */ (function () {
    function Crc32() {
        this.checksum = 0xffffffff;
    }
    Crc32.prototype.update = function (data) {
        var e_1, _a;
        try {
            for (var data_1 = tslib_1$4.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                var byte = data_1_1.value;
                this.checksum =
                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return this;
    };
    Crc32.prototype.digest = function () {
        return (this.checksum ^ 0xffffffff) >>> 0;
    };
    return Crc32;
}());
exports.Crc32 = Crc32;
// prettier-ignore
var a_lookUpTable = [
    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,
    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,
    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,
    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,
    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,
    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,
    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,
    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,
    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,
    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,
    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,
    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,
    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,
    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,
    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,
    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,
    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,
    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,
    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,
    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,
    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,
    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,
    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,
    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,
    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,
    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,
    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,
    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,
    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,
    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,
    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,
    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,
    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,
    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,
    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,
    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,
    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,
    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,
    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,
    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,
    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,
    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,
    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,
    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,
    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,
    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,
    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,
    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,
    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,
    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,
    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,
    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,
    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,
    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,
    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,
    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,
    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,
    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,
    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,
    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,
    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,
    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,
    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D,
];
var lookupTable = (0, build$5.uint32ArrayFrom)(a_lookUpTable);

Object.defineProperty(exports, "AwsCrc32", { enumerable: true, get: function () { return aws_crc32.AwsCrc32; } });
//# sourceMappingURL=index.js.map
});

class Int64$1 {
    constructor(bytes) {
        this.bytes = bytes;
        if (bytes.byteLength !== 8) {
            throw new Error("Int64 buffers must be exactly 8 bytes");
        }
    }
    static fromNumber(number) {
        if (number > 9223372036854776000 || number < -9223372036854776000) {
            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);
        }
        const bytes = new Uint8Array(8);
        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {
            bytes[i] = remaining;
        }
        if (number < 0) {
            negate$1(bytes);
        }
        return new Int64$1(bytes);
    }
    valueOf() {
        const bytes = this.bytes.slice(0);
        const negative = bytes[0] & 0b10000000;
        if (negative) {
            negate$1(bytes);
        }
        return parseInt(toHex$1(bytes), 16) * (negative ? -1 : 1);
    }
    toString() {
        return String(this.valueOf());
    }
}
function negate$1(bytes) {
    for (let i = 0; i < 8; i++) {
        bytes[i] ^= 0xff;
    }
    for (let i = 7; i > -1; i--) {
        bytes[i]++;
        if (bytes[i] !== 0)
            break;
    }
}

class HeaderMarshaller$1 {
    constructor(toUtf8, fromUtf8) {
        this.toUtf8 = toUtf8;
        this.fromUtf8 = fromUtf8;
    }
    format(headers) {
        const chunks = [];
        for (const headerName of Object.keys(headers)) {
            const bytes = this.fromUtf8(headerName);
            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
        }
        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));
        let position = 0;
        for (const chunk of chunks) {
            out.set(chunk, position);
            position += chunk.byteLength;
        }
        return out;
    }
    formatHeaderValue(header) {
        switch (header.type) {
            case "boolean":
                return Uint8Array.from([header.value ? 0 : 1]);
            case "byte":
                return Uint8Array.from([2, header.value]);
            case "short":
                const shortView = new DataView(new ArrayBuffer(3));
                shortView.setUint8(0, 3);
                shortView.setInt16(1, header.value, false);
                return new Uint8Array(shortView.buffer);
            case "integer":
                const intView = new DataView(new ArrayBuffer(5));
                intView.setUint8(0, 4);
                intView.setInt32(1, header.value, false);
                return new Uint8Array(intView.buffer);
            case "long":
                const longBytes = new Uint8Array(9);
                longBytes[0] = 5;
                longBytes.set(header.value.bytes, 1);
                return longBytes;
            case "binary":
                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
                binView.setUint8(0, 6);
                binView.setUint16(1, header.value.byteLength, false);
                const binBytes = new Uint8Array(binView.buffer);
                binBytes.set(header.value, 3);
                return binBytes;
            case "string":
                const utf8Bytes = this.fromUtf8(header.value);
                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
                strView.setUint8(0, 7);
                strView.setUint16(1, utf8Bytes.byteLength, false);
                const strBytes = new Uint8Array(strView.buffer);
                strBytes.set(utf8Bytes, 3);
                return strBytes;
            case "timestamp":
                const tsBytes = new Uint8Array(9);
                tsBytes[0] = 8;
                tsBytes.set(Int64$1.fromNumber(header.value.valueOf()).bytes, 1);
                return tsBytes;
            case "uuid":
                if (!UUID_PATTERN$1.test(header.value)) {
                    throw new Error(`Invalid UUID received: ${header.value}`);
                }
                const uuidBytes = new Uint8Array(17);
                uuidBytes[0] = 9;
                uuidBytes.set(fromHex$1(header.value.replace(/\-/g, "")), 1);
                return uuidBytes;
        }
    }
    parse(headers) {
        const out = {};
        let position = 0;
        while (position < headers.byteLength) {
            const nameLength = headers.getUint8(position++);
            const name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));
            position += nameLength;
            switch (headers.getUint8(position++)) {
                case 0:
                    out[name] = {
                        type: BOOLEAN_TAG$1,
                        value: true,
                    };
                    break;
                case 1:
                    out[name] = {
                        type: BOOLEAN_TAG$1,
                        value: false,
                    };
                    break;
                case 2:
                    out[name] = {
                        type: BYTE_TAG$1,
                        value: headers.getInt8(position++),
                    };
                    break;
                case 3:
                    out[name] = {
                        type: SHORT_TAG$1,
                        value: headers.getInt16(position, false),
                    };
                    position += 2;
                    break;
                case 4:
                    out[name] = {
                        type: INT_TAG$1,
                        value: headers.getInt32(position, false),
                    };
                    position += 4;
                    break;
                case 5:
                    out[name] = {
                        type: LONG_TAG$1,
                        value: new Int64$1(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)),
                    };
                    position += 8;
                    break;
                case 6:
                    const binaryLength = headers.getUint16(position, false);
                    position += 2;
                    out[name] = {
                        type: BINARY_TAG$1,
                        value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength),
                    };
                    position += binaryLength;
                    break;
                case 7:
                    const stringLength = headers.getUint16(position, false);
                    position += 2;
                    out[name] = {
                        type: STRING_TAG$1,
                        value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength)),
                    };
                    position += stringLength;
                    break;
                case 8:
                    out[name] = {
                        type: TIMESTAMP_TAG$1,
                        value: new Date(new Int64$1(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf()),
                    };
                    position += 8;
                    break;
                case 9:
                    const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);
                    position += 16;
                    out[name] = {
                        type: UUID_TAG$1,
                        value: `${toHex$1(uuidBytes.subarray(0, 4))}-${toHex$1(uuidBytes.subarray(4, 6))}-${toHex$1(uuidBytes.subarray(6, 8))}-${toHex$1(uuidBytes.subarray(8, 10))}-${toHex$1(uuidBytes.subarray(10))}`,
                    };
                    break;
                default:
                    throw new Error(`Unrecognized header type tag`);
            }
        }
        return out;
    }
}
var HEADER_VALUE_TYPE$1;
(function (HEADER_VALUE_TYPE) {
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolTrue"] = 0] = "boolTrue";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolFalse"] = 1] = "boolFalse";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byte"] = 2] = "byte";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["short"] = 3] = "short";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["integer"] = 4] = "integer";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["long"] = 5] = "long";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byteArray"] = 6] = "byteArray";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["string"] = 7] = "string";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["timestamp"] = 8] = "timestamp";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["uuid"] = 9] = "uuid";
})(HEADER_VALUE_TYPE$1 || (HEADER_VALUE_TYPE$1 = {}));
const BOOLEAN_TAG$1 = "boolean";
const BYTE_TAG$1 = "byte";
const SHORT_TAG$1 = "short";
const INT_TAG$1 = "integer";
const LONG_TAG$1 = "long";
const BINARY_TAG$1 = "binary";
const STRING_TAG$1 = "string";
const TIMESTAMP_TAG$1 = "timestamp";
const UUID_TAG$1 = "uuid";
const UUID_PATTERN$1 = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;

const normalizeProvider$1 = (input) => {
    if (typeof input === "function")
        return input;
    const promisified = Promise.resolve(input);
    return () => promisified;
};

const toUint8Array$1 = (data) => {
    if (typeof data === "string") {
        return fromUtf8$4(data);
    }
    if (ArrayBuffer.isView(data)) {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
    }
    return new Uint8Array(data);
};

const ALGORITHM_QUERY_PARAM$1 = "X-Amz-Algorithm";
const CREDENTIAL_QUERY_PARAM$1 = "X-Amz-Credential";
const AMZ_DATE_QUERY_PARAM$1 = "X-Amz-Date";
const SIGNED_HEADERS_QUERY_PARAM$1 = "X-Amz-SignedHeaders";
const EXPIRES_QUERY_PARAM$1 = "X-Amz-Expires";
const SIGNATURE_QUERY_PARAM$1 = "X-Amz-Signature";
const TOKEN_QUERY_PARAM$1 = "X-Amz-Security-Token";
const AUTH_HEADER$1 = "authorization";
const AMZ_DATE_HEADER$1 = AMZ_DATE_QUERY_PARAM$1.toLowerCase();
const DATE_HEADER$1 = "date";
const GENERATED_HEADERS$1 = [AUTH_HEADER$1, AMZ_DATE_HEADER$1, DATE_HEADER$1];
const SIGNATURE_HEADER$1 = SIGNATURE_QUERY_PARAM$1.toLowerCase();
const SHA256_HEADER$1 = "x-amz-content-sha256";
const TOKEN_HEADER$1 = TOKEN_QUERY_PARAM$1.toLowerCase();
const ALWAYS_UNSIGNABLE_HEADERS$1 = {
    authorization: true,
    "cache-control": true,
    connection: true,
    expect: true,
    from: true,
    "keep-alive": true,
    "max-forwards": true,
    pragma: true,
    referer: true,
    te: true,
    trailer: true,
    "transfer-encoding": true,
    upgrade: true,
    "user-agent": true,
    "x-amzn-trace-id": true,
};
const PROXY_HEADER_PATTERN$1 = /^proxy-/;
const SEC_HEADER_PATTERN$1 = /^sec-/;
const ALGORITHM_IDENTIFIER$1 = "AWS4-HMAC-SHA256";
const EVENT_ALGORITHM_IDENTIFIER$1 = "AWS4-HMAC-SHA256-PAYLOAD";
const UNSIGNED_PAYLOAD$1 = "UNSIGNED-PAYLOAD";
const MAX_CACHE_SIZE$1 = 50;
const KEY_TYPE_IDENTIFIER$1 = "aws4_request";
const MAX_PRESIGNED_TTL$1 = 60 * 60 * 24 * 7;

const signingKeyCache$1 = {};
const cacheQueue$1 = [];
const createScope$1 = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER$1}`;
const getSigningKey$1 = async (sha256Constructor, credentials, shortDate, region, service) => {
    const credsHash = await hmac$1(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);
    const cacheKey = `${shortDate}:${region}:${service}:${toHex$1(credsHash)}:${credentials.sessionToken}`;
    if (cacheKey in signingKeyCache$1) {
        return signingKeyCache$1[cacheKey];
    }
    cacheQueue$1.push(cacheKey);
    while (cacheQueue$1.length > MAX_CACHE_SIZE$1) {
        delete signingKeyCache$1[cacheQueue$1.shift()];
    }
    let key = `AWS4${credentials.secretAccessKey}`;
    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER$1]) {
        key = await hmac$1(sha256Constructor, key, signable);
    }
    return (signingKeyCache$1[cacheKey] = key);
};
const hmac$1 = (ctor, secret, data) => {
    const hash = new ctor(secret);
    hash.update(toUint8Array$1(data));
    return hash.digest();
};

const getCanonicalHeaders$1 = ({ headers }, unsignableHeaders, signableHeaders) => {
    const canonical = {};
    for (const headerName of Object.keys(headers).sort()) {
        if (headers[headerName] == undefined) {
            continue;
        }
        const canonicalHeaderName = headerName.toLowerCase();
        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS$1 ||
            unsignableHeaders?.has(canonicalHeaderName) ||
            PROXY_HEADER_PATTERN$1.test(canonicalHeaderName) ||
            SEC_HEADER_PATTERN$1.test(canonicalHeaderName)) {
            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {
                continue;
            }
        }
        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\s+/g, " ");
    }
    return canonical;
};

const getCanonicalQuery$1 = ({ query = {} }) => {
    const keys = [];
    const serialized = {};
    for (const key of Object.keys(query).sort()) {
        if (key.toLowerCase() === SIGNATURE_HEADER$1) {
            continue;
        }
        keys.push(key);
        const value = query[key];
        if (typeof value === "string") {
            serialized[key] = `${escapeUri$1(key)}=${escapeUri$1(value)}`;
        }
        else if (Array.isArray(value)) {
            serialized[key] = value
                .slice(0)
                .reduce((encoded, value) => encoded.concat([`${escapeUri$1(key)}=${escapeUri$1(value)}`]), [])
                .sort()
                .join("&");
        }
    }
    return keys
        .map((key) => serialized[key])
        .filter((serialized) => serialized)
        .join("&");
};

const isArrayBuffer$1 = (arg) => (typeof ArrayBuffer === "function" && arg instanceof ArrayBuffer) ||
    Object.prototype.toString.call(arg) === "[object ArrayBuffer]";

const getPayloadHash$1 = async ({ headers, body }, hashConstructor) => {
    for (const headerName of Object.keys(headers)) {
        if (headerName.toLowerCase() === SHA256_HEADER$1) {
            return headers[headerName];
        }
    }
    if (body == undefined) {
        return "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";
    }
    else if (typeof body === "string" || ArrayBuffer.isView(body) || isArrayBuffer$1(body)) {
        const hashCtor = new hashConstructor();
        hashCtor.update(toUint8Array$1(body));
        return toHex$1(await hashCtor.digest());
    }
    return UNSIGNED_PAYLOAD$1;
};

const hasHeader$1 = (soughtHeader, headers) => {
    soughtHeader = soughtHeader.toLowerCase();
    for (const headerName of Object.keys(headers)) {
        if (soughtHeader === headerName.toLowerCase()) {
            return true;
        }
    }
    return false;
};

const cloneRequest$1 = ({ headers, query, ...rest }) => ({
    ...rest,
    headers: { ...headers },
    query: query ? cloneQuery$3(query) : undefined,
});
const cloneQuery$3 = (query) => Object.keys(query).reduce((carry, paramName) => {
    const param = query[paramName];
    return {
        ...carry,
        [paramName]: Array.isArray(param) ? [...param] : param,
    };
}, {});

const moveHeadersToQuery$1 = (request, options = {}) => {
    const { headers, query = {} } = typeof request.clone === "function" ? request.clone() : cloneRequest$1(request);
    for (const name of Object.keys(headers)) {
        const lname = name.toLowerCase();
        if (lname.slice(0, 6) === "x-amz-" && !options.unhoistableHeaders?.has(lname)) {
            query[name] = headers[name];
            delete headers[name];
        }
    }
    return {
        ...request,
        headers,
        query,
    };
};

const prepareRequest$1 = (request) => {
    request = typeof request.clone === "function" ? request.clone() : cloneRequest$1(request);
    for (const headerName of Object.keys(request.headers)) {
        if (GENERATED_HEADERS$1.indexOf(headerName.toLowerCase()) > -1) {
            delete request.headers[headerName];
        }
    }
    return request;
};

const iso8601$1 = (time) => toDate$1(time)
    .toISOString()
    .replace(/\.\d{3}Z$/, "Z");
const toDate$1 = (time) => {
    if (typeof time === "number") {
        return new Date(time * 1000);
    }
    if (typeof time === "string") {
        if (Number(time)) {
            return new Date(Number(time) * 1000);
        }
        return new Date(time);
    }
    return time;
};

class SignatureV4$1 {
    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {
        this.headerMarshaller = new HeaderMarshaller$1(toUtf8$4, fromUtf8$4);
        this.service = service;
        this.sha256 = sha256;
        this.uriEscapePath = uriEscapePath;
        this.applyChecksum = typeof applyChecksum === "boolean" ? applyChecksum : true;
        this.regionProvider = normalizeProvider$1(region);
        this.credentialProvider = normalizeProvider$1(credentials);
    }
    async presign(originalRequest, options = {}) {
        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;
        const credentials = await this.credentialProvider();
        this.validateResolvedCredentials(credentials);
        const region = signingRegion ?? (await this.regionProvider());
        const { longDate, shortDate } = formatDate$1(signingDate);
        if (expiresIn > MAX_PRESIGNED_TTL$1) {
            return Promise.reject("Signature version 4 presigned URLs" + " must have an expiration date less than one week in" + " the future");
        }
        const scope = createScope$1(shortDate, region, signingService ?? this.service);
        const request = moveHeadersToQuery$1(prepareRequest$1(originalRequest), { unhoistableHeaders });
        if (credentials.sessionToken) {
            request.query[TOKEN_QUERY_PARAM$1] = credentials.sessionToken;
        }
        request.query[ALGORITHM_QUERY_PARAM$1] = ALGORITHM_IDENTIFIER$1;
        request.query[CREDENTIAL_QUERY_PARAM$1] = `${credentials.accessKeyId}/${scope}`;
        request.query[AMZ_DATE_QUERY_PARAM$1] = longDate;
        request.query[EXPIRES_QUERY_PARAM$1] = expiresIn.toString(10);
        const canonicalHeaders = getCanonicalHeaders$1(request, unsignableHeaders, signableHeaders);
        request.query[SIGNED_HEADERS_QUERY_PARAM$1] = getCanonicalHeaderList$1(canonicalHeaders);
        request.query[SIGNATURE_QUERY_PARAM$1] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash$1(originalRequest, this.sha256)));
        return request;
    }
    async sign(toSign, options) {
        if (typeof toSign === "string") {
            return this.signString(toSign, options);
        }
        else if (toSign.headers && toSign.payload) {
            return this.signEvent(toSign, options);
        }
        else if (toSign.message) {
            return this.signMessage(toSign, options);
        }
        else {
            return this.signRequest(toSign, options);
        }
    }
    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {
        const region = signingRegion ?? (await this.regionProvider());
        const { shortDate, longDate } = formatDate$1(signingDate);
        const scope = createScope$1(shortDate, region, signingService ?? this.service);
        const hashedPayload = await getPayloadHash$1({ headers: {}, body: payload }, this.sha256);
        const hash = new this.sha256();
        hash.update(headers);
        const hashedHeaders = toHex$1(await hash.digest());
        const stringToSign = [
            EVENT_ALGORITHM_IDENTIFIER$1,
            longDate,
            scope,
            priorSignature,
            hashedHeaders,
            hashedPayload,
        ].join("\n");
        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });
    }
    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {
        const promise = this.signEvent({
            headers: this.headerMarshaller.format(signableMessage.message.headers),
            payload: signableMessage.message.body,
        }, {
            signingDate,
            signingRegion,
            signingService,
            priorSignature: signableMessage.priorSignature,
        });
        return promise.then((signature) => {
            return { message: signableMessage.message, signature };
        });
    }
    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {
        const credentials = await this.credentialProvider();
        this.validateResolvedCredentials(credentials);
        const region = signingRegion ?? (await this.regionProvider());
        const { shortDate } = formatDate$1(signingDate);
        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));
        hash.update(toUint8Array$1(stringToSign));
        return toHex$1(await hash.digest());
    }
    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {
        const credentials = await this.credentialProvider();
        this.validateResolvedCredentials(credentials);
        const region = signingRegion ?? (await this.regionProvider());
        const request = prepareRequest$1(requestToSign);
        const { longDate, shortDate } = formatDate$1(signingDate);
        const scope = createScope$1(shortDate, region, signingService ?? this.service);
        request.headers[AMZ_DATE_HEADER$1] = longDate;
        if (credentials.sessionToken) {
            request.headers[TOKEN_HEADER$1] = credentials.sessionToken;
        }
        const payloadHash = await getPayloadHash$1(request, this.sha256);
        if (!hasHeader$1(SHA256_HEADER$1, request.headers) && this.applyChecksum) {
            request.headers[SHA256_HEADER$1] = payloadHash;
        }
        const canonicalHeaders = getCanonicalHeaders$1(request, unsignableHeaders, signableHeaders);
        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));
        request.headers[AUTH_HEADER$1] =
            `${ALGORITHM_IDENTIFIER$1} ` +
                `Credential=${credentials.accessKeyId}/${scope}, ` +
                `SignedHeaders=${getCanonicalHeaderList$1(canonicalHeaders)}, ` +
                `Signature=${signature}`;
        return request;
    }
    createCanonicalRequest(request, canonicalHeaders, payloadHash) {
        const sortedHeaders = Object.keys(canonicalHeaders).sort();
        return `${request.method}
${this.getCanonicalPath(request)}
${getCanonicalQuery$1(request)}
${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join("\n")}

${sortedHeaders.join(";")}
${payloadHash}`;
    }
    async createStringToSign(longDate, credentialScope, canonicalRequest) {
        const hash = new this.sha256();
        hash.update(toUint8Array$1(canonicalRequest));
        const hashedRequest = await hash.digest();
        return `${ALGORITHM_IDENTIFIER$1}
${longDate}
${credentialScope}
${toHex$1(hashedRequest)}`;
    }
    getCanonicalPath({ path }) {
        if (this.uriEscapePath) {
            const normalizedPathSegments = [];
            for (const pathSegment of path.split("/")) {
                if (pathSegment?.length === 0)
                    continue;
                if (pathSegment === ".")
                    continue;
                if (pathSegment === "..") {
                    normalizedPathSegments.pop();
                }
                else {
                    normalizedPathSegments.push(pathSegment);
                }
            }
            const normalizedPath = `${path?.startsWith("/") ? "/" : ""}${normalizedPathSegments.join("/")}${normalizedPathSegments.length > 0 && path?.endsWith("/") ? "/" : ""}`;
            const doubleEncoded = encodeURIComponent(normalizedPath);
            return doubleEncoded.replace(/%2F/g, "/");
        }
        return path;
    }
    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {
        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);
        const hash = new this.sha256(await keyPromise);
        hash.update(toUint8Array$1(stringToSign));
        return toHex$1(await hash.digest());
    }
    getSigningKey(credentials, region, shortDate, service) {
        return getSigningKey$1(this.sha256, credentials, shortDate, region, service || this.service);
    }
    validateResolvedCredentials(credentials) {
        if (typeof credentials !== "object" ||
            typeof credentials.accessKeyId !== "string" ||
            typeof credentials.secretAccessKey !== "string") {
            throw new Error("Resolved credential object is not valid");
        }
    }
}
const formatDate$1 = (now) => {
    const longDate = iso8601$1(now).replace(/[\-:]/g, "");
    return {
        longDate,
        shortDate: longDate.slice(0, 8),
    };
};
const getCanonicalHeaderList$1 = (headers) => Object.keys(headers).sort().join(";");

const CREDENTIAL_EXPIRE_WINDOW$1 = 300000;
const resolveAwsAuthConfig$1 = (input) => {
    const normalizedCreds = input.credentials
        ? normalizeCredentialProvider$1(input.credentials)
        : input.credentialDefaultProvider(input);
    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;
    let signer;
    if (input.signer) {
        signer = normalizeProvider$1(input.signer);
    }
    else if (input.regionInfoProvider) {
        signer = () => normalizeProvider$1(input.region)()
            .then(async (region) => [
            (await input.regionInfoProvider(region, {
                useFipsEndpoint: await input.useFipsEndpoint(),
                useDualstackEndpoint: await input.useDualstackEndpoint(),
            })) || {},
            region,
        ])
            .then(([regionInfo, region]) => {
            const { signingRegion, signingService } = regionInfo;
            input.signingRegion = input.signingRegion || signingRegion || region;
            input.signingName = input.signingName || signingService || input.serviceId;
            const params = {
                ...input,
                credentials: normalizedCreds,
                region: input.signingRegion,
                service: input.signingName,
                sha256,
                uriEscapePath: signingEscapePath,
            };
            const SignerCtor = input.signerConstructor || SignatureV4$1;
            return new SignerCtor(params);
        });
    }
    else {
        signer = async (authScheme) => {
            authScheme = Object.assign({}, {
                name: "sigv4",
                signingName: input.signingName || input.defaultSigningName,
                signingRegion: await normalizeProvider$1(input.region)(),
                properties: {},
            }, authScheme);
            const signingRegion = authScheme.signingRegion;
            const signingService = authScheme.signingName;
            input.signingRegion = input.signingRegion || signingRegion;
            input.signingName = input.signingName || signingService || input.serviceId;
            const params = {
                ...input,
                credentials: normalizedCreds,
                region: input.signingRegion,
                service: input.signingName,
                sha256,
                uriEscapePath: signingEscapePath,
            };
            const SignerCtor = input.signerConstructor || SignatureV4$1;
            return new SignerCtor(params);
        };
    }
    return {
        ...input,
        systemClockOffset,
        signingEscapePath,
        credentials: normalizedCreds,
        signer,
    };
};
const normalizeCredentialProvider$1 = (credentials) => {
    if (typeof credentials === "function") {
        return memoize$1(credentials, (credentials) => credentials.expiration !== undefined &&
            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW$1, (credentials) => credentials.expiration !== undefined);
    }
    return normalizeProvider$1(credentials);
};

const getSkewCorrectedDate$1 = (systemClockOffset) => new Date(Date.now() + systemClockOffset);

const isClockSkewed$1 = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate$1(systemClockOffset).getTime() - clockTime) >= 300000;

const getUpdatedSystemClockOffset$1 = (clockTime, currentSystemClockOffset) => {
    const clockTimeInMs = Date.parse(clockTime);
    if (isClockSkewed$1(clockTimeInMs, currentSystemClockOffset)) {
        return clockTimeInMs - Date.now();
    }
    return currentSystemClockOffset;
};

const awsAuthMiddleware$1 = (options) => (next, context) => async function (args) {
    if (!HttpRequest$2.isInstance(args.request))
        return next(args);
    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];
    const multiRegionOverride = authScheme?.name === "sigv4a" ? authScheme?.signingRegionSet?.join(",") : undefined;
    const signer = await options.signer(authScheme);
    const output = await next({
        ...args,
        request: await signer.sign(args.request, {
            signingDate: getSkewCorrectedDate$1(options.systemClockOffset),
            signingRegion: multiRegionOverride || context["signing_region"],
            signingService: context["signing_service"],
        }),
    }).catch((error) => {
        const serverTime = error.ServerTime ?? getDateHeader$1(error.$response);
        if (serverTime) {
            options.systemClockOffset = getUpdatedSystemClockOffset$1(serverTime, options.systemClockOffset);
        }
        throw error;
    });
    const dateHeader = getDateHeader$1(output.response);
    if (dateHeader) {
        options.systemClockOffset = getUpdatedSystemClockOffset$1(dateHeader, options.systemClockOffset);
    }
    return output;
};
const getDateHeader$1 = (response) => HttpResponse$1.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;
const awsAuthMiddlewareOptions$1 = {
    name: "awsAuthMiddleware",
    tags: ["SIGNATURE", "AWSAUTH"],
    relation: "after",
    toMiddleware: "retryMiddleware",
    override: true,
};
const getAwsAuthPlugin$1 = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.addRelativeTo(awsAuthMiddleware$1(options), awsAuthMiddlewareOptions$1);
    },
});

function resolveUserAgentConfig$1(input) {
    return {
        ...input,
        customUserAgent: typeof input.customUserAgent === "string" ? [[input.customUserAgent]] : input.customUserAgent,
    };
}

const IP_V4_REGEX$1 = new RegExp(`^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$`);
const isIpAddress$1 = (value) => IP_V4_REGEX$1.test(value) || (value.startsWith("[") && value.endsWith("]"));

const VALID_HOST_LABEL_REGEX$1 = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);
const isValidHostLabel$1 = (value, allowSubDomains = false) => {
    if (!allowSubDomains) {
        return VALID_HOST_LABEL_REGEX$1.test(value);
    }
    const labels = value.split(".");
    for (const label of labels) {
        if (!isValidHostLabel$1(label)) {
            return false;
        }
    }
    return true;
};

const customEndpointFunctions = {};

const debugId$1 = "endpoints";

function toDebugString$1(input) {
    if (typeof input !== "object" || input == null) {
        return input;
    }
    if ("ref" in input) {
        return `$${toDebugString$1(input.ref)}`;
    }
    if ("fn" in input) {
        return `${input.fn}(${(input.argv || []).map(toDebugString$1).join(", ")})`;
    }
    return JSON.stringify(input, null, 2);
}

class EndpointError$1 extends Error {
    constructor(message) {
        super(message);
        this.name = "EndpointError";
    }
}

const booleanEquals$1 = (value1, value2) => value1 === value2;

const getAttrPathList$1 = (path) => {
    const parts = path.split(".");
    const pathList = [];
    for (const part of parts) {
        const squareBracketIndex = part.indexOf("[");
        if (squareBracketIndex !== -1) {
            if (part.indexOf("]") !== part.length - 1) {
                throw new EndpointError$1(`Path: '${path}' does not end with ']'`);
            }
            const arrayIndex = part.slice(squareBracketIndex + 1, -1);
            if (Number.isNaN(parseInt(arrayIndex))) {
                throw new EndpointError$1(`Invalid array index: '${arrayIndex}' in path: '${path}'`);
            }
            if (squareBracketIndex !== 0) {
                pathList.push(part.slice(0, squareBracketIndex));
            }
            pathList.push(arrayIndex);
        }
        else {
            pathList.push(part);
        }
    }
    return pathList;
};

const getAttr$1 = (value, path) => getAttrPathList$1(path).reduce((acc, index) => {
    if (typeof acc !== "object") {
        throw new EndpointError$1(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);
    }
    else if (Array.isArray(acc)) {
        return acc[parseInt(index)];
    }
    return acc[index];
}, value);

const isSet$1 = (value) => value != null;

const not$1 = (value) => !value;

var HttpAuthLocation$2;
(function (HttpAuthLocation) {
    HttpAuthLocation["HEADER"] = "header";
    HttpAuthLocation["QUERY"] = "query";
})(HttpAuthLocation$2 || (HttpAuthLocation$2 = {}));

var HttpApiKeyAuthLocation;
(function (HttpApiKeyAuthLocation) {
    HttpApiKeyAuthLocation["HEADER"] = "header";
    HttpApiKeyAuthLocation["QUERY"] = "query";
})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));

var EndpointURLScheme$2;
(function (EndpointURLScheme) {
    EndpointURLScheme["HTTP"] = "http";
    EndpointURLScheme["HTTPS"] = "https";
})(EndpointURLScheme$2 || (EndpointURLScheme$2 = {}));

var AlgorithmId;
(function (AlgorithmId) {
    AlgorithmId["MD5"] = "md5";
    AlgorithmId["CRC32"] = "crc32";
    AlgorithmId["CRC32C"] = "crc32c";
    AlgorithmId["SHA1"] = "sha1";
    AlgorithmId["SHA256"] = "sha256";
})(AlgorithmId || (AlgorithmId = {}));

var FieldPosition$2;
(function (FieldPosition) {
    FieldPosition[FieldPosition["HEADER"] = 0] = "HEADER";
    FieldPosition[FieldPosition["TRAILER"] = 1] = "TRAILER";
})(FieldPosition$2 || (FieldPosition$2 = {}));

var IniSectionType;
(function (IniSectionType) {
    IniSectionType["PROFILE"] = "profile";
    IniSectionType["SSO_SESSION"] = "sso-session";
    IniSectionType["SERVICES"] = "services";
})(IniSectionType || (IniSectionType = {}));

var RequestHandlerProtocol$2;
(function (RequestHandlerProtocol) {
    RequestHandlerProtocol["HTTP_0_9"] = "http/0.9";
    RequestHandlerProtocol["HTTP_1_0"] = "http/1.0";
    RequestHandlerProtocol["TDS_8_0"] = "tds/8.0";
})(RequestHandlerProtocol$2 || (RequestHandlerProtocol$2 = {}));

const DEFAULT_PORTS$1 = {
    [EndpointURLScheme$2.HTTP]: 80,
    [EndpointURLScheme$2.HTTPS]: 443,
};
const parseURL$1 = (value) => {
    const whatwgURL = (() => {
        try {
            if (value instanceof URL) {
                return value;
            }
            if (typeof value === "object" && "hostname" in value) {
                const { hostname, port, protocol = "", path = "", query = {} } = value;
                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : ""}${path}`);
                url.search = Object.entries(query)
                    .map(([k, v]) => `${k}=${v}`)
                    .join("&");
                return url;
            }
            return new URL(value);
        }
        catch (error) {
            return null;
        }
    })();
    if (!whatwgURL) {
        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);
        return null;
    }
    const urlString = whatwgURL.href;
    const { host, hostname, pathname, protocol, search } = whatwgURL;
    if (search) {
        return null;
    }
    const scheme = protocol.slice(0, -1);
    if (!Object.values(EndpointURLScheme$2).includes(scheme)) {
        return null;
    }
    const isIp = isIpAddress$1(hostname);
    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS$1[scheme]}`) ||
        (typeof value === "string" && value.includes(`${host}:${DEFAULT_PORTS$1[scheme]}`));
    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS$1[scheme]}` : ``}`;
    return {
        scheme,
        authority,
        path: pathname,
        normalizedPath: pathname.endsWith("/") ? pathname : `${pathname}/`,
        isIp,
    };
};

const stringEquals$1 = (value1, value2) => value1 === value2;

const substring$1 = (input, start, stop, reverse) => {
    if (start >= stop || input.length < stop) {
        return null;
    }
    if (!reverse) {
        return input.substring(start, stop);
    }
    return input.substring(input.length - stop, input.length - start);
};

const uriEncode$1 = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);

const endpointFunctions = {
    booleanEquals: booleanEquals$1,
    getAttr: getAttr$1,
    isSet: isSet$1,
    isValidHostLabel: isValidHostLabel$1,
    not: not$1,
    parseURL: parseURL$1,
    stringEquals: stringEquals$1,
    substring: substring$1,
    uriEncode: uriEncode$1,
};

const evaluateTemplate$1 = (template, options) => {
    const evaluatedTemplateArr = [];
    const templateContext = {
        ...options.endpointParams,
        ...options.referenceRecord,
    };
    let currentIndex = 0;
    while (currentIndex < template.length) {
        const openingBraceIndex = template.indexOf("{", currentIndex);
        if (openingBraceIndex === -1) {
            evaluatedTemplateArr.push(template.slice(currentIndex));
            break;
        }
        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));
        const closingBraceIndex = template.indexOf("}", openingBraceIndex);
        if (closingBraceIndex === -1) {
            evaluatedTemplateArr.push(template.slice(openingBraceIndex));
            break;
        }
        if (template[openingBraceIndex + 1] === "{" && template[closingBraceIndex + 1] === "}") {
            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));
            currentIndex = closingBraceIndex + 2;
        }
        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);
        if (parameterName.includes("#")) {
            const [refName, attrName] = parameterName.split("#");
            evaluatedTemplateArr.push(getAttr$1(templateContext[refName], attrName));
        }
        else {
            evaluatedTemplateArr.push(templateContext[parameterName]);
        }
        currentIndex = closingBraceIndex + 1;
    }
    return evaluatedTemplateArr.join("");
};

const getReferenceValue$1 = ({ ref }, options) => {
    const referenceRecord = {
        ...options.endpointParams,
        ...options.referenceRecord,
    };
    return referenceRecord[ref];
};

const evaluateExpression$1 = (obj, keyName, options) => {
    if (typeof obj === "string") {
        return evaluateTemplate$1(obj, options);
    }
    else if (obj["fn"]) {
        return callFunction$1(obj, options);
    }
    else if (obj["ref"]) {
        return getReferenceValue$1(obj, options);
    }
    throw new EndpointError$1(`'${keyName}': ${String(obj)} is not a string, function or reference.`);
};

const callFunction$1 = ({ fn, argv }, options) => {
    const evaluatedArgs = argv.map((arg) => ["boolean", "number"].includes(typeof arg) ? arg : evaluateExpression$1(arg, "arg", options));
    const fnSegments = fn.split(".");
    if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {
        return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);
    }
    return endpointFunctions[fn](...evaluatedArgs);
};

const evaluateCondition$1 = ({ assign, ...fnArgs }, options) => {
    if (assign && assign in options.referenceRecord) {
        throw new EndpointError$1(`'${assign}' is already defined in Reference Record.`);
    }
    const value = callFunction$1(fnArgs, options);
    options.logger?.debug?.(debugId$1, `evaluateCondition: ${toDebugString$1(fnArgs)} = ${toDebugString$1(value)}`);
    return {
        result: value === "" ? true : !!value,
        ...(assign != null && { toAssign: { name: assign, value } }),
    };
};

const evaluateConditions$1 = (conditions = [], options) => {
    const conditionsReferenceRecord = {};
    for (const condition of conditions) {
        const { result, toAssign } = evaluateCondition$1(condition, {
            ...options,
            referenceRecord: {
                ...options.referenceRecord,
                ...conditionsReferenceRecord,
            },
        });
        if (!result) {
            return { result };
        }
        if (toAssign) {
            conditionsReferenceRecord[toAssign.name] = toAssign.value;
            options.logger?.debug?.(debugId$1, `assign: ${toAssign.name} := ${toDebugString$1(toAssign.value)}`);
        }
    }
    return { result: true, referenceRecord: conditionsReferenceRecord };
};

const getEndpointHeaders$1 = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({
    ...acc,
    [headerKey]: headerVal.map((headerValEntry) => {
        const processedExpr = evaluateExpression$1(headerValEntry, "Header value entry", options);
        if (typeof processedExpr !== "string") {
            throw new EndpointError$1(`Header '${headerKey}' value '${processedExpr}' is not a string`);
        }
        return processedExpr;
    }),
}), {});

const getEndpointProperty$1 = (property, options) => {
    if (Array.isArray(property)) {
        return property.map((propertyEntry) => getEndpointProperty$1(propertyEntry, options));
    }
    switch (typeof property) {
        case "string":
            return evaluateTemplate$1(property, options);
        case "object":
            if (property === null) {
                throw new EndpointError$1(`Unexpected endpoint property: ${property}`);
            }
            return getEndpointProperties$1(property, options);
        case "boolean":
            return property;
        default:
            throw new EndpointError$1(`Unexpected endpoint property type: ${typeof property}`);
    }
};

const getEndpointProperties$1 = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({
    ...acc,
    [propertyKey]: getEndpointProperty$1(propertyVal, options),
}), {});

const getEndpointUrl$1 = (endpointUrl, options) => {
    const expression = evaluateExpression$1(endpointUrl, "Endpoint URL", options);
    if (typeof expression === "string") {
        try {
            return new URL(expression);
        }
        catch (error) {
            console.error(`Failed to construct URL with ${expression}`, error);
            throw error;
        }
    }
    throw new EndpointError$1(`Endpoint URL must be a string, got ${typeof expression}`);
};

const evaluateEndpointRule$1 = (endpointRule, options) => {
    const { conditions, endpoint } = endpointRule;
    const { result, referenceRecord } = evaluateConditions$1(conditions, options);
    if (!result) {
        return;
    }
    const endpointRuleOptions = {
        ...options,
        referenceRecord: { ...options.referenceRecord, ...referenceRecord },
    };
    const { url, properties, headers } = endpoint;
    options.logger?.debug?.(debugId$1, `Resolving endpoint from template: ${toDebugString$1(endpoint)}`);
    return {
        ...(headers != undefined && {
            headers: getEndpointHeaders$1(headers, endpointRuleOptions),
        }),
        ...(properties != undefined && {
            properties: getEndpointProperties$1(properties, endpointRuleOptions),
        }),
        url: getEndpointUrl$1(url, endpointRuleOptions),
    };
};

const evaluateErrorRule$1 = (errorRule, options) => {
    const { conditions, error } = errorRule;
    const { result, referenceRecord } = evaluateConditions$1(conditions, options);
    if (!result) {
        return;
    }
    throw new EndpointError$1(evaluateExpression$1(error, "Error", {
        ...options,
        referenceRecord: { ...options.referenceRecord, ...referenceRecord },
    }));
};

const evaluateTreeRule$1 = (treeRule, options) => {
    const { conditions, rules } = treeRule;
    const { result, referenceRecord } = evaluateConditions$1(conditions, options);
    if (!result) {
        return;
    }
    return evaluateRules$1(rules, {
        ...options,
        referenceRecord: { ...options.referenceRecord, ...referenceRecord },
    });
};

const evaluateRules$1 = (rules, options) => {
    for (const rule of rules) {
        if (rule.type === "endpoint") {
            const endpointOrUndefined = evaluateEndpointRule$1(rule, options);
            if (endpointOrUndefined) {
                return endpointOrUndefined;
            }
        }
        else if (rule.type === "error") {
            evaluateErrorRule$1(rule, options);
        }
        else if (rule.type === "tree") {
            const endpointOrUndefined = evaluateTreeRule$1(rule, options);
            if (endpointOrUndefined) {
                return endpointOrUndefined;
            }
        }
        else {
            throw new EndpointError$1(`Unknown endpoint rule: ${rule}`);
        }
    }
    throw new EndpointError$1(`Rules evaluation failed`);
};

const resolveEndpoint$1 = (ruleSetObject, options) => {
    const { endpointParams, logger } = options;
    const { parameters, rules } = ruleSetObject;
    options.logger?.debug?.(`${debugId$1} Initial EndpointParams: ${toDebugString$1(endpointParams)}`);
    const paramsWithDefault = Object.entries(parameters)
        .filter(([, v]) => v.default != null)
        .map(([k, v]) => [k, v.default]);
    if (paramsWithDefault.length > 0) {
        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {
            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;
        }
    }
    const requiredParams = Object.entries(parameters)
        .filter(([, v]) => v.required)
        .map(([k]) => k);
    for (const requiredParam of requiredParams) {
        if (endpointParams[requiredParam] == null) {
            throw new EndpointError$1(`Missing required parameter: '${requiredParam}'`);
        }
    }
    const endpoint = evaluateRules$1(rules, { endpointParams, logger, referenceRecord: {} });
    if (options.endpointParams?.Endpoint) {
        try {
            const givenEndpoint = new URL(options.endpointParams.Endpoint);
            const { protocol, port } = givenEndpoint;
            endpoint.url.protocol = protocol;
            endpoint.url.port = port;
        }
        catch (e) {
        }
    }
    options.logger?.debug?.(`${debugId$1} Resolved endpoint: ${toDebugString$1(endpoint)}`);
    return endpoint;
};

const isVirtualHostableS3Bucket$1 = (value, allowSubDomains = false) => {
    if (allowSubDomains) {
        for (const label of value.split(".")) {
            if (!isVirtualHostableS3Bucket$1(label)) {
                return false;
            }
        }
        return true;
    }
    if (!isValidHostLabel$1(value)) {
        return false;
    }
    if (value.length < 3 || value.length > 63) {
        return false;
    }
    if (value !== value.toLowerCase()) {
        return false;
    }
    if (isIpAddress$1(value)) {
        return false;
    }
    return true;
};

const parseArn$1 = (value) => {
    const segments = value.split(":");
    if (segments.length < 6)
        return null;
    const [arn, partition, service, region, accountId, ...resourceId] = segments;
    if (arn !== "arn" || partition === "" || service === "" || resourceId[0] === "")
        return null;
    return {
        partition,
        service,
        region,
        accountId,
        resourceId: resourceId[0].includes("/") ? resourceId[0].split("/") : resourceId,
    };
};

const partitions$1 = [
	{
		id: "aws",
		outputs: {
			dnsSuffix: "amazonaws.com",
			dualStackDnsSuffix: "api.aws",
			implicitGlobalRegion: "us-east-1",
			name: "aws",
			supportsDualStack: true,
			supportsFIPS: true
		},
		regionRegex: "^(us|eu|ap|sa|ca|me|af|il)\\-\\w+\\-\\d+$",
		regions: {
			"af-south-1": {
				description: "Africa (Cape Town)"
			},
			"ap-east-1": {
				description: "Asia Pacific (Hong Kong)"
			},
			"ap-northeast-1": {
				description: "Asia Pacific (Tokyo)"
			},
			"ap-northeast-2": {
				description: "Asia Pacific (Seoul)"
			},
			"ap-northeast-3": {
				description: "Asia Pacific (Osaka)"
			},
			"ap-south-1": {
				description: "Asia Pacific (Mumbai)"
			},
			"ap-south-2": {
				description: "Asia Pacific (Hyderabad)"
			},
			"ap-southeast-1": {
				description: "Asia Pacific (Singapore)"
			},
			"ap-southeast-2": {
				description: "Asia Pacific (Sydney)"
			},
			"ap-southeast-3": {
				description: "Asia Pacific (Jakarta)"
			},
			"ap-southeast-4": {
				description: "Asia Pacific (Melbourne)"
			},
			"aws-global": {
				description: "AWS Standard global region"
			},
			"ca-central-1": {
				description: "Canada (Central)"
			},
			"eu-central-1": {
				description: "Europe (Frankfurt)"
			},
			"eu-central-2": {
				description: "Europe (Zurich)"
			},
			"eu-north-1": {
				description: "Europe (Stockholm)"
			},
			"eu-south-1": {
				description: "Europe (Milan)"
			},
			"eu-south-2": {
				description: "Europe (Spain)"
			},
			"eu-west-1": {
				description: "Europe (Ireland)"
			},
			"eu-west-2": {
				description: "Europe (London)"
			},
			"eu-west-3": {
				description: "Europe (Paris)"
			},
			"il-central-1": {
				description: "Israel (Tel Aviv)"
			},
			"me-central-1": {
				description: "Middle East (UAE)"
			},
			"me-south-1": {
				description: "Middle East (Bahrain)"
			},
			"sa-east-1": {
				description: "South America (Sao Paulo)"
			},
			"us-east-1": {
				description: "US East (N. Virginia)"
			},
			"us-east-2": {
				description: "US East (Ohio)"
			},
			"us-west-1": {
				description: "US West (N. California)"
			},
			"us-west-2": {
				description: "US West (Oregon)"
			}
		}
	},
	{
		id: "aws-cn",
		outputs: {
			dnsSuffix: "amazonaws.com.cn",
			dualStackDnsSuffix: "api.amazonwebservices.com.cn",
			implicitGlobalRegion: "cn-northwest-1",
			name: "aws-cn",
			supportsDualStack: true,
			supportsFIPS: true
		},
		regionRegex: "^cn\\-\\w+\\-\\d+$",
		regions: {
			"aws-cn-global": {
				description: "AWS China global region"
			},
			"cn-north-1": {
				description: "China (Beijing)"
			},
			"cn-northwest-1": {
				description: "China (Ningxia)"
			}
		}
	},
	{
		id: "aws-us-gov",
		outputs: {
			dnsSuffix: "amazonaws.com",
			dualStackDnsSuffix: "api.aws",
			implicitGlobalRegion: "us-gov-west-1",
			name: "aws-us-gov",
			supportsDualStack: true,
			supportsFIPS: true
		},
		regionRegex: "^us\\-gov\\-\\w+\\-\\d+$",
		regions: {
			"aws-us-gov-global": {
				description: "AWS GovCloud (US) global region"
			},
			"us-gov-east-1": {
				description: "AWS GovCloud (US-East)"
			},
			"us-gov-west-1": {
				description: "AWS GovCloud (US-West)"
			}
		}
	},
	{
		id: "aws-iso",
		outputs: {
			dnsSuffix: "c2s.ic.gov",
			dualStackDnsSuffix: "c2s.ic.gov",
			implicitGlobalRegion: "us-iso-east-1",
			name: "aws-iso",
			supportsDualStack: false,
			supportsFIPS: true
		},
		regionRegex: "^us\\-iso\\-\\w+\\-\\d+$",
		regions: {
			"aws-iso-global": {
				description: "AWS ISO (US) global region"
			},
			"us-iso-east-1": {
				description: "US ISO East"
			},
			"us-iso-west-1": {
				description: "US ISO WEST"
			}
		}
	},
	{
		id: "aws-iso-b",
		outputs: {
			dnsSuffix: "sc2s.sgov.gov",
			dualStackDnsSuffix: "sc2s.sgov.gov",
			implicitGlobalRegion: "us-isob-east-1",
			name: "aws-iso-b",
			supportsDualStack: false,
			supportsFIPS: true
		},
		regionRegex: "^us\\-isob\\-\\w+\\-\\d+$",
		regions: {
			"aws-iso-b-global": {
				description: "AWS ISOB (US) global region"
			},
			"us-isob-east-1": {
				description: "US ISOB East (Ohio)"
			}
		}
	},
	{
		id: "aws-iso-e",
		outputs: {
			dnsSuffix: "cloud.adc-e.uk",
			dualStackDnsSuffix: "cloud.adc-e.uk",
			implicitGlobalRegion: "eu-isoe-west-1",
			name: "aws-iso-e",
			supportsDualStack: false,
			supportsFIPS: true
		},
		regionRegex: "^eu\\-isoe\\-\\w+\\-\\d+$",
		regions: {
		}
	},
	{
		id: "aws-iso-f",
		outputs: {
			dnsSuffix: "csp.hci.ic.gov",
			dualStackDnsSuffix: "csp.hci.ic.gov",
			implicitGlobalRegion: "us-isof-south-1",
			name: "aws-iso-f",
			supportsDualStack: false,
			supportsFIPS: true
		},
		regionRegex: "^us\\-isof\\-\\w+\\-\\d+$",
		regions: {
		}
	}
];
const version$3 = "1.1";
const partitionsInfo$1 = {
	partitions: partitions$1,
	version: version$3
};

let selectedPartitionsInfo$1 = partitionsInfo$1;
const partition$1 = (value) => {
    const { partitions } = selectedPartitionsInfo$1;
    for (const partition of partitions) {
        const { regions, outputs } = partition;
        for (const [region, regionData] of Object.entries(regions)) {
            if (region === value) {
                return {
                    ...outputs,
                    ...regionData,
                };
            }
        }
    }
    for (const partition of partitions) {
        const { regionRegex, outputs } = partition;
        if (new RegExp(regionRegex).test(value)) {
            return {
                ...outputs,
            };
        }
    }
    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === "aws");
    if (!DEFAULT_PARTITION) {
        throw new Error("Provided region was not found in the partition array or regex," +
            " and default partition with id 'aws' doesn't exist.");
    }
    return {
        ...DEFAULT_PARTITION.outputs,
    };
};

const awsEndpointFunctions = {
    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket$1,
    parseArn: parseArn$1,
    partition: partition$1,
};
customEndpointFunctions.aws = awsEndpointFunctions;

const USER_AGENT$1 = "user-agent";
const X_AMZ_USER_AGENT$1 = "x-amz-user-agent";
const SPACE$1 = " ";
const UA_NAME_SEPARATOR$1 = "/";
const UA_NAME_ESCAPE_REGEX$1 = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g;
const UA_VALUE_ESCAPE_REGEX$1 = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g;
const UA_ESCAPE_CHAR$1 = "-";

const userAgentMiddleware$1 = (options) => (next, context) => async (args) => {
    const { request } = args;
    if (!HttpRequest$2.isInstance(request))
        return next(args);
    const { headers } = request;
    const userAgent = context?.userAgent?.map(escapeUserAgent$1) || [];
    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent$1);
    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent$1) || [];
    const sdkUserAgentValue = ([])
        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])
        .join(SPACE$1);
    const normalUAValue = [
        ...defaultUserAgent.filter((section) => section.startsWith("aws-sdk-")),
        ...customUserAgent,
    ].join(SPACE$1);
    if (options.runtime !== "browser") {
        if (normalUAValue) {
            headers[X_AMZ_USER_AGENT$1] = headers[X_AMZ_USER_AGENT$1]
                ? `${headers[USER_AGENT$1]} ${normalUAValue}`
                : normalUAValue;
        }
        headers[USER_AGENT$1] = sdkUserAgentValue;
    }
    else {
        headers[X_AMZ_USER_AGENT$1] = sdkUserAgentValue;
    }
    return next({
        ...args,
        request,
    });
};
const escapeUserAgent$1 = (userAgentPair) => {
    const name = userAgentPair[0]
        .split(UA_NAME_SEPARATOR$1)
        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX$1, UA_ESCAPE_CHAR$1))
        .join(UA_NAME_SEPARATOR$1);
    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX$1, UA_ESCAPE_CHAR$1);
    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR$1);
    const prefix = name.substring(0, prefixSeparatorIndex);
    let uaName = name.substring(prefixSeparatorIndex + 1);
    if (prefix === "api") {
        uaName = uaName.toLowerCase();
    }
    return [prefix, uaName, version]
        .filter((item) => item && item.length > 0)
        .reduce((acc, item, index) => {
        switch (index) {
            case 0:
                return item;
            case 1:
                return `${acc}/${item}`;
            default:
                return `${acc}#${item}`;
        }
    }, "");
};
const getUserAgentMiddlewareOptions$1 = {
    name: "getUserAgentMiddleware",
    step: "build",
    priority: "low",
    tags: ["SET_USER_AGENT", "USER_AGENT"],
    override: true,
};
const getUserAgentPlugin$1 = (config) => ({
    applyToStack: (clientStack) => {
        clientStack.add(userAgentMiddleware$1(config), getUserAgentMiddlewareOptions$1);
    },
});

var SelectorType$1;
(function (SelectorType) {
    SelectorType["ENV"] = "env";
    SelectorType["CONFIG"] = "shared config entry";
})(SelectorType$1 || (SelectorType$1 = {}));

const DEFAULT_USE_DUALSTACK_ENDPOINT$1 = false;

const DEFAULT_USE_FIPS_ENDPOINT$1 = false;

const isFipsRegion$1 = (region) => typeof region === "string" && (region.startsWith("fips-") || region.endsWith("-fips"));

const getRealRegion$1 = (region) => isFipsRegion$1(region)
    ? ["fips-aws-global", "aws-fips"].includes(region)
        ? "us-east-1"
        : region.replace(/fips-(dkr-|prod-)?|-fips/, "")
    : region;

const resolveRegionConfig$1 = (input) => {
    const { region, useFipsEndpoint } = input;
    if (!region) {
        throw new Error("Region is missing");
    }
    return {
        ...input,
        region: async () => {
            if (typeof region === "string") {
                return getRealRegion$1(region);
            }
            const providedRegion = await region();
            return getRealRegion$1(providedRegion);
        },
        useFipsEndpoint: async () => {
            const providedRegion = typeof region === "string" ? region : await region();
            if (isFipsRegion$1(providedRegion)) {
                return true;
            }
            return typeof useFipsEndpoint !== "function" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();
        },
    };
};

const CONTENT_LENGTH_HEADER$1 = "content-length";
function contentLengthMiddleware$1(bodyLengthChecker) {
    return (next) => async (args) => {
        const request = args.request;
        if (HttpRequest$2.isInstance(request)) {
            const { body, headers } = request;
            if (body &&
                Object.keys(headers)
                    .map((str) => str.toLowerCase())
                    .indexOf(CONTENT_LENGTH_HEADER$1) === -1) {
                try {
                    const length = bodyLengthChecker(body);
                    request.headers = {
                        ...request.headers,
                        [CONTENT_LENGTH_HEADER$1]: String(length),
                    };
                }
                catch (error) {
                }
            }
        }
        return next({
            ...args,
            request,
        });
    };
}
const contentLengthMiddlewareOptions$1 = {
    step: "build",
    tags: ["SET_CONTENT_LENGTH", "CONTENT_LENGTH"],
    name: "contentLengthMiddleware",
    override: true,
};
const getContentLengthPlugin$1 = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(contentLengthMiddleware$1(options.bodyLengthChecker), contentLengthMiddlewareOptions$1);
    },
});

const resolveEndpointConfig$1 = (input) => {
    const tls = input.tls ?? true;
    const { endpoint } = input;
    const customEndpointProvider = endpoint != null ? async () => toEndpointV1$1(await normalizeProvider$1(endpoint)()) : undefined;
    const isCustomEndpoint = !!endpoint;
    return {
        ...input,
        endpoint: customEndpointProvider,
        tls,
        isCustomEndpoint,
        useDualstackEndpoint: normalizeProvider$1(input.useDualstackEndpoint ?? false),
        useFipsEndpoint: normalizeProvider$1(input.useFipsEndpoint ?? false),
    };
};

var RETRY_MODES$1;
(function (RETRY_MODES) {
    RETRY_MODES["STANDARD"] = "standard";
    RETRY_MODES["ADAPTIVE"] = "adaptive";
})(RETRY_MODES$1 || (RETRY_MODES$1 = {}));
const DEFAULT_MAX_ATTEMPTS$1 = 3;
const DEFAULT_RETRY_MODE$1 = RETRY_MODES$1.STANDARD;

const THROTTLING_ERROR_CODES$1 = [
    "BandwidthLimitExceeded",
    "EC2ThrottledException",
    "LimitExceededException",
    "PriorRequestNotComplete",
    "ProvisionedThroughputExceededException",
    "RequestLimitExceeded",
    "RequestThrottled",
    "RequestThrottledException",
    "SlowDown",
    "ThrottledException",
    "Throttling",
    "ThrottlingException",
    "TooManyRequestsException",
    "TransactionInProgressException",
];
const TRANSIENT_ERROR_CODES$1 = ["TimeoutError", "RequestTimeout", "RequestTimeoutException"];
const TRANSIENT_ERROR_STATUS_CODES$1 = [500, 502, 503, 504];
const NODEJS_TIMEOUT_ERROR_CODES$1 = ["ECONNRESET", "ECONNREFUSED", "EPIPE", "ETIMEDOUT"];

const isThrottlingError$1 = (error) => error.$metadata?.httpStatusCode === 429 ||
    THROTTLING_ERROR_CODES$1.includes(error.name) ||
    error.$retryable?.throttling == true;
const isTransientError$1 = (error) => TRANSIENT_ERROR_CODES$1.includes(error.name) ||
    NODEJS_TIMEOUT_ERROR_CODES$1.includes(error?.code || "") ||
    TRANSIENT_ERROR_STATUS_CODES$1.includes(error.$metadata?.httpStatusCode || 0);
const isServerError$1 = (error) => {
    if (error.$metadata?.httpStatusCode !== undefined) {
        const statusCode = error.$metadata.httpStatusCode;
        if (500 <= statusCode && statusCode <= 599 && !isTransientError$1(error)) {
            return true;
        }
        return false;
    }
    return false;
};

class DefaultRateLimiter$1 {
    constructor(options) {
        this.currentCapacity = 0;
        this.enabled = false;
        this.lastMaxRate = 0;
        this.measuredTxRate = 0;
        this.requestCount = 0;
        this.lastTimestamp = 0;
        this.timeWindow = 0;
        this.beta = options?.beta ?? 0.7;
        this.minCapacity = options?.minCapacity ?? 1;
        this.minFillRate = options?.minFillRate ?? 0.5;
        this.scaleConstant = options?.scaleConstant ?? 0.4;
        this.smooth = options?.smooth ?? 0.8;
        const currentTimeInSeconds = this.getCurrentTimeInSeconds();
        this.lastThrottleTime = currentTimeInSeconds;
        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());
        this.fillRate = this.minFillRate;
        this.maxCapacity = this.minCapacity;
    }
    getCurrentTimeInSeconds() {
        return Date.now() / 1000;
    }
    async getSendToken() {
        return this.acquireTokenBucket(1);
    }
    async acquireTokenBucket(amount) {
        if (!this.enabled) {
            return;
        }
        this.refillTokenBucket();
        if (amount > this.currentCapacity) {
            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;
            await new Promise((resolve) => setTimeout(resolve, delay));
        }
        this.currentCapacity = this.currentCapacity - amount;
    }
    refillTokenBucket() {
        const timestamp = this.getCurrentTimeInSeconds();
        if (!this.lastTimestamp) {
            this.lastTimestamp = timestamp;
            return;
        }
        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;
        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);
        this.lastTimestamp = timestamp;
    }
    updateClientSendingRate(response) {
        let calculatedRate;
        this.updateMeasuredRate();
        if (isThrottlingError$1(response)) {
            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);
            this.lastMaxRate = rateToUse;
            this.calculateTimeWindow();
            this.lastThrottleTime = this.getCurrentTimeInSeconds();
            calculatedRate = this.cubicThrottle(rateToUse);
            this.enableTokenBucket();
        }
        else {
            this.calculateTimeWindow();
            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());
        }
        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);
        this.updateTokenBucketRate(newRate);
    }
    calculateTimeWindow() {
        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));
    }
    cubicThrottle(rateToUse) {
        return this.getPrecise(rateToUse * this.beta);
    }
    cubicSuccess(timestamp) {
        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);
    }
    enableTokenBucket() {
        this.enabled = true;
    }
    updateTokenBucketRate(newRate) {
        this.refillTokenBucket();
        this.fillRate = Math.max(newRate, this.minFillRate);
        this.maxCapacity = Math.max(newRate, this.minCapacity);
        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);
    }
    updateMeasuredRate() {
        const t = this.getCurrentTimeInSeconds();
        const timeBucket = Math.floor(t * 2) / 2;
        this.requestCount++;
        if (timeBucket > this.lastTxRateBucket) {
            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);
            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));
            this.requestCount = 0;
            this.lastTxRateBucket = timeBucket;
        }
    }
    getPrecise(num) {
        return parseFloat(num.toFixed(8));
    }
}

const DEFAULT_RETRY_DELAY_BASE$1 = 100;
const MAXIMUM_RETRY_DELAY$1 = 20 * 1000;
const THROTTLING_RETRY_DELAY_BASE$1 = 500;
const INITIAL_RETRY_TOKENS$1 = 500;
const RETRY_COST$1 = 5;
const TIMEOUT_RETRY_COST$1 = 10;
const NO_RETRY_INCREMENT$1 = 1;
const INVOCATION_ID_HEADER$1 = "amz-sdk-invocation-id";
const REQUEST_HEADER$1 = "amz-sdk-request";

const getDefaultRetryBackoffStrategy$1 = () => {
    let delayBase = DEFAULT_RETRY_DELAY_BASE$1;
    const computeNextBackoffDelay = (attempts) => {
        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY$1, Math.random() * 2 ** attempts * delayBase));
    };
    const setDelayBase = (delay) => {
        delayBase = delay;
    };
    return {
        computeNextBackoffDelay,
        setDelayBase,
    };
};

const createDefaultRetryToken$1 = ({ retryDelay, retryCount, retryCost, }) => {
    const getRetryCount = () => retryCount;
    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY$1, retryDelay);
    const getRetryCost = () => retryCost;
    return {
        getRetryCount,
        getRetryDelay,
        getRetryCost,
    };
};

class StandardRetryStrategy$1 {
    constructor(maxAttempts) {
        this.maxAttempts = maxAttempts;
        this.mode = RETRY_MODES$1.STANDARD;
        this.capacity = INITIAL_RETRY_TOKENS$1;
        this.retryBackoffStrategy = getDefaultRetryBackoffStrategy$1();
        this.maxAttemptsProvider = typeof maxAttempts === "function" ? maxAttempts : async () => maxAttempts;
    }
    async acquireInitialRetryToken(retryTokenScope) {
        return createDefaultRetryToken$1({
            retryDelay: DEFAULT_RETRY_DELAY_BASE$1,
            retryCount: 0,
        });
    }
    async refreshRetryTokenForRetry(token, errorInfo) {
        const maxAttempts = await this.getMaxAttempts();
        if (this.shouldRetry(token, errorInfo, maxAttempts)) {
            const errorType = errorInfo.errorType;
            this.retryBackoffStrategy.setDelayBase(errorType === "THROTTLING" ? THROTTLING_RETRY_DELAY_BASE$1 : DEFAULT_RETRY_DELAY_BASE$1);
            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());
            const retryDelay = errorInfo.retryAfterHint
                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)
                : delayFromErrorType;
            const capacityCost = this.getCapacityCost(errorType);
            this.capacity -= capacityCost;
            return createDefaultRetryToken$1({
                retryDelay,
                retryCount: token.getRetryCount() + 1,
                retryCost: capacityCost,
            });
        }
        throw new Error("No retry token available");
    }
    recordSuccess(token) {
        this.capacity = Math.max(INITIAL_RETRY_TOKENS$1, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT$1));
    }
    getCapacity() {
        return this.capacity;
    }
    async getMaxAttempts() {
        try {
            return await this.maxAttemptsProvider();
        }
        catch (error) {
            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS$1}`);
            return DEFAULT_MAX_ATTEMPTS$1;
        }
    }
    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {
        const attempts = tokenToRenew.getRetryCount() + 1;
        return (attempts < maxAttempts &&
            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&
            this.isRetryableError(errorInfo.errorType));
    }
    getCapacityCost(errorType) {
        return errorType === "TRANSIENT" ? TIMEOUT_RETRY_COST$1 : RETRY_COST$1;
    }
    isRetryableError(errorType) {
        return errorType === "THROTTLING" || errorType === "TRANSIENT";
    }
}

class AdaptiveRetryStrategy$1 {
    constructor(maxAttemptsProvider, options) {
        this.maxAttemptsProvider = maxAttemptsProvider;
        this.mode = RETRY_MODES$1.ADAPTIVE;
        const { rateLimiter } = options ?? {};
        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter$1();
        this.standardRetryStrategy = new StandardRetryStrategy$1(maxAttemptsProvider);
    }
    async acquireInitialRetryToken(retryTokenScope) {
        await this.rateLimiter.getSendToken();
        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);
    }
    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {
        this.rateLimiter.updateClientSendingRate(errorInfo);
        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);
    }
    recordSuccess(token) {
        this.rateLimiter.updateClientSendingRate({});
        this.standardRetryStrategy.recordSuccess(token);
    }
}

// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
var getRandomValues$1;
var rnds8$1 = new Uint8Array(16);
function rng$1() {
  // lazy load so that environments that need to polyfill have a chance to do so
  if (!getRandomValues$1) {
    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
    // find the complete implementation of crypto (msCrypto) on IE11.
    getRandomValues$1 = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);

    if (!getRandomValues$1) {
      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
    }
  }

  return getRandomValues$1(rnds8$1);
}

const REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;

function validate(uuid) {
  return typeof uuid === 'string' && REGEX.test(uuid);
}

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

var byteToHex$1 = [];

for (var i$2 = 0; i$2 < 256; ++i$2) {
  byteToHex$1.push((i$2 + 0x100).toString(16).substr(1));
}

function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  var uuid = (byteToHex$1[arr[offset + 0]] + byteToHex$1[arr[offset + 1]] + byteToHex$1[arr[offset + 2]] + byteToHex$1[arr[offset + 3]] + '-' + byteToHex$1[arr[offset + 4]] + byteToHex$1[arr[offset + 5]] + '-' + byteToHex$1[arr[offset + 6]] + byteToHex$1[arr[offset + 7]] + '-' + byteToHex$1[arr[offset + 8]] + byteToHex$1[arr[offset + 9]] + '-' + byteToHex$1[arr[offset + 10]] + byteToHex$1[arr[offset + 11]] + byteToHex$1[arr[offset + 12]] + byteToHex$1[arr[offset + 13]] + byteToHex$1[arr[offset + 14]] + byteToHex$1[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!validate(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

function v4$1(options, buf, offset) {
  options = options || {};
  var rnds = options.random || (options.rng || rng$1)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (var i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return stringify(rnds);
}

const asSdkError$1 = (error) => {
    if (error instanceof Error)
        return error;
    if (error instanceof Object)
        return Object.assign(new Error(), error);
    if (typeof error === "string")
        return new Error(error);
    return new Error(`AWS SDK error wrapper for ${error}`);
};

const resolveRetryConfig$1 = (input) => {
    const { retryStrategy } = input;
    const maxAttempts = normalizeProvider$1(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS$1);
    return {
        ...input,
        maxAttempts,
        retryStrategy: async () => {
            if (retryStrategy) {
                return retryStrategy;
            }
            const retryMode = await normalizeProvider$1(input.retryMode)();
            if (retryMode === RETRY_MODES$1.ADAPTIVE) {
                return new AdaptiveRetryStrategy$1(maxAttempts);
            }
            return new StandardRetryStrategy$1(maxAttempts);
        },
    };
};

const retryMiddleware$1 = (options) => (next, context) => async (args) => {
    let retryStrategy = await options.retryStrategy();
    const maxAttempts = await options.maxAttempts();
    if (isRetryStrategyV2$1(retryStrategy)) {
        retryStrategy = retryStrategy;
        let retryToken = await retryStrategy.acquireInitialRetryToken(context["partition_id"]);
        let lastError = new Error();
        let attempts = 0;
        let totalRetryDelay = 0;
        const { request } = args;
        if (HttpRequest$2.isInstance(request)) {
            request.headers[INVOCATION_ID_HEADER$1] = v4$1();
        }
        while (true) {
            try {
                if (HttpRequest$2.isInstance(request)) {
                    request.headers[REQUEST_HEADER$1] = `attempt=${attempts + 1}; max=${maxAttempts}`;
                }
                const { response, output } = await next(args);
                retryStrategy.recordSuccess(retryToken);
                output.$metadata.attempts = attempts + 1;
                output.$metadata.totalRetryDelay = totalRetryDelay;
                return { response, output };
            }
            catch (e) {
                const retryErrorInfo = getRetryErrorInfo$1(e);
                lastError = asSdkError$1(e);
                try {
                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);
                }
                catch (refreshError) {
                    if (!lastError.$metadata) {
                        lastError.$metadata = {};
                    }
                    lastError.$metadata.attempts = attempts + 1;
                    lastError.$metadata.totalRetryDelay = totalRetryDelay;
                    throw lastError;
                }
                attempts = retryToken.getRetryCount();
                const delay = retryToken.getRetryDelay();
                totalRetryDelay += delay;
                await new Promise((resolve) => setTimeout(resolve, delay));
            }
        }
    }
    else {
        retryStrategy = retryStrategy;
        if (retryStrategy?.mode)
            context.userAgent = [...(context.userAgent || []), ["cfg/retry-mode", retryStrategy.mode]];
        return retryStrategy.retry(next, args);
    }
};
const isRetryStrategyV2$1 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== "undefined" &&
    typeof retryStrategy.refreshRetryTokenForRetry !== "undefined" &&
    typeof retryStrategy.recordSuccess !== "undefined";
const getRetryErrorInfo$1 = (error) => {
    const errorInfo = {
        errorType: getRetryErrorType$1(error),
    };
    const retryAfterHint = getRetryAfterHint$1(error.$response);
    if (retryAfterHint) {
        errorInfo.retryAfterHint = retryAfterHint;
    }
    return errorInfo;
};
const getRetryErrorType$1 = (error) => {
    if (isThrottlingError$1(error))
        return "THROTTLING";
    if (isTransientError$1(error))
        return "TRANSIENT";
    if (isServerError$1(error))
        return "SERVER_ERROR";
    return "CLIENT_ERROR";
};
const retryMiddlewareOptions$1 = {
    name: "retryMiddleware",
    tags: ["RETRY"],
    step: "finalizeRequest",
    priority: "high",
    override: true,
};
const getRetryPlugin$1 = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(retryMiddleware$1(options), retryMiddlewareOptions$1);
    },
});
const getRetryAfterHint$1 = (response) => {
    if (!HttpResponse$1.isInstance(response))
        return;
    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === "retry-after");
    if (!retryAfterHeaderName)
        return;
    const retryAfter = response.headers[retryAfterHeaderName];
    const retryAfterSeconds = Number(retryAfter);
    if (!Number.isNaN(retryAfterSeconds))
        return new Date(retryAfterSeconds * 1000);
    const retryAfterDate = new Date(retryAfter);
    return retryAfterDate;
};

class NoOpLogger$1 {
    trace() { }
    debug() { }
    info() { }
    warn() { }
    error() { }
}

class Client$1 {
    constructor(config) {
        this.middlewareStack = constructStack$1();
        this.config = config;
    }
    send(command, optionsOrCb, cb) {
        const options = typeof optionsOrCb !== "function" ? optionsOrCb : undefined;
        const callback = typeof optionsOrCb === "function" ? optionsOrCb : cb;
        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);
        if (callback) {
            handler(command)
                .then((result) => callback(null, result.output), (err) => callback(err))
                .catch(() => { });
        }
        else {
            return handler(command).then((result) => result.output);
        }
    }
    destroy() {
        if (this.config.requestHandler.destroy)
            this.config.requestHandler.destroy();
    }
}

const streamCollector$1 = (stream) => {
    if (typeof Blob === "function" && stream instanceof Blob) {
        return collectBlob$1(stream);
    }
    return collectStream$1(stream);
};
async function collectBlob$1(blob) {
    const base64 = await readToBase64$1(blob);
    const arrayBuffer = fromBase64$1(base64);
    return new Uint8Array(arrayBuffer);
}
async function collectStream$1(stream) {
    let res = new Uint8Array(0);
    const reader = stream.getReader();
    let isDone = false;
    while (!isDone) {
        const { done, value } = await reader.read();
        if (value) {
            const prior = res;
            res = new Uint8Array(prior.length + value.length);
            res.set(prior);
            res.set(value, prior.length);
        }
        isDone = done;
    }
    return res;
}
function readToBase64$1(blob) {
    return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onloadend = () => {
            if (reader.readyState !== 2) {
                return reject(new Error("Reader aborted too early"));
            }
            const result = (reader.result ?? "");
            const commaIndex = result.indexOf(",");
            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;
            resolve(result.substring(dataOffset));
        };
        reader.onabort = () => reject(new Error("Read aborted"));
        reader.onerror = () => reject(reader.error);
        reader.readAsDataURL(blob);
    });
}

const loadConfigsForDefaultMode$1 = (mode) => {
    switch (mode) {
        case "standard":
            return {
                retryMode: "standard",
                connectionTimeout: 3100,
            };
        case "in-region":
            return {
                retryMode: "standard",
                connectionTimeout: 1100,
            };
        case "cross-region":
            return {
                retryMode: "standard",
                connectionTimeout: 3100,
            };
        case "mobile":
            return {
                retryMode: "standard",
                connectionTimeout: 30000,
            };
        default:
            return {};
    }
};

const getChecksumConfiguration = (runtimeConfig) => {
    const checksumAlgorithms = [];
    for (const id in AlgorithmId$1) {
        const algorithmId = AlgorithmId$1[id];
        if (runtimeConfig[algorithmId] === undefined) {
            continue;
        }
        checksumAlgorithms.push({
            algorithmId: () => algorithmId,
            checksumConstructor: () => runtimeConfig[algorithmId],
        });
    }
    return {
        _checksumAlgorithms: checksumAlgorithms,
        addChecksumAlgorithm(algo) {
            this._checksumAlgorithms.push(algo);
        },
        checksumAlgorithms() {
            return this._checksumAlgorithms;
        },
    };
};
const resolveChecksumRuntimeConfig = (clientConfig) => {
    const runtimeConfig = {};
    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {
        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();
    });
    return runtimeConfig;
};

const getRetryConfiguration = (runtimeConfig) => {
    let _retryStrategy = runtimeConfig.retryStrategy;
    return {
        setRetryStrategy(retryStrategy) {
            _retryStrategy = retryStrategy;
        },
        retryStrategy() {
            return _retryStrategy;
        },
    };
};
const resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {
    const runtimeConfig = {};
    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();
    return runtimeConfig;
};

const getDefaultExtensionConfiguration = (runtimeConfig) => {
    return {
        ...getChecksumConfiguration(runtimeConfig),
        ...getRetryConfiguration(runtimeConfig),
    };
};
const resolveDefaultRuntimeConfig = (config) => {
    return {
        ...resolveChecksumRuntimeConfig(config),
        ...resolveRetryRuntimeConfig(config),
    };
};

const resolveClientEndpointParameters$1 = (options) => {
    return {
        ...options,
        useDualstackEndpoint: options.useDualstackEndpoint ?? false,
        useFipsEndpoint: options.useFipsEndpoint ?? false,
        defaultSigningName: "iotsitewise",
    };
};

const name$1 = "@aws-sdk/client-iotsitewise";
const description$1 = "AWS SDK for JavaScript Iotsitewise Client for Node.js, Browser and React Native";
const version$2 = "3.456.0";
const scripts$1 = {
	build: "concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'",
	"build:cjs": "tsc -p tsconfig.cjs.json",
	"build:docs": "typedoc",
	"build:es": "tsc -p tsconfig.es.json",
	"build:include:deps": "lerna run --scope $npm_package_name --include-dependencies build",
	"build:types": "tsc -p tsconfig.types.json",
	"build:types:downlevel": "downlevel-dts dist-types dist-types/ts3.4",
	clean: "rimraf ./dist-* && rimraf *.tsbuildinfo",
	"extract:docs": "api-extractor run --local",
	"generate:client": "node ../../scripts/generate-clients/single-service --solo iotsitewise"
};
const main$1 = "./dist-cjs/index.js";
const types$1 = "./dist-types/index.d.ts";
const module$1 = "./dist-es/index.js";
const sideEffects$1 = false;
const dependencies$1 = {
	"@aws-crypto/sha256-browser": "3.0.0",
	"@aws-crypto/sha256-js": "3.0.0",
	"@aws-sdk/client-sts": "3.454.0",
	"@aws-sdk/core": "3.451.0",
	"@aws-sdk/credential-provider-node": "3.451.0",
	"@aws-sdk/middleware-host-header": "3.451.0",
	"@aws-sdk/middleware-logger": "3.451.0",
	"@aws-sdk/middleware-recursion-detection": "3.451.0",
	"@aws-sdk/middleware-signing": "3.451.0",
	"@aws-sdk/middleware-user-agent": "3.451.0",
	"@aws-sdk/region-config-resolver": "3.451.0",
	"@aws-sdk/types": "3.451.0",
	"@aws-sdk/util-endpoints": "3.451.0",
	"@aws-sdk/util-user-agent-browser": "3.451.0",
	"@aws-sdk/util-user-agent-node": "3.451.0",
	"@smithy/config-resolver": "^2.0.18",
	"@smithy/fetch-http-handler": "^2.2.6",
	"@smithy/hash-node": "^2.0.15",
	"@smithy/invalid-dependency": "^2.0.13",
	"@smithy/middleware-content-length": "^2.0.15",
	"@smithy/middleware-endpoint": "^2.2.0",
	"@smithy/middleware-retry": "^2.0.20",
	"@smithy/middleware-serde": "^2.0.13",
	"@smithy/middleware-stack": "^2.0.7",
	"@smithy/node-config-provider": "^2.1.5",
	"@smithy/node-http-handler": "^2.1.9",
	"@smithy/protocol-http": "^3.0.9",
	"@smithy/smithy-client": "^2.1.15",
	"@smithy/types": "^2.5.0",
	"@smithy/url-parser": "^2.0.13",
	"@smithy/util-base64": "^2.0.1",
	"@smithy/util-body-length-browser": "^2.0.0",
	"@smithy/util-body-length-node": "^2.1.0",
	"@smithy/util-defaults-mode-browser": "^2.0.19",
	"@smithy/util-defaults-mode-node": "^2.0.25",
	"@smithy/util-endpoints": "^1.0.4",
	"@smithy/util-retry": "^2.0.6",
	"@smithy/util-utf8": "^2.0.2",
	"@smithy/util-waiter": "^2.0.13",
	tslib: "^2.5.0",
	uuid: "^8.3.2"
};
const devDependencies$1 = {
	"@smithy/service-client-documentation-generator": "^2.0.0",
	"@tsconfig/node14": "1.0.3",
	"@types/node": "^14.14.31",
	"@types/uuid": "^8.3.0",
	concurrently: "7.0.0",
	"downlevel-dts": "0.10.1",
	rimraf: "3.0.2",
	typedoc: "0.23.23",
	typescript: "~4.9.5"
};
const engines$1 = {
	node: ">=14.0.0"
};
const typesVersions$1 = {
	"<4.0": {
		"dist-types/*": [
			"dist-types/ts3.4/*"
		]
	}
};
const files$1 = [
	"dist-*/**"
];
const author$1 = {
	name: "AWS SDK for JavaScript Team",
	url: "https://aws.amazon.com/javascript/"
};
const license$1 = "Apache-2.0";
const browser$1 = {
	"./dist-es/runtimeConfig": "./dist-es/runtimeConfig.browser"
};
const homepage$1 = "https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-iotsitewise";
const repository$1 = {
	type: "git",
	url: "https://github.com/aws/aws-sdk-js-v3.git",
	directory: "clients/client-iotsitewise"
};
const packageInfo$1 = {
	name: name$1,
	description: description$1,
	version: version$2,
	scripts: scripts$1,
	main: main$1,
	types: types$1,
	module: module$1,
	sideEffects: sideEffects$1,
	dependencies: dependencies$1,
	devDependencies: devDependencies$1,
	engines: engines$1,
	typesVersions: typesVersions$1,
	files: files$1,
	author: author$1,
	license: license$1,
	browser: browser$1,
	"react-native": {
	"./dist-es/runtimeConfig": "./dist-es/runtimeConfig.native"
},
	homepage: homepage$1,
	repository: repository$1
};

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$3 = function(d, b) {
    extendStatics$3 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$3(d, b);
};

function __extends$3(d, b) {
    extendStatics$3(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$3 = function() {
    __assign$3 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$3.apply(this, arguments);
};

function __rest$4(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate$3(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param$3(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata$3(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter$3(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator$3(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding$3(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar$3(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values$3(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read$3(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$3() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$3(arguments[i]));
    return ar;
}

function __spreadArrays$3() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}
function __await$3(v) {
    return this instanceof __await$3 ? (this.v = v, this) : new __await$3(v);
}

function __asyncGenerator$3(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await$3 ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator$3(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await$3(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues$3(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values$3 === "function" ? __values$3(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject$3(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}
function __importStar$3(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault$3(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet$3(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet$3(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}

const tslib_es6$3 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    __extends: __extends$3,
    get __assign () { return __assign$3; },
    __rest: __rest$4,
    __decorate: __decorate$3,
    __param: __param$3,
    __metadata: __metadata$3,
    __awaiter: __awaiter$3,
    __generator: __generator$3,
    __createBinding: __createBinding$3,
    __exportStar: __exportStar$3,
    __values: __values$3,
    __read: __read$3,
    __spread: __spread$3,
    __spreadArrays: __spreadArrays$3,
    __await: __await$3,
    __asyncGenerator: __asyncGenerator$3,
    __asyncDelegator: __asyncDelegator$3,
    __asyncValues: __asyncValues$3,
    __makeTemplateObject: __makeTemplateObject$3,
    __importStar: __importStar$3,
    __importDefault: __importDefault$3,
    __classPrivateFieldGet: __classPrivateFieldGet$3,
    __classPrivateFieldSet: __classPrivateFieldSet$3
});

var isEmptyData_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEmptyData = void 0;
function isEmptyData(data) {
    if (typeof data === "string") {
        return data.length === 0;
    }
    return data.byteLength === 0;
}
exports.isEmptyData = isEmptyData;
//# sourceMappingURL=isEmptyData.js.map
});

var constants$1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.EMPTY_DATA_SHA_256 = exports.SHA_256_HMAC_ALGO = exports.SHA_256_HASH = void 0;
exports.SHA_256_HASH = { name: "SHA-256" };
exports.SHA_256_HMAC_ALGO = {
    name: "HMAC",
    hash: exports.SHA_256_HASH
};
exports.EMPTY_DATA_SHA_256 = new Uint8Array([
    227,
    176,
    196,
    66,
    152,
    252,
    28,
    20,
    154,
    251,
    244,
    200,
    153,
    111,
    185,
    36,
    39,
    174,
    65,
    228,
    100,
    155,
    147,
    76,
    164,
    149,
    153,
    27,
    120,
    82,
    184,
    85
]);
//# sourceMappingURL=constants.js.map
});

var fallbackWindow = {};
function locateWindow() {
    if (typeof window !== "undefined") {
        return window;
    }
    else if (typeof self !== "undefined") {
        return self;
    }
    return fallbackWindow;
}

const distEs = /*#__PURE__*/Object.freeze({
    __proto__: null,
    locateWindow: locateWindow
});

const util_locate_window_1 = /*@__PURE__*/getAugmentedNamespace(distEs);

var ie11Sha256 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sha256 = void 0;




var Sha256 = /** @class */ (function () {
    function Sha256(secret) {
        this.secret = secret;
        this.reset();
    }
    Sha256.prototype.update = function (toHash) {
        var _this = this;
        if ((0, isEmptyData_1.isEmptyData)(toHash)) {
            return;
        }
        this.operation = this.operation.then(function (operation) {
            operation.onerror = function () {
                _this.operation = Promise.reject(new Error("Error encountered updating hash"));
            };
            operation.process(toArrayBufferView(toHash));
            return operation;
        });
        this.operation.catch(function () { });
    };
    Sha256.prototype.digest = function () {
        return this.operation.then(function (operation) {
            return new Promise(function (resolve, reject) {
                operation.onerror = function () {
                    reject(new Error("Error encountered finalizing hash"));
                };
                operation.oncomplete = function () {
                    if (operation.result) {
                        resolve(new Uint8Array(operation.result));
                    }
                    reject(new Error("Error encountered finalizing hash"));
                };
                operation.finish();
            });
        });
    };
    Sha256.prototype.reset = function () {
        if (this.secret) {
            this.operation = getKeyPromise(this.secret).then(function (keyData) {
                return (0, util_locate_window_1.locateWindow)().msCrypto.subtle.sign(constants$1.SHA_256_HMAC_ALGO, keyData);
            });
            this.operation.catch(function () { });
        }
        else {
            this.operation = Promise.resolve((0, util_locate_window_1.locateWindow)().msCrypto.subtle.digest("SHA-256"));
        }
    };
    return Sha256;
}());
exports.Sha256 = Sha256;
function getKeyPromise(secret) {
    return new Promise(function (resolve, reject) {
        var keyOperation = (0, util_locate_window_1.locateWindow)().msCrypto.subtle.importKey("raw", toArrayBufferView(secret), constants$1.SHA_256_HMAC_ALGO, false, ["sign"]);
        keyOperation.oncomplete = function () {
            if (keyOperation.result) {
                resolve(keyOperation.result);
            }
            reject(new Error("ImportKey completed without importing key."));
        };
        keyOperation.onerror = function () {
            reject(new Error("ImportKey failed to import key."));
        };
    });
}
function toArrayBufferView(data) {
    if (typeof data === "string") {
        return (0, util_utf8_browser_1.fromUtf8)(data);
    }
    if (ArrayBuffer.isView(data)) {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
    }
    return new Uint8Array(data);
}
//# sourceMappingURL=ie11Sha256.js.map
});

var webCryptoSha256 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sha256 = void 0;



var Sha256 = /** @class */ (function () {
    function Sha256(secret) {
        this.toHash = new Uint8Array(0);
        this.secret = secret;
        this.reset();
    }
    Sha256.prototype.update = function (data) {
        if ((0, build$5.isEmptyData)(data)) {
            return;
        }
        var update = (0, build$5.convertToBuffer)(data);
        var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);
        typedArray.set(this.toHash, 0);
        typedArray.set(update, this.toHash.byteLength);
        this.toHash = typedArray;
    };
    Sha256.prototype.digest = function () {
        var _this = this;
        if (this.key) {
            return this.key.then(function (key) {
                return (0, util_locate_window_1.locateWindow)()
                    .crypto.subtle.sign(constants$1.SHA_256_HMAC_ALGO, key, _this.toHash)
                    .then(function (data) { return new Uint8Array(data); });
            });
        }
        if ((0, build$5.isEmptyData)(this.toHash)) {
            return Promise.resolve(constants$1.EMPTY_DATA_SHA_256);
        }
        return Promise.resolve()
            .then(function () {
            return (0, util_locate_window_1.locateWindow)().crypto.subtle.digest(constants$1.SHA_256_HASH, _this.toHash);
        })
            .then(function (data) { return Promise.resolve(new Uint8Array(data)); });
    };
    Sha256.prototype.reset = function () {
        var _this = this;
        this.toHash = new Uint8Array(0);
        if (this.secret && this.secret !== void 0) {
            this.key = new Promise(function (resolve, reject) {
                (0, util_locate_window_1.locateWindow)()
                    .crypto.subtle.importKey("raw", (0, build$5.convertToBuffer)(_this.secret), constants$1.SHA_256_HMAC_ALGO, false, ["sign"])
                    .then(resolve, reject);
            });
            this.key.catch(function () { });
        }
    };
    return Sha256;
}());
exports.Sha256 = Sha256;
//# sourceMappingURL=webCryptoSha256.js.map
});

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$2 = function(d, b) {
    extendStatics$2 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$2(d, b);
};

function __extends$2(d, b) {
    extendStatics$2(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$2 = function() {
    __assign$2 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$2.apply(this, arguments);
};

function __rest$3(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate$2(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param$2(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata$2(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter$2(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator$2(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding$2(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar$2(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values$2(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read$2(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$2() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$2(arguments[i]));
    return ar;
}

function __spreadArrays$2() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}
function __await$2(v) {
    return this instanceof __await$2 ? (this.v = v, this) : new __await$2(v);
}

function __asyncGenerator$2(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await$2 ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator$2(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await$2(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues$2(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values$2 === "function" ? __values$2(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject$2(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}
function __importStar$2(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault$2(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet$2(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet$2(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}

const tslib_es6$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    __extends: __extends$2,
    get __assign () { return __assign$2; },
    __rest: __rest$3,
    __decorate: __decorate$2,
    __param: __param$2,
    __metadata: __metadata$2,
    __awaiter: __awaiter$2,
    __generator: __generator$2,
    __createBinding: __createBinding$2,
    __exportStar: __exportStar$2,
    __values: __values$2,
    __read: __read$2,
    __spread: __spread$2,
    __spreadArrays: __spreadArrays$2,
    __await: __await$2,
    __asyncGenerator: __asyncGenerator$2,
    __asyncDelegator: __asyncDelegator$2,
    __asyncValues: __asyncValues$2,
    __makeTemplateObject: __makeTemplateObject$2,
    __importStar: __importStar$2,
    __importDefault: __importDefault$2,
    __classPrivateFieldGet: __classPrivateFieldGet$2,
    __classPrivateFieldSet: __classPrivateFieldSet$2
});

var constants = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.MAX_HASHABLE_LENGTH = exports.INIT = exports.KEY = exports.DIGEST_LENGTH = exports.BLOCK_SIZE = void 0;
/**
 * @internal
 */
exports.BLOCK_SIZE = 64;
/**
 * @internal
 */
exports.DIGEST_LENGTH = 32;
/**
 * @internal
 */
exports.KEY = new Uint32Array([
    0x428a2f98,
    0x71374491,
    0xb5c0fbcf,
    0xe9b5dba5,
    0x3956c25b,
    0x59f111f1,
    0x923f82a4,
    0xab1c5ed5,
    0xd807aa98,
    0x12835b01,
    0x243185be,
    0x550c7dc3,
    0x72be5d74,
    0x80deb1fe,
    0x9bdc06a7,
    0xc19bf174,
    0xe49b69c1,
    0xefbe4786,
    0x0fc19dc6,
    0x240ca1cc,
    0x2de92c6f,
    0x4a7484aa,
    0x5cb0a9dc,
    0x76f988da,
    0x983e5152,
    0xa831c66d,
    0xb00327c8,
    0xbf597fc7,
    0xc6e00bf3,
    0xd5a79147,
    0x06ca6351,
    0x14292967,
    0x27b70a85,
    0x2e1b2138,
    0x4d2c6dfc,
    0x53380d13,
    0x650a7354,
    0x766a0abb,
    0x81c2c92e,
    0x92722c85,
    0xa2bfe8a1,
    0xa81a664b,
    0xc24b8b70,
    0xc76c51a3,
    0xd192e819,
    0xd6990624,
    0xf40e3585,
    0x106aa070,
    0x19a4c116,
    0x1e376c08,
    0x2748774c,
    0x34b0bcb5,
    0x391c0cb3,
    0x4ed8aa4a,
    0x5b9cca4f,
    0x682e6ff3,
    0x748f82ee,
    0x78a5636f,
    0x84c87814,
    0x8cc70208,
    0x90befffa,
    0xa4506ceb,
    0xbef9a3f7,
    0xc67178f2
]);
/**
 * @internal
 */
exports.INIT = [
    0x6a09e667,
    0xbb67ae85,
    0x3c6ef372,
    0xa54ff53a,
    0x510e527f,
    0x9b05688c,
    0x1f83d9ab,
    0x5be0cd19
];
/**
 * @internal
 */
exports.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;
//# sourceMappingURL=constants.js.map
});

var RawSha256_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.RawSha256 = void 0;

/**
 * @internal
 */
var RawSha256 = /** @class */ (function () {
    function RawSha256() {
        this.state = Int32Array.from(constants.INIT);
        this.temp = new Int32Array(64);
        this.buffer = new Uint8Array(64);
        this.bufferLength = 0;
        this.bytesHashed = 0;
        /**
         * @internal
         */
        this.finished = false;
    }
    RawSha256.prototype.update = function (data) {
        if (this.finished) {
            throw new Error("Attempted to update an already finished hash.");
        }
        var position = 0;
        var byteLength = data.byteLength;
        this.bytesHashed += byteLength;
        if (this.bytesHashed * 8 > constants.MAX_HASHABLE_LENGTH) {
            throw new Error("Cannot hash more than 2^53 - 1 bits");
        }
        while (byteLength > 0) {
            this.buffer[this.bufferLength++] = data[position++];
            byteLength--;
            if (this.bufferLength === constants.BLOCK_SIZE) {
                this.hashBuffer();
                this.bufferLength = 0;
            }
        }
    };
    RawSha256.prototype.digest = function () {
        if (!this.finished) {
            var bitsHashed = this.bytesHashed * 8;
            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);
            var undecoratedLength = this.bufferLength;
            bufferView.setUint8(this.bufferLength++, 0x80);
            // Ensure the final block has enough room for the hashed length
            if (undecoratedLength % constants.BLOCK_SIZE >= constants.BLOCK_SIZE - 8) {
                for (var i = this.bufferLength; i < constants.BLOCK_SIZE; i++) {
                    bufferView.setUint8(i, 0);
                }
                this.hashBuffer();
                this.bufferLength = 0;
            }
            for (var i = this.bufferLength; i < constants.BLOCK_SIZE - 8; i++) {
                bufferView.setUint8(i, 0);
            }
            bufferView.setUint32(constants.BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);
            bufferView.setUint32(constants.BLOCK_SIZE - 4, bitsHashed);
            this.hashBuffer();
            this.finished = true;
        }
        // The value in state is little-endian rather than big-endian, so flip
        // each word into a new Uint8Array
        var out = new Uint8Array(constants.DIGEST_LENGTH);
        for (var i = 0; i < 8; i++) {
            out[i * 4] = (this.state[i] >>> 24) & 0xff;
            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;
            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;
            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;
        }
        return out;
    };
    RawSha256.prototype.hashBuffer = function () {
        var _a = this, buffer = _a.buffer, state = _a.state;
        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];
        for (var i = 0; i < constants.BLOCK_SIZE; i++) {
            if (i < 16) {
                this.temp[i] =
                    ((buffer[i * 4] & 0xff) << 24) |
                        ((buffer[i * 4 + 1] & 0xff) << 16) |
                        ((buffer[i * 4 + 2] & 0xff) << 8) |
                        (buffer[i * 4 + 3] & 0xff);
            }
            else {
                var u = this.temp[i - 2];
                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);
                u = this.temp[i - 15];
                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);
                this.temp[i] =
                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);
            }
            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^
                ((state4 >>> 11) | (state4 << 21)) ^
                ((state4 >>> 25) | (state4 << 7))) +
                ((state4 & state5) ^ (~state4 & state6))) |
                0) +
                ((state7 + ((constants.KEY[i] + this.temp[i]) | 0)) | 0)) |
                0;
            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^
                ((state0 >>> 13) | (state0 << 19)) ^
                ((state0 >>> 22) | (state0 << 10))) +
                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |
                0;
            state7 = state6;
            state6 = state5;
            state5 = state4;
            state4 = (state3 + t1) | 0;
            state3 = state2;
            state2 = state1;
            state1 = state0;
            state0 = (t1 + t2) | 0;
        }
        state[0] += state0;
        state[1] += state1;
        state[2] += state2;
        state[3] += state3;
        state[4] += state4;
        state[5] += state5;
        state[6] += state6;
        state[7] += state7;
    };
    return RawSha256;
}());
exports.RawSha256 = RawSha256;
//# sourceMappingURL=RawSha256.js.map
});

const tslib_1$3 = /*@__PURE__*/getAugmentedNamespace(tslib_es6$2);

var jsSha256 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sha256 = void 0;




var Sha256 = /** @class */ (function () {
    function Sha256(secret) {
        this.secret = secret;
        this.hash = new RawSha256_1.RawSha256();
        this.reset();
    }
    Sha256.prototype.update = function (toHash) {
        if ((0, build$5.isEmptyData)(toHash) || this.error) {
            return;
        }
        try {
            this.hash.update((0, build$5.convertToBuffer)(toHash));
        }
        catch (e) {
            this.error = e;
        }
    };
    /* This synchronous method keeps compatibility
     * with the v2 aws-sdk.
     */
    Sha256.prototype.digestSync = function () {
        if (this.error) {
            throw this.error;
        }
        if (this.outer) {
            if (!this.outer.finished) {
                this.outer.update(this.hash.digest());
            }
            return this.outer.digest();
        }
        return this.hash.digest();
    };
    /* The underlying digest method here is synchronous.
     * To keep the same interface with the other hash functions
     * the default is to expose this as an async method.
     * However, it can sometimes be useful to have a sync method.
     */
    Sha256.prototype.digest = function () {
        return tslib_1$3.__awaiter(this, void 0, void 0, function () {
            return tslib_1$3.__generator(this, function (_a) {
                return [2 /*return*/, this.digestSync()];
            });
        });
    };
    Sha256.prototype.reset = function () {
        this.hash = new RawSha256_1.RawSha256();
        if (this.secret) {
            this.outer = new RawSha256_1.RawSha256();
            var inner = bufferFromSecret(this.secret);
            var outer = new Uint8Array(constants.BLOCK_SIZE);
            outer.set(inner);
            for (var i = 0; i < constants.BLOCK_SIZE; i++) {
                inner[i] ^= 0x36;
                outer[i] ^= 0x5c;
            }
            this.hash.update(inner);
            this.outer.update(outer);
            // overwrite the copied key in memory
            for (var i = 0; i < inner.byteLength; i++) {
                inner[i] = 0;
            }
        }
    };
    return Sha256;
}());
exports.Sha256 = Sha256;
function bufferFromSecret(secret) {
    var input = (0, build$5.convertToBuffer)(secret);
    if (input.byteLength > constants.BLOCK_SIZE) {
        var bufferHash = new RawSha256_1.RawSha256();
        bufferHash.update(input);
        input = bufferHash.digest();
    }
    var buffer = new Uint8Array(constants.BLOCK_SIZE);
    buffer.set(input);
    return buffer;
}
//# sourceMappingURL=jsSha256.js.map
});

var build$3 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });

tslib_1$3.__exportStar(jsSha256, exports);
//# sourceMappingURL=index.js.map
});

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics$1 = function(d, b) {
    extendStatics$1 = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics$1(d, b);
};

function __extends$1(d, b) {
    extendStatics$1(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign$1 = function() {
    __assign$1 = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign$1.apply(this, arguments);
};

function __rest$2(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate$1(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param$1(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata$1(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter$1(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator$1(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding$1(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar$1(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values$1(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read$1(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread$1() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read$1(arguments[i]));
    return ar;
}

function __spreadArrays$1() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}
function __await$1(v) {
    return this instanceof __await$1 ? (this.v = v, this) : new __await$1(v);
}

function __asyncGenerator$1(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await$1 ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator$1(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await$1(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues$1(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values$1 === "function" ? __values$1(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject$1(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}
function __importStar$1(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault$1(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet$1(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet$1(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}

const tslib_es6$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    __extends: __extends$1,
    get __assign () { return __assign$1; },
    __rest: __rest$2,
    __decorate: __decorate$1,
    __param: __param$1,
    __metadata: __metadata$1,
    __awaiter: __awaiter$1,
    __generator: __generator$1,
    __createBinding: __createBinding$1,
    __exportStar: __exportStar$1,
    __values: __values$1,
    __read: __read$1,
    __spread: __spread$1,
    __spreadArrays: __spreadArrays$1,
    __await: __await$1,
    __asyncGenerator: __asyncGenerator$1,
    __asyncDelegator: __asyncDelegator$1,
    __asyncValues: __asyncValues$1,
    __makeTemplateObject: __makeTemplateObject$1,
    __importStar: __importStar$1,
    __importDefault: __importDefault$1,
    __classPrivateFieldGet: __classPrivateFieldGet$1,
    __classPrivateFieldSet: __classPrivateFieldSet$1
});

const tslib_1$2 = /*@__PURE__*/getAugmentedNamespace(tslib_es6$1);

var supportsWebCrypto_1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.supportsZeroByteGCM = exports.supportsSubtleCrypto = exports.supportsSecureRandom = exports.supportsWebCrypto = void 0;

var subtleCryptoMethods = [
    "decrypt",
    "digest",
    "encrypt",
    "exportKey",
    "generateKey",
    "importKey",
    "sign",
    "verify"
];
function supportsWebCrypto(window) {
    if (supportsSecureRandom(window) &&
        typeof window.crypto.subtle === "object") {
        var subtle = window.crypto.subtle;
        return supportsSubtleCrypto(subtle);
    }
    return false;
}
exports.supportsWebCrypto = supportsWebCrypto;
function supportsSecureRandom(window) {
    if (typeof window === "object" && typeof window.crypto === "object") {
        var getRandomValues = window.crypto.getRandomValues;
        return typeof getRandomValues === "function";
    }
    return false;
}
exports.supportsSecureRandom = supportsSecureRandom;
function supportsSubtleCrypto(subtle) {
    return (subtle &&
        subtleCryptoMethods.every(function (methodName) { return typeof subtle[methodName] === "function"; }));
}
exports.supportsSubtleCrypto = supportsSubtleCrypto;
function supportsZeroByteGCM(subtle) {
    return tslib_1$2.__awaiter(this, void 0, void 0, function () {
        var key, zeroByteAuthTag;
        return tslib_1$2.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!supportsSubtleCrypto(subtle))
                        return [2 /*return*/, false];
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 4, , 5]);
                    return [4 /*yield*/, subtle.generateKey({ name: "AES-GCM", length: 128 }, false, ["encrypt"])];
                case 2:
                    key = _b.sent();
                    return [4 /*yield*/, subtle.encrypt({
                            name: "AES-GCM",
                            iv: new Uint8Array(Array(12)),
                            additionalData: new Uint8Array(Array(16)),
                            tagLength: 128
                        }, key, new Uint8Array(0))];
                case 3:
                    zeroByteAuthTag = _b.sent();
                    return [2 /*return*/, zeroByteAuthTag.byteLength === 16];
                case 4:
                    _b.sent();
                    return [2 /*return*/, false];
                case 5: return [2 /*return*/];
            }
        });
    });
}
exports.supportsZeroByteGCM = supportsZeroByteGCM;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VwcG9ydHNXZWJDcnlwdG8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3VwcG9ydHNXZWJDcnlwdG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQVVBLElBQU0sbUJBQW1CLEdBQThCO0lBQ3JELFNBQVM7SUFDVCxRQUFRO0lBQ1IsU0FBUztJQUNULFdBQVc7SUFDWCxhQUFhO0lBQ2IsV0FBVztJQUNYLE1BQU07SUFDTixRQUFRO0NBQ1QsQ0FBQztBQUVGLFNBQWdCLGlCQUFpQixDQUFDLE1BQWM7SUFDOUMsSUFDRSxvQkFBb0IsQ0FBQyxNQUFNLENBQUM7UUFDNUIsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQ3hDO1FBQ1EsSUFBQSxNQUFNLEdBQUssTUFBTSxDQUFDLE1BQU0sT0FBbEIsQ0FBbUI7UUFFakMsT0FBTyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNyQztJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQVhELDhDQVdDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQUMsTUFBYztJQUNqRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsSUFBSSxPQUFPLE1BQU0sQ0FBQyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzNELElBQUEsZUFBZSxHQUFLLE1BQU0sQ0FBQyxNQUFNLGdCQUFsQixDQUFtQjtRQUUxQyxPQUFPLE9BQU8sZUFBZSxLQUFLLFVBQVUsQ0FBQztLQUM5QztJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQVJELG9EQVFDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQUMsTUFBb0I7SUFDdkQsT0FBTyxDQUNMLE1BQU07UUFDTixtQkFBbUIsQ0FBQyxLQUFLLENBQ3ZCLFVBQUEsVUFBVSxJQUFJLE9BQUEsT0FBTyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssVUFBVSxFQUF4QyxDQUF3QyxDQUN2RCxDQUNGLENBQUM7QUFDSixDQUFDO0FBUEQsb0RBT0M7QUFFRCxTQUFzQixtQkFBbUIsQ0FBQyxNQUFvQjs7Ozs7O29CQUM1RCxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDO3dCQUFFLHNCQUFPLEtBQUssRUFBQzs7OztvQkFFbEMscUJBQU0sTUFBTSxDQUFDLFdBQVcsQ0FDbEMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFDaEMsS0FBSyxFQUNMLENBQUMsU0FBUyxDQUFDLENBQ1osRUFBQTs7b0JBSkssR0FBRyxHQUFHLFNBSVg7b0JBQ3VCLHFCQUFNLE1BQU0sQ0FBQyxPQUFPLENBQzFDOzRCQUNFLElBQUksRUFBRSxTQUFTOzRCQUNmLEVBQUUsRUFBRSxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7NEJBQzdCLGNBQWMsRUFBRSxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7NEJBQ3pDLFNBQVMsRUFBRSxHQUFHO3lCQUNmLEVBQ0QsR0FBRyxFQUNILElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUNsQixFQUFBOztvQkFUSyxlQUFlLEdBQUcsU0FTdkI7b0JBQ0Qsc0JBQU8sZUFBZSxDQUFDLFVBQVUsS0FBSyxFQUFFLEVBQUM7OztvQkFFekMsc0JBQU8sS0FBSyxFQUFDOzs7OztDQUVoQjtBQXRCRCxrREFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIFN1YnRsZUNyeXB0b01ldGhvZCA9XG4gIHwgXCJkZWNyeXB0XCJcbiAgfCBcImRpZ2VzdFwiXG4gIHwgXCJlbmNyeXB0XCJcbiAgfCBcImV4cG9ydEtleVwiXG4gIHwgXCJnZW5lcmF0ZUtleVwiXG4gIHwgXCJpbXBvcnRLZXlcIlxuICB8IFwic2lnblwiXG4gIHwgXCJ2ZXJpZnlcIjtcblxuY29uc3Qgc3VidGxlQ3J5cHRvTWV0aG9kczogQXJyYXk8U3VidGxlQ3J5cHRvTWV0aG9kPiA9IFtcbiAgXCJkZWNyeXB0XCIsXG4gIFwiZGlnZXN0XCIsXG4gIFwiZW5jcnlwdFwiLFxuICBcImV4cG9ydEtleVwiLFxuICBcImdlbmVyYXRlS2V5XCIsXG4gIFwiaW1wb3J0S2V5XCIsXG4gIFwic2lnblwiLFxuICBcInZlcmlmeVwiXG5dO1xuXG5leHBvcnQgZnVuY3Rpb24gc3VwcG9ydHNXZWJDcnlwdG8od2luZG93OiBXaW5kb3cpOiBib29sZWFuIHtcbiAgaWYgKFxuICAgIHN1cHBvcnRzU2VjdXJlUmFuZG9tKHdpbmRvdykgJiZcbiAgICB0eXBlb2Ygd2luZG93LmNyeXB0by5zdWJ0bGUgPT09IFwib2JqZWN0XCJcbiAgKSB7XG4gICAgY29uc3QgeyBzdWJ0bGUgfSA9IHdpbmRvdy5jcnlwdG87XG5cbiAgICByZXR1cm4gc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1cHBvcnRzU2VjdXJlUmFuZG9tKHdpbmRvdzogV2luZG93KTogYm9vbGVhbiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiB3aW5kb3cuY3J5cHRvID09PSBcIm9iamVjdFwiKSB7XG4gICAgY29uc3QgeyBnZXRSYW5kb21WYWx1ZXMgfSA9IHdpbmRvdy5jcnlwdG87XG5cbiAgICByZXR1cm4gdHlwZW9mIGdldFJhbmRvbVZhbHVlcyA9PT0gXCJmdW5jdGlvblwiO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlOiBTdWJ0bGVDcnlwdG8pIHtcbiAgcmV0dXJuIChcbiAgICBzdWJ0bGUgJiZcbiAgICBzdWJ0bGVDcnlwdG9NZXRob2RzLmV2ZXJ5KFxuICAgICAgbWV0aG9kTmFtZSA9PiB0eXBlb2Ygc3VidGxlW21ldGhvZE5hbWVdID09PSBcImZ1bmN0aW9uXCJcbiAgICApXG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdXBwb3J0c1plcm9CeXRlR0NNKHN1YnRsZTogU3VidGxlQ3J5cHRvKSB7XG4gIGlmICghc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlKSkgcmV0dXJuIGZhbHNlO1xuICB0cnkge1xuICAgIGNvbnN0IGtleSA9IGF3YWl0IHN1YnRsZS5nZW5lcmF0ZUtleShcbiAgICAgIHsgbmFtZTogXCJBRVMtR0NNXCIsIGxlbmd0aDogMTI4IH0sXG4gICAgICBmYWxzZSxcbiAgICAgIFtcImVuY3J5cHRcIl1cbiAgICApO1xuICAgIGNvbnN0IHplcm9CeXRlQXV0aFRhZyA9IGF3YWl0IHN1YnRsZS5lbmNyeXB0KFxuICAgICAge1xuICAgICAgICBuYW1lOiBcIkFFUy1HQ01cIixcbiAgICAgICAgaXY6IG5ldyBVaW50OEFycmF5KEFycmF5KDEyKSksXG4gICAgICAgIGFkZGl0aW9uYWxEYXRhOiBuZXcgVWludDhBcnJheShBcnJheSgxNikpLFxuICAgICAgICB0YWdMZW5ndGg6IDEyOFxuICAgICAgfSxcbiAgICAgIGtleSxcbiAgICAgIG5ldyBVaW50OEFycmF5KDApXG4gICAgKTtcbiAgICByZXR1cm4gemVyb0J5dGVBdXRoVGFnLmJ5dGVMZW5ndGggPT09IDE2O1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbiJdfQ==
});

var build$2 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });

tslib_1$2.__exportStar(supportsWebCrypto_1, exports);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vc3VwcG9ydHNXZWJDcnlwdG9cIjtcbiJdfQ==
});

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest$1(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
}
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}

const tslib_es6 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    __extends: __extends,
    get __assign () { return __assign; },
    __rest: __rest$1,
    __decorate: __decorate,
    __param: __param,
    __metadata: __metadata,
    __awaiter: __awaiter,
    __generator: __generator,
    __createBinding: __createBinding,
    __exportStar: __exportStar,
    __values: __values,
    __read: __read,
    __spread: __spread,
    __spreadArrays: __spreadArrays,
    __await: __await,
    __asyncGenerator: __asyncGenerator,
    __asyncDelegator: __asyncDelegator,
    __asyncValues: __asyncValues,
    __makeTemplateObject: __makeTemplateObject,
    __importStar: __importStar,
    __importDefault: __importDefault,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldSet: __classPrivateFieldSet
});

var CryptoOperation = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=CryptoOperation.js.map
});

var Key = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=Key.js.map
});

var KeyOperation = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=KeyOperation.js.map
});

var MsSubtleCrypto = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=MsSubtleCrypto.js.map
});

var MsWindow = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.isMsWindow = void 0;
var msSubtleCryptoMethods = [
    "decrypt",
    "digest",
    "encrypt",
    "exportKey",
    "generateKey",
    "importKey",
    "sign",
    "verify"
];
function quacksLikeAnMsWindow(window) {
    return "MSInputMethodContext" in window && "msCrypto" in window;
}
/**
 * Determines if the provided window is (or is like) the window object one would
 * expect to encounter in Internet Explorer 11.
 */
function isMsWindow(window) {
    if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {
        var _a = window.msCrypto, getRandomValues = _a.getRandomValues, subtle_1 = _a.subtle;
        return msSubtleCryptoMethods
            .map(function (methodName) { return subtle_1[methodName]; })
            .concat(getRandomValues)
            .every(function (method) { return typeof method === "function"; });
    }
    return false;
}
exports.isMsWindow = isMsWindow;
//# sourceMappingURL=MsWindow.js.map
});

const tslib_1$1 = /*@__PURE__*/getAugmentedNamespace(tslib_es6);

var build$1 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });

tslib_1$1.__exportStar(CryptoOperation, exports);
tslib_1$1.__exportStar(Key, exports);
tslib_1$1.__exportStar(KeyOperation, exports);
tslib_1$1.__exportStar(MsSubtleCrypto, exports);
tslib_1$1.__exportStar(MsWindow, exports);
//# sourceMappingURL=index.js.map
});

var crossPlatformSha256 = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sha256 = void 0;







var Sha256 = /** @class */ (function () {
    function Sha256(secret) {
        if ((0, build$2.supportsWebCrypto)((0, util_locate_window_1.locateWindow)())) {
            this.hash = new webCryptoSha256.Sha256(secret);
        }
        else if ((0, build$1.isMsWindow)((0, util_locate_window_1.locateWindow)())) {
            this.hash = new ie11Sha256.Sha256(secret);
        }
        else {
            this.hash = new build$3.Sha256(secret);
        }
    }
    Sha256.prototype.update = function (data, encoding) {
        this.hash.update((0, build$5.convertToBuffer)(data));
    };
    Sha256.prototype.digest = function () {
        return this.hash.digest();
    };
    Sha256.prototype.reset = function () {
        this.hash.reset();
    };
    return Sha256;
}());
exports.Sha256 = Sha256;
//# sourceMappingURL=crossPlatformSha256.js.map
});

const tslib_1 = /*@__PURE__*/getAugmentedNamespace(tslib_es6$3);

var build = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebCryptoSha256 = exports.Ie11Sha256 = void 0;

tslib_1.__exportStar(crossPlatformSha256, exports);

Object.defineProperty(exports, "Ie11Sha256", { enumerable: true, get: function () { return ie11Sha256.Sha256; } });

Object.defineProperty(exports, "WebCryptoSha256", { enumerable: true, get: function () { return webCryptoSha256.Sha256; } });
//# sourceMappingURL=index.js.map
});

var es5 = createCommonjsModule(function (module, exports) {
!function(e,t){module.exports=t();}(commonjsGlobal,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n});},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0});},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=90)}({17:function(e,t,r){t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||""},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||""},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case"NT":return "NT";case"XP":return "XP";case"NT 5.0":return "2000";case"NT 5.1":return "XP";case"NT 5.2":return "2003";case"NT 6.0":return "Vista";case"NT 6.1":return "7";case"NT 6.2":return "8";case"NT 6.3":return "8.1";case"NT 10.0":return "10";default:return}},e.getMacOSVersionName=function(e){var t=e.split(".").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return "Leopard";case 6:return "Snow Leopard";case 7:return "Lion";case 8:return "Mountain Lion";case 9:return "Mavericks";case 10:return "Yosemite";case 11:return "El Capitan";case 12:return "Sierra";case 13:return "High Sierra";case 14:return "Mojave";case 15:return "Catalina";default:return}},e.getAndroidVersionName=function(e){var t=e.split(".").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?"Cupcake":1===t[0]&&t[1]>=6?"Donut":2===t[0]&&t[1]<2?"Eclair":2===t[0]&&2===t[1]?"Froyo":2===t[0]&&t[1]>2?"Gingerbread":3===t[0]?"Honeycomb":4===t[0]&&t[1]<1?"Ice Cream Sandwich":4===t[0]&&t[1]<4?"Jelly Bean":4===t[0]&&t[1]>=4?"KitKat":5===t[0]?"Lollipop":6===t[0]?"Marshmallow":7===t[0]?"Nougat":8===t[0]?"Oreo":9===t[0]?"Pie":void 0},e.getVersionPrecision=function(e){return e.split(".").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(".0");return e.map(n.split("."),(function(e){return new Array(20-e.length).join("0")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1;}else if(u[0][a]<u[1][a])return -1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];"object"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t];}));};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||""},e}();t.default=i,e.exports=t.default;},18:function(e,t,r){t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={"Amazon Silk":"amazon_silk","Android Browser":"android",Bada:"bada",BlackBerry:"blackberry",Chrome:"chrome",Chromium:"chromium",Electron:"electron",Epiphany:"epiphany",Firefox:"firefox",Focus:"focus",Generic:"generic","Google Search":"google_search",Googlebot:"googlebot","Internet Explorer":"ie","K-Meleon":"k_meleon",Maxthon:"maxthon","Microsoft Edge":"edge","MZ Browser":"mz","NAVER Whale Browser":"naver",Opera:"opera","Opera Coast":"opera_coast",PhantomJS:"phantomjs",Puffin:"puffin",QupZilla:"qupzilla",QQ:"qq",QQLite:"qqlite",Safari:"safari",Sailfish:"sailfish","Samsung Internet for Android":"samsung_internet",SeaMonkey:"seamonkey",Sleipnir:"sleipnir",Swing:"swing",Tizen:"tizen","UC Browser":"uc",Vivaldi:"vivaldi","WebOS Browser":"webos",WeChat:"wechat","Yandex Browser":"yandex",Roku:"roku"};t.BROWSER_MAP={amazon_silk:"Amazon Silk",android:"Android Browser",bada:"Bada",blackberry:"BlackBerry",chrome:"Chrome",chromium:"Chromium",electron:"Electron",epiphany:"Epiphany",firefox:"Firefox",focus:"Focus",generic:"Generic",googlebot:"Googlebot",google_search:"Google Search",ie:"Internet Explorer",k_meleon:"K-Meleon",maxthon:"Maxthon",edge:"Microsoft Edge",mz:"MZ Browser",naver:"NAVER Whale Browser",opera:"Opera",opera_coast:"Opera Coast",phantomjs:"PhantomJS",puffin:"Puffin",qupzilla:"QupZilla",qq:"QQ Browser",qqlite:"QQ Browser Lite",safari:"Safari",sailfish:"Sailfish",samsung_internet:"Samsung Internet for Android",seamonkey:"SeaMonkey",sleipnir:"Sleipnir",swing:"Swing",tizen:"Tizen",uc:"UC Browser",vivaldi:"Vivaldi",webos:"WebOS Browser",wechat:"WeChat",yandex:"Yandex Browser"};t.PLATFORMS_MAP={tablet:"tablet",mobile:"mobile",desktop:"desktop",tv:"tv"};t.OS_MAP={WindowsPhone:"Windows Phone",Windows:"Windows",MacOS:"macOS",iOS:"iOS",Android:"Android",WebOS:"WebOS",BlackBerry:"BlackBerry",Bada:"Bada",Tizen:"Tizen",Linux:"Linux",ChromeOS:"Chrome OS",PlayStation4:"PlayStation 4",Roku:"Roku"};t.ENGINE_MAP={EdgeHTML:"EdgeHTML",Blink:"Blink",Trident:"Trident",Presto:"Presto",Gecko:"Gecko",WebKit:"WebKit"};},90:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n);}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),"string"!=typeof e)throw new Error("UserAgent should be a string");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:"BROWSER_MAP",get:function(){return s.BROWSER_MAP}},{key:"ENGINE_MAP",get:function(){return s.ENGINE_MAP}},{key:"OS_MAP",get:function(){return s.OS_MAP}},{key:"PLATFORMS_MAP",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default;},91:function(e,t,r){t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||""===e)throw new Error("UserAgent parameter can't be empty");this._ua=e,this.parsedResult={},!0!==t&&this.parse();}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if("function"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error("Browser's test function is not valid")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if("function"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error("Browser's test function is not valid")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||"":t||""},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||"":t||""},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if("function"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error("Browser's test function is not valid")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if("function"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error("Browser's test function is not valid")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];"string"==typeof a?(i[t]=a,s+=1):"object"==typeof a&&(r[t]=a,n+=1);})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if("string"==typeof i)return ">"===e[0]||"<"===e[0]?(r=e.substr(1),"="===e[1]?(n=!0,r=e.substr(2)):t=[],">"===e[0]?t.push(1):t.push(-1)):"="===e[0]?r=e.substr(1):"~"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default;},92:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\/(\d+(\.?_?\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:"Googlebot"},r=i.default.getFirstMatch(/googlebot\/(\d+(\.\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:"Opera"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\/|opios/i],describe:function(e){var t={name:"Opera"},r=i.default.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:"Samsung Internet for Android"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:"NAVER Whale Browser"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:"MZ Browser"},r=i.default.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:"Focus"},r=i.default.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:"Swing"},r=i.default.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:"Opera Coast"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\/\d+(?:.?_?\d+)+/i],describe:function(e){var t={name:"Opera Touch"},r=i.default.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:"Yandex Browser"},r=i.default.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:"UC Browser"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:"Maxthon"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:"Epiphany"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:"Puffin"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:"Sleipnir"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:"K-Meleon"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:"WeChat"},r=i.default.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?"QQ Browser Lite":"QQ Browser"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:"Internet Explorer"},r=i.default.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\sedg\//i],describe:function(e){var t={name:"Microsoft Edge"},r=i.default.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:"Microsoft Edge"},r=i.default.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:"Vivaldi"},r=i.default.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:"SeaMonkey"},r=i.default.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:"Sailfish"},r=i.default.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:"Amazon Silk"},r=i.default.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:"PhantomJS"},r=i.default.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:"SlimerJS"},r=i.default.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe:function(e){var t={name:"BlackBerry"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:"WebOS Browser"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:"Bada"},r=i.default.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:"Tizen"},r=i.default.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:"QupZilla"},r=i.default.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:"Firefox"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:"Electron"},r=i.default.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:"Miui"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:"Chromium"},r=i.default.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:"Chrome"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:"Google Search"},r=i.default.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:"Android Browser"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:"PlayStation 4"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:"Safari"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search("\\(")?/^(.*)\/(.*)[ \t]\((.*)/:/^(.*)\/(.*) /;return {name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default;},93:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i,e);return {name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i,e);return {name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i,e),r=i.default.getWindowsVersionName(t);return {name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\/)(\d[\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i,e).replace(/[_\s]/g,"."),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i,e).replace(/[_\s]/g,".");return {name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i,e)||i.default.getFirstMatch(/\bbb(\d+)/i,e);return {name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\/(\d+(\.\d+)*)/i,e);return {name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i,e);return {name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return {name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return {name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i,e);return {name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default;},94:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return {type:"bot",vendor:"Google"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&"Nova",r={type:s.PLATFORMS_MAP.mobile,vendor:"Huawei"};return t&&(r.model=t),r}},{test:[/nexus\s*(?:7|8|9|10).*/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:"Nexus"}}},{test:[/ipad/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:"Apple",model:"iPad"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:"Apple",model:"iPad"}}},{test:[/kftt build/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:"Amazon",model:"Kindle Fire HD 7"}}},{test:[/silk/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet,vendor:"Amazon"}}},{test:[/tablet(?! pc)/i],describe:function(){return {type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return {type:s.PLATFORMS_MAP.mobile,vendor:"Apple",model:t}}},{test:[/nexus\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return {type:s.PLATFORMS_MAP.mobile,vendor:"Nexus"}}},{test:[/[^-]mobi/i],describe:function(){return {type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return "blackberry"===e.getBrowserName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.mobile,vendor:"BlackBerry"}}},{test:function(e){return "bada"===e.getBrowserName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return "windows phone"===e.getBrowserName()},describe:function(){return {type:s.PLATFORMS_MAP.mobile,vendor:"Microsoft"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(".")[0]);return "android"===e.getOSName(!0)&&t>=3},describe:function(){return {type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return "android"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return "macos"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.desktop,vendor:"Apple"}}},{test:function(e){return "windows"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return "linux"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return "playstation 4"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.tv}}},{test:function(e){return "roku"===e.getOSName(!0)},describe:function(){return {type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default;},95:function(e,t,r){t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return "microsoft edge"===e.getBrowserName(!0)},describe:function(e){if(/\sedg\//i.test(e))return {name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i,e);return {name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\/537\.36/i],describe:function(){return {name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default;}})}));
});

const bowser = /*@__PURE__*/getDefaultExportFromCjs(es5);

const defaultUserAgent$1 = ({ serviceId, clientVersion }) => async () => {
    const parsedUA = typeof window !== "undefined" && window?.navigator?.userAgent
        ? bowser.parse(window.navigator.userAgent)
        : undefined;
    const sections = [
        ["aws-sdk-js", clientVersion],
        ["ua", "2.0"],
        [`os/${parsedUA?.os?.name || "other"}`, parsedUA?.os?.version],
        ["lang/js"],
        ["md/browser", `${parsedUA?.browser?.name ?? "unknown"}_${parsedUA?.browser?.version ?? "unknown"}`],
    ];
    if (serviceId) {
        sections.push([`api/${serviceId}`, clientVersion]);
    }
    return sections;
};

const invalidProvider$1 = (message) => () => Promise.reject(message);

const calculateBodyLength$1 = (body) => {
    if (typeof body === "string") {
        let len = body.length;
        for (let i = len - 1; i >= 0; i--) {
            const code = body.charCodeAt(i);
            if (code > 0x7f && code <= 0x7ff)
                len++;
            else if (code > 0x7ff && code <= 0xffff)
                len += 2;
            if (code >= 0xdc00 && code <= 0xdfff)
                i--;
        }
        return len;
    }
    else if (typeof body.byteLength === "number") {
        return body.byteLength;
    }
    else if (typeof body.size === "number") {
        return body.size;
    }
    throw new Error(`Body Length computation failed for ${body}`);
};

const s$1 = "required", t = "fn", u = "argv", v = "ref";
const a$1 = true, b$1 = "isSet", c$1 = "booleanEquals", d$1 = "error", e$1 = "endpoint", f$1 = "tree", g$1 = "PartitionResult", h$1 = { [s$1]: false, "type": "String" }, i$1 = { [s$1]: true, "default": false, "type": "Boolean" }, j$1 = { [v]: "Endpoint" }, k$1 = { [t]: c$1, [u]: [{ [v]: "UseFIPS" }, true] }, l$1 = { [t]: c$1, [u]: [{ [v]: "UseDualStack" }, true] }, m$1 = {}, n$1 = { [t]: "getAttr", [u]: [{ [v]: g$1 }, "supportsFIPS"] }, o$1 = { [t]: c$1, [u]: [true, { [t]: "getAttr", [u]: [{ [v]: g$1 }, "supportsDualStack"] }] }, p$1 = [k$1], q$1 = [l$1], r$1 = [{ [v]: "Region" }];
const _data$1 = { version: "1.0", parameters: { Region: h$1, UseDualStack: i$1, UseFIPS: i$1, Endpoint: h$1 }, rules: [{ conditions: [{ [t]: b$1, [u]: [j$1] }], rules: [{ conditions: p$1, error: "Invalid Configuration: FIPS and custom endpoint are not supported", type: d$1 }, { conditions: q$1, error: "Invalid Configuration: Dualstack and custom endpoint are not supported", type: d$1 }, { endpoint: { url: j$1, properties: m$1, headers: m$1 }, type: e$1 }], type: f$1 }, { conditions: [{ [t]: b$1, [u]: r$1 }], rules: [{ conditions: [{ [t]: "aws.partition", [u]: r$1, assign: g$1 }], rules: [{ conditions: [k$1, l$1], rules: [{ conditions: [{ [t]: c$1, [u]: [a$1, n$1] }, o$1], rules: [{ endpoint: { url: "https://iotsitewise-fips.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: m$1, headers: m$1 }, type: e$1 }], type: f$1 }, { error: "FIPS and DualStack are enabled, but this partition does not support one or both", type: d$1 }], type: f$1 }, { conditions: p$1, rules: [{ conditions: [{ [t]: c$1, [u]: [n$1, a$1] }], rules: [{ endpoint: { url: "https://iotsitewise-fips.{Region}.{PartitionResult#dnsSuffix}", properties: m$1, headers: m$1 }, type: e$1 }], type: f$1 }, { error: "FIPS is enabled but this partition does not support FIPS", type: d$1 }], type: f$1 }, { conditions: q$1, rules: [{ conditions: [o$1], rules: [{ endpoint: { url: "https://iotsitewise.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: m$1, headers: m$1 }, type: e$1 }], type: f$1 }, { error: "DualStack is enabled but this partition does not support DualStack", type: d$1 }], type: f$1 }, { endpoint: { url: "https://iotsitewise.{Region}.{PartitionResult#dnsSuffix}", properties: m$1, headers: m$1 }, type: e$1 }], type: f$1 }], type: f$1 }, { error: "Invalid Configuration: Missing Region", type: d$1 }] };
const ruleSet$1 = _data$1;

const defaultEndpointResolver$1 = (endpointParams, context = {}) => {
    return resolveEndpoint$1(ruleSet$1, {
        endpointParams: endpointParams,
        logger: context.logger,
    });
};

const getRuntimeConfig$3 = (config) => {
    return {
        apiVersion: "2019-12-02",
        base64Decoder: config?.base64Decoder ?? fromBase64$1,
        base64Encoder: config?.base64Encoder ?? toBase64$1,
        disableHostPrefix: config?.disableHostPrefix ?? false,
        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver$1,
        extensions: config?.extensions ?? [],
        logger: config?.logger ?? new NoOpLogger$1(),
        serviceId: config?.serviceId ?? "IoTSiteWise",
        urlParser: config?.urlParser ?? parseUrl$1,
        utf8Decoder: config?.utf8Decoder ?? fromUtf8$4,
        utf8Encoder: config?.utf8Encoder ?? toUtf8$4,
    };
};

const DEFAULTS_MODE_OPTIONS$1 = ["in-region", "cross-region", "mobile", "standard", "legacy"];

const resolveDefaultsModeConfig$1 = ({ defaultsMode, } = {}) => memoize$1(async () => {
    const mode = typeof defaultsMode === "function" ? await defaultsMode() : defaultsMode;
    switch (mode?.toLowerCase()) {
        case "auto":
            return Promise.resolve(isMobileBrowser$1() ? "mobile" : "standard");
        case "mobile":
        case "in-region":
        case "cross-region":
        case "standard":
        case "legacy":
            return Promise.resolve(mode?.toLocaleLowerCase());
        case undefined:
            return Promise.resolve("legacy");
        default:
            throw new Error(`Invalid parameter for "defaultsMode", expect ${DEFAULTS_MODE_OPTIONS$1.join(", ")}, got ${mode}`);
    }
});
const isMobileBrowser$1 = () => {
    const parsedUA = typeof window !== "undefined" && window?.navigator?.userAgent
        ? bowser.parse(window.navigator.userAgent)
        : undefined;
    const platform = parsedUA?.platform?.type;
    return platform === "tablet" || platform === "mobile";
};

const getRuntimeConfig$2 = (config) => {
    const defaultsMode = resolveDefaultsModeConfig$1(config);
    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode$1);
    const clientSharedValues = getRuntimeConfig$3(config);
    return {
        ...clientSharedValues,
        ...config,
        runtime: "browser",
        defaultsMode,
        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength$1,
        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error("Credential is missing"))),
        defaultUserAgentProvider: config?.defaultUserAgentProvider ??
            defaultUserAgent$1({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo$1.version }),
        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS$1,
        region: config?.region ?? invalidProvider$1("Region is missing"),
        requestHandler: config?.requestHandler ?? new FetchHttpHandler$1(defaultConfigProvider),
        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE$1),
        sha256: config?.sha256 ?? build.Sha256,
        streamCollector: config?.streamCollector ?? streamCollector$1,
        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT$1)),
        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT$1)),
    };
};

const getAwsRegionExtensionConfiguration = (runtimeConfig) => {
    let runtimeConfigRegion = async () => {
        if (runtimeConfig.region === undefined) {
            throw new Error("Region is missing from runtimeConfig");
        }
        const region = runtimeConfig.region;
        if (typeof region === "string") {
            return region;
        }
        return region();
    };
    return {
        setRegion(region) {
            runtimeConfigRegion = region;
        },
        region() {
            return runtimeConfigRegion;
        },
    };
};
const resolveAwsRegionExtensionConfiguration = (awsRegionExtensionConfiguration) => {
    return {
        region: awsRegionExtensionConfiguration.region(),
    };
};

const asPartial = (t) => t;
const resolveRuntimeExtensions = (runtimeConfig, extensions) => {
    const extensionConfiguration = {
        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),
        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),
        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),
    };
    extensions.forEach((extension) => extension.configure(extensionConfiguration));
    return {
        ...runtimeConfig,
        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),
        ...resolveDefaultRuntimeConfig(extensionConfiguration),
        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),
    };
};

class IoTSiteWiseClient extends Client$1 {
    constructor(...[configuration]) {
        const _config_0 = getRuntimeConfig$2(configuration || {});
        const _config_1 = resolveClientEndpointParameters$1(_config_0);
        const _config_2 = resolveRegionConfig$1(_config_1);
        const _config_3 = resolveEndpointConfig$1(_config_2);
        const _config_4 = resolveRetryConfig$1(_config_3);
        const _config_5 = resolveHostHeaderConfig$1(_config_4);
        const _config_6 = resolveAwsAuthConfig$1(_config_5);
        const _config_7 = resolveUserAgentConfig$1(_config_6);
        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
        super(_config_8);
        this.config = _config_8;
        this.middlewareStack.use(getRetryPlugin$1(this.config));
        this.middlewareStack.use(getContentLengthPlugin$1(this.config));
        this.middlewareStack.use(getHostHeaderPlugin$1(this.config));
        this.middlewareStack.use(getLoggerPlugin$1());
        this.middlewareStack.use(getRecursionDetectionPlugin$1(this.config));
        this.middlewareStack.use(getAwsAuthPlugin$1(this.config));
        this.middlewareStack.use(getUserAgentPlugin$1(this.config));
    }
    destroy() {
        super.destroy();
    }
}

class BatchGetAssetPropertyAggregatesCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, BatchGetAssetPropertyAggregatesCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "BatchGetAssetPropertyAggregatesCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "BatchGetAssetPropertyAggregates",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_BatchGetAssetPropertyAggregatesCommand(input, context);
    }
    deserialize(output, context) {
        return de_BatchGetAssetPropertyAggregatesCommand(output, context);
    }
}

class BatchGetAssetPropertyValueCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, BatchGetAssetPropertyValueCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "BatchGetAssetPropertyValueCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "BatchGetAssetPropertyValue",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_BatchGetAssetPropertyValueCommand(input, context);
    }
    deserialize(output, context) {
        return de_BatchGetAssetPropertyValueCommand(output, context);
    }
}

class BatchGetAssetPropertyValueHistoryCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, BatchGetAssetPropertyValueHistoryCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "BatchGetAssetPropertyValueHistoryCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "BatchGetAssetPropertyValueHistory",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_BatchGetAssetPropertyValueHistoryCommand(input, context);
    }
    deserialize(output, context) {
        return de_BatchGetAssetPropertyValueHistoryCommand(output, context);
    }
}

class DescribeAssetModelCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, DescribeAssetModelCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "DescribeAssetModelCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "DescribeAssetModel",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_DescribeAssetModelCommand(input, context);
    }
    deserialize(output, context) {
        return de_DescribeAssetModelCommand(output, context);
    }
}

class GetAssetPropertyAggregatesCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, GetAssetPropertyAggregatesCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "GetAssetPropertyAggregatesCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "GetAssetPropertyAggregates",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_GetAssetPropertyAggregatesCommand(input, context);
    }
    deserialize(output, context) {
        return de_GetAssetPropertyAggregatesCommand(output, context);
    }
}

class GetAssetPropertyValueCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, GetAssetPropertyValueCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "GetAssetPropertyValueCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "GetAssetPropertyValue",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_GetAssetPropertyValueCommand(input, context);
    }
    deserialize(output, context) {
        return de_GetAssetPropertyValueCommand(output, context);
    }
}

class GetAssetPropertyValueHistoryCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, GetAssetPropertyValueHistoryCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "GetAssetPropertyValueHistoryCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "GetAssetPropertyValueHistory",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_GetAssetPropertyValueHistoryCommand(input, context);
    }
    deserialize(output, context) {
        return de_GetAssetPropertyValueHistoryCommand(output, context);
    }
}

class ListAssetsCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, ListAssetsCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "ListAssetsCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "ListAssets",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_ListAssetsCommand(input, context);
    }
    deserialize(output, context) {
        return de_ListAssetsCommand(output, context);
    }
}

class ListAssociatedAssetsCommand extends Command$1 {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin$1(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin$1(configuration, ListAssociatedAssetsCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTSiteWiseClient";
        const commandName = "ListAssociatedAssetsCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
            [SMITHY_CONTEXT_KEY]: {
                service: "AWSIoTSiteWise",
                operation: "ListAssociatedAssets",
            },
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_ListAssociatedAssetsCommand(input, context);
    }
    deserialize(output, context) {
        return de_ListAssociatedAssetsCommand(output, context);
    }
}

var SelectorType;
(function (SelectorType) {
    SelectorType["ENV"] = "env";
    SelectorType["CONFIG"] = "shared config entry";
})(SelectorType || (SelectorType = {}));

const DEFAULT_USE_DUALSTACK_ENDPOINT = false;

const DEFAULT_USE_FIPS_ENDPOINT = false;

const normalizeProvider = (input) => {
    if (typeof input === "function")
        return input;
    const promisified = Promise.resolve(input);
    return () => promisified;
};

const isFipsRegion = (region) => typeof region === "string" && (region.startsWith("fips-") || region.endsWith("-fips"));

const getRealRegion = (region) => isFipsRegion(region)
    ? ["fips-aws-global", "aws-fips"].includes(region)
        ? "us-east-1"
        : region.replace(/fips-(dkr-|prod-)?|-fips/, "")
    : region;

const resolveRegionConfig = (input) => {
    const { region, useFipsEndpoint } = input;
    if (!region) {
        throw new Error("Region is missing");
    }
    return {
        ...input,
        region: async () => {
            if (typeof region === "string") {
                return getRealRegion(region);
            }
            const providedRegion = await region();
            return getRealRegion(providedRegion);
        },
        useFipsEndpoint: async () => {
            const providedRegion = typeof region === "string" ? region : await region();
            if (isFipsRegion(providedRegion)) {
                return true;
            }
            return typeof useFipsEndpoint !== "function" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();
        },
    };
};

var FieldPosition$1;
(function (FieldPosition) {
    FieldPosition[FieldPosition["HEADER"] = 0] = "HEADER";
    FieldPosition[FieldPosition["TRAILER"] = 1] = "TRAILER";
})(FieldPosition$1 || (FieldPosition$1 = {}));

class HttpRequest$1 {
    constructor(options) {
        this.method = options.method || "GET";
        this.hostname = options.hostname || "localhost";
        this.port = options.port;
        this.query = options.query || {};
        this.headers = options.headers || {};
        this.body = options.body;
        this.protocol = options.protocol
            ? options.protocol.slice(-1) !== ":"
                ? `${options.protocol}:`
                : options.protocol
            : "https:";
        this.path = options.path ? (options.path.charAt(0) !== "/" ? `/${options.path}` : options.path) : "/";
        this.username = options.username;
        this.password = options.password;
        this.fragment = options.fragment;
    }
    static isInstance(request) {
        if (!request)
            return false;
        const req = request;
        return ("method" in req &&
            "protocol" in req &&
            "hostname" in req &&
            "path" in req &&
            typeof req["query"] === "object" &&
            typeof req["headers"] === "object");
    }
    clone() {
        const cloned = new HttpRequest$1({
            ...this,
            headers: { ...this.headers },
        });
        if (cloned.query)
            cloned.query = cloneQuery$2(cloned.query);
        return cloned;
    }
}
function cloneQuery$2(query) {
    return Object.keys(query).reduce((carry, paramName) => {
        const param = query[paramName];
        return {
            ...carry,
            [paramName]: Array.isArray(param) ? [...param] : param,
        };
    }, {});
}

class HttpResponse {
    constructor(options) {
        this.statusCode = options.statusCode;
        this.reason = options.reason;
        this.headers = options.headers || {};
        this.body = options.body;
    }
    static isInstance(response) {
        if (!response)
            return false;
        const resp = response;
        return typeof resp.statusCode === "number" && typeof resp.headers === "object";
    }
}

const CONTENT_LENGTH_HEADER = "content-length";
function contentLengthMiddleware(bodyLengthChecker) {
    return (next) => async (args) => {
        const request = args.request;
        if (HttpRequest$1.isInstance(request)) {
            const { body, headers } = request;
            if (body &&
                Object.keys(headers)
                    .map((str) => str.toLowerCase())
                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {
                try {
                    const length = bodyLengthChecker(body);
                    request.headers = {
                        ...request.headers,
                        [CONTENT_LENGTH_HEADER]: String(length),
                    };
                }
                catch (error) {
                }
            }
        }
        return next({
            ...args,
            request,
        });
    };
}
const contentLengthMiddlewareOptions = {
    step: "build",
    tags: ["SET_CONTENT_LENGTH", "CONTENT_LENGTH"],
    name: "contentLengthMiddleware",
    override: true,
};
const getContentLengthPlugin = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);
    },
});

const resolveParamsForS3 = async (endpointParams) => {
    const bucket = endpointParams?.Bucket || "";
    if (typeof endpointParams.Bucket === "string") {
        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent("#")).replace(/\?/g, encodeURIComponent("?"));
    }
    if (isArnBucketName(bucket)) {
        if (endpointParams.ForcePathStyle === true) {
            throw new Error("Path-style addressing cannot be used with ARN buckets");
        }
    }
    else if (!isDnsCompatibleBucketName(bucket) ||
        (bucket.indexOf(".") !== -1 && !String(endpointParams.Endpoint).startsWith("http:")) ||
        bucket.toLowerCase() !== bucket ||
        bucket.length < 3) {
        endpointParams.ForcePathStyle = true;
    }
    if (endpointParams.DisableMultiRegionAccessPoints) {
        endpointParams.disableMultiRegionAccessPoints = true;
        endpointParams.DisableMRAP = true;
    }
    return endpointParams;
};
const DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/;
const IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
const DOTS_PATTERN = /\.\./;
const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);
const isArnBucketName = (bucketName) => {
    const [arn, partition, service, region, account, typeOrId] = bucketName.split(":");
    const isArn = arn === "arn" && bucketName.split(":").length >= 6;
    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;
    if (isArn && !isValidArn) {
        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);
    }
    return arn === "arn" && !!partition && !!service && !!account && !!typeOrId;
};

const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {
    const configProvider = async () => {
        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];
        if (typeof configValue === "function") {
            return configValue();
        }
        return configValue;
    };
    if (configKey === "endpoint" || canonicalEndpointParamKey === "endpoint") {
        return async () => {
            const endpoint = await configProvider();
            if (endpoint && typeof endpoint === "object") {
                if ("url" in endpoint) {
                    return endpoint.url.href;
                }
                if ("hostname" in endpoint) {
                    const { protocol, hostname, port, path } = endpoint;
                    return `${protocol}//${hostname}${port ? ":" + port : ""}${path}`;
                }
            }
            return endpoint;
        };
    }
    return configProvider;
};

const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {
    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);
    if (typeof clientConfig.endpointProvider !== "function") {
        throw new Error("config.endpointProvider is not set.");
    }
    const endpoint = clientConfig.endpointProvider(endpointParams, context);
    return endpoint;
};
const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {
    const endpointParams = {};
    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};
    for (const [name, instruction] of Object.entries(instructions)) {
        switch (instruction.type) {
            case "staticContextParams":
                endpointParams[name] = instruction.value;
                break;
            case "contextParams":
                endpointParams[name] = commandInput[instruction.name];
                break;
            case "clientContextParams":
            case "builtInParams":
                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();
                break;
            default:
                throw new Error("Unrecognized endpoint parameter instruction: " + JSON.stringify(instruction));
        }
    }
    if (Object.keys(instructions).length === 0) {
        Object.assign(endpointParams, clientConfig);
    }
    if (String(clientConfig.serviceId).toLowerCase() === "s3") {
        await resolveParamsForS3(endpointParams);
    }
    return endpointParams;
};

function parseQueryString(querystring) {
    const query = {};
    querystring = querystring.replace(/^\?/, "");
    if (querystring) {
        for (const pair of querystring.split("&")) {
            let [key, value = null] = pair.split("=");
            key = decodeURIComponent(key);
            if (value) {
                value = decodeURIComponent(value);
            }
            if (!(key in query)) {
                query[key] = value;
            }
            else if (Array.isArray(query[key])) {
                query[key].push(value);
            }
            else {
                query[key] = [query[key], value];
            }
        }
    }
    return query;
}

const parseUrl = (url) => {
    if (typeof url === "string") {
        return parseUrl(new URL(url));
    }
    const { hostname, pathname, port, protocol, search } = url;
    let query;
    if (search) {
        query = parseQueryString(search);
    }
    return {
        hostname,
        port: port ? parseInt(port) : undefined,
        protocol,
        path: pathname,
        query,
    };
};

const toEndpointV1 = (endpoint) => {
    if (typeof endpoint === "object") {
        if ("url" in endpoint) {
            return parseUrl(endpoint.url);
        }
        return endpoint;
    }
    return parseUrl(endpoint);
};

const endpointMiddleware = ({ config, instructions, }) => {
    return (next, context) => async (args) => {
        const endpoint = await getEndpointFromInstructions(args.input, {
            getEndpointParameterInstructions() {
                return instructions;
            },
        }, { ...config }, context);
        context.endpointV2 = endpoint;
        context.authSchemes = endpoint.properties?.authSchemes;
        const authScheme = context.authSchemes?.[0];
        if (authScheme) {
            context["signing_region"] = authScheme.signingRegion;
            context["signing_service"] = authScheme.signingName;
        }
        return next({
            ...args,
        });
    };
};

const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {
    const { response } = await next(args);
    try {
        const parsed = await deserializer(response, options);
        return {
            response,
            output: parsed,
        };
    }
    catch (error) {
        Object.defineProperty(error, "$response", {
            value: response,
        });
        if (!('$metadata' in error)) {
            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;
            error.message += "\n  " + hint;
        }
        throw error;
    }
};

const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {
    const endpoint = context.endpointV2?.url && options.urlParser
        ? async () => options.urlParser(context.endpointV2.url)
        : options.endpoint;
    if (!endpoint) {
        throw new Error("No valid endpoint provider available.");
    }
    const request = await serializer(args.input, { ...options, endpoint });
    return next({
        ...args,
        request,
    });
};

const deserializerMiddlewareOption = {
    name: "deserializerMiddleware",
    step: "deserialize",
    tags: ["DESERIALIZER"],
    override: true,
};
const serializerMiddlewareOption = {
    name: "serializerMiddleware",
    step: "serialize",
    tags: ["SERIALIZER"],
    override: true,
};
function getSerdePlugin(config, serializer, deserializer) {
    return {
        applyToStack: (commandStack) => {
            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);
            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);
        },
    };
}

const endpointMiddlewareOptions = {
    step: "serialize",
    tags: ["ENDPOINT_PARAMETERS", "ENDPOINT_V2", "ENDPOINT"],
    name: "endpointV2Middleware",
    override: true,
    relation: "before",
    toMiddleware: serializerMiddlewareOption.name,
};
const getEndpointPlugin = (config, instructions) => ({
    applyToStack: (clientStack) => {
        clientStack.addRelativeTo(endpointMiddleware({
            config,
            instructions,
        }), endpointMiddlewareOptions);
    },
});

const resolveEndpointConfig = (input) => {
    const tls = input.tls ?? true;
    const { endpoint } = input;
    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;
    const isCustomEndpoint = !!endpoint;
    return {
        ...input,
        endpoint: customEndpointProvider,
        tls,
        isCustomEndpoint,
        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),
        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),
    };
};

function resolveHostHeaderConfig(input) {
    return input;
}
const hostHeaderMiddleware = (options) => (next) => async (args) => {
    if (!HttpRequest$1.isInstance(args.request))
        return next(args);
    const { request } = args;
    const { handlerProtocol = "" } = options.requestHandler.metadata || {};
    if (handlerProtocol.indexOf("h2") >= 0 && !request.headers[":authority"]) {
        delete request.headers["host"];
        request.headers[":authority"] = "";
    }
    else if (!request.headers["host"]) {
        let host = request.hostname;
        if (request.port != null)
            host += `:${request.port}`;
        request.headers["host"] = host;
    }
    return next(args);
};
const hostHeaderMiddlewareOptions = {
    name: "hostHeaderMiddleware",
    step: "build",
    priority: "low",
    tags: ["HOST"],
    override: true,
};
const getHostHeaderPlugin = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);
    },
});

const loggerMiddleware = () => (next, context) => async (args) => {
    try {
        const response = await next(args);
        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;
        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;
        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;
        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;
        const { $metadata, ...outputWithoutMetadata } = response.output;
        logger?.info?.({
            clientName,
            commandName,
            input: inputFilterSensitiveLog(args.input),
            output: outputFilterSensitiveLog(outputWithoutMetadata),
            metadata: $metadata,
        });
        return response;
    }
    catch (error) {
        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;
        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;
        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;
        logger?.error?.({
            clientName,
            commandName,
            input: inputFilterSensitiveLog(args.input),
            error,
            metadata: error.$metadata,
        });
        throw error;
    }
};
const loggerMiddlewareOptions = {
    name: "loggerMiddleware",
    tags: ["LOGGER"],
    step: "initialize",
    override: true,
};
const getLoggerPlugin = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);
    },
});

const TRACE_ID_HEADER_NAME = "X-Amzn-Trace-Id";
const ENV_LAMBDA_FUNCTION_NAME = "AWS_LAMBDA_FUNCTION_NAME";
const ENV_TRACE_ID = "_X_AMZN_TRACE_ID";
const recursionDetectionMiddleware = (options) => (next) => async (args) => {
    const { request } = args;
    if (!HttpRequest$1.isInstance(request) ||
        options.runtime !== "node" ||
        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {
        return next(args);
    }
    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];
    const traceId = process.env[ENV_TRACE_ID];
    const nonEmptyString = (str) => typeof str === "string" && str.length > 0;
    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {
        request.headers[TRACE_ID_HEADER_NAME] = traceId;
    }
    return next({
        ...args,
        request,
    });
};
const addRecursionDetectionMiddlewareOptions = {
    step: "build",
    tags: ["RECURSION_DETECTION"],
    name: "recursionDetectionMiddleware",
    override: true,
    priority: "low",
};
const getRecursionDetectionPlugin = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);
    },
});

var RETRY_MODES;
(function (RETRY_MODES) {
    RETRY_MODES["STANDARD"] = "standard";
    RETRY_MODES["ADAPTIVE"] = "adaptive";
})(RETRY_MODES || (RETRY_MODES = {}));
const DEFAULT_MAX_ATTEMPTS = 3;
const DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;

const THROTTLING_ERROR_CODES = [
    "BandwidthLimitExceeded",
    "EC2ThrottledException",
    "LimitExceededException",
    "PriorRequestNotComplete",
    "ProvisionedThroughputExceededException",
    "RequestLimitExceeded",
    "RequestThrottled",
    "RequestThrottledException",
    "SlowDown",
    "ThrottledException",
    "Throttling",
    "ThrottlingException",
    "TooManyRequestsException",
    "TransactionInProgressException",
];
const TRANSIENT_ERROR_CODES = ["AbortError", "TimeoutError", "RequestTimeout", "RequestTimeoutException"];
const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];
const NODEJS_TIMEOUT_ERROR_CODES = ["ECONNRESET", "ECONNREFUSED", "EPIPE", "ETIMEDOUT"];

const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||
    THROTTLING_ERROR_CODES.includes(error.name) ||
    error.$retryable?.throttling == true;
const isTransientError = (error) => TRANSIENT_ERROR_CODES.includes(error.name) ||
    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || "") ||
    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);
const isServerError = (error) => {
    if (error.$metadata?.httpStatusCode !== undefined) {
        const statusCode = error.$metadata.httpStatusCode;
        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {
            return true;
        }
        return false;
    }
    return false;
};

class DefaultRateLimiter {
    constructor(options) {
        this.currentCapacity = 0;
        this.enabled = false;
        this.lastMaxRate = 0;
        this.measuredTxRate = 0;
        this.requestCount = 0;
        this.lastTimestamp = 0;
        this.timeWindow = 0;
        this.beta = options?.beta ?? 0.7;
        this.minCapacity = options?.minCapacity ?? 1;
        this.minFillRate = options?.minFillRate ?? 0.5;
        this.scaleConstant = options?.scaleConstant ?? 0.4;
        this.smooth = options?.smooth ?? 0.8;
        const currentTimeInSeconds = this.getCurrentTimeInSeconds();
        this.lastThrottleTime = currentTimeInSeconds;
        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());
        this.fillRate = this.minFillRate;
        this.maxCapacity = this.minCapacity;
    }
    getCurrentTimeInSeconds() {
        return Date.now() / 1000;
    }
    async getSendToken() {
        return this.acquireTokenBucket(1);
    }
    async acquireTokenBucket(amount) {
        if (!this.enabled) {
            return;
        }
        this.refillTokenBucket();
        if (amount > this.currentCapacity) {
            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;
            await new Promise((resolve) => setTimeout(resolve, delay));
        }
        this.currentCapacity = this.currentCapacity - amount;
    }
    refillTokenBucket() {
        const timestamp = this.getCurrentTimeInSeconds();
        if (!this.lastTimestamp) {
            this.lastTimestamp = timestamp;
            return;
        }
        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;
        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);
        this.lastTimestamp = timestamp;
    }
    updateClientSendingRate(response) {
        let calculatedRate;
        this.updateMeasuredRate();
        if (isThrottlingError(response)) {
            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);
            this.lastMaxRate = rateToUse;
            this.calculateTimeWindow();
            this.lastThrottleTime = this.getCurrentTimeInSeconds();
            calculatedRate = this.cubicThrottle(rateToUse);
            this.enableTokenBucket();
        }
        else {
            this.calculateTimeWindow();
            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());
        }
        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);
        this.updateTokenBucketRate(newRate);
    }
    calculateTimeWindow() {
        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));
    }
    cubicThrottle(rateToUse) {
        return this.getPrecise(rateToUse * this.beta);
    }
    cubicSuccess(timestamp) {
        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);
    }
    enableTokenBucket() {
        this.enabled = true;
    }
    updateTokenBucketRate(newRate) {
        this.refillTokenBucket();
        this.fillRate = Math.max(newRate, this.minFillRate);
        this.maxCapacity = Math.max(newRate, this.minCapacity);
        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);
    }
    updateMeasuredRate() {
        const t = this.getCurrentTimeInSeconds();
        const timeBucket = Math.floor(t * 2) / 2;
        this.requestCount++;
        if (timeBucket > this.lastTxRateBucket) {
            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);
            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));
            this.requestCount = 0;
            this.lastTxRateBucket = timeBucket;
        }
    }
    getPrecise(num) {
        return parseFloat(num.toFixed(8));
    }
}

const DEFAULT_RETRY_DELAY_BASE = 100;
const MAXIMUM_RETRY_DELAY = 20 * 1000;
const THROTTLING_RETRY_DELAY_BASE = 500;
const INITIAL_RETRY_TOKENS = 500;
const RETRY_COST = 5;
const TIMEOUT_RETRY_COST = 10;
const NO_RETRY_INCREMENT = 1;
const INVOCATION_ID_HEADER = "amz-sdk-invocation-id";
const REQUEST_HEADER = "amz-sdk-request";

const getDefaultRetryBackoffStrategy = () => {
    let delayBase = DEFAULT_RETRY_DELAY_BASE;
    const computeNextBackoffDelay = (attempts) => {
        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));
    };
    const setDelayBase = (delay) => {
        delayBase = delay;
    };
    return {
        computeNextBackoffDelay,
        setDelayBase,
    };
};

const createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {
    const getRetryCount = () => retryCount;
    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);
    const getRetryCost = () => retryCost;
    return {
        getRetryCount,
        getRetryDelay,
        getRetryCost,
    };
};

class StandardRetryStrategy {
    constructor(maxAttempts) {
        this.maxAttempts = maxAttempts;
        this.mode = RETRY_MODES.STANDARD;
        this.capacity = INITIAL_RETRY_TOKENS;
        this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();
        this.maxAttemptsProvider = typeof maxAttempts === "function" ? maxAttempts : async () => maxAttempts;
    }
    async acquireInitialRetryToken(retryTokenScope) {
        return createDefaultRetryToken({
            retryDelay: DEFAULT_RETRY_DELAY_BASE,
            retryCount: 0,
        });
    }
    async refreshRetryTokenForRetry(token, errorInfo) {
        const maxAttempts = await this.getMaxAttempts();
        if (this.shouldRetry(token, errorInfo, maxAttempts)) {
            const errorType = errorInfo.errorType;
            this.retryBackoffStrategy.setDelayBase(errorType === "THROTTLING" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);
            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());
            const retryDelay = errorInfo.retryAfterHint
                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)
                : delayFromErrorType;
            const capacityCost = this.getCapacityCost(errorType);
            this.capacity -= capacityCost;
            return createDefaultRetryToken({
                retryDelay,
                retryCount: token.getRetryCount() + 1,
                retryCost: capacityCost,
            });
        }
        throw new Error("No retry token available");
    }
    recordSuccess(token) {
        this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));
    }
    getCapacity() {
        return this.capacity;
    }
    async getMaxAttempts() {
        try {
            return await this.maxAttemptsProvider();
        }
        catch (error) {
            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);
            return DEFAULT_MAX_ATTEMPTS;
        }
    }
    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {
        const attempts = tokenToRenew.getRetryCount();
        return (attempts < maxAttempts &&
            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&
            this.isRetryableError(errorInfo.errorType));
    }
    getCapacityCost(errorType) {
        return errorType === "TRANSIENT" ? TIMEOUT_RETRY_COST : RETRY_COST;
    }
    isRetryableError(errorType) {
        return errorType === "THROTTLING" || errorType === "TRANSIENT";
    }
}

class AdaptiveRetryStrategy {
    constructor(maxAttemptsProvider, options) {
        this.maxAttemptsProvider = maxAttemptsProvider;
        this.mode = RETRY_MODES.ADAPTIVE;
        const { rateLimiter } = options ?? {};
        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();
        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);
    }
    async acquireInitialRetryToken(retryTokenScope) {
        await this.rateLimiter.getSendToken();
        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);
    }
    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {
        this.rateLimiter.updateClientSendingRate(errorInfo);
        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);
    }
    recordSuccess(token) {
        this.rateLimiter.updateClientSendingRate({});
        this.standardRetryStrategy.recordSuccess(token);
    }
}

const asSdkError = (error) => {
    if (error instanceof Error)
        return error;
    if (error instanceof Object)
        return Object.assign(new Error(), error);
    if (typeof error === "string")
        return new Error(error);
    return new Error(`AWS SDK error wrapper for ${error}`);
};

const resolveRetryConfig = (input) => {
    const { retryStrategy } = input;
    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);
    return {
        ...input,
        maxAttempts,
        retryStrategy: async () => {
            if (retryStrategy) {
                return retryStrategy;
            }
            const retryMode = await normalizeProvider(input.retryMode)();
            if (retryMode === RETRY_MODES.ADAPTIVE) {
                return new AdaptiveRetryStrategy(maxAttempts);
            }
            return new StandardRetryStrategy(maxAttempts);
        },
    };
};

const retryMiddleware = (options) => (next, context) => async (args) => {
    let retryStrategy = await options.retryStrategy();
    const maxAttempts = await options.maxAttempts();
    if (isRetryStrategyV2(retryStrategy)) {
        retryStrategy = retryStrategy;
        let retryToken = await retryStrategy.acquireInitialRetryToken(context["partition_id"]);
        let lastError = new Error();
        let attempts = 0;
        let totalRetryDelay = 0;
        const { request } = args;
        if (HttpRequest$1.isInstance(request)) {
            request.headers[INVOCATION_ID_HEADER] = v4$1();
        }
        while (true) {
            try {
                if (HttpRequest$1.isInstance(request)) {
                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;
                }
                const { response, output } = await next(args);
                retryStrategy.recordSuccess(retryToken);
                output.$metadata.attempts = attempts + 1;
                output.$metadata.totalRetryDelay = totalRetryDelay;
                return { response, output };
            }
            catch (e) {
                const retryErrorInfo = getRetryErrorInfo(e);
                lastError = asSdkError(e);
                try {
                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);
                }
                catch (refreshError) {
                    if (!lastError.$metadata) {
                        lastError.$metadata = {};
                    }
                    lastError.$metadata.attempts = attempts + 1;
                    lastError.$metadata.totalRetryDelay = totalRetryDelay;
                    throw lastError;
                }
                attempts = retryToken.getRetryCount();
                const delay = retryToken.getRetryDelay();
                totalRetryDelay += delay;
                await new Promise((resolve) => setTimeout(resolve, delay));
            }
        }
    }
    else {
        retryStrategy = retryStrategy;
        if (retryStrategy?.mode)
            context.userAgent = [...(context.userAgent || []), ["cfg/retry-mode", retryStrategy.mode]];
        return retryStrategy.retry(next, args);
    }
};
const isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== "undefined" &&
    typeof retryStrategy.refreshRetryTokenForRetry !== "undefined" &&
    typeof retryStrategy.recordSuccess !== "undefined";
const getRetryErrorInfo = (error) => {
    const errorInfo = {
        errorType: getRetryErrorType(error),
    };
    const retryAfterHint = getRetryAfterHint(error.$response);
    if (retryAfterHint) {
        errorInfo.retryAfterHint = retryAfterHint;
    }
    return errorInfo;
};
const getRetryErrorType = (error) => {
    if (isThrottlingError(error))
        return "THROTTLING";
    if (isTransientError(error))
        return "TRANSIENT";
    if (isServerError(error))
        return "SERVER_ERROR";
    return "CLIENT_ERROR";
};
const retryMiddlewareOptions = {
    name: "retryMiddleware",
    tags: ["RETRY"],
    step: "finalizeRequest",
    priority: "high",
    override: true,
};
const getRetryPlugin = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);
    },
});
const getRetryAfterHint = (response) => {
    if (!HttpResponse.isInstance(response))
        return;
    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === "retry-after");
    if (!retryAfterHeaderName)
        return;
    const retryAfter = response.headers[retryAfterHeaderName];
    const retryAfterSeconds = Number(retryAfter);
    if (!Number.isNaN(retryAfterSeconds))
        return new Date(retryAfterSeconds * 1000);
    const retryAfterDate = new Date(retryAfter);
    return retryAfterDate;
};

const memoize = (provider, isExpired, requiresRefresh) => {
    let resolved;
    let pending;
    let hasResult;
    let isConstant = false;
    const coalesceProvider = async () => {
        if (!pending) {
            pending = provider();
        }
        try {
            resolved = await pending;
            hasResult = true;
            isConstant = false;
        }
        finally {
            pending = undefined;
        }
        return resolved;
    };
    if (isExpired === undefined) {
        return async (options) => {
            if (!hasResult || options?.forceRefresh) {
                resolved = await coalesceProvider();
            }
            return resolved;
        };
    }
    return async (options) => {
        if (!hasResult || options?.forceRefresh) {
            resolved = await coalesceProvider();
        }
        if (isConstant) {
            return resolved;
        }
        if (requiresRefresh && !requiresRefresh(resolved)) {
            isConstant = true;
            return resolved;
        }
        if (isExpired(resolved)) {
            await coalesceProvider();
            return resolved;
        }
        return resolved;
    };
};

const SHORT_TO_HEX = {};
const HEX_TO_SHORT = {};
for (let i = 0; i < 256; i++) {
    let encodedByte = i.toString(16).toLowerCase();
    if (encodedByte.length === 1) {
        encodedByte = `0${encodedByte}`;
    }
    SHORT_TO_HEX[i] = encodedByte;
    HEX_TO_SHORT[encodedByte] = i;
}
function fromHex(encoded) {
    if (encoded.length % 2 !== 0) {
        throw new Error("Hex encoded strings must have an even number length");
    }
    const out = new Uint8Array(encoded.length / 2);
    for (let i = 0; i < encoded.length; i += 2) {
        const encodedByte = encoded.slice(i, i + 2).toLowerCase();
        if (encodedByte in HEX_TO_SHORT) {
            out[i / 2] = HEX_TO_SHORT[encodedByte];
        }
        else {
            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);
        }
    }
    return out;
}
function toHex(bytes) {
    let out = "";
    for (let i = 0; i < bytes.byteLength; i++) {
        out += SHORT_TO_HEX[bytes[i]];
    }
    return out;
}

class Int64 {
    constructor(bytes) {
        this.bytes = bytes;
        if (bytes.byteLength !== 8) {
            throw new Error("Int64 buffers must be exactly 8 bytes");
        }
    }
    static fromNumber(number) {
        if (number > 9223372036854776000 || number < -9223372036854776000) {
            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);
        }
        const bytes = new Uint8Array(8);
        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {
            bytes[i] = remaining;
        }
        if (number < 0) {
            negate(bytes);
        }
        return new Int64(bytes);
    }
    valueOf() {
        const bytes = this.bytes.slice(0);
        const negative = bytes[0] & 0b10000000;
        if (negative) {
            negate(bytes);
        }
        return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);
    }
    toString() {
        return String(this.valueOf());
    }
}
function negate(bytes) {
    for (let i = 0; i < 8; i++) {
        bytes[i] ^= 0xff;
    }
    for (let i = 7; i > -1; i--) {
        bytes[i]++;
        if (bytes[i] !== 0)
            break;
    }
}

class HeaderMarshaller {
    constructor(toUtf8, fromUtf8) {
        this.toUtf8 = toUtf8;
        this.fromUtf8 = fromUtf8;
    }
    format(headers) {
        const chunks = [];
        for (const headerName of Object.keys(headers)) {
            const bytes = this.fromUtf8(headerName);
            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
        }
        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));
        let position = 0;
        for (const chunk of chunks) {
            out.set(chunk, position);
            position += chunk.byteLength;
        }
        return out;
    }
    formatHeaderValue(header) {
        switch (header.type) {
            case "boolean":
                return Uint8Array.from([header.value ? 0 : 1]);
            case "byte":
                return Uint8Array.from([2, header.value]);
            case "short":
                const shortView = new DataView(new ArrayBuffer(3));
                shortView.setUint8(0, 3);
                shortView.setInt16(1, header.value, false);
                return new Uint8Array(shortView.buffer);
            case "integer":
                const intView = new DataView(new ArrayBuffer(5));
                intView.setUint8(0, 4);
                intView.setInt32(1, header.value, false);
                return new Uint8Array(intView.buffer);
            case "long":
                const longBytes = new Uint8Array(9);
                longBytes[0] = 5;
                longBytes.set(header.value.bytes, 1);
                return longBytes;
            case "binary":
                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
                binView.setUint8(0, 6);
                binView.setUint16(1, header.value.byteLength, false);
                const binBytes = new Uint8Array(binView.buffer);
                binBytes.set(header.value, 3);
                return binBytes;
            case "string":
                const utf8Bytes = this.fromUtf8(header.value);
                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
                strView.setUint8(0, 7);
                strView.setUint16(1, utf8Bytes.byteLength, false);
                const strBytes = new Uint8Array(strView.buffer);
                strBytes.set(utf8Bytes, 3);
                return strBytes;
            case "timestamp":
                const tsBytes = new Uint8Array(9);
                tsBytes[0] = 8;
                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);
                return tsBytes;
            case "uuid":
                if (!UUID_PATTERN.test(header.value)) {
                    throw new Error(`Invalid UUID received: ${header.value}`);
                }
                const uuidBytes = new Uint8Array(17);
                uuidBytes[0] = 9;
                uuidBytes.set(fromHex(header.value.replace(/\-/g, "")), 1);
                return uuidBytes;
        }
    }
    parse(headers) {
        const out = {};
        let position = 0;
        while (position < headers.byteLength) {
            const nameLength = headers.getUint8(position++);
            const name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));
            position += nameLength;
            switch (headers.getUint8(position++)) {
                case 0:
                    out[name] = {
                        type: BOOLEAN_TAG,
                        value: true,
                    };
                    break;
                case 1:
                    out[name] = {
                        type: BOOLEAN_TAG,
                        value: false,
                    };
                    break;
                case 2:
                    out[name] = {
                        type: BYTE_TAG,
                        value: headers.getInt8(position++),
                    };
                    break;
                case 3:
                    out[name] = {
                        type: SHORT_TAG,
                        value: headers.getInt16(position, false),
                    };
                    position += 2;
                    break;
                case 4:
                    out[name] = {
                        type: INT_TAG,
                        value: headers.getInt32(position, false),
                    };
                    position += 4;
                    break;
                case 5:
                    out[name] = {
                        type: LONG_TAG,
                        value: new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)),
                    };
                    position += 8;
                    break;
                case 6:
                    const binaryLength = headers.getUint16(position, false);
                    position += 2;
                    out[name] = {
                        type: BINARY_TAG,
                        value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength),
                    };
                    position += binaryLength;
                    break;
                case 7:
                    const stringLength = headers.getUint16(position, false);
                    position += 2;
                    out[name] = {
                        type: STRING_TAG,
                        value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength)),
                    };
                    position += stringLength;
                    break;
                case 8:
                    out[name] = {
                        type: TIMESTAMP_TAG,
                        value: new Date(new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf()),
                    };
                    position += 8;
                    break;
                case 9:
                    const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);
                    position += 16;
                    out[name] = {
                        type: UUID_TAG,
                        value: `${toHex(uuidBytes.subarray(0, 4))}-${toHex(uuidBytes.subarray(4, 6))}-${toHex(uuidBytes.subarray(6, 8))}-${toHex(uuidBytes.subarray(8, 10))}-${toHex(uuidBytes.subarray(10))}`,
                    };
                    break;
                default:
                    throw new Error(`Unrecognized header type tag`);
            }
        }
        return out;
    }
}
var HEADER_VALUE_TYPE;
(function (HEADER_VALUE_TYPE) {
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolTrue"] = 0] = "boolTrue";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolFalse"] = 1] = "boolFalse";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byte"] = 2] = "byte";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["short"] = 3] = "short";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["integer"] = 4] = "integer";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["long"] = 5] = "long";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byteArray"] = 6] = "byteArray";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["string"] = 7] = "string";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["timestamp"] = 8] = "timestamp";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["uuid"] = 9] = "uuid";
})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));
const BOOLEAN_TAG = "boolean";
const BYTE_TAG = "byte";
const SHORT_TAG = "short";
const INT_TAG = "integer";
const LONG_TAG = "long";
const BINARY_TAG = "binary";
const STRING_TAG = "string";
const TIMESTAMP_TAG = "timestamp";
const UUID_TAG = "uuid";
const UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;

const fromUtf8 = (input) => new TextEncoder().encode(input);

const toUint8Array = (data) => {
    if (typeof data === "string") {
        return fromUtf8(data);
    }
    if (ArrayBuffer.isView(data)) {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
    }
    return new Uint8Array(data);
};

const toUtf8 = (input) => new TextDecoder("utf-8").decode(input);

const ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
const CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
const AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
const SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
const EXPIRES_QUERY_PARAM = "X-Amz-Expires";
const SIGNATURE_QUERY_PARAM = "X-Amz-Signature";
const TOKEN_QUERY_PARAM = "X-Amz-Security-Token";
const AUTH_HEADER = "authorization";
const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();
const DATE_HEADER = "date";
const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];
const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();
const SHA256_HEADER = "x-amz-content-sha256";
const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();
const ALWAYS_UNSIGNABLE_HEADERS = {
    authorization: true,
    "cache-control": true,
    connection: true,
    expect: true,
    from: true,
    "keep-alive": true,
    "max-forwards": true,
    pragma: true,
    referer: true,
    te: true,
    trailer: true,
    "transfer-encoding": true,
    upgrade: true,
    "user-agent": true,
    "x-amzn-trace-id": true,
};
const PROXY_HEADER_PATTERN = /^proxy-/;
const SEC_HEADER_PATTERN = /^sec-/;
const ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";
const EVENT_ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256-PAYLOAD";
const UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
const MAX_CACHE_SIZE = 50;
const KEY_TYPE_IDENTIFIER = "aws4_request";
const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;

const signingKeyCache = {};
const cacheQueue = [];
const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;
const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {
    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);
    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;
    if (cacheKey in signingKeyCache) {
        return signingKeyCache[cacheKey];
    }
    cacheQueue.push(cacheKey);
    while (cacheQueue.length > MAX_CACHE_SIZE) {
        delete signingKeyCache[cacheQueue.shift()];
    }
    let key = `AWS4${credentials.secretAccessKey}`;
    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {
        key = await hmac(sha256Constructor, key, signable);
    }
    return (signingKeyCache[cacheKey] = key);
};
const hmac = (ctor, secret, data) => {
    const hash = new ctor(secret);
    hash.update(toUint8Array(data));
    return hash.digest();
};

const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {
    const canonical = {};
    for (const headerName of Object.keys(headers).sort()) {
        if (headers[headerName] == undefined) {
            continue;
        }
        const canonicalHeaderName = headerName.toLowerCase();
        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||
            unsignableHeaders?.has(canonicalHeaderName) ||
            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||
            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {
            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {
                continue;
            }
        }
        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\s+/g, " ");
    }
    return canonical;
};

const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);
const hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;

const getCanonicalQuery = ({ query = {} }) => {
    const keys = [];
    const serialized = {};
    for (const key of Object.keys(query).sort()) {
        if (key.toLowerCase() === SIGNATURE_HEADER) {
            continue;
        }
        keys.push(key);
        const value = query[key];
        if (typeof value === "string") {
            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;
        }
        else if (Array.isArray(value)) {
            serialized[key] = value
                .slice(0)
                .sort()
                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])
                .join("&");
        }
    }
    return keys
        .map((key) => serialized[key])
        .filter((serialized) => serialized)
        .join("&");
};

const isArrayBuffer = (arg) => (typeof ArrayBuffer === "function" && arg instanceof ArrayBuffer) ||
    Object.prototype.toString.call(arg) === "[object ArrayBuffer]";

const getPayloadHash = async ({ headers, body }, hashConstructor) => {
    for (const headerName of Object.keys(headers)) {
        if (headerName.toLowerCase() === SHA256_HEADER) {
            return headers[headerName];
        }
    }
    if (body == undefined) {
        return "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855";
    }
    else if (typeof body === "string" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {
        const hashCtor = new hashConstructor();
        hashCtor.update(toUint8Array(body));
        return toHex(await hashCtor.digest());
    }
    return UNSIGNED_PAYLOAD;
};

const hasHeader = (soughtHeader, headers) => {
    soughtHeader = soughtHeader.toLowerCase();
    for (const headerName of Object.keys(headers)) {
        if (soughtHeader === headerName.toLowerCase()) {
            return true;
        }
    }
    return false;
};

const cloneRequest = ({ headers, query, ...rest }) => ({
    ...rest,
    headers: { ...headers },
    query: query ? cloneQuery$1(query) : undefined,
});
const cloneQuery$1 = (query) => Object.keys(query).reduce((carry, paramName) => {
    const param = query[paramName];
    return {
        ...carry,
        [paramName]: Array.isArray(param) ? [...param] : param,
    };
}, {});

const moveHeadersToQuery = (request, options = {}) => {
    const { headers, query = {} } = typeof request.clone === "function" ? request.clone() : cloneRequest(request);
    for (const name of Object.keys(headers)) {
        const lname = name.toLowerCase();
        if (lname.slice(0, 6) === "x-amz-" && !options.unhoistableHeaders?.has(lname)) {
            query[name] = headers[name];
            delete headers[name];
        }
    }
    return {
        ...request,
        headers,
        query,
    };
};

const prepareRequest = (request) => {
    request = typeof request.clone === "function" ? request.clone() : cloneRequest(request);
    for (const headerName of Object.keys(request.headers)) {
        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {
            delete request.headers[headerName];
        }
    }
    return request;
};

const iso8601 = (time) => toDate(time)
    .toISOString()
    .replace(/\.\d{3}Z$/, "Z");
const toDate = (time) => {
    if (typeof time === "number") {
        return new Date(time * 1000);
    }
    if (typeof time === "string") {
        if (Number(time)) {
            return new Date(Number(time) * 1000);
        }
        return new Date(time);
    }
    return time;
};

class SignatureV4 {
    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {
        this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);
        this.service = service;
        this.sha256 = sha256;
        this.uriEscapePath = uriEscapePath;
        this.applyChecksum = typeof applyChecksum === "boolean" ? applyChecksum : true;
        this.regionProvider = normalizeProvider(region);
        this.credentialProvider = normalizeProvider(credentials);
    }
    async presign(originalRequest, options = {}) {
        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;
        const credentials = await this.credentialProvider();
        this.validateResolvedCredentials(credentials);
        const region = signingRegion ?? (await this.regionProvider());
        const { longDate, shortDate } = formatDate(signingDate);
        if (expiresIn > MAX_PRESIGNED_TTL) {
            return Promise.reject("Signature version 4 presigned URLs" + " must have an expiration date less than one week in" + " the future");
        }
        const scope = createScope(shortDate, region, signingService ?? this.service);
        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });
        if (credentials.sessionToken) {
            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;
        }
        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;
        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;
        request.query[AMZ_DATE_QUERY_PARAM] = longDate;
        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);
        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);
        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);
        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));
        return request;
    }
    async sign(toSign, options) {
        if (typeof toSign === "string") {
            return this.signString(toSign, options);
        }
        else if (toSign.headers && toSign.payload) {
            return this.signEvent(toSign, options);
        }
        else if (toSign.message) {
            return this.signMessage(toSign, options);
        }
        else {
            return this.signRequest(toSign, options);
        }
    }
    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {
        const region = signingRegion ?? (await this.regionProvider());
        const { shortDate, longDate } = formatDate(signingDate);
        const scope = createScope(shortDate, region, signingService ?? this.service);
        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);
        const hash = new this.sha256();
        hash.update(headers);
        const hashedHeaders = toHex(await hash.digest());
        const stringToSign = [
            EVENT_ALGORITHM_IDENTIFIER,
            longDate,
            scope,
            priorSignature,
            hashedHeaders,
            hashedPayload,
        ].join("\n");
        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });
    }
    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {
        const promise = this.signEvent({
            headers: this.headerMarshaller.format(signableMessage.message.headers),
            payload: signableMessage.message.body,
        }, {
            signingDate,
            signingRegion,
            signingService,
            priorSignature: signableMessage.priorSignature,
        });
        return promise.then((signature) => {
            return { message: signableMessage.message, signature };
        });
    }
    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {
        const credentials = await this.credentialProvider();
        this.validateResolvedCredentials(credentials);
        const region = signingRegion ?? (await this.regionProvider());
        const { shortDate } = formatDate(signingDate);
        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));
        hash.update(toUint8Array(stringToSign));
        return toHex(await hash.digest());
    }
    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {
        const credentials = await this.credentialProvider();
        this.validateResolvedCredentials(credentials);
        const region = signingRegion ?? (await this.regionProvider());
        const request = prepareRequest(requestToSign);
        const { longDate, shortDate } = formatDate(signingDate);
        const scope = createScope(shortDate, region, signingService ?? this.service);
        request.headers[AMZ_DATE_HEADER] = longDate;
        if (credentials.sessionToken) {
            request.headers[TOKEN_HEADER] = credentials.sessionToken;
        }
        const payloadHash = await getPayloadHash(request, this.sha256);
        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {
            request.headers[SHA256_HEADER] = payloadHash;
        }
        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);
        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));
        request.headers[AUTH_HEADER] =
            `${ALGORITHM_IDENTIFIER} ` +
                `Credential=${credentials.accessKeyId}/${scope}, ` +
                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +
                `Signature=${signature}`;
        return request;
    }
    createCanonicalRequest(request, canonicalHeaders, payloadHash) {
        const sortedHeaders = Object.keys(canonicalHeaders).sort();
        return `${request.method}
${this.getCanonicalPath(request)}
${getCanonicalQuery(request)}
${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join("\n")}

${sortedHeaders.join(";")}
${payloadHash}`;
    }
    async createStringToSign(longDate, credentialScope, canonicalRequest) {
        const hash = new this.sha256();
        hash.update(toUint8Array(canonicalRequest));
        const hashedRequest = await hash.digest();
        return `${ALGORITHM_IDENTIFIER}
${longDate}
${credentialScope}
${toHex(hashedRequest)}`;
    }
    getCanonicalPath({ path }) {
        if (this.uriEscapePath) {
            const normalizedPathSegments = [];
            for (const pathSegment of path.split("/")) {
                if (pathSegment?.length === 0)
                    continue;
                if (pathSegment === ".")
                    continue;
                if (pathSegment === "..") {
                    normalizedPathSegments.pop();
                }
                else {
                    normalizedPathSegments.push(pathSegment);
                }
            }
            const normalizedPath = `${path?.startsWith("/") ? "/" : ""}${normalizedPathSegments.join("/")}${normalizedPathSegments.length > 0 && path?.endsWith("/") ? "/" : ""}`;
            const doubleEncoded = encodeURIComponent(normalizedPath);
            return doubleEncoded.replace(/%2F/g, "/");
        }
        return path;
    }
    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {
        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);
        const hash = new this.sha256(await keyPromise);
        hash.update(toUint8Array(stringToSign));
        return toHex(await hash.digest());
    }
    getSigningKey(credentials, region, shortDate, service) {
        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);
    }
    validateResolvedCredentials(credentials) {
        if (typeof credentials !== "object" ||
            typeof credentials.accessKeyId !== "string" ||
            typeof credentials.secretAccessKey !== "string") {
            throw new Error("Resolved credential object is not valid");
        }
    }
}
const formatDate = (now) => {
    const longDate = iso8601(now).replace(/[\-:]/g, "");
    return {
        longDate,
        shortDate: longDate.slice(0, 8),
    };
};
const getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(";");

const CREDENTIAL_EXPIRE_WINDOW = 300000;
const resolveAwsAuthConfig = (input) => {
    const normalizedCreds = input.credentials
        ? normalizeCredentialProvider(input.credentials)
        : input.credentialDefaultProvider(input);
    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;
    let signer;
    if (input.signer) {
        signer = normalizeProvider(input.signer);
    }
    else if (input.regionInfoProvider) {
        signer = () => normalizeProvider(input.region)()
            .then(async (region) => [
            (await input.regionInfoProvider(region, {
                useFipsEndpoint: await input.useFipsEndpoint(),
                useDualstackEndpoint: await input.useDualstackEndpoint(),
            })) || {},
            region,
        ])
            .then(([regionInfo, region]) => {
            const { signingRegion, signingService } = regionInfo;
            input.signingRegion = input.signingRegion || signingRegion || region;
            input.signingName = input.signingName || signingService || input.serviceId;
            const params = {
                ...input,
                credentials: normalizedCreds,
                region: input.signingRegion,
                service: input.signingName,
                sha256,
                uriEscapePath: signingEscapePath,
            };
            const SignerCtor = input.signerConstructor || SignatureV4;
            return new SignerCtor(params);
        });
    }
    else {
        signer = async (authScheme) => {
            authScheme = Object.assign({}, {
                name: "sigv4",
                signingName: input.signingName || input.defaultSigningName,
                signingRegion: await normalizeProvider(input.region)(),
                properties: {},
            }, authScheme);
            const signingRegion = authScheme.signingRegion;
            const signingService = authScheme.signingName;
            input.signingRegion = input.signingRegion || signingRegion;
            input.signingName = input.signingName || signingService || input.serviceId;
            const params = {
                ...input,
                credentials: normalizedCreds,
                region: input.signingRegion,
                service: input.signingName,
                sha256,
                uriEscapePath: signingEscapePath,
            };
            const SignerCtor = input.signerConstructor || SignatureV4;
            return new SignerCtor(params);
        };
    }
    return {
        ...input,
        systemClockOffset,
        signingEscapePath,
        credentials: normalizedCreds,
        signer,
    };
};
const normalizeCredentialProvider = (credentials) => {
    if (typeof credentials === "function") {
        return memoize(credentials, (credentials) => credentials.expiration !== undefined &&
            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);
    }
    return normalizeProvider(credentials);
};

const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);

const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;

const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {
    const clockTimeInMs = Date.parse(clockTime);
    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {
        return clockTimeInMs - Date.now();
    }
    return currentSystemClockOffset;
};

const awsAuthMiddleware = (options) => (next, context) => async function (args) {
    if (!HttpRequest$1.isInstance(args.request))
        return next(args);
    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];
    const multiRegionOverride = authScheme?.name === "sigv4a" ? authScheme?.signingRegionSet?.join(",") : undefined;
    const signer = await options.signer(authScheme);
    const output = await next({
        ...args,
        request: await signer.sign(args.request, {
            signingDate: getSkewCorrectedDate(options.systemClockOffset),
            signingRegion: multiRegionOverride || context["signing_region"],
            signingService: context["signing_service"],
        }),
    }).catch((error) => {
        const serverTime = error.ServerTime ?? getDateHeader(error.$response);
        if (serverTime) {
            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);
        }
        throw error;
    });
    const dateHeader = getDateHeader(output.response);
    if (dateHeader) {
        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);
    }
    return output;
};
const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;
const awsAuthMiddlewareOptions = {
    name: "awsAuthMiddleware",
    tags: ["SIGNATURE", "AWSAUTH"],
    relation: "after",
    toMiddleware: "retryMiddleware",
    override: true,
};
const getAwsAuthPlugin = (options) => ({
    applyToStack: (clientStack) => {
        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);
    },
});

function resolveUserAgentConfig(input) {
    return {
        ...input,
        customUserAgent: typeof input.customUserAgent === "string" ? [[input.customUserAgent]] : input.customUserAgent,
    };
}

const partitions = [
	{
		id: "aws",
		outputs: {
			dnsSuffix: "amazonaws.com",
			dualStackDnsSuffix: "api.aws",
			name: "aws",
			supportsDualStack: true,
			supportsFIPS: true
		},
		regionRegex: "^(us|eu|ap|sa|ca|me|af)\\-\\w+\\-\\d+$",
		regions: {
			"af-south-1": {
				description: "Africa (Cape Town)"
			},
			"ap-east-1": {
				description: "Asia Pacific (Hong Kong)"
			},
			"ap-northeast-1": {
				description: "Asia Pacific (Tokyo)"
			},
			"ap-northeast-2": {
				description: "Asia Pacific (Seoul)"
			},
			"ap-northeast-3": {
				description: "Asia Pacific (Osaka)"
			},
			"ap-south-1": {
				description: "Asia Pacific (Mumbai)"
			},
			"ap-south-2": {
				description: "Asia Pacific (Hyderabad)"
			},
			"ap-southeast-1": {
				description: "Asia Pacific (Singapore)"
			},
			"ap-southeast-2": {
				description: "Asia Pacific (Sydney)"
			},
			"ap-southeast-3": {
				description: "Asia Pacific (Jakarta)"
			},
			"ap-southeast-4": {
				description: "Asia Pacific (Melbourne)"
			},
			"aws-global": {
				description: "AWS Standard global region"
			},
			"ca-central-1": {
				description: "Canada (Central)"
			},
			"eu-central-1": {
				description: "Europe (Frankfurt)"
			},
			"eu-central-2": {
				description: "Europe (Zurich)"
			},
			"eu-north-1": {
				description: "Europe (Stockholm)"
			},
			"eu-south-1": {
				description: "Europe (Milan)"
			},
			"eu-south-2": {
				description: "Europe (Spain)"
			},
			"eu-west-1": {
				description: "Europe (Ireland)"
			},
			"eu-west-2": {
				description: "Europe (London)"
			},
			"eu-west-3": {
				description: "Europe (Paris)"
			},
			"me-central-1": {
				description: "Middle East (UAE)"
			},
			"me-south-1": {
				description: "Middle East (Bahrain)"
			},
			"sa-east-1": {
				description: "South America (Sao Paulo)"
			},
			"us-east-1": {
				description: "US East (N. Virginia)"
			},
			"us-east-2": {
				description: "US East (Ohio)"
			},
			"us-west-1": {
				description: "US West (N. California)"
			},
			"us-west-2": {
				description: "US West (Oregon)"
			}
		}
	},
	{
		id: "aws-cn",
		outputs: {
			dnsSuffix: "amazonaws.com.cn",
			dualStackDnsSuffix: "api.amazonwebservices.com.cn",
			name: "aws-cn",
			supportsDualStack: true,
			supportsFIPS: true
		},
		regionRegex: "^cn\\-\\w+\\-\\d+$",
		regions: {
			"aws-cn-global": {
				description: "AWS China global region"
			},
			"cn-north-1": {
				description: "China (Beijing)"
			},
			"cn-northwest-1": {
				description: "China (Ningxia)"
			}
		}
	},
	{
		id: "aws-us-gov",
		outputs: {
			dnsSuffix: "amazonaws.com",
			dualStackDnsSuffix: "api.aws",
			name: "aws-us-gov",
			supportsDualStack: true,
			supportsFIPS: true
		},
		regionRegex: "^us\\-gov\\-\\w+\\-\\d+$",
		regions: {
			"aws-us-gov-global": {
				description: "AWS GovCloud (US) global region"
			},
			"us-gov-east-1": {
				description: "AWS GovCloud (US-East)"
			},
			"us-gov-west-1": {
				description: "AWS GovCloud (US-West)"
			}
		}
	},
	{
		id: "aws-iso",
		outputs: {
			dnsSuffix: "c2s.ic.gov",
			dualStackDnsSuffix: "c2s.ic.gov",
			name: "aws-iso",
			supportsDualStack: false,
			supportsFIPS: true
		},
		regionRegex: "^us\\-iso\\-\\w+\\-\\d+$",
		regions: {
			"aws-iso-global": {
				description: "AWS ISO (US) global region"
			},
			"us-iso-east-1": {
				description: "US ISO East"
			},
			"us-iso-west-1": {
				description: "US ISO WEST"
			}
		}
	},
	{
		id: "aws-iso-b",
		outputs: {
			dnsSuffix: "sc2s.sgov.gov",
			dualStackDnsSuffix: "sc2s.sgov.gov",
			name: "aws-iso-b",
			supportsDualStack: false,
			supportsFIPS: true
		},
		regionRegex: "^us\\-isob\\-\\w+\\-\\d+$",
		regions: {
			"aws-iso-b-global": {
				description: "AWS ISOB (US) global region"
			},
			"us-isob-east-1": {
				description: "US ISOB East (Ohio)"
			}
		}
	},
	{
		id: "aws-iso-e",
		outputs: {
			dnsSuffix: "cloud.adc-e.uk",
			dualStackDnsSuffix: "cloud.adc-e.uk",
			name: "aws-iso-e",
			supportsDualStack: false,
			supportsFIPS: true
		},
		regionRegex: "^eu\\-isoe\\-\\w+\\-\\d+$",
		regions: {
		}
	},
	{
		id: "aws-iso-f",
		outputs: {
			dnsSuffix: "csp.hci.ic.gov",
			dualStackDnsSuffix: "csp.hci.ic.gov",
			name: "aws-iso-f",
			supportsDualStack: false,
			supportsFIPS: true
		},
		regionRegex: "^us\\-isof\\-\\w+\\-\\d+$",
		regions: {
		}
	}
];
const version$1 = "1.1";
const partitionsInfo = {
	partitions: partitions,
	version: version$1
};

let selectedPartitionsInfo = partitionsInfo;
let selectedUserAgentPrefix = "";
const partition = (value) => {
    const { partitions } = selectedPartitionsInfo;
    for (const partition of partitions) {
        const { regions, outputs } = partition;
        for (const [region, regionData] of Object.entries(regions)) {
            if (region === value) {
                return {
                    ...outputs,
                    ...regionData,
                };
            }
        }
    }
    for (const partition of partitions) {
        const { regionRegex, outputs } = partition;
        if (new RegExp(regionRegex).test(value)) {
            return {
                ...outputs,
            };
        }
    }
    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === "aws");
    if (!DEFAULT_PARTITION) {
        throw new Error("Provided region was not found in the partition array or regex," +
            " and default partition with id 'aws' doesn't exist.");
    }
    return {
        ...DEFAULT_PARTITION.outputs,
    };
};
const setPartitionInfo = (partitionsInfo, userAgentPrefix = "") => {
    selectedPartitionsInfo = partitionsInfo;
    selectedUserAgentPrefix = userAgentPrefix;
};
const useDefaultPartitionInfo = () => {
    setPartitionInfo(partitionsInfo, "");
};
const getUserAgentPrefix = () => selectedUserAgentPrefix;

const debugId = "endpoints";

function toDebugString(input) {
    if (typeof input !== "object" || input == null) {
        return input;
    }
    if ("ref" in input) {
        return `$${toDebugString(input.ref)}`;
    }
    if ("fn" in input) {
        return `${input.fn}(${(input.argv || []).map(toDebugString).join(", ")})`;
    }
    return JSON.stringify(input, null, 2);
}

class EndpointError extends Error {
    constructor(message) {
        super(message);
        this.name = "EndpointError";
    }
}

const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$`);
const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith("[") && value.endsWith("]"));

const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);
const isValidHostLabel = (value, allowSubDomains = false) => {
    if (!allowSubDomains) {
        return VALID_HOST_LABEL_REGEX.test(value);
    }
    const labels = value.split(".");
    for (const label of labels) {
        if (!isValidHostLabel(label)) {
            return false;
        }
    }
    return true;
};

const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {
    if (allowSubDomains) {
        for (const label of value.split(".")) {
            if (!isVirtualHostableS3Bucket(label)) {
                return false;
            }
        }
        return true;
    }
    if (!isValidHostLabel(value)) {
        return false;
    }
    if (value.length < 3 || value.length > 63) {
        return false;
    }
    if (value !== value.toLowerCase()) {
        return false;
    }
    if (isIpAddress(value)) {
        return false;
    }
    return true;
};

const parseArn = (value) => {
    const segments = value.split(":");
    if (segments.length < 6)
        return null;
    const [arn, partition, service, region, accountId, ...resourceId] = segments;
    if (arn !== "arn" || partition === "" || service === "" || resourceId[0] === "")
        return null;
    return {
        partition,
        service,
        region,
        accountId,
        resourceId: resourceId[0].includes("/") ? resourceId[0].split("/") : resourceId,
    };
};

const index = /*#__PURE__*/Object.freeze({
    __proto__: null,
    isVirtualHostableS3Bucket: isVirtualHostableS3Bucket,
    parseArn: parseArn,
    partition: partition,
    setPartitionInfo: setPartitionInfo,
    useDefaultPartitionInfo: useDefaultPartitionInfo,
    getUserAgentPrefix: getUserAgentPrefix
});

const booleanEquals = (value1, value2) => value1 === value2;

const getAttrPathList = (path) => {
    const parts = path.split(".");
    const pathList = [];
    for (const part of parts) {
        const squareBracketIndex = part.indexOf("[");
        if (squareBracketIndex !== -1) {
            if (part.indexOf("]") !== part.length - 1) {
                throw new EndpointError(`Path: '${path}' does not end with ']'`);
            }
            const arrayIndex = part.slice(squareBracketIndex + 1, -1);
            if (Number.isNaN(parseInt(arrayIndex))) {
                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);
            }
            if (squareBracketIndex !== 0) {
                pathList.push(part.slice(0, squareBracketIndex));
            }
            pathList.push(arrayIndex);
        }
        else {
            pathList.push(part);
        }
    }
    return pathList;
};

const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {
    if (typeof acc !== "object") {
        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);
    }
    else if (Array.isArray(acc)) {
        return acc[parseInt(index)];
    }
    return acc[index];
}, value);

const isSet = (value) => value != null;

const not = (value) => !value;

var HttpAuthLocation$1;
(function (HttpAuthLocation) {
    HttpAuthLocation["HEADER"] = "header";
    HttpAuthLocation["QUERY"] = "query";
})(HttpAuthLocation$1 || (HttpAuthLocation$1 = {}));

var HostAddressType;
(function (HostAddressType) {
    HostAddressType["AAAA"] = "AAAA";
    HostAddressType["A"] = "A";
})(HostAddressType || (HostAddressType = {}));

var EndpointURLScheme$1;
(function (EndpointURLScheme) {
    EndpointURLScheme["HTTP"] = "http";
    EndpointURLScheme["HTTPS"] = "https";
})(EndpointURLScheme$1 || (EndpointURLScheme$1 = {}));

var RequestHandlerProtocol$1;
(function (RequestHandlerProtocol) {
    RequestHandlerProtocol["HTTP_0_9"] = "http/0.9";
    RequestHandlerProtocol["HTTP_1_0"] = "http/1.0";
    RequestHandlerProtocol["TDS_8_0"] = "tds/8.0";
})(RequestHandlerProtocol$1 || (RequestHandlerProtocol$1 = {}));

const DEFAULT_PORTS = {
    [EndpointURLScheme$1.HTTP]: 80,
    [EndpointURLScheme$1.HTTPS]: 443,
};
const parseURL = (value) => {
    const whatwgURL = (() => {
        try {
            if (value instanceof URL) {
                return value;
            }
            if (typeof value === "object" && "hostname" in value) {
                const { hostname, port, protocol = "", path = "", query = {} } = value;
                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : ""}${path}`);
                url.search = Object.entries(query)
                    .map(([k, v]) => `${k}=${v}`)
                    .join("&");
                return url;
            }
            return new URL(value);
        }
        catch (error) {
            return null;
        }
    })();
    if (!whatwgURL) {
        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);
        return null;
    }
    const urlString = whatwgURL.href;
    const { host, hostname, pathname, protocol, search } = whatwgURL;
    if (search) {
        return null;
    }
    const scheme = protocol.slice(0, -1);
    if (!Object.values(EndpointURLScheme$1).includes(scheme)) {
        return null;
    }
    const isIp = isIpAddress(hostname);
    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||
        (typeof value === "string" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));
    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;
    return {
        scheme,
        authority,
        path: pathname,
        normalizedPath: pathname.endsWith("/") ? pathname : `${pathname}/`,
        isIp,
    };
};

const stringEquals = (value1, value2) => value1 === value2;

const substring = (input, start, stop, reverse) => {
    if (start >= stop || input.length < stop) {
        return null;
    }
    if (!reverse) {
        return input.substring(start, stop);
    }
    return input.substring(input.length - stop, input.length - start);
};

const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);

const lib = /*#__PURE__*/Object.freeze({
    __proto__: null,
    aws: index,
    booleanEquals: booleanEquals,
    getAttr: getAttr,
    isSet: isSet,
    isValidHostLabel: isValidHostLabel,
    not: not,
    parseURL: parseURL,
    stringEquals: stringEquals,
    substring: substring,
    uriEncode: uriEncode
});

const evaluateTemplate = (template, options) => {
    const evaluatedTemplateArr = [];
    const templateContext = {
        ...options.endpointParams,
        ...options.referenceRecord,
    };
    let currentIndex = 0;
    while (currentIndex < template.length) {
        const openingBraceIndex = template.indexOf("{", currentIndex);
        if (openingBraceIndex === -1) {
            evaluatedTemplateArr.push(template.slice(currentIndex));
            break;
        }
        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));
        const closingBraceIndex = template.indexOf("}", openingBraceIndex);
        if (closingBraceIndex === -1) {
            evaluatedTemplateArr.push(template.slice(openingBraceIndex));
            break;
        }
        if (template[openingBraceIndex + 1] === "{" && template[closingBraceIndex + 1] === "}") {
            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));
            currentIndex = closingBraceIndex + 2;
        }
        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);
        if (parameterName.includes("#")) {
            const [refName, attrName] = parameterName.split("#");
            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));
        }
        else {
            evaluatedTemplateArr.push(templateContext[parameterName]);
        }
        currentIndex = closingBraceIndex + 1;
    }
    return evaluatedTemplateArr.join("");
};

const getReferenceValue = ({ ref }, options) => {
    const referenceRecord = {
        ...options.endpointParams,
        ...options.referenceRecord,
    };
    return referenceRecord[ref];
};

const evaluateExpression = (obj, keyName, options) => {
    if (typeof obj === "string") {
        return evaluateTemplate(obj, options);
    }
    else if (obj["fn"]) {
        return callFunction(obj, options);
    }
    else if (obj["ref"]) {
        return getReferenceValue(obj, options);
    }
    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);
};

const callFunction = ({ fn, argv }, options) => {
    const evaluatedArgs = argv.map((arg) => ["boolean", "number"].includes(typeof arg) ? arg : evaluateExpression(arg, "arg", options));
    return fn.split(".").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);
};

const evaluateCondition = ({ assign, ...fnArgs }, options) => {
    if (assign && assign in options.referenceRecord) {
        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);
    }
    const value = callFunction(fnArgs, options);
    options.logger?.debug?.(debugId, `evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);
    return {
        result: value === "" ? true : !!value,
        ...(assign != null && { toAssign: { name: assign, value } }),
    };
};

const evaluateConditions = (conditions = [], options) => {
    const conditionsReferenceRecord = {};
    for (const condition of conditions) {
        const { result, toAssign } = evaluateCondition(condition, {
            ...options,
            referenceRecord: {
                ...options.referenceRecord,
                ...conditionsReferenceRecord,
            },
        });
        if (!result) {
            return { result };
        }
        if (toAssign) {
            conditionsReferenceRecord[toAssign.name] = toAssign.value;
            options.logger?.debug?.(debugId, `assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);
        }
    }
    return { result: true, referenceRecord: conditionsReferenceRecord };
};

const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({
    ...acc,
    [headerKey]: headerVal.map((headerValEntry) => {
        const processedExpr = evaluateExpression(headerValEntry, "Header value entry", options);
        if (typeof processedExpr !== "string") {
            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);
        }
        return processedExpr;
    }),
}), {});

const getEndpointProperty = (property, options) => {
    if (Array.isArray(property)) {
        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));
    }
    switch (typeof property) {
        case "string":
            return evaluateTemplate(property, options);
        case "object":
            if (property === null) {
                throw new EndpointError(`Unexpected endpoint property: ${property}`);
            }
            return getEndpointProperties(property, options);
        case "boolean":
            return property;
        default:
            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);
    }
};

const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({
    ...acc,
    [propertyKey]: getEndpointProperty(propertyVal, options),
}), {});

const getEndpointUrl = (endpointUrl, options) => {
    const expression = evaluateExpression(endpointUrl, "Endpoint URL", options);
    if (typeof expression === "string") {
        try {
            return new URL(expression);
        }
        catch (error) {
            console.error(`Failed to construct URL with ${expression}`, error);
            throw error;
        }
    }
    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);
};

const evaluateEndpointRule = (endpointRule, options) => {
    const { conditions, endpoint } = endpointRule;
    const { result, referenceRecord } = evaluateConditions(conditions, options);
    if (!result) {
        return;
    }
    const endpointRuleOptions = {
        ...options,
        referenceRecord: { ...options.referenceRecord, ...referenceRecord },
    };
    const { url, properties, headers } = endpoint;
    options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);
    return {
        ...(headers != undefined && {
            headers: getEndpointHeaders(headers, endpointRuleOptions),
        }),
        ...(properties != undefined && {
            properties: getEndpointProperties(properties, endpointRuleOptions),
        }),
        url: getEndpointUrl(url, endpointRuleOptions),
    };
};

const evaluateErrorRule = (errorRule, options) => {
    const { conditions, error } = errorRule;
    const { result, referenceRecord } = evaluateConditions(conditions, options);
    if (!result) {
        return;
    }
    throw new EndpointError(evaluateExpression(error, "Error", {
        ...options,
        referenceRecord: { ...options.referenceRecord, ...referenceRecord },
    }));
};

const evaluateTreeRule = (treeRule, options) => {
    const { conditions, rules } = treeRule;
    const { result, referenceRecord } = evaluateConditions(conditions, options);
    if (!result) {
        return;
    }
    return evaluateRules(rules, {
        ...options,
        referenceRecord: { ...options.referenceRecord, ...referenceRecord },
    });
};

const evaluateRules = (rules, options) => {
    for (const rule of rules) {
        if (rule.type === "endpoint") {
            const endpointOrUndefined = evaluateEndpointRule(rule, options);
            if (endpointOrUndefined) {
                return endpointOrUndefined;
            }
        }
        else if (rule.type === "error") {
            evaluateErrorRule(rule, options);
        }
        else if (rule.type === "tree") {
            const endpointOrUndefined = evaluateTreeRule(rule, options);
            if (endpointOrUndefined) {
                return endpointOrUndefined;
            }
        }
        else {
            throw new EndpointError(`Unknown endpoint rule: ${rule}`);
        }
    }
    throw new EndpointError(`Rules evaluation failed`);
};

const resolveEndpoint = (ruleSetObject, options) => {
    const { endpointParams, logger } = options;
    const { parameters, rules } = ruleSetObject;
    options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);
    const paramsWithDefault = Object.entries(parameters)
        .filter(([, v]) => v.default != null)
        .map(([k, v]) => [k, v.default]);
    if (paramsWithDefault.length > 0) {
        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {
            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;
        }
    }
    const requiredParams = Object.entries(parameters)
        .filter(([, v]) => v.required)
        .map(([k]) => k);
    for (const requiredParam of requiredParams) {
        if (endpointParams[requiredParam] == null) {
            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);
        }
    }
    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });
    if (options.endpointParams?.Endpoint) {
        try {
            const givenEndpoint = new URL(options.endpointParams.Endpoint);
            const { protocol, port } = givenEndpoint;
            endpoint.url.protocol = protocol;
            endpoint.url.port = port;
        }
        catch (e) {
        }
    }
    options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);
    return endpoint;
};

const USER_AGENT = "user-agent";
const X_AMZ_USER_AGENT = "x-amz-user-agent";
const SPACE = " ";
const UA_NAME_SEPARATOR = "/";
const UA_NAME_ESCAPE_REGEX = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w]/g;
const UA_VALUE_ESCAPE_REGEX = /[^\!\$\%\&\'\*\+\-\.\^\_\`\|\~\d\w\#]/g;
const UA_ESCAPE_CHAR = "-";

const userAgentMiddleware = (options) => (next, context) => async (args) => {
    const { request } = args;
    if (!HttpRequest$1.isInstance(request))
        return next(args);
    const { headers } = request;
    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];
    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);
    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];
    const prefix = getUserAgentPrefix();
    const sdkUserAgentValue = (prefix ? [prefix] : [])
        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])
        .join(SPACE);
    const normalUAValue = [
        ...defaultUserAgent.filter((section) => section.startsWith("aws-sdk-")),
        ...customUserAgent,
    ].join(SPACE);
    if (options.runtime !== "browser") {
        if (normalUAValue) {
            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]
                ? `${headers[USER_AGENT]} ${normalUAValue}`
                : normalUAValue;
        }
        headers[USER_AGENT] = sdkUserAgentValue;
    }
    else {
        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;
    }
    return next({
        ...args,
        request,
    });
};
const escapeUserAgent = (userAgentPair) => {
    const name = userAgentPair[0]
        .split(UA_NAME_SEPARATOR)
        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))
        .join(UA_NAME_SEPARATOR);
    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);
    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);
    const prefix = name.substring(0, prefixSeparatorIndex);
    let uaName = name.substring(prefixSeparatorIndex + 1);
    if (prefix === "api") {
        uaName = uaName.toLowerCase();
    }
    return [prefix, uaName, version]
        .filter((item) => item && item.length > 0)
        .reduce((acc, item, index) => {
        switch (index) {
            case 0:
                return item;
            case 1:
                return `${acc}/${item}`;
            default:
                return `${acc}#${item}`;
        }
    }, "");
};
const getUserAgentMiddlewareOptions = {
    name: "getUserAgentMiddleware",
    step: "build",
    priority: "low",
    tags: ["SET_USER_AGENT", "USER_AGENT"],
    override: true,
};
const getUserAgentPlugin = (config) => ({
    applyToStack: (clientStack) => {
        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);
    },
});

class NoOpLogger {
    trace() { }
    debug() { }
    info() { }
    warn() { }
    error() { }
}

const constructStack = () => {
    let absoluteEntries = [];
    let relativeEntries = [];
    const entriesNameSet = new Set();
    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||
        priorityWeights[b.priority || "normal"] - priorityWeights[a.priority || "normal"]);
    const removeByName = (toRemove) => {
        let isRemoved = false;
        const filterCb = (entry) => {
            if (entry.name && entry.name === toRemove) {
                isRemoved = true;
                entriesNameSet.delete(toRemove);
                return false;
            }
            return true;
        };
        absoluteEntries = absoluteEntries.filter(filterCb);
        relativeEntries = relativeEntries.filter(filterCb);
        return isRemoved;
    };
    const removeByReference = (toRemove) => {
        let isRemoved = false;
        const filterCb = (entry) => {
            if (entry.middleware === toRemove) {
                isRemoved = true;
                if (entry.name)
                    entriesNameSet.delete(entry.name);
                return false;
            }
            return true;
        };
        absoluteEntries = absoluteEntries.filter(filterCb);
        relativeEntries = relativeEntries.filter(filterCb);
        return isRemoved;
    };
    const cloneTo = (toStack) => {
        absoluteEntries.forEach((entry) => {
            toStack.add(entry.middleware, { ...entry });
        });
        relativeEntries.forEach((entry) => {
            toStack.addRelativeTo(entry.middleware, { ...entry });
        });
        return toStack;
    };
    const expandRelativeMiddlewareList = (from) => {
        const expandedMiddlewareList = [];
        from.before.forEach((entry) => {
            if (entry.before.length === 0 && entry.after.length === 0) {
                expandedMiddlewareList.push(entry);
            }
            else {
                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));
            }
        });
        expandedMiddlewareList.push(from);
        from.after.reverse().forEach((entry) => {
            if (entry.before.length === 0 && entry.after.length === 0) {
                expandedMiddlewareList.push(entry);
            }
            else {
                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));
            }
        });
        return expandedMiddlewareList;
    };
    const getMiddlewareList = (debug = false) => {
        const normalizedAbsoluteEntries = [];
        const normalizedRelativeEntries = [];
        const normalizedEntriesNameMap = {};
        absoluteEntries.forEach((entry) => {
            const normalizedEntry = {
                ...entry,
                before: [],
                after: [],
            };
            if (normalizedEntry.name)
                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;
            normalizedAbsoluteEntries.push(normalizedEntry);
        });
        relativeEntries.forEach((entry) => {
            const normalizedEntry = {
                ...entry,
                before: [],
                after: [],
            };
            if (normalizedEntry.name)
                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;
            normalizedRelativeEntries.push(normalizedEntry);
        });
        normalizedRelativeEntries.forEach((entry) => {
            if (entry.toMiddleware) {
                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];
                if (toMiddleware === undefined) {
                    if (debug) {
                        return;
                    }
                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || "anonymous"} middleware ${entry.relation} ${entry.toMiddleware}`);
                }
                if (entry.relation === "after") {
                    toMiddleware.after.push(entry);
                }
                if (entry.relation === "before") {
                    toMiddleware.before.push(entry);
                }
            }
        });
        const mainChain = sort(normalizedAbsoluteEntries)
            .map(expandRelativeMiddlewareList)
            .reduce((wholeList, expendedMiddlewareList) => {
            wholeList.push(...expendedMiddlewareList);
            return wholeList;
        }, []);
        return mainChain;
    };
    const stack = {
        add: (middleware, options = {}) => {
            const { name, override } = options;
            const entry = {
                step: "initialize",
                priority: "normal",
                middleware,
                ...options,
            };
            if (name) {
                if (entriesNameSet.has(name)) {
                    if (!override)
                        throw new Error(`Duplicate middleware name '${name}'`);
                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);
                    const toOverride = absoluteEntries[toOverrideIndex];
                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {
                        throw new Error(`"${name}" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +
                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);
                    }
                    absoluteEntries.splice(toOverrideIndex, 1);
                }
                entriesNameSet.add(name);
            }
            absoluteEntries.push(entry);
        },
        addRelativeTo: (middleware, options) => {
            const { name, override } = options;
            const entry = {
                middleware,
                ...options,
            };
            if (name) {
                if (entriesNameSet.has(name)) {
                    if (!override)
                        throw new Error(`Duplicate middleware name '${name}'`);
                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);
                    const toOverride = relativeEntries[toOverrideIndex];
                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {
                        throw new Error(`"${name}" middleware ${toOverride.relation} "${toOverride.toMiddleware}" middleware cannot be overridden ` +
                            `by same-name middleware ${entry.relation} "${entry.toMiddleware}" middleware.`);
                    }
                    relativeEntries.splice(toOverrideIndex, 1);
                }
                entriesNameSet.add(name);
            }
            relativeEntries.push(entry);
        },
        clone: () => cloneTo(constructStack()),
        use: (plugin) => {
            plugin.applyToStack(stack);
        },
        remove: (toRemove) => {
            if (typeof toRemove === "string")
                return removeByName(toRemove);
            else
                return removeByReference(toRemove);
        },
        removeByTag: (toRemove) => {
            let isRemoved = false;
            const filterCb = (entry) => {
                const { tags, name } = entry;
                if (tags && tags.includes(toRemove)) {
                    if (name)
                        entriesNameSet.delete(name);
                    isRemoved = true;
                    return false;
                }
                return true;
            };
            absoluteEntries = absoluteEntries.filter(filterCb);
            relativeEntries = relativeEntries.filter(filterCb);
            return isRemoved;
        },
        concat: (from) => {
            const cloned = cloneTo(constructStack());
            cloned.use(from);
            return cloned;
        },
        applyToStack: cloneTo,
        identify: () => {
            return getMiddlewareList(true).map((mw) => {
                return mw.name + ": " + (mw.tags || []).join(",");
            });
        },
        resolve: (handler, context) => {
            for (const middleware of getMiddlewareList()
                .map((entry) => entry.middleware)
                .reverse()) {
                handler = middleware(handler, context);
            }
            return handler;
        },
    };
    return stack;
};
const stepWeights = {
    initialize: 5,
    serialize: 4,
    build: 3,
    finalizeRequest: 2,
    deserialize: 1,
};
const priorityWeights = {
    high: 3,
    normal: 2,
    low: 1,
};

class Client {
    constructor(config) {
        this.middlewareStack = constructStack();
        this.config = config;
    }
    send(command, optionsOrCb, cb) {
        const options = typeof optionsOrCb !== "function" ? optionsOrCb : undefined;
        const callback = typeof optionsOrCb === "function" ? optionsOrCb : cb;
        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);
        if (callback) {
            handler(command)
                .then((result) => callback(null, result.output), (err) => callback(err))
                .catch(() => { });
        }
        else {
            return handler(command).then((result) => result.output);
        }
    }
    destroy() {
        if (this.config.requestHandler.destroy)
            this.config.requestHandler.destroy();
    }
}

class Command {
    constructor() {
        this.middlewareStack = constructStack();
    }
}

const expectNumber = (value) => {
    if (value === null || value === undefined) {
        return undefined;
    }
    if (typeof value === "string") {
        const parsed = parseFloat(value);
        if (!Number.isNaN(parsed)) {
            if (String(parsed) !== String(value)) {
                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));
            }
            return parsed;
        }
    }
    if (typeof value === "number") {
        return value;
    }
    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);
};
const expectLong = (value) => {
    if (value === null || value === undefined) {
        return undefined;
    }
    if (Number.isInteger(value) && !Number.isNaN(value)) {
        return value;
    }
    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);
};
const expectInt32 = (value) => expectSizedInt(value, 32);
const expectSizedInt = (value, size) => {
    const expected = expectLong(value);
    if (expected !== undefined && castInt(expected, size) !== expected) {
        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);
    }
    return expected;
};
const castInt = (value, size) => {
    switch (size) {
        case 32:
            return Int32Array.of(value)[0];
        case 16:
            return Int16Array.of(value)[0];
        case 8:
            return Int8Array.of(value)[0];
    }
};
const expectNonNull = (value, location) => {
    if (value === null || value === undefined) {
        if (location) {
            throw new TypeError(`Expected a non-null value for ${location}`);
        }
        throw new TypeError("Expected a non-null value");
    }
    return value;
};
const expectObject = (value) => {
    if (value === null || value === undefined) {
        return undefined;
    }
    if (typeof value === "object" && !Array.isArray(value)) {
        return value;
    }
    const receivedType = Array.isArray(value) ? "array" : typeof value;
    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);
};
const expectString = (value) => {
    if (value === null || value === undefined) {
        return undefined;
    }
    if (typeof value === "string") {
        return value;
    }
    if (["boolean", "number", "bigint"].includes(typeof value)) {
        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));
        return String(value);
    }
    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);
};
const strictParseDouble = (value) => {
    if (typeof value == "string") {
        return expectNumber(parseNumber(value));
    }
    return expectNumber(value);
};
const NUMBER_REGEX = /(-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?)|(-?Infinity)|(NaN)/g;
const parseNumber = (value) => {
    const matches = value.match(NUMBER_REGEX);
    if (matches === null || matches[0].length !== value.length) {
        throw new TypeError(`Expected real number, got implicit NaN`);
    }
    return parseFloat(value);
};
const stackTraceWarning = (message) => {
    return String(new TypeError(message).stack || message)
        .split("\n")
        .slice(0, 5)
        .filter((s) => !s.includes("stackTraceWarning"))
        .join("\n");
};
const logger = {
    warn: console.warn,
};

const parseEpochTimestamp = (value) => {
    if (value === null || value === undefined) {
        return undefined;
    }
    let valueAsDouble;
    if (typeof value === "number") {
        valueAsDouble = value;
    }
    else if (typeof value === "string") {
        valueAsDouble = strictParseDouble(value);
    }
    else {
        throw new TypeError("Epoch timestamps must be expressed as floating point numbers or their string representation");
    }
    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {
        throw new TypeError("Epoch timestamps must be valid, non-Infinite, non-NaN numerics");
    }
    return new Date(Math.round(valueAsDouble * 1000));
};

const throwDefaultError$1 = ({ output, parsedBody, exceptionCtor, errorCode }) => {
    const $metadata = deserializeMetadata$1(output);
    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + "" : undefined;
    const response = new exceptionCtor({
        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || "UnknownError",
        $fault: "client",
        $metadata,
    });
    throw decorateServiceException(response, parsedBody);
};
const withBaseException = (ExceptionCtor) => {
    return ({ output, parsedBody, errorCode }) => {
        throwDefaultError$1({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });
    };
};
const deserializeMetadata$1 = (output) => ({
    httpStatusCode: output.statusCode,
    requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"],
});

const loadConfigsForDefaultMode = (mode) => {
    switch (mode) {
        case "standard":
            return {
                retryMode: "standard",
                connectionTimeout: 3100,
            };
        case "in-region":
            return {
                retryMode: "standard",
                connectionTimeout: 1100,
            };
        case "cross-region":
            return {
                retryMode: "standard",
                connectionTimeout: 3100,
            };
        case "mobile":
            return {
                retryMode: "standard",
                connectionTimeout: 30000,
            };
        default:
            return {};
    }
};

function extendedEncodeURIComponent(str) {
    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
        return "%" + c.charCodeAt(0).toString(16).toUpperCase();
    });
}

function map$2(arg0, arg1, arg2) {
    let target;
    let filter;
    let instructions;
    if (typeof arg1 === "undefined" && typeof arg2 === "undefined") {
        target = {};
        instructions = arg0;
    }
    else {
        target = arg0;
        if (typeof arg1 === "function") {
            filter = arg1;
            instructions = arg2;
            return mapWithFilter(target, filter, instructions);
        }
        else {
            instructions = arg1;
        }
    }
    for (const key of Object.keys(instructions)) {
        if (!Array.isArray(instructions[key])) {
            target[key] = instructions[key];
            continue;
        }
        applyInstruction(target, null, instructions, key);
    }
    return target;
}
const take$1 = (source, instructions) => {
    const out = {};
    for (const key in instructions) {
        applyInstruction(out, source, instructions, key);
    }
    return out;
};
const mapWithFilter = (target, filter, instructions) => {
    return map$2(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {
        if (Array.isArray(value)) {
            _instructions[key] = value;
        }
        else {
            if (typeof value === "function") {
                _instructions[key] = [filter, value()];
            }
            else {
                _instructions[key] = [filter, value];
            }
        }
        return _instructions;
    }, {}));
};
const applyInstruction = (target, source, instructions, targetKey) => {
    if (source !== null) {
        let instruction = instructions[targetKey];
        if (typeof instruction === "function") {
            instruction = [, instruction];
        }
        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;
        if ((typeof filter === "function" && filter(source[sourceKey])) || (typeof filter !== "function" && !!filter)) {
            target[targetKey] = valueFn(source[sourceKey]);
        }
        return;
    }
    let [filter, value] = instructions[targetKey];
    if (typeof value === "function") {
        let _value;
        const defaultFilterPassed = filter === undefined && (_value = value()) != null;
        const customFilterPassed = (typeof filter === "function" && !!filter(void 0)) || (typeof filter !== "function" && !!filter);
        if (defaultFilterPassed) {
            target[targetKey] = _value;
        }
        else if (customFilterPassed) {
            target[targetKey] = value();
        }
    }
    else {
        const defaultFilterPassed = filter === undefined && value != null;
        const customFilterPassed = (typeof filter === "function" && !!filter(value)) || (typeof filter !== "function" && !!filter);
        if (defaultFilterPassed || customFilterPassed) {
            target[targetKey] = value;
        }
    }
};
const nonNullish = (_) => _ != null;
const pass = (_) => _;

const resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {
    if (input != null && input[memberName] !== undefined) {
        const labelValue = labelValueProvider();
        if (labelValue.length <= 0) {
            throw new Error("Empty value provided for input HTTP label: " + memberName + ".");
        }
        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel
            ? labelValue
                .split("/")
                .map((segment) => extendedEncodeURIComponent(segment))
                .join("/")
            : extendedEncodeURIComponent(labelValue));
    }
    else {
        throw new Error("No value provided for input HTTP label: " + memberName + ".");
    }
    return resolvedPath;
};

const _json = (obj) => {
    if (obj == null) {
        return {};
    }
    if (Array.isArray(obj)) {
        return obj.filter((_) => _ != null);
    }
    if (typeof obj === "object") {
        const target = {};
        for (const key of Object.keys(obj)) {
            if (obj[key] == null) {
                continue;
            }
            target[key] = _json(obj[key]);
        }
        return target;
    }
    return obj;
};

const resolveClientEndpointParameters = (options) => {
    return {
        ...options,
        useDualstackEndpoint: options.useDualstackEndpoint ?? false,
        useFipsEndpoint: options.useFipsEndpoint ?? false,
        defaultSigningName: "iotevents",
    };
};

const name = "@aws-sdk/client-iot-events";
const description = "AWS SDK for JavaScript Iot Events Client for Node.js, Browser and React Native";
const version = "3.354.0";
const scripts = {
	build: "concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'",
	"build:cjs": "tsc -p tsconfig.cjs.json",
	"build:docs": "typedoc",
	"build:es": "tsc -p tsconfig.es.json",
	"build:include:deps": "lerna run --scope $npm_package_name --include-dependencies build",
	"build:types": "tsc -p tsconfig.types.json",
	"build:types:downlevel": "downlevel-dts dist-types dist-types/ts3.4",
	clean: "rimraf ./dist-* && rimraf *.tsbuildinfo",
	"extract:docs": "api-extractor run --local",
	"generate:client": "node ../../scripts/generate-clients/single-service --solo iot-events"
};
const main = "./dist-cjs/index.js";
const types = "./dist-types/index.d.ts";
const module = "./dist-es/index.js";
const sideEffects = false;
const dependencies = {
	"@aws-crypto/sha256-browser": "3.0.0",
	"@aws-crypto/sha256-js": "3.0.0",
	"@aws-sdk/client-sts": "3.354.0",
	"@aws-sdk/config-resolver": "3.354.0",
	"@aws-sdk/credential-provider-node": "3.354.0",
	"@aws-sdk/fetch-http-handler": "3.353.0",
	"@aws-sdk/hash-node": "3.347.0",
	"@aws-sdk/invalid-dependency": "3.347.0",
	"@aws-sdk/middleware-content-length": "3.347.0",
	"@aws-sdk/middleware-endpoint": "3.347.0",
	"@aws-sdk/middleware-host-header": "3.347.0",
	"@aws-sdk/middleware-logger": "3.347.0",
	"@aws-sdk/middleware-recursion-detection": "3.347.0",
	"@aws-sdk/middleware-retry": "3.354.0",
	"@aws-sdk/middleware-serde": "3.347.0",
	"@aws-sdk/middleware-signing": "3.354.0",
	"@aws-sdk/middleware-stack": "3.347.0",
	"@aws-sdk/middleware-user-agent": "3.352.0",
	"@aws-sdk/node-config-provider": "3.354.0",
	"@aws-sdk/node-http-handler": "3.350.0",
	"@aws-sdk/smithy-client": "3.347.0",
	"@aws-sdk/types": "3.347.0",
	"@aws-sdk/url-parser": "3.347.0",
	"@aws-sdk/util-base64": "3.310.0",
	"@aws-sdk/util-body-length-browser": "3.310.0",
	"@aws-sdk/util-body-length-node": "3.310.0",
	"@aws-sdk/util-defaults-mode-browser": "3.353.0",
	"@aws-sdk/util-defaults-mode-node": "3.354.0",
	"@aws-sdk/util-endpoints": "3.352.0",
	"@aws-sdk/util-retry": "3.347.0",
	"@aws-sdk/util-user-agent-browser": "3.347.0",
	"@aws-sdk/util-user-agent-node": "3.354.0",
	"@aws-sdk/util-utf8": "3.310.0",
	"@smithy/protocol-http": "^1.0.1",
	"@smithy/types": "^1.0.0",
	tslib: "^2.5.0"
};
const devDependencies = {
	"@aws-sdk/service-client-documentation-generator": "3.310.0",
	"@tsconfig/node14": "1.0.3",
	"@types/node": "^14.14.31",
	concurrently: "7.0.0",
	"downlevel-dts": "0.10.1",
	rimraf: "3.0.2",
	typedoc: "0.23.23",
	typescript: "~4.9.5"
};
const engines = {
	node: ">=14.0.0"
};
const typesVersions = {
	"<4.0": {
		"dist-types/*": [
			"dist-types/ts3.4/*"
		]
	}
};
const files = [
	"dist-*/**"
];
const author = {
	name: "AWS SDK for JavaScript Team",
	url: "https://aws.amazon.com/javascript/"
};
const license = "Apache-2.0";
const browser = {
	"./dist-es/runtimeConfig": "./dist-es/runtimeConfig.browser"
};
const homepage = "https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-iot-events";
const repository = {
	type: "git",
	url: "https://github.com/aws/aws-sdk-js-v3.git",
	directory: "clients/client-iot-events"
};
const packageInfo = {
	name: name,
	description: description,
	version: version,
	scripts: scripts,
	main: main,
	types: types,
	module: module,
	sideEffects: sideEffects,
	dependencies: dependencies,
	devDependencies: devDependencies,
	engines: engines,
	typesVersions: typesVersions,
	files: files,
	author: author,
	license: license,
	browser: browser,
	"react-native": {
	"./dist-es/runtimeConfig": "./dist-es/runtimeConfig.native"
},
	homepage: homepage,
	repository: repository
};

function buildQueryString(query) {
    const parts = [];
    for (let key of Object.keys(query).sort()) {
        const value = query[key];
        key = escapeUri(key);
        if (Array.isArray(value)) {
            for (let i = 0, iLen = value.length; i < iLen; i++) {
                parts.push(`${key}=${escapeUri(value[i])}`);
            }
        }
        else {
            let qsEntry = key;
            if (value || typeof value === "string") {
                qsEntry += `=${escapeUri(value)}`;
            }
            parts.push(qsEntry);
        }
    }
    return parts.join("&");
}

function requestTimeout(timeoutInMs = 0) {
    return new Promise((resolve, reject) => {
        if (timeoutInMs) {
            setTimeout(() => {
                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);
                timeoutError.name = "TimeoutError";
                reject(timeoutError);
            }, timeoutInMs);
        }
    });
}

class FetchHttpHandler {
    constructor(options) {
        if (typeof options === "function") {
            this.configProvider = options().then((opts) => opts || {});
        }
        else {
            this.config = options ?? {};
            this.configProvider = Promise.resolve(this.config);
        }
    }
    destroy() {
    }
    async handle(request, { abortSignal } = {}) {
        if (!this.config) {
            this.config = await this.configProvider;
        }
        const requestTimeoutInMs = this.config.requestTimeout;
        if (abortSignal?.aborted) {
            const abortError = new Error("Request aborted");
            abortError.name = "AbortError";
            return Promise.reject(abortError);
        }
        let path = request.path;
        const queryString = buildQueryString(request.query || {});
        if (queryString) {
            path += `?${queryString}`;
        }
        if (request.fragment) {
            path += `#${request.fragment}`;
        }
        let auth = "";
        if (request.username != null || request.password != null) {
            const username = request.username ?? "";
            const password = request.password ?? "";
            auth = `${username}:${password}@`;
        }
        const { port, method } = request;
        const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : ""}${path}`;
        const body = method === "GET" || method === "HEAD" ? undefined : request.body;
        const requestOptions = {
            body,
            headers: new Headers(request.headers),
            method: method,
        };
        if (typeof AbortController !== "undefined") {
            requestOptions["signal"] = abortSignal;
        }
        const fetchRequest = new Request(url, requestOptions);
        const raceOfPromises = [
            fetch(fetchRequest).then((response) => {
                const fetchHeaders = response.headers;
                const transformedHeaders = {};
                for (const pair of fetchHeaders.entries()) {
                    transformedHeaders[pair[0]] = pair[1];
                }
                const hasReadableStream = response.body != undefined;
                if (!hasReadableStream) {
                    return response.blob().then((body) => ({
                        response: new HttpResponse({
                            headers: transformedHeaders,
                            reason: response.statusText,
                            statusCode: response.status,
                            body,
                        }),
                    }));
                }
                return {
                    response: new HttpResponse({
                        headers: transformedHeaders,
                        reason: response.statusText,
                        statusCode: response.status,
                        body: response.body,
                    }),
                };
            }),
            requestTimeout(requestTimeoutInMs),
        ];
        if (abortSignal) {
            raceOfPromises.push(new Promise((resolve, reject) => {
                abortSignal.onabort = () => {
                    const abortError = new Error("Request aborted");
                    abortError.name = "AbortError";
                    reject(abortError);
                };
            }));
        }
        return Promise.race(raceOfPromises);
    }
}

const alphabetByEncoding = {};
const alphabetByValue = new Array(64);
for (let i = 0, start = "A".charCodeAt(0), limit = "Z".charCodeAt(0); i + start <= limit; i++) {
    const char = String.fromCharCode(i + start);
    alphabetByEncoding[char] = i;
    alphabetByValue[i] = char;
}
for (let i = 0, start = "a".charCodeAt(0), limit = "z".charCodeAt(0); i + start <= limit; i++) {
    const char = String.fromCharCode(i + start);
    const index = i + 26;
    alphabetByEncoding[char] = index;
    alphabetByValue[index] = char;
}
for (let i = 0; i < 10; i++) {
    alphabetByEncoding[i.toString(10)] = i + 52;
    const char = i.toString(10);
    const index = i + 52;
    alphabetByEncoding[char] = index;
    alphabetByValue[index] = char;
}
alphabetByEncoding["+"] = 62;
alphabetByValue[62] = "+";
alphabetByEncoding["/"] = 63;
alphabetByValue[63] = "/";
const bitsPerLetter = 6;
const bitsPerByte = 8;
const maxLetterValue = 0b111111;

const fromBase64 = (input) => {
    let totalByteLength = (input.length / 4) * 3;
    if (input.slice(-2) === "==") {
        totalByteLength -= 2;
    }
    else if (input.slice(-1) === "=") {
        totalByteLength--;
    }
    const out = new ArrayBuffer(totalByteLength);
    const dataView = new DataView(out);
    for (let i = 0; i < input.length; i += 4) {
        let bits = 0;
        let bitLength = 0;
        for (let j = i, limit = i + 3; j <= limit; j++) {
            if (input[j] !== "=") {
                if (!(input[j] in alphabetByEncoding)) {
                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);
                }
                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);
                bitLength += bitsPerLetter;
            }
            else {
                bits >>= bitsPerLetter;
            }
        }
        const chunkOffset = (i / 4) * 3;
        bits >>= bitLength % bitsPerByte;
        const byteLength = Math.floor(bitLength / bitsPerByte);
        for (let k = 0; k < byteLength; k++) {
            const offset = (byteLength - k - 1) * bitsPerByte;
            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);
        }
    }
    return new Uint8Array(out);
};

function toBase64(input) {
    let str = "";
    for (let i = 0; i < input.length; i += 3) {
        let bits = 0;
        let bitLength = 0;
        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {
            bits |= input[j] << ((limit - j - 1) * bitsPerByte);
            bitLength += bitsPerByte;
        }
        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);
        bits <<= bitClusterCount * bitsPerLetter - bitLength;
        for (let k = 1; k <= bitClusterCount; k++) {
            const offset = (bitClusterCount - k) * bitsPerLetter;
            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];
        }
        str += "==".slice(0, 4 - bitClusterCount);
    }
    return str;
}

const streamCollector = (stream) => {
    if (typeof Blob === "function" && stream instanceof Blob) {
        return collectBlob(stream);
    }
    return collectStream(stream);
};
async function collectBlob(blob) {
    const base64 = await readToBase64(blob);
    const arrayBuffer = fromBase64(base64);
    return new Uint8Array(arrayBuffer);
}
async function collectStream(stream) {
    let res = new Uint8Array(0);
    const reader = stream.getReader();
    let isDone = false;
    while (!isDone) {
        const { done, value } = await reader.read();
        if (value) {
            const prior = res;
            res = new Uint8Array(prior.length + value.length);
            res.set(prior);
            res.set(value, prior.length);
        }
        isDone = done;
    }
    return res;
}
function readToBase64(blob) {
    return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onloadend = () => {
            if (reader.readyState !== 2) {
                return reject(new Error("Reader aborted too early"));
            }
            const result = (reader.result ?? "");
            const commaIndex = result.indexOf(",");
            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;
            resolve(result.substring(dataOffset));
        };
        reader.onabort = () => reject(new Error("Read aborted"));
        reader.onerror = () => reject(reader.error);
        reader.readAsDataURL(blob);
    });
}

const invalidProvider = (message) => () => Promise.reject(message);

const calculateBodyLength = (body) => {
    if (typeof body === "string") {
        let len = body.length;
        for (let i = len - 1; i >= 0; i--) {
            const code = body.charCodeAt(i);
            if (code > 0x7f && code <= 0x7ff)
                len++;
            else if (code > 0x7ff && code <= 0xffff)
                len += 2;
            if (code >= 0xdc00 && code <= 0xdfff)
                i--;
        }
        return len;
    }
    else if (typeof body.byteLength === "number") {
        return body.byteLength;
    }
    else if (typeof body.size === "number") {
        return body.size;
    }
    throw new Error(`Body Length computation failed for ${body}`);
};

const defaultUserAgent = ({ serviceId, clientVersion }) => async () => {
    const parsedUA = typeof window !== "undefined" && window?.navigator?.userAgent
        ? bowser.parse(window.navigator.userAgent)
        : undefined;
    const sections = [
        ["aws-sdk-js", clientVersion],
        ["ua", "2.0"],
        [`os/${parsedUA?.os?.name || "other"}`, parsedUA?.os?.version],
        ["lang/js"],
        ["md/browser", `${parsedUA?.browser?.name ?? "unknown"}_${parsedUA?.browser?.version ?? "unknown"}`],
    ];
    if (serviceId) {
        sections.push([`api/${serviceId}`, clientVersion]);
    }
    return sections;
};

const p = "required", q = "fn", r = "argv", s = "ref";
const a = "PartitionResult", b = "tree", c = "error", d = "endpoint", e = { [p]: false, "type": "String" }, f = { [p]: true, "default": false, "type": "Boolean" }, g = { [s]: "Endpoint" }, h = { [q]: "booleanEquals", [r]: [{ [s]: "UseFIPS" }, true] }, i = { [q]: "booleanEquals", [r]: [{ [s]: "UseDualStack" }, true] }, j = {}, k = { [q]: "booleanEquals", [r]: [true, { [q]: "getAttr", [r]: [{ [s]: a }, "supportsFIPS"] }] }, l = { [q]: "booleanEquals", [r]: [true, { [q]: "getAttr", [r]: [{ [s]: a }, "supportsDualStack"] }] }, m = [g], n = [h], o = [i];
const _data = { version: "1.0", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: "aws.partition", [r]: [{ [s]: "Region" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: "isSet", [r]: m }, { [q]: "parseURL", [r]: m, assign: "url" }], type: b, rules: [{ conditions: n, error: "Invalid Configuration: FIPS and custom endpoint are not supported", type: c }, { type: b, rules: [{ conditions: o, error: "Invalid Configuration: Dualstack and custom endpoint are not supported", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: "https://iotevents-fips.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: j, headers: j }, type: d }] }, { error: "FIPS and DualStack are enabled, but this partition does not support one or both", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: "https://iotevents-fips.{Region}.{PartitionResult#dnsSuffix}", properties: j, headers: j }, type: d }] }] }, { error: "FIPS is enabled but this partition does not support FIPS", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: "https://iotevents.{Region}.{PartitionResult#dualStackDnsSuffix}", properties: j, headers: j }, type: d }] }, { error: "DualStack is enabled but this partition does not support DualStack", type: c }] }, { endpoint: { url: "https://iotevents.{Region}.{PartitionResult#dnsSuffix}", properties: j, headers: j }, type: d }] }] };
const ruleSet = _data;

const defaultEndpointResolver = (endpointParams, context = {}) => {
    return resolveEndpoint(ruleSet, {
        endpointParams: endpointParams,
        logger: context.logger,
    });
};

const getRuntimeConfig$1 = (config) => ({
    apiVersion: "2018-07-27",
    base64Decoder: config?.base64Decoder ?? fromBase64,
    base64Encoder: config?.base64Encoder ?? toBase64,
    disableHostPrefix: config?.disableHostPrefix ?? false,
    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,
    logger: config?.logger ?? new NoOpLogger(),
    serviceId: config?.serviceId ?? "IoT Events",
    urlParser: config?.urlParser ?? parseUrl,
    utf8Decoder: config?.utf8Decoder ?? fromUtf8,
    utf8Encoder: config?.utf8Encoder ?? toUtf8,
});

const DEFAULTS_MODE_OPTIONS = ["in-region", "cross-region", "mobile", "standard", "legacy"];

const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {
    const mode = typeof defaultsMode === "function" ? await defaultsMode() : defaultsMode;
    switch (mode?.toLowerCase()) {
        case "auto":
            return Promise.resolve(isMobileBrowser() ? "mobile" : "standard");
        case "mobile":
        case "in-region":
        case "cross-region":
        case "standard":
        case "legacy":
            return Promise.resolve(mode?.toLocaleLowerCase());
        case undefined:
            return Promise.resolve("legacy");
        default:
            throw new Error(`Invalid parameter for "defaultsMode", expect ${DEFAULTS_MODE_OPTIONS.join(", ")}, got ${mode}`);
    }
});
const isMobileBrowser = () => {
    const parsedUA = typeof window !== "undefined" && window?.navigator?.userAgent
        ? bowser.parse(window.navigator.userAgent)
        : undefined;
    const platform = parsedUA?.platform?.type;
    return platform === "tablet" || platform === "mobile";
};

const getRuntimeConfig = (config) => {
    const defaultsMode = resolveDefaultsModeConfig(config);
    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);
    const clientSharedValues = getRuntimeConfig$1(config);
    return {
        ...clientSharedValues,
        ...config,
        runtime: "browser",
        defaultsMode,
        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,
        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error("Credential is missing"))),
        defaultUserAgentProvider: config?.defaultUserAgentProvider ??
            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),
        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,
        region: config?.region ?? invalidProvider("Region is missing"),
        requestHandler: config?.requestHandler ?? new FetchHttpHandler(defaultConfigProvider),
        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),
        sha256: config?.sha256 ?? build.Sha256,
        streamCollector: config?.streamCollector ?? streamCollector,
        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),
        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),
    };
};

class IoTEventsClient extends Client {
    constructor(configuration) {
        const _config_0 = getRuntimeConfig(configuration);
        const _config_1 = resolveClientEndpointParameters(_config_0);
        const _config_2 = resolveRegionConfig(_config_1);
        const _config_3 = resolveEndpointConfig(_config_2);
        const _config_4 = resolveRetryConfig(_config_3);
        const _config_5 = resolveHostHeaderConfig(_config_4);
        const _config_6 = resolveAwsAuthConfig(_config_5);
        const _config_7 = resolveUserAgentConfig(_config_6);
        super(_config_7);
        this.config = _config_7;
        this.middlewareStack.use(getRetryPlugin(this.config));
        this.middlewareStack.use(getContentLengthPlugin(this.config));
        this.middlewareStack.use(getHostHeaderPlugin(this.config));
        this.middlewareStack.use(getLoggerPlugin());
        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));
        this.middlewareStack.use(getAwsAuthPlugin(this.config));
        this.middlewareStack.use(getUserAgentPlugin(this.config));
    }
    destroy() {
        super.destroy();
    }
}

var HttpAuthLocation;
(function (HttpAuthLocation) {
    HttpAuthLocation["HEADER"] = "header";
    HttpAuthLocation["QUERY"] = "query";
})(HttpAuthLocation || (HttpAuthLocation = {}));

var EndpointURLScheme;
(function (EndpointURLScheme) {
    EndpointURLScheme["HTTP"] = "http";
    EndpointURLScheme["HTTPS"] = "https";
})(EndpointURLScheme || (EndpointURLScheme = {}));

var FieldPosition;
(function (FieldPosition) {
    FieldPosition[FieldPosition["HEADER"] = 0] = "HEADER";
    FieldPosition[FieldPosition["TRAILER"] = 1] = "TRAILER";
})(FieldPosition || (FieldPosition = {}));

var RequestHandlerProtocol;
(function (RequestHandlerProtocol) {
    RequestHandlerProtocol["HTTP_0_9"] = "http/0.9";
    RequestHandlerProtocol["HTTP_1_0"] = "http/1.0";
    RequestHandlerProtocol["TDS_8_0"] = "tds/8.0";
})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));

class HttpRequest {
    constructor(options) {
        this.method = options.method || "GET";
        this.hostname = options.hostname || "localhost";
        this.port = options.port;
        this.query = options.query || {};
        this.headers = options.headers || {};
        this.body = options.body;
        this.protocol = options.protocol
            ? options.protocol.slice(-1) !== ":"
                ? `${options.protocol}:`
                : options.protocol
            : "https:";
        this.path = options.path ? (options.path.charAt(0) !== "/" ? `/${options.path}` : options.path) : "/";
        this.username = options.username;
        this.password = options.password;
        this.fragment = options.fragment;
    }
    static isInstance(request) {
        if (!request)
            return false;
        const req = request;
        return ("method" in req &&
            "protocol" in req &&
            "hostname" in req &&
            "path" in req &&
            typeof req["query"] === "object" &&
            typeof req["headers"] === "object");
    }
    clone() {
        const cloned = new HttpRequest({
            ...this,
            headers: { ...this.headers },
        });
        if (cloned.query)
            cloned.query = cloneQuery(cloned.query);
        return cloned;
    }
}
function cloneQuery(query) {
    return Object.keys(query).reduce((carry, paramName) => {
        const param = query[paramName];
        return {
            ...carry,
            [paramName]: Array.isArray(param) ? [...param] : param,
        };
    }, {});
}

const se_DescribeAlarmModelCommand = async (input, context) => {
    const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
    const headers = {};
    let resolvedPath$1 = `${basePath?.endsWith("/") ? basePath.slice(0, -1) : basePath || ""}` + "/alarm-models/{alarmModelName}";
    resolvedPath$1 = resolvedPath(resolvedPath$1, input, "alarmModelName", () => input.alarmModelName, "{alarmModelName}", false);
    const query = map$2({
        version: [, input.alarmModelVersion],
    });
    let body;
    return new HttpRequest({
        protocol,
        hostname,
        port,
        method: "GET",
        headers,
        path: resolvedPath$1,
        query,
        body,
    });
};
const de_DescribeAlarmModelCommand = async (output, context) => {
    if (output.statusCode !== 200 && output.statusCode >= 300) {
        return de_DescribeAlarmModelCommandError(output, context);
    }
    const contents = map$2({
        $metadata: deserializeMetadata(output),
    });
    const data = expectNonNull(expectObject(await parseBody(output.body, context)), "body");
    const doc = take$1(data, {
        alarmCapabilities: _json,
        alarmEventActions: _json,
        alarmModelArn: expectString,
        alarmModelDescription: expectString,
        alarmModelName: expectString,
        alarmModelVersion: expectString,
        alarmNotification: _json,
        alarmRule: _json,
        creationTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
        key: expectString,
        lastUpdateTime: (_) => expectNonNull(parseEpochTimestamp(expectNumber(_))),
        roleArn: expectString,
        severity: expectInt32,
        status: expectString,
        statusMessage: expectString,
    });
    Object.assign(contents, doc);
    return contents;
};
const de_DescribeAlarmModelCommandError = async (output, context) => {
    const parsedOutput = {
        ...output,
        body: await parseErrorBody(output.body, context),
    };
    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);
    switch (errorCode) {
        case "InternalFailureException":
        case "com.amazonaws.iotevents#InternalFailureException":
            throw await de_InternalFailureExceptionRes(parsedOutput);
        case "InvalidRequestException":
        case "com.amazonaws.iotevents#InvalidRequestException":
            throw await de_InvalidRequestExceptionRes(parsedOutput);
        case "ResourceNotFoundException":
        case "com.amazonaws.iotevents#ResourceNotFoundException":
            throw await de_ResourceNotFoundExceptionRes(parsedOutput);
        case "ServiceUnavailableException":
        case "com.amazonaws.iotevents#ServiceUnavailableException":
            throw await de_ServiceUnavailableExceptionRes(parsedOutput);
        case "ThrottlingException":
        case "com.amazonaws.iotevents#ThrottlingException":
            throw await de_ThrottlingExceptionRes(parsedOutput);
        default:
            const parsedBody = parsedOutput.body;
            return throwDefaultError({
                output,
                parsedBody,
                errorCode,
            });
    }
};
const throwDefaultError = withBaseException(IoTEventsServiceException);
const de_InternalFailureExceptionRes = async (parsedOutput, context) => {
    const contents = map$2({});
    const data = parsedOutput.body;
    const doc = take$1(data, {
        message: expectString,
    });
    Object.assign(contents, doc);
    const exception = new InternalFailureException({
        $metadata: deserializeMetadata(parsedOutput),
        ...contents,
    });
    return decorateServiceException(exception, parsedOutput.body);
};
const de_InvalidRequestExceptionRes = async (parsedOutput, context) => {
    const contents = map$2({});
    const data = parsedOutput.body;
    const doc = take$1(data, {
        message: expectString,
    });
    Object.assign(contents, doc);
    const exception = new InvalidRequestException({
        $metadata: deserializeMetadata(parsedOutput),
        ...contents,
    });
    return decorateServiceException(exception, parsedOutput.body);
};
const de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {
    const contents = map$2({});
    const data = parsedOutput.body;
    const doc = take$1(data, {
        message: expectString,
    });
    Object.assign(contents, doc);
    const exception = new ResourceNotFoundException({
        $metadata: deserializeMetadata(parsedOutput),
        ...contents,
    });
    return decorateServiceException(exception, parsedOutput.body);
};
const de_ServiceUnavailableExceptionRes = async (parsedOutput, context) => {
    const contents = map$2({});
    const data = parsedOutput.body;
    const doc = take$1(data, {
        message: expectString,
    });
    Object.assign(contents, doc);
    const exception = new ServiceUnavailableException({
        $metadata: deserializeMetadata(parsedOutput),
        ...contents,
    });
    return decorateServiceException(exception, parsedOutput.body);
};
const de_ThrottlingExceptionRes = async (parsedOutput, context) => {
    const contents = map$2({});
    const data = parsedOutput.body;
    const doc = take$1(data, {
        message: expectString,
    });
    Object.assign(contents, doc);
    const exception = new ThrottlingException({
        $metadata: deserializeMetadata(parsedOutput),
        ...contents,
    });
    return decorateServiceException(exception, parsedOutput.body);
};
const deserializeMetadata = (output) => ({
    httpStatusCode: output.statusCode,
    requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
    extendedRequestId: output.headers["x-amz-id-2"],
    cfId: output.headers["x-amz-cf-id"],
});
const collectBody = (streamBody = new Uint8Array(), context) => {
    if (streamBody instanceof Uint8Array) {
        return Promise.resolve(streamBody);
    }
    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
};
const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));
const parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {
    if (encoded.length) {
        return JSON.parse(encoded);
    }
    return {};
});
const parseErrorBody = async (errorBody, context) => {
    const value = await parseBody(errorBody, context);
    value.message = value.message ?? value.Message;
    return value;
};
const loadRestJsonErrorCode = (output, data) => {
    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());
    const sanitizeErrorCode = (rawValue) => {
        let cleanValue = rawValue;
        if (typeof cleanValue === "number") {
            cleanValue = cleanValue.toString();
        }
        if (cleanValue.indexOf(",") >= 0) {
            cleanValue = cleanValue.split(",")[0];
        }
        if (cleanValue.indexOf(":") >= 0) {
            cleanValue = cleanValue.split(":")[0];
        }
        if (cleanValue.indexOf("#") >= 0) {
            cleanValue = cleanValue.split("#")[1];
        }
        return cleanValue;
    };
    const headerKey = findKey(output.headers, "x-amzn-errortype");
    if (headerKey !== undefined) {
        return sanitizeErrorCode(output.headers[headerKey]);
    }
    if (data.code !== undefined) {
        return sanitizeErrorCode(data.code);
    }
    if (data["__type"] !== undefined) {
        return sanitizeErrorCode(data["__type"]);
    }
};

class DescribeAlarmModelCommand extends Command {
    static getEndpointParameterInstructions() {
        return {
            UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
            Endpoint: { type: "builtInParams", name: "endpoint" },
            Region: { type: "builtInParams", name: "region" },
            UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" },
        };
    }
    constructor(input) {
        super();
        this.input = input;
    }
    resolveMiddleware(clientStack, configuration, options) {
        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeAlarmModelCommand.getEndpointParameterInstructions()));
        const stack = clientStack.concat(this.middlewareStack);
        const { logger } = configuration;
        const clientName = "IoTEventsClient";
        const commandName = "DescribeAlarmModelCommand";
        const handlerExecutionContext = {
            logger,
            clientName,
            commandName,
            inputFilterSensitiveLog: (_) => _,
            outputFilterSensitiveLog: (_) => _,
        };
        const { requestHandler } = configuration;
        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);
    }
    serialize(input, context) {
        return se_DescribeAlarmModelCommand(input, context);
    }
    deserialize(output, context) {
        return de_DescribeAlarmModelCommand(output, context);
    }
}

const isHistoricalViewport = (viewport) => 'start' in viewport && 'end' in viewport;

const SECOND_IN_MS$2 = 1000;
const MINUTE_IN_MS = 60 * SECOND_IN_MS$2;
const parseDuration = (duration) => {
    if (typeof duration === 'number') {
        return duration;
    }
    const parsedTime = parse(duration, 'ms');
    // if duration is a string but we cannot parse it, we default to 10 mins.
    return parsedTime != null ? parsedTime : 10 * MINUTE_IN_MS;
};

// Something that is not likely to occur in any UUID implementation
const ID_SEPARATOR$1 = '---';
const toSiteWiseAssetProperty = (dataStreamId) => {
    if (!dataStreamId.includes(ID_SEPARATOR$1)) {
        throw new Error(`Invalid id ${dataStreamId}, expected to find the separator ${ID_SEPARATOR$1} but it was not found`);
    }
    const [assetId, propertyId] = dataStreamId.split(ID_SEPARATOR$1);
    return {
        assetId,
        propertyId,
    };
};

// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
let getRandomValues;
const rnds8 = new Uint8Array(16);
function rng() {
  // lazy load so that environments that need to polyfill have a chance to do so
  if (!getRandomValues) {
    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.
    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);

    if (!getRandomValues) {
      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
    }
  }

  return getRandomValues(rnds8);
}

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).slice(1));
}

function unsafeStringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
}

const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);
const native = {
  randomUUID
};

function v4(options, buf, offset) {
  if (native.randomUUID && !buf && !options) {
    return native.randomUUID();
  }

  options = options || {};
  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return unsafeStringify(rnds);
}

const viewportStartDate = (viewport, currentDate) => isHistoricalViewport(viewport)
    ? new Date(viewport.start)
    : new Date(((currentDate === null || currentDate === void 0 ? void 0 : currentDate.getTime()) || Date.now()) -
        parseDuration(viewport.duration));
const viewportEndDate = (viewport, currentDate) => {
    return isHistoricalViewport(viewport)
        ? new Date(viewport.end)
        : currentDate || new Date(Date.now());
};

const DEFAULT_REFRESH_RATE = 5 * SECOND_IN_MS$2;
class RequestScheduler {
    constructor() {
        this.intervalMap = {};
        this.isScheduled = (id) => id in this.intervalMap;
        this.handleVisibilityChange = () => {
            if (!document.hidden) {
                this.synchronizeIntervals();
            }
        };
        this.resetInterval = (id, synchronize = true) => {
            const existingInterval = this.intervalMap[id];
            if (existingInterval) {
                this.remove(id);
                this.create({ id, ...existingInterval, synchronize });
            }
        };
        // Ensure intervals are reset when the page is visible again to keep them in sync
        document.addEventListener('visibilitychange', this.handleVisibilityChange);
    }
    create({ id, refreshRate = DEFAULT_REFRESH_RATE, refreshExpiration, cb, synchronize = true, }) {
        if (this.isScheduled(id)) {
            return;
        }
        const isExpired = () => refreshExpiration && Date.now() >= refreshExpiration;
        if (isExpired()) {
            return;
        }
        const intervalId = setInterval(() => {
            if (isExpired()) {
                this.remove(id);
                return;
            }
            cb();
        }, refreshRate);
        this.intervalMap[id] = { intervalId, refreshRate, refreshExpiration, cb };
        if (synchronize) {
            this.synchronizeIntervals();
        }
    }
    remove(id) {
        if (!this.isScheduled(id)) {
            return;
        }
        clearInterval(this.intervalMap[id].intervalId);
        delete this.intervalMap[id];
    }
    synchronizeIntervals() {
        Object.keys(this.intervalMap).forEach((id) => {
            this.resetInterval(id, false);
        });
    }
}

const getDataStreamStore = (dataStreamId, resolution, store, aggregationType) => {
    var _a, _b, _c;
    const resolutionStreamStore = (_a = store === null || store === void 0 ? void 0 : store[dataStreamId]) === null || _a === void 0 ? void 0 : _a.resolutions;
    const rawDataStreamStore = (_b = store === null || store === void 0 ? void 0 : store[dataStreamId]) === null || _b === void 0 ? void 0 : _b.rawData;
    const parsedDuration = parseDuration(resolution);
    if (parsedDuration === 0 && rawDataStreamStore) {
        return rawDataStreamStore;
    }
    else if (resolutionStreamStore && aggregationType) {
        return (_c = resolutionStreamStore[parsedDuration]) === null || _c === void 0 ? void 0 : _c[aggregationType];
    }
    return undefined;
};

function _isPlaceholder(a) {
       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
}

/**
 * Optimized internal one-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */
function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
}

/**
 * Optimized internal two-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */
function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
          return fn(a, _b);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b);
        }) : fn(a, b);
    }
  };
}

/**
 * Private `concat` function to merge two array-like objects.
 *
 * @private
 * @param {Array|Arguments} [set1=[]] An array-like object.
 * @param {Array|Arguments} [set2=[]] An array-like object.
 * @return {Array} A new, merged array.
 * @example
 *
 *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]
 */
function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
}

function _arity(n, fn) {
  /* eslint-disable no-unused-vars */
  switch (n) {
    case 0:
      return function () {
        return fn.apply(this, arguments);
      };
    case 1:
      return function (a0) {
        return fn.apply(this, arguments);
      };
    case 2:
      return function (a0, a1) {
        return fn.apply(this, arguments);
      };
    case 3:
      return function (a0, a1, a2) {
        return fn.apply(this, arguments);
      };
    case 4:
      return function (a0, a1, a2, a3) {
        return fn.apply(this, arguments);
      };
    case 5:
      return function (a0, a1, a2, a3, a4) {
        return fn.apply(this, arguments);
      };
    case 6:
      return function (a0, a1, a2, a3, a4, a5) {
        return fn.apply(this, arguments);
      };
    case 7:
      return function (a0, a1, a2, a3, a4, a5, a6) {
        return fn.apply(this, arguments);
      };
    case 8:
      return function (a0, a1, a2, a3, a4, a5, a6, a7) {
        return fn.apply(this, arguments);
      };
    case 9:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
        return fn.apply(this, arguments);
      };
    case 10:
      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        return fn.apply(this, arguments);
      };
    default:
      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
}

/**
 * Internal curryN function.
 *
 * @private
 * @category Function
 * @param {Number} length The arity of the curried function.
 * @param {Array} received An array of arguments received thus far.
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */
function _curryN(length, received, fn) {
  return function () {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
  };
}

/**
 * Returns a curried equivalent of the provided function, with the specified
 * arity. The curried function has two unusual capabilities. First, its
 * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the
 * following are equivalent:
 *
 *   - `g(1)(2)(3)`
 *   - `g(1)(2, 3)`
 *   - `g(1, 2)(3)`
 *   - `g(1, 2, 3)`
 *
 * Secondly, the special placeholder value [`R.__`](#__) may be used to specify
 * "gaps", allowing partial application of any combination of arguments,
 * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),
 * the following are equivalent:
 *
 *   - `g(1, 2, 3)`
 *   - `g(_, 2, 3)(1)`
 *   - `g(_, _, 3)(1)(2)`
 *   - `g(_, _, 3)(1, 2)`
 *   - `g(_, 2)(1)(3)`
 *   - `g(_, 2)(1, 3)`
 *   - `g(_, 2)(_, 3)(1)`
 *
 * @func
 * @memberOf R
 * @since v0.5.0
 * @category Function
 * @sig Number -> (* -> a) -> (* -> a)
 * @param {Number} length The arity for the returned function.
 * @param {Function} fn The function to curry.
 * @return {Function} A new, curried function.
 * @see R.curry
 * @example
 *
 *      var sumArgs = (...args) => R.sum(args);
 *
 *      var curriedAddFourNumbers = R.curryN(4, sumArgs);
 *      var f = curriedAddFourNumbers(1, 2);
 *      var g = f(3);
 *      g(4); //=> 10
 */
var curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});

/**
 * Optimized internal three-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */
function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _curry1(function (_c) {
          return fn(a, b, _c);
        });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
          return fn(_a, _b, c);
        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
          return fn(_a, b, _c);
        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
          return fn(a, _b, _c);
        }) : _isPlaceholder(a) ? _curry1(function (_a) {
          return fn(_a, b, c);
        }) : _isPlaceholder(b) ? _curry1(function (_b) {
          return fn(a, _b, c);
        }) : _isPlaceholder(c) ? _curry1(function (_c) {
          return fn(a, b, _c);
        }) : fn(a, b, c);
    }
  };
}

/**
 * Tests whether or not an object is an array.
 *
 * @private
 * @param {*} val The object to test.
 * @return {Boolean} `true` if `val` is an array, `false` otherwise.
 * @example
 *
 *      _isArray([]); //=> true
 *      _isArray(null); //=> false
 *      _isArray({}); //=> false
 */
const _isArray = Array.isArray || function _isArray(val) {
  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
};

function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
}

/**
 * Returns a function that dispatches with different strategies based on the
 * object in list position (last argument). If it is an array, executes [fn].
 * Otherwise, if it has a function with one of the given method names, it will
 * execute that function (functor case). Otherwise, if it is a transformer,
 * uses transducer [xf] to return a new transformer (transducer case).
 * Otherwise, it will default to executing [fn].
 *
 * @private
 * @param {Array} methodNames properties to check for a custom implementation
 * @param {Function} xf transducer to initialize if object is transformer
 * @param {Function} fn default ramda implementation
 * @return {Function} A function that dispatches on object in list position
 */
function _dispatchable(methodNames, xf, fn) {
  return function () {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
}

function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x : {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
}

const _xfBase = {
  init: function () {
    return this.xf['@@transducer/init']();
  },
  result: function (result) {
    return this.xf['@@transducer/result'](result);
  }
};

/**
 * Returns the larger of its two arguments.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord a => a -> a -> a
 * @param {*} a
 * @param {*} b
 * @return {*}
 * @see R.maxBy, R.min
 * @example
 *
 *      R.max(789, 123); //=> 789
 *      R.max('a', 'b'); //=> 'b'
 */
var max = /*#__PURE__*/_curry2(function max(a, b) {
  return b > a ? b : a;
});

function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
}

function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
}

/**
 * Tests whether or not an object is similar to an array.
 *
 * @private
 * @category Type
 * @category List
 * @sig * -> Boolean
 * @param {*} x The object to test.
 * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.
 * @example
 *
 *      _isArrayLike([]); //=> true
 *      _isArrayLike(true); //=> false
 *      _isArrayLike({}); //=> false
 *      _isArrayLike({length: 10}); //=> false
 *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true
 */
var _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {
  if (_isArray(x)) {
    return true;
  }
  if (!x) {
    return false;
  }
  if (typeof x !== 'object') {
    return false;
  }
  if (_isString(x)) {
    return false;
  }
  if (x.nodeType === 1) {
    return !!x.length;
  }
  if (x.length === 0) {
    return true;
  }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});

var XWrap = /*#__PURE__*/function () {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function () {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function (acc) {
    return acc;
  };
  XWrap.prototype['@@transducer/step'] = function (acc, x) {
    return this.f(acc, x);
  };

  return XWrap;
}();

function _xwrap(fn) {
  return new XWrap(fn);
}

/**
 * Creates a function that is bound to a context.
 * Note: `R.bind` does not provide the additional argument-binding capabilities of
 * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).
 *
 * @func
 * @memberOf R
 * @since v0.6.0
 * @category Function
 * @category Object
 * @sig (* -> *) -> {*} -> (* -> *)
 * @param {Function} fn The function to bind to context
 * @param {Object} thisObj The context to bind `fn` to
 * @return {Function} A function that will execute in the context of `thisObj`.
 * @see R.partial
 * @example
 *
 *      var log = R.bind(console.log, console);
 *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}
 *      // logs {a: 2}
 * @symb R.bind(f, o)(a, b) = f.call(o, a, b)
 */
var bind$1 = /*#__PURE__*/_curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function () {
    return fn.apply(thisObj, arguments);
  });
});

function _arrayReduce(xf, acc, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    acc = xf['@@transducer/step'](acc, list[idx]);
    if (acc && acc['@@transducer/reduced']) {
      acc = acc['@@transducer/value'];
      break;
    }
    idx += 1;
  }
  return xf['@@transducer/result'](acc);
}

function _iterableReduce(xf, acc, iter) {
  var step = iter.next();
  while (!step.done) {
    acc = xf['@@transducer/step'](acc, step.value);
    if (acc && acc['@@transducer/reduced']) {
      acc = acc['@@transducer/value'];
      break;
    }
    step = iter.next();
  }
  return xf['@@transducer/result'](acc);
}

function _methodReduce(xf, acc, obj, methodName) {
  return xf['@@transducer/result'](obj[methodName](bind$1(xf['@@transducer/step'], xf), acc));
}

var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';

function _reduce(fn, acc, list) {
  if (typeof fn === 'function') {
    fn = _xwrap(fn);
  }
  if (_isArrayLike(list)) {
    return _arrayReduce(fn, acc, list);
  }
  if (typeof list['fantasy-land/reduce'] === 'function') {
    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
  }
  if (list[symIterator] != null) {
    return _iterableReduce(fn, acc, list[symIterator]());
  }
  if (typeof list.next === 'function') {
    return _iterableReduce(fn, acc, list);
  }
  if (typeof list.reduce === 'function') {
    return _methodReduce(fn, acc, list, 'reduce');
  }

  throw new TypeError('reduce: list must be array or iterable');
}

var XMap = /*#__PURE__*/function () {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function (result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return XMap;
}();

var _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {
  return new XMap(f, xf);
});

function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var toString$1 = Object.prototype.toString;
var _isArguments = function () {
  return toString$1.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
    return toString$1.call(x) === '[object Arguments]';
  } : function _isArguments(x) {
    return _has('callee', x);
  };
};

// cover IE < 9 keys issues
var hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');
var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];
// Safari bug
var hasArgsEnumBug = /*#__PURE__*/function () {

  return arguments.propertyIsEnumerable('length');
}();

var contains = function contains(list, item) {
  var idx = 0;
  while (idx < list.length) {
    if (list[idx] === item) {
      return true;
    }
    idx += 1;
  }
  return false;
};

/**
 * Returns a list containing the names of all the enumerable own properties of
 * the supplied object.
 * Note that the order of the output array is not guaranteed to be consistent
 * across different JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig {k: v} -> [k]
 * @param {Object} obj The object to extract properties from
 * @return {Array} An array of the object's own properties.
 * @see R.keysIn, R.values
 * @example
 *
 *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']
 */
var _keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? function keys(obj) {
  return Object(obj) !== obj ? [] : Object.keys(obj);
} : function keys(obj) {
  if (Object(obj) !== obj) {
    return [];
  }
  var prop, nIdx;
  var ks = [];
  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
  for (prop in obj) {
    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
      ks[ks.length] = prop;
    }
  }
  if (hasEnumBug) {
    nIdx = nonEnumerableProps.length - 1;
    while (nIdx >= 0) {
      prop = nonEnumerableProps[nIdx];
      if (_has(prop, obj) && !contains(ks, prop)) {
        ks[ks.length] = prop;
      }
      nIdx -= 1;
    }
  }
  return ks;
};
var keys = /*#__PURE__*/_curry1(_keys);

/**
 * Takes a function and
 * a [functor](https://github.com/fantasyland/fantasy-land#functor),
 * applies the function to each of the functor's values, and returns
 * a functor of the same shape.
 *
 * Ramda provides suitable `map` implementations for `Array` and `Object`,
 * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.
 *
 * Dispatches to the `map` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * Also treats functions as functors and will compose them together.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Functor f => (a -> b) -> f a -> f b
 * @param {Function} fn The function to be called on every element of the input `list`.
 * @param {Array} list The list to be iterated over.
 * @return {Array} The new list.
 * @see R.transduce, R.addIndex
 * @example
 *
 *      var double = x => x * 2;
 *
 *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]
 *
 *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}
 * @symb R.map(f, [a, b]) = [f(a), f(b)]
 * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }
 * @symb R.map(f, functor_o) = functor_o.map(f)
 */
var map$1 = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function () {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function (acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));

/**
 * Retrieve the value at a given path.
 *
 * @func
 * @memberOf R
 * @since v0.2.0
 * @category Object
 * @typedefn Idx = String | Int
 * @sig [Idx] -> {a} -> a | Undefined
 * @param {Array} path The path to use.
 * @param {Object} obj The object to retrieve the nested property from.
 * @return {*} The data at `path`.
 * @see R.prop
 * @example
 *
 *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2
 *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined
 */
var path = /*#__PURE__*/_curry2(function path(paths, obj) {
  var val = obj;
  var idx = 0;
  while (idx < paths.length) {
    if (val == null) {
      return;
    }
    val = val[paths[idx]];
    idx += 1;
  }
  return val;
});

/**
 * Returns a function that when supplied an object returns the indicated
 * property of that object, if it exists.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig s -> {s: a} -> a | Undefined
 * @param {String} p The property name
 * @param {Object} obj The object to query
 * @return {*} The value at `obj.p`.
 * @see R.path
 * @example
 *
 *      R.prop('x', {x: 100}); //=> 100
 *      R.prop('x', {}); //=> undefined
 */

var prop = /*#__PURE__*/_curry2(function prop(p, obj) {
  return path([p], obj);
});

/**
 * Returns a new list by plucking the same named property off all objects in
 * the list supplied.
 *
 * `pluck` will work on
 * any [functor](https://github.com/fantasyland/fantasy-land#functor) in
 * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Functor f => k -> f {k: v} -> f v
 * @param {Number|String} key The key name to pluck off of each object.
 * @param {Array} f The array or functor to consider.
 * @return {Array} The list of values for the given key.
 * @see R.props
 * @example
 *
 *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]
 *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]
 *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}
 * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]
 * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]
 */
var pluck = /*#__PURE__*/_curry2(function pluck(p, list) {
  return map$1(prop(p), list);
});

/**
 * Returns a single item by iterating through the list, successively calling
 * the iterator function and passing it an accumulator value and the current
 * value from the array, and then passing the result to the next call.
 *
 * The iterator function receives two values: *(acc, value)*. It may use
 * [`R.reduced`](#reduced) to shortcut the iteration.
 *
 * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function
 * is *(value, acc)*.
 *
 * Note: `R.reduce` does not skip deleted or unassigned indices (sparse
 * arrays), unlike the native `Array.prototype.reduce` method. For more details
 * on this behavior, see:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description
 *
 * Dispatches to the `reduce` method of the third argument, if present. When
 * doing so, it is up to the user to handle the [`R.reduced`](#reduced)
 * shortcuting, as this is not implemented by `reduce`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig ((a, b) -> a) -> a -> [b] -> a
 * @param {Function} fn The iterator function. Receives two values, the accumulator and the
 *        current element from the array.
 * @param {*} acc The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.reduced, R.addIndex, R.reduceRight
 * @example
 *
 *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10
 *      //          -               -10
 *      //         / \              / \
 *      //        -   4           -6   4
 *      //       / \              / \
 *      //      -   3   ==>     -3   3
 *      //     / \              / \
 *      //    -   2           -1   2
 *      //   / \              / \
 *      //  0   1            0   1
 *
 * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)
 */
var reduce = /*#__PURE__*/_curry3(_reduce);

var XAny = /*#__PURE__*/function () {
  function XAny(f, xf) {
    this.xf = xf;
    this.f = f;
    this.any = false;
  }
  XAny.prototype['@@transducer/init'] = _xfBase.init;
  XAny.prototype['@@transducer/result'] = function (result) {
    if (!this.any) {
      result = this.xf['@@transducer/step'](result, false);
    }
    return this.xf['@@transducer/result'](result);
  };
  XAny.prototype['@@transducer/step'] = function (result, input) {
    if (this.f(input)) {
      this.any = true;
      result = _reduced(this.xf['@@transducer/step'](result, true));
    }
    return result;
  };

  return XAny;
}();

var _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {
  return new XAny(f, xf);
});

/**
 * Returns `true` if at least one of elements of the list match the predicate,
 * `false` otherwise.
 *
 * Dispatches to the `any` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> Boolean
 * @param {Function} fn The predicate function.
 * @param {Array} list The array to consider.
 * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`
 *         otherwise.
 * @see R.all, R.none, R.transduce
 * @example
 *
 *      var lessThan0 = R.flip(R.lt)(0);
 *      var lessThan2 = R.flip(R.lt)(2);
 *      R.any(lessThan0)([1, 2]); //=> false
 *      R.any(lessThan2)([1, 2]); //=> true
 */
var any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {
  var idx = 0;
  while (idx < list.length) {
    if (fn(list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
}));

/**
 * ap applies a list of functions to a list of values.
 *
 * Dispatches to the `ap` method of the second argument, if present. Also
 * treats curried functions as applicatives.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Function
 * @sig [a -> b] -> [a] -> [b]
 * @sig Apply f => f (a -> b) -> f a -> f b
 * @sig (a -> b -> c) -> (a -> b) -> (a -> c)
 * @param {*} applyF
 * @param {*} applyX
 * @return {*}
 * @example
 *
 *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]
 *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> ["tasty pizza", "tasty salad", "PIZZA", "SALAD"]
 *
 *      // R.ap can also be used as S combinator
 *      // when only two functions are passed
 *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'
 * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]
 */
var ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {
  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {
    return applyF(x)(applyX(x));
  } :
  // else
  _reduce(function (acc, f) {
    return _concat(acc, map$1(f, applyX));
  }, [], applyF);
});

function _aperture(n, list) {
  var idx = 0;
  var limit = list.length - (n - 1);
  var acc = new Array(limit >= 0 ? limit : 0);
  while (idx < limit) {
    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);
    idx += 1;
  }
  return acc;
}

var XAperture = /*#__PURE__*/function () {
  function XAperture(n, xf) {
    this.xf = xf;
    this.pos = 0;
    this.full = false;
    this.acc = new Array(n);
  }
  XAperture.prototype['@@transducer/init'] = _xfBase.init;
  XAperture.prototype['@@transducer/result'] = function (result) {
    this.acc = null;
    return this.xf['@@transducer/result'](result);
  };
  XAperture.prototype['@@transducer/step'] = function (result, input) {
    this.store(input);
    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
  };
  XAperture.prototype.store = function (input) {
    this.acc[this.pos] = input;
    this.pos += 1;
    if (this.pos === this.acc.length) {
      this.pos = 0;
      this.full = true;
    }
  };
  XAperture.prototype.getCopy = function () {
    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
  };

  return XAperture;
}();

var _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {
  return new XAperture(n, xf);
});

/**
 * Returns a new list, composed of n-tuples of consecutive elements. If `n` is
 * greater than the length of the list, an empty list is returned.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category List
 * @sig Number -> [a] -> [[a]]
 * @param {Number} n The size of the tuples to create
 * @param {Array} list The list to split into `n`-length tuples
 * @return {Array} The resulting list of `n`-length tuples
 * @see R.transduce
 * @example
 *
 *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]
 *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]
 *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []
 */
var aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));

/**
 * Applies function `fn` to the argument list `args`. This is useful for
 * creating a fixed-arity function from a variadic function. `fn` should be a
 * bound function if context is significant.
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig (*... -> a) -> [*] -> a
 * @param {Function} fn The function which will be called with `args`
 * @param {Array} args The arguments to call `fn` with
 * @return {*} result The result, equivalent to `fn(...args)`
 * @see R.call, R.unapply
 * @example
 *
 *      var nums = [1, 2, 3, -99, 42, 6, 7];
 *      R.apply(Math.max, nums); //=> 42
 * @symb R.apply(f, [a, b, c]) = f(a, b, c)
 */
var apply = /*#__PURE__*/_curry2(function apply(fn, args) {
  return fn.apply(this, args);
});

/**
 * Returns a list of all the enumerable own properties of the supplied object.
 * Note that the order of the output array is not guaranteed across different
 * JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig {k: v} -> [v]
 * @param {Object} obj The object to extract values from
 * @return {Array} An array of the values of the object's own properties.
 * @see R.valuesIn, R.keys
 * @example
 *
 *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]
 */
var values = /*#__PURE__*/_curry1(function values(obj) {
  var props = keys(obj);
  var len = props.length;
  var vals = [];
  var idx = 0;
  while (idx < len) {
    vals[idx] = obj[props[idx]];
    idx += 1;
  }
  return vals;
});

/**
 * Given a spec object recursively mapping properties to functions, creates a
 * function producing an object of the same structure, by mapping each property
 * to the result of calling its associated function with the supplied arguments.
 *
 * @func
 * @memberOf R
 * @since v0.20.0
 * @category Function
 * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})
 * @param {Object} spec an object recursively mapping properties to functions for
 *        producing the values for these properties.
 * @return {Function} A function that returns an object of the same structure
 * as `spec', with each property set to the value returned by calling its
 * associated function with the supplied arguments.
 * @see R.converge, R.juxt
 * @example
 *
 *      var getMetrics = R.applySpec({
 *        sum: R.add,
 *        nested: { mul: R.multiply }
 *      });
 *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }
 * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }
 */
var applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {
  spec = map$1(function (v) {
    return typeof v == 'function' ? v : applySpec(v);
  }, spec);
  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
    var args = arguments;
    return map$1(function (f) {
      return apply(f, args);
    }, spec);
  });
});

/**
 * Checks if the input value is `null` or `undefined`.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Type
 * @sig * -> Boolean
 * @param {*} x The value to test.
 * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.
 * @example
 *
 *      R.isNil(null); //=> true
 *      R.isNil(undefined); //=> true
 *      R.isNil(0); //=> false
 *      R.isNil([]); //=> false
 */
var isNil = /*#__PURE__*/_curry1(function isNil(x) {
  return x == null;
});

function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
}

/**
 * "lifts" a function to be the specified arity, so that it may "map over" that
 * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig Number -> (*... -> *) -> ([*]... -> [*])
 * @param {Function} fn The function to lift into higher context
 * @return {Function} The lifted function.
 * @see R.lift, R.ap
 * @example
 *
 *      var madd3 = R.liftN(3, (...args) => R.sum(args));
 *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]
 */
var liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function () {
    return _reduce(ap, map$1(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});

/**
 * "lifts" a function of arity > 1 so that it may "map over" a list, Function or other
 * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig (*... -> *) -> ([*]... -> [*])
 * @param {Function} fn The function to lift into higher context
 * @return {Function} The lifted function.
 * @see R.liftN
 * @example
 *
 *      var madd3 = R.lift((a, b, c) => a + b + c);
 *
 *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]
 *
 *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);
 *
 *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]
 */
var lift = /*#__PURE__*/_curry1(function lift(fn) {
  return liftN(fn.length, fn);
});

/**
 * `_makeFlat` is a helper function that returns a one-level or fully recursive
 * function based on the flag passed in.
 *
 * @private
 */
function _makeFlat(recursive) {
  return function flatt(list) {
    var value, jlen, j;
    var result = [];
    var idx = 0;
    var ilen = list.length;

    while (idx < ilen) {
      if (_isArrayLike(list[idx])) {
        value = recursive ? flatt(list[idx]) : list[idx];
        j = 0;
        jlen = value.length;
        while (j < jlen) {
          result[result.length] = value[j];
          j += 1;
        }
      } else {
        result[result.length] = list[idx];
      }
      idx += 1;
    }
    return result;
  };
}

function _forceReduced(x) {
  return {
    '@@transducer/value': x,
    '@@transducer/reduced': true
  };
}

var preservingReduced = function (xf) {
  return {
    '@@transducer/init': _xfBase.init,
    '@@transducer/result': function (result) {
      return xf['@@transducer/result'](result);
    },
    '@@transducer/step': function (result, input) {
      var ret = xf['@@transducer/step'](result, input);
      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
    }
  };
};

var _flatCat = function _xcat(xf) {
  var rxf = preservingReduced(xf);
  return {
    '@@transducer/init': _xfBase.init,
    '@@transducer/result': function (result) {
      return rxf['@@transducer/result'](result);
    },
    '@@transducer/step': function (result, input) {
      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
    }
  };
};

var _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {
  return map$1(f, _flatCat(xf));
});

/**
 * `chain` maps a function over a list and concatenates the results. `chain`
 * is also known as `flatMap` in some libraries
 *
 * Dispatches to the `chain` method of the second argument, if present,
 * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category List
 * @sig Chain m => (a -> m b) -> m a -> m b
 * @param {Function} fn The function to map with
 * @param {Array} list The list to map over
 * @return {Array} The result of flat-mapping `list` with `fn`
 * @example
 *
 *      var duplicate = n => [n, n];
 *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]
 *
 *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]
 */
var chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {
  if (typeof monad === 'function') {
    return function (x) {
      return fn(monad(x))(x);
    };
  }
  return _makeFlat(false)(map$1(fn, monad));
}));

/**
 * Gives a single-word string description of the (native) type of a value,
 * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not
 * attempt to distinguish user Object types any further, reporting them all as
 * 'Object'.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Type
 * @sig (* -> {*}) -> String
 * @param {*} val The value to test
 * @return {String}
 * @example
 *
 *      R.type({}); //=> "Object"
 *      R.type(1); //=> "Number"
 *      R.type(false); //=> "Boolean"
 *      R.type('s'); //=> "String"
 *      R.type(null); //=> "Null"
 *      R.type([]); //=> "Array"
 *      R.type(/[A-z]/); //=> "RegExp"
 *      R.type(() => {}); //=> "Function"
 *      R.type(undefined); //=> "Undefined"
 */
var type = /*#__PURE__*/_curry1(function type(val) {
  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
});

function _pipe(f, g) {
  return function () {
    return g.call(this, f.apply(this, arguments));
  };
}

/**
 * This checks whether a function has a [methodname] function. If it isn't an
 * array it will execute that function otherwise it will default to the ramda
 * implementation.
 *
 * @private
 * @param {Function} fn ramda implemtation
 * @param {String} methodname property to check for a custom implementation
 * @return {Object} Whatever the return value of the method is.
 */
function _checkForMethod(methodname, fn) {
  return function () {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
}

/**
 * Returns the elements of the given list or string (or object with a `slice`
 * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).
 *
 * Dispatches to the `slice` method of the third argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.4
 * @category List
 * @sig Number -> Number -> [a] -> [a]
 * @sig Number -> Number -> String -> String
 * @param {Number} fromIndex The start index (inclusive).
 * @param {Number} toIndex The end index (exclusive).
 * @param {*} list
 * @return {*}
 * @example
 *
 *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']
 *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']
 *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']
 *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']
 *      R.slice(0, 3, 'ramda');                     //=> 'ram'
 */
var slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));

/**
 * Returns all but the first element of the given list or string (or object
 * with a `tail` method).
 *
 * Dispatches to the `slice` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @sig String -> String
 * @param {*} list
 * @return {*}
 * @see R.head, R.init, R.last
 * @example
 *
 *      R.tail([1, 2, 3]);  //=> [2, 3]
 *      R.tail([1, 2]);     //=> [2]
 *      R.tail([1]);        //=> []
 *      R.tail([]);         //=> []
 *
 *      R.tail('abc');  //=> 'bc'
 *      R.tail('ab');   //=> 'b'
 *      R.tail('a');    //=> ''
 *      R.tail('');     //=> ''
 */
var tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));

/**
 * Performs left-to-right function composition. The leftmost function may have
 * any arity; the remaining functions must be unary.
 *
 * In some libraries this function is named `sequence`.
 *
 * **Note:** The result of pipe is not automatically curried.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)
 * @param {...Function} functions
 * @return {Function}
 * @see R.compose
 * @example
 *
 *      var f = R.pipe(Math.pow, R.negate, R.inc);
 *
 *      f(3, 4); // -(3^4) + 1
 * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))
 */
function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
}

function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
}

function _containsWith(pred, x, list) {
  var idx = 0;
  var len = list.length;

  while (idx < len) {
    if (pred(x, list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
}

function _functionName(f) {
  // String(x => x) evaluates to "x => x", so the pattern may not match.
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
}

/**
 * Returns true if its arguments are identical, false otherwise. Values are
 * identical if they reference the same memory. `NaN` is identical to `NaN`;
 * `0` and `-0` are not identical.
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Relation
 * @sig a -> a -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @example
 *
 *      var o = {};
 *      R.identical(o, o); //=> true
 *      R.identical(1, 1); //=> true
 *      R.identical(1, '1'); //=> false
 *      R.identical([], []); //=> false
 *      R.identical(0, -0); //=> false
 *      R.identical(NaN, NaN); //=> true
 */
var identical = /*#__PURE__*/_curry2(function identical(a, b) {
  // SameValue algorithm
  if (a === b) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return a !== 0 || 1 / a === 1 / b;
  } else {
    // Step 6.a: NaN == NaN
    return a !== a && b !== b;
  }
});

/**
 * private _uniqContentEquals function.
 * That function is checking equality of 2 iterator contents with 2 assumptions
 * - iterators lengths are the same
 * - iterators values are unique
 *
 * false-positive result will be returned for comparision of, e.g.
 * - [1,2,3] and [1,2,3,4]
 * - [1,1,1] and [1,2,3]
 * */

function _uniqContentEquals(aIterator, bIterator, stackA, stackB) {
  var a = _arrayFromIterator(aIterator);
  var b = _arrayFromIterator(bIterator);

  function eq(_a, _b) {
    return _equals(_a, _b, stackA.slice(), stackB.slice());
  }

  // if *a* array contains any element that is not included in *b*
  return !_containsWith(function (b, aItem) {
    return !_containsWith(eq, aItem, b);
  }, b, a);
}

function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  var typeA = type(a);

  if (typeA !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
  }

  switch (typeA) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
        return false;
      }
      break;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  switch (typeA) {
    case 'Map':
      if (a.size !== b.size) {
        return false;
      }

      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));
    case 'Set':
      if (a.size !== b.size) {
        return false;
      }

      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));
    case 'Arguments':
    case 'Array':
    case 'Object':
    case 'Boolean':
    case 'Number':
    case 'String':
    case 'Date':
    case 'Error':
    case 'RegExp':
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
    case 'ArrayBuffer':
      break;
    default:
      // Values of other types are only equal if identical.
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var extendedStackA = stackA.concat([a]);
  var extendedStackB = stackB.concat([b]);

  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {
      return false;
    }
    idx -= 1;
  }
  return true;
}

/**
 * Returns `true` if its arguments are equivalent, `false` otherwise. Handles
 * cyclical data structures.
 *
 * Dispatches symmetrically to the `equals` methods of both arguments, if
 * present.
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Relation
 * @sig a -> b -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @example
 *
 *      R.equals(1, 1); //=> true
 *      R.equals(1, '1'); //=> false
 *      R.equals([1, 2, 3], [1, 2, 3]); //=> true
 *
 *      var a = {}; a.v = a;
 *      var b = {}; b.v = b;
 *      R.equals(a, b); //=> true
 */
var equals = /*#__PURE__*/_curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});

function _indexOf(list, a, idx) {
  var inf, item;
  // Array.prototype.indexOf doesn't exist below IE9
  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          // manually crawl the list to distinguish between +0 and -0
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          // NaN
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }
        // non-zero numbers can utilise Set
        return list.indexOf(a, idx);

      // all these types can utilise Set
      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          // null can utilise Set
          return list.indexOf(a, idx);
        }
    }
  }
  // anything else not covered above, defer to R.equals
  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}

function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
}

function _quote(s) {
  var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b') // \b matches word boundary; [\b] matches backspace
  .replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
}

/**
 * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.
 */
var pad = function pad(n) {
  return (n < 10 ? '0' : '') + n;
};

var _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
  return d.toISOString();
} : function _toISOString(d) {
  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
};

function _complement(f) {
  return function () {
    return !f.apply(this, arguments);
  };
}

function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
}

function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
}

var XFilter = /*#__PURE__*/function () {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function (result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return XFilter;
}();

var _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {
  return new XFilter(f, xf);
});

/**
 * Takes a predicate and a `Filterable`, and returns a new filterable of the
 * same type containing the members of the given filterable which satisfy the
 * given predicate. Filterable objects include plain objects or any object
 * that has a filter method such as `Array`.
 *
 * Dispatches to the `filter` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Filterable f => (a -> Boolean) -> f a -> f a
 * @param {Function} pred
 * @param {Array} filterable
 * @return {Array} Filterable
 * @see R.reject, R.transduce, R.addIndex
 * @example
 *
 *      var isEven = n => n % 2 === 0;
 *
 *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]
 *
 *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}
 */
var filter$1 = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {
  return _isObject(filterable) ? _reduce(function (acc, key) {
    if (pred(filterable[key])) {
      acc[key] = filterable[key];
    }
    return acc;
  }, {}, keys(filterable)) :
  // else
  _filter(pred, filterable);
}));

/**
 * The complement of [`filter`](#filter).
 *
 * Acts as a transducer if a transformer is given in list position. Filterable
 * objects include plain objects or any object that has a filter method such
 * as `Array`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Filterable f => (a -> Boolean) -> f a -> f a
 * @param {Function} pred
 * @param {Array} filterable
 * @return {Array}
 * @see R.filter, R.transduce, R.addIndex
 * @example
 *
 *      var isOdd = (n) => n % 2 === 1;
 *
 *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]
 *
 *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}
 */
var reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {
  return filter$1(_complement(pred), filterable);
});

function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  //  mapPairs :: (Object, [String]) -> [String]
  var mapPairs = function (obj, keys) {
    return _map(function (k) {
      return _quote(k) + ': ' + recur(obj[k]);
    }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
        return (/^\d+$/.test(k)
        );
      }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
}

/**
 * Returns the string representation of the given value. `eval`'ing the output
 * should result in a value equivalent to the input value. Many of the built-in
 * `toString` methods do not satisfy this requirement.
 *
 * If the given value is an `[object Object]` with a `toString` method other
 * than `Object.prototype.toString`, this method is invoked with no arguments
 * to produce the return value. This means user-defined constructor functions
 * can provide a suitable `toString` method. For example:
 *
 *     function Point(x, y) {
 *       this.x = x;
 *       this.y = y;
 *     }
 *
 *     Point.prototype.toString = function() {
 *       return 'new Point(' + this.x + ', ' + this.y + ')';
 *     };
 *
 *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category String
 * @sig * -> String
 * @param {*} val
 * @return {String}
 * @example
 *
 *      R.toString(42); //=> '42'
 *      R.toString('abc'); //=> '"abc"'
 *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'
 *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{"bar": 2, "baz": 3, "foo": 1}'
 *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date("2001-02-03T04:05:06.000Z")'
 */
var toString = /*#__PURE__*/_curry1(function toString(val) {
  return _toString(val, []);
});

/**
 * Returns the result of concatenating the given lists or strings.
 *
 * Note: `R.concat` expects both arguments to be of the same type,
 * unlike the native `Array.prototype.concat` method. It will throw
 * an error if you `concat` an Array with a non-Array value.
 *
 * Dispatches to the `concat` method of the first argument, if present.
 * Can also concatenate two members of a [fantasy-land
 * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a] -> [a]
 * @sig String -> String -> String
 * @param {Array|String} firstList The first list
 * @param {Array|String} secondList The second list
 * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of
 * `secondList`.
 *
 * @example
 *
 *      R.concat('ABC', 'DEF'); // 'ABCDEF'
 *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]
 *      R.concat([], []); //=> []
 */
var concat$1 = /*#__PURE__*/_curry2(function concat(a, b) {
  if (_isArray(a)) {
    if (_isArray(b)) {
      return a.concat(b);
    }
    throw new TypeError(toString(b) + ' is not an array');
  }
  if (_isString(a)) {
    if (_isString(b)) {
      return a + b;
    }
    throw new TypeError(toString(b) + ' is not a string');
  }
  if (a != null && _isFunction(a['fantasy-land/concat'])) {
    return a['fantasy-land/concat'](b);
  }
  if (a != null && _isFunction(a.concat)) {
    return a.concat(b);
  }
  throw new TypeError(toString(a) + ' does not have a method named "concat" or "fantasy-land/concat"');
});

/**
 * Accepts a converging function and a list of branching functions and returns
 * a new function. When invoked, this new function is applied to some
 * arguments, each branching function is applied to those same arguments. The
 * results of each branching function are passed as arguments to the converging
 * function to produce the return value.
 *
 * @func
 * @memberOf R
 * @since v0.4.2
 * @category Function
 * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)
 * @param {Function} after A function. `after` will be invoked with the return values of
 *        `fn1` and `fn2` as its arguments.
 * @param {Array} functions A list of functions.
 * @return {Function} A new function.
 * @see R.useWith
 * @example
 *
 *      var average = R.converge(R.divide, [R.sum, R.length])
 *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4
 *
 *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])
 *      strangeConcat("Yodel") //=> "YODELyodel"
 *
 * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))
 */
var converge = /*#__PURE__*/_curry2(function converge(after, fns) {
  return curryN(reduce(max, 0, pluck('length', fns)), function () {
    var args = arguments;
    var context = this;
    return after.apply(context, _map(function (fn) {
      return fn.apply(context, args);
    }, fns));
  });
});

var XDrop = /*#__PURE__*/function () {
  function XDrop(n, xf) {
    this.xf = xf;
    this.n = n;
  }
  XDrop.prototype['@@transducer/init'] = _xfBase.init;
  XDrop.prototype['@@transducer/result'] = _xfBase.result;
  XDrop.prototype['@@transducer/step'] = function (result, input) {
    if (this.n > 0) {
      this.n -= 1;
      return result;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return XDrop;
}();

var _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {
  return new XDrop(n, xf);
});

/**
 * Returns all but the first `n` elements of the given list, string, or
 * transducer/transformer (or object with a `drop` method).
 *
 * Dispatches to the `drop` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> [a]
 * @sig Number -> String -> String
 * @param {Number} n
 * @param {*} list
 * @return {*} A copy of list without the first `n` elements
 * @see R.take, R.transduce, R.dropLast, R.dropWhile
 * @example
 *
 *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']
 *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']
 *      R.drop(3, ['foo', 'bar', 'baz']); //=> []
 *      R.drop(4, ['foo', 'bar', 'baz']); //=> []
 *      R.drop(3, 'ramda');               //=> 'da'
 */
var drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {
  return slice(Math.max(0, n), Infinity, xs);
}));

/**
 * Returns the nth element of the given list or string. If n is negative the
 * element at index length + n is returned.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> a | Undefined
 * @sig Number -> String -> String
 * @param {Number} offset
 * @param {*} list
 * @return {*}
 * @example
 *
 *      var list = ['foo', 'bar', 'baz', 'quux'];
 *      R.nth(1, list); //=> 'bar'
 *      R.nth(-1, list); //=> 'quux'
 *      R.nth(-99, list); //=> undefined
 *
 *      R.nth(2, 'abc'); //=> 'c'
 *      R.nth(3, 'abc'); //=> ''
 * @symb R.nth(-1, [a, b, c]) = c
 * @symb R.nth(0, [a, b, c]) = a
 * @symb R.nth(1, [a, b, c]) = b
 */
var nth = /*#__PURE__*/_curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});

var XDropWhile = /*#__PURE__*/function () {
  function XDropWhile(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;
  XDropWhile.prototype['@@transducer/step'] = function (result, input) {
    if (this.f) {
      if (this.f(input)) {
        return result;
      }
      this.f = null;
    }
    return this.xf['@@transducer/step'](result, input);
  };

  return XDropWhile;
}();

var _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {
  return new XDropWhile(f, xf);
});

/**
 * Returns a new list excluding the leading elements of a given list which
 * satisfy the supplied predicate function. It passes each value to the supplied
 * predicate function, skipping elements while the predicate function returns
 * `true`. The predicate function is applied to one argument: *(value)*.
 *
 * Dispatches to the `dropWhile` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> [a]
 * @sig (a -> Boolean) -> String -> String
 * @param {Function} fn The function called per iteration.
 * @param {Array} xs The collection to iterate over.
 * @return {Array} A new array.
 * @see R.takeWhile, R.transduce, R.addIndex
 * @example
 *
 *      var lteTwo = x => x <= 2;
 *
 *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]
 *
 *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'
 */
var dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {
  var idx = 0;
  var len = xs.length;
  while (idx < len && pred(xs[idx])) {
    idx += 1;
  }
  return slice(idx, Infinity, xs);
}));

/**
 * Returns `true` if one or both of its arguments are `true`. Returns `false`
 * if both arguments are `false`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig a -> b -> a | b
 * @param {Any} a
 * @param {Any} b
 * @return {Any} the first argument if truthy, otherwise the second argument.
 * @see R.either
 * @example
 *
 *      R.or(true, true); //=> true
 *      R.or(true, false); //=> true
 *      R.or(false, true); //=> true
 *      R.or(false, false); //=> false
 */
var or = /*#__PURE__*/_curry2(function or(a, b) {
  return a || b;
});

/**
 * A function wrapping calls to the two functions in an `||` operation,
 * returning the result of the first function if it is truth-y and the result
 * of the second function otherwise. Note that this is short-circuited,
 * meaning that the second function will not be invoked if the first returns a
 * truth-y value.
 *
 * In addition to functions, `R.either` also accepts any fantasy-land compatible
 * applicative functor.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category Logic
 * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)
 * @param {Function} f a predicate
 * @param {Function} g another predicate
 * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.
 * @see R.or
 * @example
 *
 *      var gt10 = x => x > 10;
 *      var even = x => x % 2 === 0;
 *      var f = R.either(gt10, even);
 *      f(101); //=> true
 *      f(8); //=> true
 */
var either = /*#__PURE__*/_curry2(function either(f, g) {
  return _isFunction(f) ? function _either() {
    return f.apply(this, arguments) || g.apply(this, arguments);
  } : lift(or)(f, g);
});

/**
 * Returns the empty value of its argument's type. Ramda defines the empty
 * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other
 * types are supported if they define `<Type>.empty`,
 * `<Type>.prototype.empty` or implement the
 * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).
 *
 * Dispatches to the `empty` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Function
 * @sig a -> a
 * @param {*} x
 * @return {*}
 * @example
 *
 *      R.empty(Just(42));      //=> Nothing()
 *      R.empty([1, 2, 3]);     //=> []
 *      R.empty('unicorns');    //=> ''
 *      R.empty({x: 1, y: 2});  //=> {}
 */
var empty = /*#__PURE__*/_curry1(function empty(x) {
  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
    return arguments;
  }() :
  // else
  void 0;
});

/**
 * Takes a list and returns a list of lists where each sublist's elements are
 * all satisfied pairwise comparison according to the provided function.
 * Only adjacent elements are passed to the comparison function.
 *
 * @func
 * @memberOf R
 * @since v0.21.0
 * @category List
 * @sig ((a, a) → Boolean) → [a] → [[a]]
 * @param {Function} fn Function for determining whether two given (adjacent)
 *        elements should be in the same group
 * @param {Array} list The array to group. Also accepts a string, which will be
 *        treated as a list of characters.
 * @return {List} A list that contains sublists of elements,
 *         whose concatenations are equal to the original list.
 * @example
 *
 * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])
 * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]
 *
 * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])
 * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]
 *
 * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])
 * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]
 *
 * R.groupWith(R.eqBy(isVowel), 'aestiou')
 * //=> ['ae', 'st', 'iou']
 */
var groupWith = /*#__PURE__*/_curry2(function (fn, list) {
  var res = [];
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    var nextidx = idx + 1;
    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {
      nextidx += 1;
    }
    res.push(list.slice(idx, nextidx));
    idx = nextidx;
  }
  return res;
});

/**
 * Returns the first element of the given list or string. In some libraries
 * this function is named `first`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> a | Undefined
 * @sig String -> String
 * @param {Array|String} list
 * @return {*}
 * @see R.tail, R.init, R.last
 * @example
 *
 *      R.head(['fi', 'fo', 'fum']); //=> 'fi'
 *      R.head([]); //=> undefined
 *
 *      R.head('abc'); //=> 'a'
 *      R.head(''); //=> ''
 */
var head$1 = /*#__PURE__*/nth(0);

function _identity(x) {
  return x;
}

/**
 * Returns `true` if the given value is its type's empty value; `false`
 * otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig a -> Boolean
 * @param {*} x
 * @return {Boolean}
 * @see R.empty
 * @example
 *
 *      R.isEmpty([1, 2, 3]);   //=> false
 *      R.isEmpty([]);          //=> true
 *      R.isEmpty('');          //=> true
 *      R.isEmpty(null);        //=> false
 *      R.isEmpty({});          //=> true
 *      R.isEmpty({length: 0}); //=> false
 */
var isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {
  return x != null && equals(x, empty(x));
});

/**
 * Returns a function which returns its nth argument.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Function
 * @sig Number -> *... -> *
 * @param {Number} n
 * @return {Function}
 * @example
 *
 *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'
 *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'
 * @symb R.nthArg(-1)(a, b, c) = c
 * @symb R.nthArg(0)(a, b, c) = a
 * @symb R.nthArg(1)(a, b, c) = b
 */
var nthArg = /*#__PURE__*/_curry1(function nthArg(n) {
  var arity = n < 0 ? 1 : n + 1;
  return curryN(arity, function () {
    return nth(n, arguments);
  });
});

/**
 * Sorts the list according to the supplied function.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord b => (a -> b) -> [a] -> [a]
 * @param {Function} fn
 * @param {Array} list The list to sort.
 * @return {Array} A new list sorted by the keys generated by `fn`.
 * @example
 *
 *      var sortByFirstItem = R.sortBy(R.prop(0));
 *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));
 *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];
 *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]
 *      var alice = {
 *        name: 'ALICE',
 *        age: 101
 *      };
 *      var bob = {
 *        name: 'Bob',
 *        age: -10
 *      };
 *      var clara = {
 *        name: 'clara',
 *        age: 314.159
 *      };
 *      var people = [clara, bob, alice];
 *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]
 */
var sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {
  return Array.prototype.slice.call(list, 0).sort(function (a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  });
});

/**
 * Builds a list from a seed value. Accepts an iterator function, which returns
 * either false to stop iteration or an array of length 2 containing the value
 * to add to the resulting list and the seed to be used in the next call to the
 * iterator function.
 *
 * The iterator function receives one argument: *(seed)*.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category List
 * @sig (a -> [b]) -> * -> [b]
 * @param {Function} fn The iterator function. receives one argument, `seed`, and returns
 *        either false to quit iteration or an array of length two to proceed. The element
 *        at index 0 of this array will be added to the resulting array, and the element
 *        at index 1 will be passed to the next call to `fn`.
 * @param {*} seed The seed value.
 * @return {Array} The final list.
 * @example
 *
 *      var f = n => n > 50 ? false : [-n, n + 10];
 *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]
 * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]
 */
var unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {
  var pair = fn(seed);
  var result = [];
  while (pair && pair.length) {
    result[result.length] = pair[0];
    pair = fn(pair[1]);
  }
  return result;
});

/**
 * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from
 * any [Chain](https://github.com/fantasyland/fantasy-land#chain).
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category List
 * @sig Chain c => c (c a) -> c a
 * @param {*} list
 * @return {*}
 * @see R.flatten, R.chain
 * @example
 *
 *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]
 *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]
 */
var unnest = /*#__PURE__*/chain(_identity);

var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
/**
 * Complement of `intervals` bounded to `boundaries`. Convert space between two consecutive intervals into interval.
 * Keeps extra object properties on `boundaries`.
 * intervals array has to be sorted.
 * Doesn't mutate input. Output keeps input's structure.
 *
 * boundaries | interval(s) | result
 * --- | --- | ---
 * { start: 0, end: 10} | [{ start: 3, end: 7 }] | [{ start: 0, end: 3 }, { start: 7, end: 10 }]
 * { start: 0, end: 10} | [{ start: 2, end: 4 }, { start: 7, end: 8 }] | [{ start: 0, end: 2 }, { start: 4, end: 7 }, { start: 8, end: 10 }]
 *
 * @param boundaries arg1: interval defining boundaries for the complement computation.
 * @param intervals arg2: array of intervals that complement the result.
 * @returns array of intervals.
 */
const complement = (boundaries, intervals) => {
    const _a = boundaries, { start, end } = _a, rest = __rest(_a, ["start", "end"]); // See TypeScript/pull/13288 TypeScript/issues/10727
    const prepRanges = [
        { start: -Infinity, end: start },
        ...intervals,
        { start: end, end: Infinity },
    ];
    return reject(isNil, aperture(2, prepRanges).map(([r1, r2]) => (r1.end >= r2.start ? null : Object.assign({ start: r1.end, end: r2.start }, rest))));
};
/**
 * Test if `intervalA` overlaps with `intervalB`.
 *
 * intervalA | intervalB | result
 * --- | --- | ---
 * { start: 0, end: 10} | { start: 3, end: 7 } | true
 * { start: 0, end: 5} | { start: 5, end: 7 } | false
 *
 * @param intervalA arg1: interval
 * @param intervalB arg2: interval
 * @returns true if overlaps
 */
const isOverlappingSimple = (a, b) => {
    return b.start < a.end && b.end > a.start;
};
const beforeOrAdjTo = (afterInt) => (beforeInt) => beforeInt.end <= afterInt.start;
/**
 * Test if `intervalA` is adjacent to (meets) `intervalB`.
 *
 * intervalA | intervalB | result
 * --- | --- | ---
 * { start: 0, end: 10} | { start: 3, end: 7 } | false
 * { start: 0, end: 5} | { start: 5, end: 7 } | true
 *
 * @param intervalA arg1: interval
 * @param intervalB arg2: interval
 * @returns true if adjacent
 */
const isMeeting = (a, b) => {
    return a.start === b.end || a.end === b.start;
};
const propFromNthArg = (n, propName) => pipe(nthArg(n), prop(propName));
const maxEnd = (ranges) => ranges.reduce((a, b) => (a.end > b.end ? a : b));
const simplifyPipe = pipe(groupWith(either(isOverlappingSimple, isMeeting)), map$1(converge(applySpec({ start: propFromNthArg(0, 'start'), end: propFromNthArg(1, 'end') }), [head$1, maxEnd])));
/**
 * Simplification of `intervals`. Unify touching or overlapping intervals.
 *
 * Intervals array has to be sorted.
 *
 * Doesn't mutate input. Output keeps input's structure.
 *
 * | intervals A | result |
 * | ----------- | ------ |
 * | [{ start: 3, end: 9 }, { start: 9, end: 13 }, { start: 11, end: 14 }] | [{ start: 3, end: 14 }] |
 *
 * @param intervalA
 */
const simplify = (intervals) => simplifyPipe([...intervals]);
const sortByStart = sortBy(prop('start'));
pipe(concat$1, sortByStart, simplify);
const intersectUnfolderSeed = (i1, i2) => {
    const new1 = i1[0].end > i2[0].end ? i1 : drop(1, i1);
    const new2 = i2[0].end > i1[0].end ? i2 : drop(1, i2);
    return [new1, new2];
};
const intersectUnfolder = ([inters1, inters2]) => {
    if (any(isEmpty)([inters1, inters2])) {
        return false;
    }
    const newInters1 = dropWhile(beforeOrAdjTo(inters2[0]), inters1);
    if (isEmpty(newInters1)) {
        return false;
    }
    const inter1 = newInters1[0];
    const newInters2 = dropWhile(beforeOrAdjTo(inter1), inters2);
    if (isEmpty(newInters2)) {
        return false;
    }
    const inter2 = newInters2[0];
    const minMaxInter = Object.assign({}, inter2, { end: Math.min(inter1.end, inter2.end), start: Math.max(inter1.start, inter2.start) });
    const resultInter = beforeOrAdjTo(minMaxInter)(minMaxInter) ? null : minMaxInter;
    const seed = intersectUnfolderSeed(newInters1, newInters2);
    return [resultInter, seed];
};
/**
 * Intersection of `intervals`. Does not simplify result. Keeps extra object properties on `intervalB`.
 *
 * `interalA` and `interalB` can have different structure.
 * Accept array of intervals. Doesn't mutate input. Output keeps `intervalB` structure.
 * Intervals arrays have to be sorted.
 *
 * interval(s) A | interval(s) B | result
 * --- | --- | ---
 * { from: 0, to: 4 } | { start: 3, end: 7, foo: 'bar' } | [{ start: 3, end: 4, foo: 'bar' }]
 * { start: 0, end: 10 } | [{ start: 2, end: 5}, { start: 5, end: 8}] | [{ start: 2, end: 5 }, { start: 5, end: 8 }]
 * [{ start: 0, end: 4 }, { start: 8, end: 11 }] | [{ start: 2, end: 9 }, { start: 10, end: 13 }] | [{ start: 2, end: 4 }, { start: 8, end: 9 }, { start: 10, end: 11 }]
 *
 * @param intervalA arg1: array of intervals
 * @param intervalB arg2: array of intervals
 * @returns intersection of `arg1` and `arg2`
 */
const intersect$1 = (intervalsA, intervalsB) => {
    return unfold(intersectUnfolder, [intervalsA, intervalsB]).filter(i => i != null);
};
const subtractInter = (mask, base) => {
    return complement(base, mask);
};
/**
 * Subtact `base` with `mask`.
 * Keeps extra object properties on `base`.
 *
 * Accept array of intervals. Doesn't mutate input. Output keeps input's structure.
 * Intervals arrays have to be sorted.
 *
 * interval(s) base | interval(s) mask | result
 * --- | --- | ---
 * [{ start: 0, end: 4 }] | [{ start: 3, end: 7 }] | [{ start: 0, end: 3 }]
 * [{ start: 0, end: 4 }, { start: 8, end: 11 }] | [{ start: 2, end: 9 }, { start: 10, end: 13 }] | [{ start: 0, end: 2 }, { start: 9, end: 10 }]
 *
 * @param intervalA arg1: array of intervals
 * @param intervalB arg2: array of intervals
 * @returns intersection of `arg1` and `arg2`
 */
const substract = (base, mask) => {
    const intersection = intersect$1(mask, base);
    return unnest(base.map(b => subtractInter(intersection.filter(isOverlappingSimple.bind(null, b)), b)));
};

const toObjectNotation = ([start, end]) => ({
    start,
    end,
});
const toIntervalNotation = ({ start, end }) => [start, end];
const isBeforeInterval = ([_, aEnd], [bStart]) => aEnd < bStart;
const isAfterInterval = ([aStart], [_, bEnd]) => aStart > bEnd;
const isIntersecting = (a, b) => !isBeforeInterval(a, b) && !isAfterInterval(a, b);
const intersect = (aIntervals, bIntervals) => {
    const intersectedIntervals = simplify(intersect$1(aIntervals.map(toObjectNotation), bIntervals.map(toObjectNotation)));
    return intersectedIntervals.map(toIntervalNotation);
};
const subtractIntervals = (interval, intervals) => {
    const sortedIntervals = intervals
        .sort((i1, i2) => i1[0] - i2[0])
        .map(toObjectNotation);
    const subtractedIntervals = substract([toObjectNotation(interval)], simplify(sortedIntervals));
    return simplify(subtractedIntervals)
        .filter((inter) => inter.start < inter.end)
        .map(toIntervalNotation);
};
// removes duplicates (by timestamp) in a data (Datapoint[][])
const uniqByKeepLast = (data, key) => {
    return data.map((datum) => {
        if (Array.isArray(datum)) {
            return [
                ...new Map(datum.map((d, index) => {
                    if (typeof d === 'object' && !!d) {
                        return [d[key], d];
                    }
                    return [index, d];
                })).values(),
            ];
        }
        else {
            return datum;
        }
    });
};
/**
 * Merges together to lists of items given a way to compare items.
 *
 * Returns back a single list of items, sorted by `compare`, with no duplicates.
 *
 * `aItems` and `bItems` are assumed to be sorted by `compare`.
 *
 * If `aItems` and `bItems` have overlap, always take the items specified in `aItems`
 */
const mergeItems = (aItems, bItems, compare) => {
    // Empty items edge cases
    if (aItems.length === 0) {
        return bItems;
    }
    if (bItems.length === 0) {
        return aItems;
    }
    // Non-overlapping interval merge cases
    if (compare(aItems[0], bItems[bItems.length - 1]) > 0) {
        return [...bItems, ...aItems];
    }
    if (compare(aItems[aItems.length - 1], bItems[0]) < 0) {
        return [...aItems, ...bItems];
    }
    // Fully contained edge cases
    if (compare(aItems[0], bItems[0]) <= 0 &&
        compare(aItems[aItems.length - 1], bItems[bItems.length - 1]) >= 0) {
        // `aItems` fully contains `bItems`
        return aItems;
    }
    if (compare(bItems[0], aItems[0]) <= 0 &&
        compare(bItems[bItems.length - 1], aItems[aItems.length - 1]) >= 0) {
        // `bItems` fully contains `aItems`
        const itemsBeforeA = bItems.filter((item) => compare(item, aItems[0]) < 0);
        const itemsAfterA = bItems.filter((item) => compare(item, aItems[aItems.length - 1]) > 0);
        return [...itemsBeforeA, ...aItems, ...itemsAfterA];
    }
    // Merge items
    if (compare(aItems[0], bItems[0]) < 0) {
        // `aItems` interval begins before `bItems`
        return [
            ...aItems,
            ...bItems.filter((x) => compare(x, aItems[aItems.length - 1]) > 0),
        ];
    }
    // `bItems` interval begins before `aItems`
    return [...bItems.filter((x) => compare(x, aItems[0]) < 0), ...aItems];
};
const addInterval = (intervalStructure, interval, items, compare) => {
    const overlappingIntervals = intervalStructure.intervals
        .map((i, index) => ({
        interval: i,
        index,
    }))
        .filter(({ interval: i }) => isIntersecting(interval, i));
    // Combine all overlapping intervals into a single interval
    const combinedInterval = overlappingIntervals.reduce((mergedInterval, { interval: currInterval }) => [
        Math.min(mergedInterval[0], currInterval[0]),
        Math.max(mergedInterval[1], currInterval[1]),
    ], interval);
    // Combine all elements from all overlapping intervals
    const combinedItems = overlappingIntervals.reduce((mergedItems, { index }) => mergeItems(mergedItems, intervalStructure.items[index], compare), items);
    // Get Insert Points
    const i = intervalStructure.intervals.findIndex((int) => isBeforeInterval(interval, int) || isIntersecting(interval, int));
    const insertIndex = i >= 0 ? i : intervalStructure.intervals.length;
    // Apply update
    const updatedIntervals = [...intervalStructure.intervals];
    updatedIntervals.splice(insertIndex, overlappingIntervals.length, combinedInterval);
    const updatedItems = [...intervalStructure.items];
    updatedItems.splice(insertIndex, overlappingIntervals.length, combinedItems);
    // removing duplicate timestamps in an interval
    const updatedItemsUniqueByTimestamp = uniqByKeepLast(updatedItems, 'x');
    return {
        intervals: updatedIntervals,
        items: updatedItemsUniqueByTimestamp,
    };
};

/**
 * Ge Expired Cache Intervals
 *
 * Given a mapping of caching rules and the number of milliseconds behind present time,
 * return intervals represent which caches are expired
 */
const getExpiredCacheIntervals = (ttlDurationMapping, { start, end, requestedAt }) => {
    const sortedCaches = Object.keys(ttlDurationMapping)
        .map((duration) => ({
        duration: Number(duration),
        ttl: ttlDurationMapping[Number(duration)],
    }))
        .reverse();
    const now = Date.now();
    const timeSinceRequest = now - requestedAt.getTime();
    // get the active cache rule
    const caches = sortedCaches.filter(({ duration, ttl }) => timeSinceRequest <= duration && timeSinceRequest > ttl);
    // If there are no active cache rules, then there are no expired cache intervals
    if (caches.length === 0) {
        return [];
    }
    const expiredIntervals = caches.map(({ duration, ttl }) => [now - duration, now - ttl]);
    return intersect(expiredIntervals, [[start.getTime(), end.getTime()]]);
};

const unexpiredCacheIntervals = (streamStore, ttlDurationMapping) => {
    const expiredCacheIntervals = streamStore.requestHistory
        .map((historicalRequest) => getExpiredCacheIntervals(ttlDurationMapping, historicalRequest))
        .flat();
    const allCachedIntervals = streamStore.requestCache.intervals;
    return allCachedIntervals
        .map((interval) => subtractIntervals(interval, expiredCacheIntervals))
        .flat();
};
// What is considered 'too close', and will cause intervals to merge together.
// One minute was tested on it's impact for data requesting on SWM.
const TOO_CLOSE_MS = MINUTE_IN_MS;
// Don't request anything with less than a second - SiteWise API will return 400
// as it will think the start and the end date are the same if they are not
// far enough apart.
const MINIMUM_INTERVAL = SECOND_IN_MS$2 * 3;
/**
 * Combine Short Intervals
 *
 * Combines intervals of time, to reduce the fracturing of small data-requests,
 * which can cause to excessive network requests.
 *
 * Usually it is better to simply over-request by a couple minutes of data, than initiating more network requests.
 *
 * Assumes combined intervals are sorted, in a strictly ascending order.
 */
const combineShortIntervals = (combinedIntervals, interval) => {
    if (combinedIntervals.length === 0) {
        return [interval];
    }
    const [start, end] = interval;
    const [lastStart, lastEnd] = combinedIntervals[combinedIntervals.length - 1];
    const intervalsAreClose = start - lastEnd < TOO_CLOSE_MS;
    if (!intervalsAreClose) {
        return [...combinedIntervals, interval];
    }
    // combine the last two intervals into one.
    return [...combinedIntervals.slice(0, -1), [lastStart, end]];
};
/**
 * Returns all the date ranges that need to be requested.
 * Returns empty list if there are no date ranges needed to be requested.
 *
 * This takes into account what date intervals for a given stream id and resolution exist,
 * allowing us to only request what is needed
 */
const getDateRangesToRequest = ({ store, dataStreamId, start, end, resolution, cacheSettings, aggregationType, }) => {
    const streamStore = getDataStreamStore(dataStreamId, resolution, store, aggregationType);
    if (end.getTime() === start.getTime()) {
        // nothing to request
        return [];
    }
    if (streamStore == null) {
        // There is no data present at all, so we know we need to simply request all of the data.
        return [[start, end]];
    }
    // NOTE: Use the request cache since we don't want to request intervals that already have been requested.
    const cacheIntervals = unexpiredCacheIntervals(streamStore, cacheSettings.ttlDurationMapping);
    const millisecondIntervals = subtractIntervals([start.getTime(), end.getTime()], cacheIntervals);
    return millisecondIntervals
        .reduce(combineShortIntervals, [])
        .filter(([startMs, endMs]) => endMs - startMs > MINIMUM_INTERVAL)
        .map(([startMS, endMS]) => [new Date(startMS), new Date(endMS)]);
};
/**
 * Returns all the request information required
 * Returns empty list if there are no date ranges needed to be requested.
 *
 * This takes into account what date intervals for a given stream id and resolution exist,
 * allowing us to only request what is needed.
 *
 * It also includes all the request behaviour pertaining to each date range.
 */
const getRequestInformations = ({ request, store, dataStreamId, start, meta, end, resolution, aggregationType, cacheSettings, }) => {
    var _a, _b, _c;
    // get sorted date ranges that need to be requested
    const dateRanges = getDateRangesToRequest({
        store,
        dataStreamId,
        start,
        end,
        aggregationType,
        resolution: parseDuration(resolution),
        cacheSettings,
    });
    let requestInformations = [];
    const fetchFromStartToEnd = (_a = request.settings) === null || _a === void 0 ? void 0 : _a.fetchFromStartToEnd;
    // convert date ranges to request information
    if (fetchFromStartToEnd) {
        requestInformations = dateRanges.map(([rangeStart, rangeEnd]) => ({
            start: rangeStart,
            end: rangeEnd,
            id: dataStreamId,
            meta,
            resolution,
            aggregationType,
            fetchFromStartToEnd,
        }));
    }
    // fetchMostRecentBeforeEnd if a recent point doesn't exist in the cache, even with no request informations
    if (((_b = request.settings) === null || _b === void 0 ? void 0 : _b.fetchMostRecentBeforeEnd) &&
        !checkCacheForRecentPoint({
            store,
            dataStreamId,
            aggregationType,
            resolution: parseDuration(resolution),
            start: end,
            cacheSettings,
        })) {
        requestInformations.push({
            start,
            end,
            meta,
            id: dataStreamId,
            resolution,
            fetchMostRecentBeforeEnd: true,
            aggregationType,
        });
    }
    // fetch a leading point if needed and there is no recent point in cache before the start date
    if (((_c = request.settings) === null || _c === void 0 ? void 0 : _c.fetchMostRecentBeforeStart) &&
        !checkCacheForRecentPoint({
            store,
            dataStreamId,
            aggregationType,
            resolution: parseDuration(resolution),
            start,
            cacheSettings,
        })) {
        requestInformations.unshift({
            start,
            end,
            meta,
            id: dataStreamId,
            resolution,
            fetchMostRecentBeforeStart: true,
            aggregationType,
        });
    }
    return requestInformations;
};
const dataPointCompare = (a, b) => {
    const aTime = a.x;
    const bTime = b.x;
    if (aTime !== bTime) {
        return aTime - bTime;
    }
    if (typeof a.y === 'number' && typeof b.y === 'number') {
        return a.y - b.y;
    }
    const upperA = a.y.toUpperCase();
    const upperB = b.y.toUpperCase();
    if (upperA < upperB) {
        return -1;
    }
    if (upperA > upperB) {
        return 1;
    }
    return 0;
};
const EMPTY_CACHE = {
    intervals: [],
    items: [],
};
const addToDataPointCache = ({ start, end, data = [], cache, }) => {
    if (data.length === 0 && start.getTime() === end.getTime()) {
        return cache;
    }
    return addInterval(cache, [start.getTime(), end.getTime()], data, dataPointCompare);
};
const checkCacheForRecentPoint = ({ store, dataStreamId, resolution, start, cacheSettings, aggregationType, }) => {
    const streamStore = getDataStreamStore(dataStreamId, resolution, store, aggregationType);
    if (streamStore && streamStore.dataCache.intervals.length > 0) {
        const { dataCache } = streamStore;
        const cacheIntervals = unexpiredCacheIntervals(streamStore, cacheSettings.ttlDurationMapping);
        const intersectedIntervals = intersect(cacheIntervals, dataCache.intervals);
        const interval = intersectedIntervals.find((inter) => inter[0] <= start.getTime() && start.getTime() <= inter[1]);
        if (interval) {
            const dataPoints = dataCache.items.flat();
            const elementIndex = pointBisector.right(dataPoints, start);
            return (elementIndex !== 0 && dataPoints[elementIndex - 1].x >= interval[0]);
        }
        return false;
    }
    return false;
};
// Returns the maximum duration for possible uncached data for given CacheSettings
const maxCacheDuration = (cacheSettings) => {
    const ttlDurations = Object.keys(cacheSettings.ttlDurationMapping).map((key) => Number(key));
    if (ttlDurations.length === 0) {
        return 0;
    }
    return Math.max(...ttlDurations);
};

const REFRESH_RATE_MINUMUM = 1000;
function isQueryWithRequestSettings(query) {
    return 'requestSettings' in query;
}
function getValidRefreshRate(refreshRate) {
    try {
        if (refreshRate && refreshRate < 1000) {
            throw new Error('Refresh rate has minimum value of 1000 milliseconds. Setting refresh rate to 1 second.');
        }
        return refreshRate;
    }
    catch (error) {
        console.error(error);
        return REFRESH_RATE_MINUMUM; // reasign to minumum value if under 1000 ms
    }
}

/**
 * Subscription store
 *
 * Manages the collection of subscriptions
 */
class SubscriptionStore {
    constructor({ dataSourceStore, dataCache, cacheSettings, }) {
        this.unsubscribeMap = {};
        this.scheduler = new RequestScheduler();
        this.subscriptions = {};
        this.removeSubscription = (subscriptionId) => {
            if (this.subscriptions[subscriptionId] == null) {
                throw new Error(`Attempted to remove a subscription with an id of "${subscriptionId}", but the requested subscription does not exist.`);
            }
            if (this.unsubscribeMap[subscriptionId]) {
                this.unsubscribeMap[subscriptionId]();
                delete this.unsubscribeMap[subscriptionId];
            }
            delete this.subscriptions[subscriptionId];
        };
        this.getSubscriptions = () => Object.values(this.subscriptions);
        this.getSubscription = (subscriptionId) => this.subscriptions[subscriptionId];
        this.dataCache = dataCache;
        this.dataSourceStore = dataSourceStore;
        this.cacheSettings = cacheSettings;
    }
    getRefreshRate(subscription) {
        var _a, _b;
        const refreshRate = ((_a = subscription.queries
            .filter(isQueryWithRequestSettings)
            .find((q) => q.requestSettings.refreshRate != null)) === null || _a === void 0 ? void 0 : _a.requestSettings.refreshRate) || ((_b = subscription.request.settings) === null || _b === void 0 ? void 0 : _b.refreshRate);
        return getValidRefreshRate(refreshRate);
    }
    async addSubscription(subscriptionId, subscription) {
        if (this.subscriptions[subscriptionId] == null) {
            /**
             * If the subscription is query based
             */
            if ('queries' in subscription) {
                subscription.fulfill();
                const refreshRate = this.getRefreshRate(subscription);
                if ('duration' in subscription.request.viewport) {
                    /** has a duration, so periodically request for data without a deadline */
                    this.scheduler.create({
                        id: subscriptionId,
                        cb: () => subscription.fulfill(),
                        refreshRate,
                    });
                }
                else {
                    /** has a static start and end, request until data is unexpireable */
                    this.scheduler.create({
                        id: subscriptionId,
                        cb: () => subscription.fulfill(),
                        refreshRate,
                        refreshExpiration: viewportEndDate(subscription.request.viewport).getTime() +
                            Math.max(...subscription.queries.map((query) => maxCacheDuration({
                                ...this.cacheSettings,
                                ...query.cacheSettings,
                            }))),
                    });
                }
                const { queries, request } = subscription;
                const requestInfos = await this.dataSourceStore.getRequestsFromQueries({
                    queries,
                    request,
                });
                // Subscribe to changes from the data cache
                const unsubscribe = this.dataCache.subscribe(requestInfos, (dataStreams) => subscription.emit({
                    dataStreams,
                    viewport: subscription.request.viewport,
                    thresholds: [],
                }));
                this.unsubscribeMap[subscriptionId] = () => {
                    // unsubscribe from listening to the data cache changes
                    unsubscribe();
                    // unsubscribe from re-occurring requests
                    if (this.scheduler.isScheduled(subscriptionId)) {
                        this.scheduler.remove(subscriptionId);
                    }
                };
                this.subscriptions[subscriptionId] = subscription;
            }
        }
        else {
            throw new Error(`Attempted to add a subscription with an id of "${subscriptionId}", but the provided subscriptionId is already present.`);
        }
    }
    async updateSubscription(subscriptionId, subscriptionUpdate) {
        if (this.subscriptions[subscriptionId] == null) {
            throw new Error(`Attempted to update a subscription with an id of "${subscriptionId}", but the requested subscription does not exist.`);
        }
        const updatedSubscription = {
            ...this.subscriptions[subscriptionId],
            ...subscriptionUpdate,
        };
        this.removeSubscription(subscriptionId);
        await this.addSubscription(subscriptionId, updatedSubscription);
    }
}

class DataSourceStore {
    constructor(dataSource) {
        this.getRequestsFromQueries = async ({ queries, request, }) => {
            const requestInformations = await Promise.all(queries.map((query) => this.getRequestsFromQuery({ query, request })));
            return requestInformations.flat();
        };
        this.getRequestsFromQuery = ({ query, request, }) => {
            return this.dataSource
                .getRequestsFromQuery({ query, request })
                .then((requestInformations) => requestInformations.map((requestInfo) => ({
                ...requestInfo,
                cacheSettings: query.cacheSettings,
            })));
        };
        this.initiateRequest = (request, requestInformations) => {
            this.dataSource.initiateRequest(request, requestInformations);
        };
        this.dataSource = dataSource;
    }
}

/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */
function formatProdErrorMessage(code) {
  return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
}

// Inlined version of the `symbol-observable` polyfill
var $$observable = (function () {
  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
})();

/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var randomString = function randomString() {
  return Math.random().toString(36).substring(7).split('').join('.');
};

var ActionTypes = {
  INIT: "@@redux/INIT" + randomString(),
  REPLACE: "@@redux/REPLACE" + randomString(),
  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
  }
};

/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */
function isPlainObject(obj) {
  if (typeof obj !== 'object' || obj === null) return false;
  var proto = obj;

  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }

  return Object.getPrototypeOf(obj) === proto;
}

/**
 * @deprecated
 *
 * **We recommend using the `configureStore` method
 * of the `@reduxjs/toolkit` package**, which replaces `createStore`.
 *
 * Redux Toolkit is our recommended approach for writing Redux logic today,
 * including store setup, reducers, data fetching, and more.
 *
 * **For more details, please read this Redux docs page:**
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * `configureStore` from Redux Toolkit is an improved version of `createStore` that
 * simplifies setup and helps avoid common bugs.
 *
 * You should not be using the `redux` core package by itself today, except for learning purposes.
 * The `createStore` method from the core `redux` package will not be removed, but we encourage
 * all users to migrate to using Redux Toolkit for all Redux code.
 *
 * If you want to use `createStore` without this visual deprecation warning, use
 * the `legacy_createStore` import instead:
 *
 * `import { legacy_createStore as createStore} from 'redux'`
 *
 */

function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
    throw new Error(formatProdErrorMessage(0) );
  }

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error(formatProdErrorMessage(1) );
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error(formatProdErrorMessage(2) );
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;
  /**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }
  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */


  function getState() {
    if (isDispatching) {
      throw new Error(formatProdErrorMessage(3) );
    }

    return currentState;
  }
  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */


  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error(formatProdErrorMessage(4) );
    }

    if (isDispatching) {
      throw new Error(formatProdErrorMessage(5) );
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      if (isDispatching) {
        throw new Error(formatProdErrorMessage(6) );
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
      currentListeners = null;
    };
  }
  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */


  function dispatch(action) {
    if (!isPlainObject(action)) {
      throw new Error(formatProdErrorMessage(7) );
    }

    if (typeof action.type === 'undefined') {
      throw new Error(formatProdErrorMessage(8) );
    }

    if (isDispatching) {
      throw new Error(formatProdErrorMessage(9) );
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;

    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }
  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */


  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error(formatProdErrorMessage(10) );
    }

    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
    // Any reducers that existed in both the new and old rootReducer
    // will receive the previous state. This effectively populates
    // the new state tree with any relevant data from the old one.

    dispatch({
      type: ActionTypes.REPLACE
    });
  }
  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */


  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object' || observer === null) {
          throw new Error(formatProdErrorMessage(11) );
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return {
          unsubscribe: unsubscribe
        };
      }
    }, _ref[$$observable] = function () {
      return this;
    }, _ref;
  } // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.


  dispatch({
    type: ActionTypes.INIT
  });
  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[$$observable] = observable, _ref2;
}

/**
 *
 * Redux Actions used to communicated to `<bp-data-store />`
 *
 * Presents an external interface for bp-connector implementations to hook
 * data sources to the bp-components.
 */
/**
 * On Request
 */
const REQUEST = 'REQUEST';
const onRequestAction = (payload) => ({
    type: REQUEST,
    payload,
});
/**
 * On Error
 */
const ERROR = 'ERROR';
const onErrorAction = (id, resolution, error, aggregationType) => ({
    type: ERROR,
    payload: {
        id,
        resolution,
        error,
        aggregationType,
    },
});
/**
 * On Success
 */
const SUCCESS = 'SUCCESS';
const onSuccessAction = (id, data, first, last, requestInformation) => ({
    type: SUCCESS,
    payload: {
        id,
        data,
        first,
        last,
        requestInformation,
    },
});

/**
 * returns the historical requests after merged.
 */
const mergeHistoricalRequest = (newRequest, existingRequest) => {
    if (newRequest.start <= existingRequest.start &&
        newRequest.end >= existingRequest.end) {
        // new request fully contains existing request.
        return [];
    }
    if (newRequest.start >= existingRequest.start &&
        newRequest.end <= existingRequest.end) {
        // new request fully contained within existing request
        return [
            {
                start: existingRequest.start,
                end: newRequest.start,
                requestedAt: existingRequest.requestedAt,
            },
            {
                start: newRequest.start,
                end: existingRequest.end,
                requestedAt: existingRequest.requestedAt,
            },
        ];
    }
    if (newRequest.start < existingRequest.start &&
        newRequest.end > existingRequest.start) {
        // new request overlaps on the left side
        return [
            {
                start: newRequest.end,
                end: existingRequest.end,
                requestedAt: existingRequest.requestedAt,
            },
        ];
    }
    if (existingRequest.start < newRequest.start &&
        existingRequest.end > newRequest.start) {
        // new request overlaps on the right side
        return [
            {
                start: existingRequest.start,
                end: newRequest.start,
                requestedAt: existingRequest.requestedAt,
            },
        ];
    }
    // non-overlapping
    return [existingRequest];
};
const chronologicalSort = (r1, r2) => r2.start.getTime() - r1.start.getTime();
/**
 * Merge Historical Requests
 *
 * Appends a historical request while maintaing the following variants:
 * 1. all historical requests are disjoint, i.e. there are not two historical requests which overlap
 * 2. A new historical request added will always be present unaltered
 */
const mergeHistoricalRequests = (existingHistory, newRequest) => [
    newRequest,
    ...existingHistory.map((r) => mergeHistoricalRequest(newRequest, r)).flat(),
].sort(chronologicalSort);

/**
 * Data Reducer
 *
 * Manages error status, loading status, and indexed data points
 */
const dataReducer = (state = {}, action) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;
    let outGoingrequests = 0;
    switch (action.type) {
        case REQUEST: {
            const { id, resolution, aggregationType, start, end, fetchFromStartToEnd, } = action.payload;
            const streamStore = getDataStreamStore(id, resolution, state, aggregationType);
            const dataCache = streamStore != null ? streamStore.dataCache : EMPTY_CACHE;
            const requestCache = streamStore != null ? streamStore.requestCache : EMPTY_CACHE;
            const existingRequestHistory = streamStore
                ? streamStore.requestHistory
                : [];
            // We only consider it loading if data has not been requested before, or if it's already loading.
            const isLoading = streamStore == null || streamStore.isLoading;
            const numericResolution = parseDuration(resolution);
            const newStreamStore = {
                ...streamStore,
                resolution: numericResolution,
                aggregationType: aggregationType,
                requestHistory: fetchFromStartToEnd
                    ? mergeHistoricalRequests(existingRequestHistory, {
                        start,
                        end,
                        requestedAt: new Date(Date.now()), // Date.now utilized in this funny way to assist mocking in the unit tests
                    })
                    : existingRequestHistory,
                dataCache,
                requestCache: fetchFromStartToEnd
                    ? addToDataPointCache({
                        cache: requestCache,
                        start,
                        end,
                    })
                    : requestCache,
                id,
                isLoading,
                isRefreshing: true,
                numOutgoingRequests: ++outGoingrequests,
            };
            const newResolutions = numericResolution != 0 && aggregationType
                ? {
                    ...(_a = state[id]) === null || _a === void 0 ? void 0 : _a.resolutions,
                    [numericResolution]: {
                        ...(_c = (_b = state[id]) === null || _b === void 0 ? void 0 : _b.resolutions) === null || _c === void 0 ? void 0 : _c[numericResolution],
                        [aggregationType]: newStreamStore,
                    },
                }
                : ((_d = state[id]) === null || _d === void 0 ? void 0 : _d.resolutions) || undefined;
            const newRawData = numericResolution === 0
                ? { ...(_e = state[id]) === null || _e === void 0 ? void 0 : _e.rawData, ...newStreamStore }
                : ((_f = state[id]) === null || _f === void 0 ? void 0 : _f.rawData) || undefined;
            return {
                ...state,
                [id]: {
                    ...state[id],
                    resolutions: newResolutions,
                    rawData: newRawData,
                },
            };
        }
        case SUCCESS: {
            const { id, data: dataStream, first, last, requestInformation, } = action.payload;
            const { aggregationType, fetchFromStartToEnd, fetchMostRecentBeforeEnd, fetchMostRecentBeforeStart, } = requestInformation;
            const streamStore = getDataStreamStore(id, dataStream.resolution, state, aggregationType);
            // Updating request cache is a hack to deal with latest value update
            // TODO: clean this to one single source of truth cache
            const requestCache = streamStore != null ? streamStore.requestCache : EMPTY_CACHE;
            // We always want data in ascending order in the cache
            const sortedData = dataStream.data.sort((a, b) => a.x - b.x);
            /**
             * Based on the type of request, determine the actual range requested.
             *
             * For instance, when we fetch latest value, we stop looking for data when we find the first point, and potentially seek beyond the start of the viewport.
             * This must be taken into account.
             */
            let intervalStart = first;
            // start the interval from the returned data point to avoid over-caching
            // if there is no data point it's fine to cache the entire interval
            if ((fetchMostRecentBeforeStart || fetchMostRecentBeforeEnd) &&
                sortedData.length > 0) {
                intervalStart = new Date(sortedData[0].x);
            }
            const updatedDataCache = addToDataPointCache({
                start: intervalStart,
                end: last,
                data: sortedData,
                cache: (streamStore && streamStore.dataCache) || EMPTY_CACHE,
            });
            const existingRequestHistory = streamStore
                ? streamStore.requestHistory
                : [];
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            const { data, ...restOfDataStream } = dataStream;
            const noOfOutGoingrequest = --outGoingrequests;
            const newStreamStore = {
                ...streamStore,
                ...restOfDataStream,
                requestHistory: mergeHistoricalRequests(existingRequestHistory, {
                    start: intervalStart,
                    end: last,
                    requestedAt: new Date(Date.now()), // Date.now utilized in this funny way to assist mocking in the unit tests
                }),
                requestCache: !fetchFromStartToEnd
                    ? addToDataPointCache({
                        cache: requestCache,
                        start: intervalStart,
                        end: last,
                    })
                    : requestCache,
                dataCache: updatedDataCache,
                isLoading: false,
                numOutgoingRequests: noOfOutGoingrequest,
                isRefreshing: noOfOutGoingrequest > 0,
                error: undefined,
            };
            const newResolutions = dataStream.resolution != 0 && aggregationType
                ? {
                    ...(_g = state[id]) === null || _g === void 0 ? void 0 : _g.resolutions,
                    [dataStream.resolution]: {
                        ...(_j = (_h = state[id]) === null || _h === void 0 ? void 0 : _h.resolutions) === null || _j === void 0 ? void 0 : _j[dataStream.resolution],
                        [aggregationType]: newStreamStore,
                    },
                }
                : ((_k = state[id]) === null || _k === void 0 ? void 0 : _k.resolutions) || undefined;
            const newRawData = dataStream.resolution === 0
                ? { ...(_l = state[id]) === null || _l === void 0 ? void 0 : _l.rawData, ...newStreamStore }
                : ((_m = state[id]) === null || _m === void 0 ? void 0 : _m.rawData) || undefined;
            return {
                ...state,
                [id]: {
                    ...state[id],
                    resolutions: newResolutions,
                    rawData: newRawData,
                },
            };
        }
        case ERROR: {
            const { id, error, resolution, aggregationType } = action.payload;
            const streamStore = getDataStreamStore(id, resolution, state, aggregationType);
            const newStreamStore = {
                ...streamStore,
                resolution,
                aggregationType,
                requestHistory: streamStore ? streamStore.requestHistory : [],
                dataCache: (streamStore && streamStore.dataCache) || EMPTY_CACHE,
                requestCache: (streamStore && streamStore.requestCache) || EMPTY_CACHE,
                id,
                error,
                isLoading: false,
                isRefreshing: false,
                numOutgoingRequests: --outGoingrequests,
            };
            const newResolutions = aggregationType
                ? {
                    ...(_o = state[id]) === null || _o === void 0 ? void 0 : _o.resolutions,
                    [resolution]: {
                        ...(_q = (_p = state[id]) === null || _p === void 0 ? void 0 : _p.resolutions) === null || _q === void 0 ? void 0 : _q[resolution],
                        [aggregationType]: newStreamStore,
                    },
                }
                : ((_r = state[id]) === null || _r === void 0 ? void 0 : _r.resolutions) || undefined;
            const newRawData = !aggregationType
                ? { ...(_s = state[id]) === null || _s === void 0 ? void 0 : _s.rawData, ...newStreamStore }
                : ((_t = state[id]) === null || _t === void 0 ? void 0 : _t.rawData) || undefined;
            return {
                ...state,
                [id]: {
                    ...state[id],
                    resolutions: newResolutions,
                    rawData: newRawData,
                },
            };
        }
        default: {
            return state;
        }
    }
};

const configureStore = (initialState = {}) => createStore(dataReducer, initialState);

function isFunction(value) {
    return typeof value === 'function';
}

function createErrorClass(createImpl) {
    const _super = (instance) => {
        Error.call(instance);
        instance.stack = new Error().stack;
    };
    const ctorFunc = createImpl(_super);
    ctorFunc.prototype = Object.create(Error.prototype);
    ctorFunc.prototype.constructor = ctorFunc;
    return ctorFunc;
}

const UnsubscriptionError = createErrorClass((_super) => function UnsubscriptionErrorImpl(errors) {
    _super(this);
    this.message = errors
        ? `${errors.length} errors occurred during unsubscription:
${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\n  ')}`
        : '';
    this.name = 'UnsubscriptionError';
    this.errors = errors;
});

function arrRemove(arr, item) {
    if (arr) {
        const index = arr.indexOf(item);
        0 <= index && arr.splice(index, 1);
    }
}

class Subscription {
    constructor(initialTeardown) {
        this.initialTeardown = initialTeardown;
        this.closed = false;
        this._parentage = null;
        this._finalizers = null;
    }
    unsubscribe() {
        let errors;
        if (!this.closed) {
            this.closed = true;
            const { _parentage } = this;
            if (_parentage) {
                this._parentage = null;
                if (Array.isArray(_parentage)) {
                    for (const parent of _parentage) {
                        parent.remove(this);
                    }
                }
                else {
                    _parentage.remove(this);
                }
            }
            const { initialTeardown: initialFinalizer } = this;
            if (isFunction(initialFinalizer)) {
                try {
                    initialFinalizer();
                }
                catch (e) {
                    errors = e instanceof UnsubscriptionError ? e.errors : [e];
                }
            }
            const { _finalizers } = this;
            if (_finalizers) {
                this._finalizers = null;
                for (const finalizer of _finalizers) {
                    try {
                        execFinalizer(finalizer);
                    }
                    catch (err) {
                        errors = errors !== null && errors !== void 0 ? errors : [];
                        if (err instanceof UnsubscriptionError) {
                            errors = [...errors, ...err.errors];
                        }
                        else {
                            errors.push(err);
                        }
                    }
                }
            }
            if (errors) {
                throw new UnsubscriptionError(errors);
            }
        }
    }
    add(teardown) {
        var _a;
        if (teardown && teardown !== this) {
            if (this.closed) {
                execFinalizer(teardown);
            }
            else {
                if (teardown instanceof Subscription) {
                    if (teardown.closed || teardown._hasParent(this)) {
                        return;
                    }
                    teardown._addParent(this);
                }
                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);
            }
        }
    }
    _hasParent(parent) {
        const { _parentage } = this;
        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));
    }
    _addParent(parent) {
        const { _parentage } = this;
        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;
    }
    _removeParent(parent) {
        const { _parentage } = this;
        if (_parentage === parent) {
            this._parentage = null;
        }
        else if (Array.isArray(_parentage)) {
            arrRemove(_parentage, parent);
        }
    }
    remove(teardown) {
        const { _finalizers } = this;
        _finalizers && arrRemove(_finalizers, teardown);
        if (teardown instanceof Subscription) {
            teardown._removeParent(this);
        }
    }
}
Subscription.EMPTY = (() => {
    const empty = new Subscription();
    empty.closed = true;
    return empty;
})();
const EMPTY_SUBSCRIPTION = Subscription.EMPTY;
function isSubscription(value) {
    return (value instanceof Subscription ||
        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));
}
function execFinalizer(finalizer) {
    if (isFunction(finalizer)) {
        finalizer();
    }
    else {
        finalizer.unsubscribe();
    }
}

const config = {
    onUnhandledError: null,
    onStoppedNotification: null,
    Promise: undefined,
    useDeprecatedSynchronousErrorHandling: false,
    useDeprecatedNextContext: false,
};

const timeoutProvider = {
    setTimeout(handler, timeout, ...args) {
        const { delegate } = timeoutProvider;
        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {
            return delegate.setTimeout(handler, timeout, ...args);
        }
        return setTimeout(handler, timeout, ...args);
    },
    clearTimeout(handle) {
        const { delegate } = timeoutProvider;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);
    },
    delegate: undefined,
};

function reportUnhandledError(err) {
    timeoutProvider.setTimeout(() => {
        const { onUnhandledError } = config;
        if (onUnhandledError) {
            onUnhandledError(err);
        }
        else {
            throw err;
        }
    });
}

function noop() { }

const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined))();
function errorNotification(error) {
    return createNotification('E', undefined, error);
}
function nextNotification(value) {
    return createNotification('N', value, undefined);
}
function createNotification(kind, value, error) {
    return {
        kind,
        value,
        error,
    };
}

function errorContext(cb) {
    {
        cb();
    }
}

class Subscriber extends Subscription {
    constructor(destination) {
        super();
        this.isStopped = false;
        if (destination) {
            this.destination = destination;
            if (isSubscription(destination)) {
                destination.add(this);
            }
        }
        else {
            this.destination = EMPTY_OBSERVER;
        }
    }
    static create(next, error, complete) {
        return new SafeSubscriber(next, error, complete);
    }
    next(value) {
        if (this.isStopped) {
            handleStoppedNotification(nextNotification(value), this);
        }
        else {
            this._next(value);
        }
    }
    error(err) {
        if (this.isStopped) {
            handleStoppedNotification(errorNotification(err), this);
        }
        else {
            this.isStopped = true;
            this._error(err);
        }
    }
    complete() {
        if (this.isStopped) {
            handleStoppedNotification(COMPLETE_NOTIFICATION, this);
        }
        else {
            this.isStopped = true;
            this._complete();
        }
    }
    unsubscribe() {
        if (!this.closed) {
            this.isStopped = true;
            super.unsubscribe();
            this.destination = null;
        }
    }
    _next(value) {
        this.destination.next(value);
    }
    _error(err) {
        try {
            this.destination.error(err);
        }
        finally {
            this.unsubscribe();
        }
    }
    _complete() {
        try {
            this.destination.complete();
        }
        finally {
            this.unsubscribe();
        }
    }
}
const _bind = Function.prototype.bind;
function bind(fn, thisArg) {
    return _bind.call(fn, thisArg);
}
class ConsumerObserver {
    constructor(partialObserver) {
        this.partialObserver = partialObserver;
    }
    next(value) {
        const { partialObserver } = this;
        if (partialObserver.next) {
            try {
                partialObserver.next(value);
            }
            catch (error) {
                handleUnhandledError(error);
            }
        }
    }
    error(err) {
        const { partialObserver } = this;
        if (partialObserver.error) {
            try {
                partialObserver.error(err);
            }
            catch (error) {
                handleUnhandledError(error);
            }
        }
        else {
            handleUnhandledError(err);
        }
    }
    complete() {
        const { partialObserver } = this;
        if (partialObserver.complete) {
            try {
                partialObserver.complete();
            }
            catch (error) {
                handleUnhandledError(error);
            }
        }
    }
}
class SafeSubscriber extends Subscriber {
    constructor(observerOrNext, error, complete) {
        super();
        let partialObserver;
        if (isFunction(observerOrNext) || !observerOrNext) {
            partialObserver = {
                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),
                error: error !== null && error !== void 0 ? error : undefined,
                complete: complete !== null && complete !== void 0 ? complete : undefined,
            };
        }
        else {
            let context;
            if (this && config.useDeprecatedNextContext) {
                context = Object.create(observerOrNext);
                context.unsubscribe = () => this.unsubscribe();
                partialObserver = {
                    next: observerOrNext.next && bind(observerOrNext.next, context),
                    error: observerOrNext.error && bind(observerOrNext.error, context),
                    complete: observerOrNext.complete && bind(observerOrNext.complete, context),
                };
            }
            else {
                partialObserver = observerOrNext;
            }
        }
        this.destination = new ConsumerObserver(partialObserver);
    }
}
function handleUnhandledError(error) {
    {
        reportUnhandledError(error);
    }
}
function defaultErrorHandler(err) {
    throw err;
}
function handleStoppedNotification(notification, subscriber) {
    const { onStoppedNotification } = config;
    onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));
}
const EMPTY_OBSERVER = {
    closed: true,
    next: noop,
    error: defaultErrorHandler,
    complete: noop,
};

const observable = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();

function identity(x) {
    return x;
}

function pipeFromArray(fns) {
    if (fns.length === 0) {
        return identity;
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce((prev, fn) => fn(prev), input);
    };
}

class Observable {
    constructor(subscribe) {
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    lift(operator) {
        const observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    }
    subscribe(observerOrNext, error, complete) {
        const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);
        errorContext(() => {
            const { operator, source } = this;
            subscriber.add(operator
                ?
                    operator.call(subscriber, source)
                : source
                    ?
                        this._subscribe(subscriber)
                    :
                        this._trySubscribe(subscriber));
        });
        return subscriber;
    }
    _trySubscribe(sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            sink.error(err);
        }
    }
    forEach(next, promiseCtor) {
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor((resolve, reject) => {
            const subscriber = new SafeSubscriber({
                next: (value) => {
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        subscriber.unsubscribe();
                    }
                },
                error: reject,
                complete: resolve,
            });
            this.subscribe(subscriber);
        });
    }
    _subscribe(subscriber) {
        var _a;
        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);
    }
    [observable]() {
        return this;
    }
    pipe(...operations) {
        return pipeFromArray(operations)(this);
    }
    toPromise(promiseCtor) {
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor((resolve, reject) => {
            let value;
            this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));
        });
    }
}
Observable.create = (subscribe) => {
    return new Observable(subscribe);
};
function getPromiseCtor(promiseCtor) {
    var _a;
    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;
}
function isObserver(value) {
    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);
}
function isSubscriber(value) {
    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));
}

function hasLift(source) {
    return isFunction(source === null || source === void 0 ? void 0 : source.lift);
}
function operate(init) {
    return (source) => {
        if (hasLift(source)) {
            return source.lift(function (liftedSource) {
                try {
                    return init(liftedSource, this);
                }
                catch (err) {
                    this.error(err);
                }
            });
        }
        throw new TypeError('Unable to lift unknown Observable type');
    };
}

function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {
    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);
}
class OperatorSubscriber extends Subscriber {
    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {
        super(destination);
        this.onFinalize = onFinalize;
        this.shouldUnsubscribe = shouldUnsubscribe;
        this._next = onNext
            ? function (value) {
                try {
                    onNext(value);
                }
                catch (err) {
                    destination.error(err);
                }
            }
            : super._next;
        this._error = onError
            ? function (err) {
                try {
                    onError(err);
                }
                catch (err) {
                    destination.error(err);
                }
                finally {
                    this.unsubscribe();
                }
            }
            : super._error;
        this._complete = onComplete
            ? function () {
                try {
                    onComplete();
                }
                catch (err) {
                    destination.error(err);
                }
                finally {
                    this.unsubscribe();
                }
            }
            : super._complete;
    }
    unsubscribe() {
        var _a;
        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed } = this;
            super.unsubscribe();
            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));
        }
    }
}

const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {
    _super(this);
    this.name = 'ObjectUnsubscribedError';
    this.message = 'object unsubscribed';
});

class Subject extends Observable {
    constructor() {
        super();
        this.closed = false;
        this.currentObservers = null;
        this.observers = [];
        this.isStopped = false;
        this.hasError = false;
        this.thrownError = null;
    }
    lift(operator) {
        const subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    }
    _throwIfClosed() {
        if (this.closed) {
            throw new ObjectUnsubscribedError();
        }
    }
    next(value) {
        errorContext(() => {
            this._throwIfClosed();
            if (!this.isStopped) {
                if (!this.currentObservers) {
                    this.currentObservers = Array.from(this.observers);
                }
                for (const observer of this.currentObservers) {
                    observer.next(value);
                }
            }
        });
    }
    error(err) {
        errorContext(() => {
            this._throwIfClosed();
            if (!this.isStopped) {
                this.hasError = this.isStopped = true;
                this.thrownError = err;
                const { observers } = this;
                while (observers.length) {
                    observers.shift().error(err);
                }
            }
        });
    }
    complete() {
        errorContext(() => {
            this._throwIfClosed();
            if (!this.isStopped) {
                this.isStopped = true;
                const { observers } = this;
                while (observers.length) {
                    observers.shift().complete();
                }
            }
        });
    }
    unsubscribe() {
        this.isStopped = this.closed = true;
        this.observers = this.currentObservers = null;
    }
    get observed() {
        var _a;
        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;
    }
    _trySubscribe(subscriber) {
        this._throwIfClosed();
        return super._trySubscribe(subscriber);
    }
    _subscribe(subscriber) {
        this._throwIfClosed();
        this._checkFinalizedStatuses(subscriber);
        return this._innerSubscribe(subscriber);
    }
    _innerSubscribe(subscriber) {
        const { hasError, isStopped, observers } = this;
        if (hasError || isStopped) {
            return EMPTY_SUBSCRIPTION;
        }
        this.currentObservers = null;
        observers.push(subscriber);
        return new Subscription(() => {
            this.currentObservers = null;
            arrRemove(observers, subscriber);
        });
    }
    _checkFinalizedStatuses(subscriber) {
        const { hasError, thrownError, isStopped } = this;
        if (hasError) {
            subscriber.error(thrownError);
        }
        else if (isStopped) {
            subscriber.complete();
        }
    }
    asObservable() {
        const observable = new Observable();
        observable.source = this;
        return observable;
    }
}
Subject.create = (destination, source) => {
    return new AnonymousSubject(destination, source);
};
class AnonymousSubject extends Subject {
    constructor(destination, source) {
        super();
        this.destination = destination;
        this.source = source;
    }
    next(value) {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);
    }
    error(err) {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);
    }
    complete() {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);
    }
    _subscribe(subscriber) {
        var _a, _b;
        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;
    }
}

class BehaviorSubject extends Subject {
    constructor(_value) {
        super();
        this._value = _value;
    }
    get value() {
        return this.getValue();
    }
    _subscribe(subscriber) {
        const subscription = super._subscribe(subscriber);
        !subscription.closed && subscriber.next(this._value);
        return subscription;
    }
    getValue() {
        const { hasError, thrownError, _value } = this;
        if (hasError) {
            throw thrownError;
        }
        this._throwIfClosed();
        return _value;
    }
    next(value) {
        super.next((this._value = value));
    }
}

const dateTimestampProvider = {
    now() {
        return (dateTimestampProvider.delegate || Date).now();
    },
    delegate: undefined,
};

class ReplaySubject extends Subject {
    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {
        super();
        this._bufferSize = _bufferSize;
        this._windowTime = _windowTime;
        this._timestampProvider = _timestampProvider;
        this._buffer = [];
        this._infiniteTimeWindow = true;
        this._infiniteTimeWindow = _windowTime === Infinity;
        this._bufferSize = Math.max(1, _bufferSize);
        this._windowTime = Math.max(1, _windowTime);
    }
    next(value) {
        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;
        if (!isStopped) {
            _buffer.push(value);
            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);
        }
        this._trimBuffer();
        super.next(value);
    }
    _subscribe(subscriber) {
        this._throwIfClosed();
        this._trimBuffer();
        const subscription = this._innerSubscribe(subscriber);
        const { _infiniteTimeWindow, _buffer } = this;
        const copy = _buffer.slice();
        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {
            subscriber.next(copy[i]);
        }
        this._checkFinalizedStatuses(subscriber);
        return subscription;
    }
    _trimBuffer() {
        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;
        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;
        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);
        if (!_infiniteTimeWindow) {
            const now = _timestampProvider.now();
            let last = 0;
            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {
                last = i;
            }
            last && _buffer.splice(0, last + 1);
        }
    }
}

class Action extends Subscription {
    constructor(scheduler, work) {
        super();
    }
    schedule(state, delay = 0) {
        return this;
    }
}

const intervalProvider = {
    setInterval(handler, timeout, ...args) {
        const { delegate } = intervalProvider;
        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {
            return delegate.setInterval(handler, timeout, ...args);
        }
        return setInterval(handler, timeout, ...args);
    },
    clearInterval(handle) {
        const { delegate } = intervalProvider;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);
    },
    delegate: undefined,
};

class AsyncAction extends Action {
    constructor(scheduler, work) {
        super(scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.pending = false;
    }
    schedule(state, delay = 0) {
        var _a;
        if (this.closed) {
            return this;
        }
        this.state = state;
        const id = this.id;
        const scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);
        return this;
    }
    requestAsyncId(scheduler, _id, delay = 0) {
        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);
    }
    recycleAsyncId(_scheduler, id, delay = 0) {
        if (delay != null && this.delay === delay && this.pending === false) {
            return id;
        }
        if (id != null) {
            intervalProvider.clearInterval(id);
        }
        return undefined;
    }
    execute(state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        const error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    }
    _execute(state, _delay) {
        let errored = false;
        let errorValue;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = e ? e : new Error('Scheduled action threw falsy error');
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    }
    unsubscribe() {
        if (!this.closed) {
            const { id, scheduler } = this;
            const { actions } = scheduler;
            this.work = this.state = this.scheduler = null;
            this.pending = false;
            arrRemove(actions, this);
            if (id != null) {
                this.id = this.recycleAsyncId(scheduler, id, null);
            }
            this.delay = null;
            super.unsubscribe();
        }
    }
}

class Scheduler {
    constructor(schedulerActionCtor, now = Scheduler.now) {
        this.schedulerActionCtor = schedulerActionCtor;
        this.now = now;
    }
    schedule(work, delay = 0, state) {
        return new this.schedulerActionCtor(this, work).schedule(state, delay);
    }
}
Scheduler.now = dateTimestampProvider.now;

class AsyncScheduler extends Scheduler {
    constructor(SchedulerAction, now = Scheduler.now) {
        super(SchedulerAction, now);
        this.actions = [];
        this._active = false;
    }
    flush(action) {
        const { actions } = this;
        if (this._active) {
            actions.push(action);
            return;
        }
        let error;
        this._active = true;
        do {
            if ((error = action.execute(action.state, action.delay))) {
                break;
            }
        } while ((action = actions.shift()));
        this._active = false;
        if (error) {
            while ((action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    }
}

const asyncScheduler = new AsyncScheduler(AsyncAction);
const async = asyncScheduler;

const EMPTY = new Observable((subscriber) => subscriber.complete());

function isScheduler(value) {
    return value && isFunction(value.schedule);
}

function last(arr) {
    return arr[arr.length - 1];
}
function popScheduler(args) {
    return isScheduler(last(args)) ? args.pop() : undefined;
}

const isArrayLike = ((x) => x && typeof x.length === 'number' && typeof x !== 'function');

function isPromise(value) {
    return isFunction(value === null || value === void 0 ? void 0 : value.then);
}

function isInteropObservable(input) {
    return isFunction(input[observable]);
}

function isAsyncIterable(obj) {
    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);
}

function createInvalidObservableTypeError(input) {
    return new TypeError(`You provided ${input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`);
}

function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
const iterator = getSymbolIterator();

function isIterable(input) {
    return isFunction(input === null || input === void 0 ? void 0 : input[iterator]);
}

function readableStreamLikeToAsyncGenerator(readableStream) {
    return __asyncGenerator$5(this, arguments, function* readableStreamLikeToAsyncGenerator_1() {
        const reader = readableStream.getReader();
        try {
            while (true) {
                const { value, done } = yield __await$5(reader.read());
                if (done) {
                    return yield __await$5(void 0);
                }
                yield yield __await$5(value);
            }
        }
        finally {
            reader.releaseLock();
        }
    });
}
function isReadableStreamLike(obj) {
    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);
}

function innerFrom(input) {
    if (input instanceof Observable) {
        return input;
    }
    if (input != null) {
        if (isInteropObservable(input)) {
            return fromInteropObservable(input);
        }
        if (isArrayLike(input)) {
            return fromArrayLike(input);
        }
        if (isPromise(input)) {
            return fromPromise(input);
        }
        if (isAsyncIterable(input)) {
            return fromAsyncIterable(input);
        }
        if (isIterable(input)) {
            return fromIterable(input);
        }
        if (isReadableStreamLike(input)) {
            return fromReadableStreamLike(input);
        }
    }
    throw createInvalidObservableTypeError(input);
}
function fromInteropObservable(obj) {
    return new Observable((subscriber) => {
        const obs = obj[observable]();
        if (isFunction(obs.subscribe)) {
            return obs.subscribe(subscriber);
        }
        throw new TypeError('Provided object does not correctly implement Symbol.observable');
    });
}
function fromArrayLike(array) {
    return new Observable((subscriber) => {
        for (let i = 0; i < array.length && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    });
}
function fromPromise(promise) {
    return new Observable((subscriber) => {
        promise
            .then((value) => {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, (err) => subscriber.error(err))
            .then(null, reportUnhandledError);
    });
}
function fromIterable(iterable) {
    return new Observable((subscriber) => {
        for (const value of iterable) {
            subscriber.next(value);
            if (subscriber.closed) {
                return;
            }
        }
        subscriber.complete();
    });
}
function fromAsyncIterable(asyncIterable) {
    return new Observable((subscriber) => {
        process$1(asyncIterable, subscriber).catch((err) => subscriber.error(err));
    });
}
function fromReadableStreamLike(readableStream) {
    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));
}
function process$1(asyncIterable, subscriber) {
    var asyncIterable_1, asyncIterable_1_1;
    var e_1, _a;
    return __awaiter$5(this, void 0, void 0, function* () {
        try {
            for (asyncIterable_1 = __asyncValues$5(asyncIterable); asyncIterable_1_1 = yield asyncIterable_1.next(), !asyncIterable_1_1.done;) {
                const value = asyncIterable_1_1.value;
                subscriber.next(value);
                if (subscriber.closed) {
                    return;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return)) yield _a.call(asyncIterable_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        subscriber.complete();
    });
}

function executeSchedule(parentSubscription, scheduler, work, delay = 0, repeat = false) {
    const scheduleSubscription = scheduler.schedule(function () {
        work();
        if (repeat) {
            parentSubscription.add(this.schedule(null, delay));
        }
        else {
            this.unsubscribe();
        }
    }, delay);
    parentSubscription.add(scheduleSubscription);
    if (!repeat) {
        return scheduleSubscription;
    }
}

function observeOn(scheduler, delay = 0) {
    return operate((source, subscriber) => {
        source.subscribe(createOperatorSubscriber(subscriber, (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay), () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay), (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)));
    });
}

function subscribeOn(scheduler, delay = 0) {
    return operate((source, subscriber) => {
        subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));
    });
}

function scheduleObservable(input, scheduler) {
    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));
}

function schedulePromise(input, scheduler) {
    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));
}

function scheduleArray(input, scheduler) {
    return new Observable((subscriber) => {
        let i = 0;
        return scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
            }
            else {
                subscriber.next(input[i++]);
                if (!subscriber.closed) {
                    this.schedule();
                }
            }
        });
    });
}

function scheduleIterable(input, scheduler) {
    return new Observable((subscriber) => {
        let iterator$1;
        executeSchedule(subscriber, scheduler, () => {
            iterator$1 = input[iterator]();
            executeSchedule(subscriber, scheduler, () => {
                let value;
                let done;
                try {
                    ({ value, done } = iterator$1.next());
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                }
            }, 0, true);
        });
        return () => isFunction(iterator$1 === null || iterator$1 === void 0 ? void 0 : iterator$1.return) && iterator$1.return();
    });
}

function scheduleAsyncIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new Observable((subscriber) => {
        executeSchedule(subscriber, scheduler, () => {
            const iterator = input[Symbol.asyncIterator]();
            executeSchedule(subscriber, scheduler, () => {
                iterator.next().then((result) => {
                    if (result.done) {
                        subscriber.complete();
                    }
                    else {
                        subscriber.next(result.value);
                    }
                });
            }, 0, true);
        });
    });
}

function scheduleReadableStreamLike(input, scheduler) {
    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);
}

function scheduled(input, scheduler) {
    if (input != null) {
        if (isInteropObservable(input)) {
            return scheduleObservable(input, scheduler);
        }
        if (isArrayLike(input)) {
            return scheduleArray(input, scheduler);
        }
        if (isPromise(input)) {
            return schedulePromise(input, scheduler);
        }
        if (isAsyncIterable(input)) {
            return scheduleAsyncIterable(input, scheduler);
        }
        if (isIterable(input)) {
            return scheduleIterable(input, scheduler);
        }
        if (isReadableStreamLike(input)) {
            return scheduleReadableStreamLike(input, scheduler);
        }
    }
    throw createInvalidObservableTypeError(input);
}

function from(input, scheduler) {
    return scheduler ? scheduled(input, scheduler) : innerFrom(input);
}

const EmptyError = createErrorClass((_super) => function EmptyErrorImpl() {
    _super(this);
    this.name = 'EmptyError';
    this.message = 'no elements in sequence';
});

function lastValueFrom(source, config) {
    const hasConfig = typeof config === 'object';
    return new Promise((resolve, reject) => {
        let _hasValue = false;
        let _value;
        source.subscribe({
            next: (value) => {
                _value = value;
                _hasValue = true;
            },
            error: reject,
            complete: () => {
                if (_hasValue) {
                    resolve(_value);
                }
                else if (hasConfig) {
                    resolve(config.defaultValue);
                }
                else {
                    reject(new EmptyError());
                }
            },
        });
    });
}

function isValidDate(value) {
    return value instanceof Date && !isNaN(value);
}

function map(project, thisArg) {
    return operate((source, subscriber) => {
        let index = 0;
        source.subscribe(createOperatorSubscriber(subscriber, (value) => {
            subscriber.next(project.call(thisArg, value, index++));
        }));
    });
}

function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {
    const buffer = [];
    let active = 0;
    let index = 0;
    let isComplete = false;
    const checkComplete = () => {
        if (isComplete && !buffer.length && !active) {
            subscriber.complete();
        }
    };
    const outerNext = (value) => (active < concurrent ? doInnerSub(value) : buffer.push(value));
    const doInnerSub = (value) => {
        expand && subscriber.next(value);
        active++;
        let innerComplete = false;
        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, (innerValue) => {
            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);
            if (expand) {
                outerNext(innerValue);
            }
            else {
                subscriber.next(innerValue);
            }
        }, () => {
            innerComplete = true;
        }, undefined, () => {
            if (innerComplete) {
                try {
                    active--;
                    while (buffer.length && active < concurrent) {
                        const bufferedValue = buffer.shift();
                        if (innerSubScheduler) {
                            executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));
                        }
                        else {
                            doInnerSub(bufferedValue);
                        }
                    }
                    checkComplete();
                }
                catch (err) {
                    subscriber.error(err);
                }
            }
        }));
    };
    source.subscribe(createOperatorSubscriber(subscriber, outerNext, () => {
        isComplete = true;
        checkComplete();
    }));
    return () => {
        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();
    };
}

function mergeMap(project, resultSelector, concurrent = Infinity) {
    if (isFunction(resultSelector)) {
        return mergeMap((a, i) => map((b, ii) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));
}

function mergeAll(concurrent = Infinity) {
    return mergeMap(identity, concurrent);
}

function concatAll() {
    return mergeAll(1);
}

function concat(...args) {
    return concatAll()(from(args, popScheduler(args)));
}

function timer(dueTime = 0, intervalOrScheduler, scheduler = async) {
    let intervalDuration = -1;
    if (intervalOrScheduler != null) {
        if (isScheduler(intervalOrScheduler)) {
            scheduler = intervalOrScheduler;
        }
        else {
            intervalDuration = intervalOrScheduler;
        }
    }
    return new Observable((subscriber) => {
        let due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;
        if (due < 0) {
            due = 0;
        }
        let n = 0;
        return scheduler.schedule(function () {
            if (!subscriber.closed) {
                subscriber.next(n++);
                if (0 <= intervalDuration) {
                    this.schedule(undefined, intervalDuration);
                }
                else {
                    subscriber.complete();
                }
            }
        }, due);
    });
}

function filter(predicate, thisArg) {
    return operate((source, subscriber) => {
        let index = 0;
        source.subscribe(createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value)));
    });
}

function debounceTime(dueTime, scheduler = asyncScheduler) {
    return operate((source, subscriber) => {
        let activeTask = null;
        let lastValue = null;
        let lastTime = null;
        const emit = () => {
            if (activeTask) {
                activeTask.unsubscribe();
                activeTask = null;
                const value = lastValue;
                lastValue = null;
                subscriber.next(value);
            }
        };
        function emitWhenIdle() {
            const targetTime = lastTime + dueTime;
            const now = scheduler.now();
            if (now < targetTime) {
                activeTask = this.schedule(undefined, targetTime - now);
                subscriber.add(activeTask);
                return;
            }
            emit();
        }
        source.subscribe(createOperatorSubscriber(subscriber, (value) => {
            lastValue = value;
            lastTime = scheduler.now();
            if (!activeTask) {
                activeTask = scheduler.schedule(emitWhenIdle, dueTime);
                subscriber.add(activeTask);
            }
        }, () => {
            emit();
            subscriber.complete();
        }, undefined, () => {
            lastValue = activeTask = null;
        }));
    });
}

function take(count) {
    return count <= 0
        ?
            () => EMPTY
        : operate((source, subscriber) => {
            let seen = 0;
            source.subscribe(createOperatorSubscriber(subscriber, (value) => {
                if (++seen <= count) {
                    subscriber.next(value);
                    if (count <= seen) {
                        subscriber.complete();
                    }
                }
            }));
        });
}

function ignoreElements() {
    return operate((source, subscriber) => {
        source.subscribe(createOperatorSubscriber(subscriber, noop));
    });
}

function mapTo(value) {
    return map(() => value);
}

function delayWhen(delayDurationSelector, subscriptionDelay) {
    if (subscriptionDelay) {
        return (source) => concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));
    }
    return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));
}

function delay(due, scheduler = asyncScheduler) {
    const duration = timer(due, scheduler);
    return delayWhen(() => duration);
}

function expand(project, concurrent = Infinity, scheduler) {
    concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;
    return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent, undefined, true, scheduler));
}

function finalize(callback) {
    return operate((source, subscriber) => {
        try {
            source.subscribe(subscriber);
        }
        finally {
            subscriber.add(callback);
        }
    });
}

function pairwise() {
    return operate((source, subscriber) => {
        let prev;
        let hasPrev = false;
        source.subscribe(createOperatorSubscriber(subscriber, (value) => {
            const p = prev;
            prev = value;
            hasPrev && subscriber.next([p, value]);
            hasPrev = true;
        }));
    });
}

function startWith(...values) {
    const scheduler = popScheduler(values);
    return operate((source, subscriber) => {
        (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);
    });
}

/**
 * To Data Streams
 *
 * Returns the data streams, with the various resolutions of data collapsed into a single corresponding data stream.
 */
const toDataStreams = ({ requestInformations, dataStreamsStores, }) => {
    return requestInformations.map((info) => {
        var _a, _b, _c;
        const { aggregationType, resolution } = info;
        const resolutionStreamStore = ((_a = dataStreamsStores[info.id]) === null || _a === void 0 ? void 0 : _a.resolutions) || {};
        const rawDataStreamStore = (_b = dataStreamsStores[info.id]) === null || _b === void 0 ? void 0 : _b.rawData;
        const parsedResolution = parseDuration(resolution);
        const { dataCache, requestCache: _requestCache, requestHistory: _requestHistory, ...restOfStream } = (aggregationType &&
            ((_c = resolutionStreamStore[parsedResolution]) === null || _c === void 0 ? void 0 : _c[aggregationType])) ||
            rawDataStreamStore ||
            {};
        const dataPoints = (dataCache === null || dataCache === void 0 ? void 0 : dataCache.items.flat()) || [];
        // Create new data stream for the corresponding info
        return {
            ...restOfStream,
            id: info.id,
            refId: info.refId,
            resolution: parsedResolution,
            data: dataPoints,
        };
    });
};

const hasIntervalForRange = (intervals, range) => {
    if (!intervals)
        return false;
    return intervals === null || intervals === void 0 ? void 0 : intervals.some((interval) => {
        const intervalStart = new Date(interval[0]);
        const intervalEnd = new Date(interval[1]);
        const isStartWithinInterval = range.start >= intervalStart && range.start <= intervalEnd;
        const isEndWithinInterval = range.end >= intervalStart && range.end <= intervalEnd;
        return isStartWithinInterval && isEndWithinInterval;
    });
};

/**
 * Referential comparison of information related to the requested information.
 */
const hasRequestedInformationChanged = ({ prevDataCache, currDataCache }, requestInformation) => {
    const prevDataStreamStore = getDataStreamStore(requestInformation.id, requestInformation.resolution, prevDataCache, requestInformation.aggregationType);
    const currDataStreamStore = getDataStreamStore(requestInformation.id, requestInformation.resolution, currDataCache, requestInformation.aggregationType);
    const hasChanged = prevDataStreamStore != currDataStreamStore;
    return hasChanged;
};
/**
 * Data Cache Wrapper
 *
 * A wrapper around the existing data-cache, as is currently used within SiteWise Monitor.
 *
 * This wrapped component allows us to evolve the API of the data-cache, without altering the currently utilized data-cache.
 */
class DataCache {
    constructor(initialDataCache) {
        this.subscribe = (requestInformations, emit) => {
            const subscription = this.observableStore
                .pipe(
            // Filter out any changes that don't effect the requested informations
            filter(({ currDataCache, prevDataCache }) => requestInformations.some((requestInformation) => hasRequestedInformationChanged({
                currDataCache,
                prevDataCache,
            }, requestInformation))))
                .subscribe((stores) => {
                const dataStreams = toDataStreams({
                    dataStreamsStores: stores.currDataCache,
                    requestInformations: requestInformations,
                });
                emit(dataStreams);
            });
            return () => {
                subscription.unsubscribe();
            };
        };
        this.shouldRequestDataStream = ({ dataStreamId, resolution, aggregationType, }) => {
            const associatedStore = getDataStreamStore(dataStreamId, resolution, this.getState(), aggregationType);
            const hasError = associatedStore ? associatedStore.error != null : false;
            return !hasError;
        };
        this.getState = () => this.dataCache.getState();
        // emits cached data
        this.getCachedDataForRange = (requestInfos, emit) => {
            const subscription = this.observableStore
                .pipe(delay(0))
                .subscribe(({ currDataCache }) => {
                const hasLoadedFullIntervalData = requestInfos.every((request) => {
                    const { id, resolution, aggregationType, start, end } = request;
                    const associatedStore = getDataStreamStore(id, resolution, currDataCache, aggregationType);
                    // if no stores are found, then data is uncached
                    if (!associatedStore)
                        return false;
                    // check if cache has correct interval and is not loading more data
                    const hasLoadedData = !associatedStore.isLoading && !associatedStore.isRefreshing;
                    const hasLoadedFullInterval = hasIntervalForRange(associatedStore.dataCache.intervals, { start, end });
                    return hasLoadedData && hasLoadedFullInterval;
                });
                // only emit data streams if all request informations have loaded dataStreams for the required time range
                if (hasLoadedFullIntervalData) {
                    const dataStreams = toDataStreams({
                        requestInformations: requestInfos,
                        dataStreamsStores: currDataCache,
                    });
                    subscription.unsubscribe();
                    emit(dataStreams);
                }
            });
        };
        /**
         * data-cache bindings
         *
         * data-cache utilizes a redux store, the below methods are for ease of use, so you don't have to worry about
         * coordinating the dispatching of the action throughout the file.
         */
        this.onSuccess = (dataStreams, requestInformation, start, end) => {
            // TODO: `duration` is not an accurate way to determine what _was_ requested.
            //  Need to change then code to utilize the actual start and end date, as utilized by the data source which initiated the request.
            //  For example, if we have queried data for the last day, but it took 1 minute for the query to resolve, we would have the start and the end date
            //  incorrectly offset by one minute with the correct logic.
            dataStreams.forEach((stream) => {
                this.dataCache.dispatch(onSuccessAction(stream.id, stream, start, end, requestInformation));
            });
        };
        this.onError = ({ id, resolution, error, aggregationType, }) => {
            this.dataCache.dispatch(onErrorAction(id, resolution, error, aggregationType));
        };
        this.onRequest = (requestInformation) => {
            this.dataCache.dispatch(onRequestAction(requestInformation));
        };
        this.dataCache = configureStore(initialDataCache);
        this.observableStore = from(this.dataCache).pipe(startWith(undefined), pairwise(), map(([prevDataCache, currDataCache]) => ({
            prevDataCache,
            currDataCache,
        })));
    }
}

/**
 * Returns the number of digits in a natural number (positive integer) e.g. numDigits(145) will return 3
 * @param x - Must be a natural number
 */
const numDigits = (x) => Math.floor(Math.log10(x) + 1);
const roundUp = (x) => {
    if (x === 0) {
        // We cannot utilize log on zero, so we specifically handle this
        return 0;
    }
    const roundDigits = numDigits(x) - 1;
    const k = 10 ** roundDigits;
    return Math.ceil(x / k) * k;
};
/**
 * Request Range
 *
 * Returns the range of dates to request data from.
 *
 * The request range will be a strictly larger range than the view port,
 * which allows the chart to pan and already have data present.
 *
 * DESIGN
 * We have several goals,
 * One should be able to get the same request range, for a wide range of start and end dates:
 * 1. with start/end dates slightly shifted in either direction
 * 2. The duration of time between start and end date becoming larger or smaller.
 *
 * This is important to prevent quick succession of requesting new date.
 */
const requestRange = ({ start, end, max }, buffer) => {
    let adjustedStart = start;
    let adjustedEnd = end;
    if (buffer) {
        const duration = end.getTime() - start.getTime();
        const bufferedDuration = roundUp(duration * (1 + buffer * 2));
        const durationStep = bufferedDuration / 4;
        adjustedStart = new Date(Math.floor(start.getTime() / durationStep) * durationStep -
            durationStep / 2);
        adjustedEnd = new Date(adjustedStart.getTime() + bufferedDuration);
    }
    return {
        start: adjustedStart > max ? max : adjustedStart,
        end: adjustedEnd > max ? max : adjustedEnd,
    };
};

const DEFAULT_CACHE_SETTINGS = {
    ttlDurationMapping: {
        [1.2 * MINUTE_IN_MS]: SECOND_IN_MS$2,
        [3 * MINUTE_IN_MS]: 30 * SECOND_IN_MS$2,
        [20 * MINUTE_IN_MS]: 5 * MINUTE_IN_MS,
    },
};
class TimeSeriesDataModule {
    /**
     * Create a new data module, optionally with a pre-hydrated data cache.
     *
     */
    constructor(dataSource, configuration = {}) {
        /**
         * Fulfill query
         *
         * Ensure that all requests are initiated required to fulfill the entire query, from start to end.
         * Takes into account the current state of the cache, to determine which data has already been requested, or has expired
         * segments within the cache.
         */
        this.fulfillQueries = async ({ viewport, request, queries, }) => {
            const requestedStreams = await this.dataSourceStore.getRequestsFromQueries({
                queries,
                request,
            });
            const isRequestedDataStream = ({ id, resolution, aggregationType, }) => this.dataCache.shouldRequestDataStream({
                dataStreamId: id,
                resolution: parseDuration(resolution),
                aggregationType,
            });
            const requiredStreams = requestedStreams.filter(isRequestedDataStream);
            const requests = requiredStreams
                .map(({ resolution, id, cacheSettings, aggregationType, meta }) => getRequestInformations({
                request,
                meta,
                store: this.dataCache.getState(),
                start: viewportStartDate(viewport),
                end: viewportEndDate(viewport),
                aggregationType,
                resolution,
                dataStreamId: id,
                cacheSettings: { ...this.cacheSettings, ...cacheSettings },
            }))
                .flat();
            requests.forEach(this.dataCache.onRequest);
            if (requests.length > 0) {
                this.registerRequest({ queries, request }, requests);
            }
        };
        this.getAdjustedViewport = (request) => {
            var _a;
            // Get the date range to request data for.
            // Pass in 'now' for max since we don't want to request for data in the future yet - it doesn't exist yet.
            const { start, end } = requestRange({
                start: viewportStartDate(request.viewport),
                end: viewportEndDate(request.viewport),
                max: new Date(),
            }, (_a = request.settings) === null || _a === void 0 ? void 0 : _a.requestBuffer);
            return { start, end };
        };
        this.getCachedDataStreams = async ({ viewport, queries, emitDataStreams, settings, }) => {
            const requestedStreams = await this.dataSourceStore.getRequestsFromQueries({
                queries,
                request: { viewport, settings },
            });
            // create request information on every dataStream requested
            // so they can be used to get cached data
            const requestInformations = requestedStreams.map((stream) => ({
                start: viewportStartDate(viewport),
                end: viewportEndDate(viewport),
                ...stream,
            }));
            const unsubscribe = this.dataCache.getCachedDataForRange(requestInformations, emitDataStreams);
            return unsubscribe;
        };
        this.subscribeToDataStreams = ({ queries, request }, callback) => {
            const subscriptionId = v4();
            this.subscriptions.addSubscription(subscriptionId, {
                queries,
                request,
                emit: callback,
                fulfill: () => {
                    const viewport = this.getAdjustedViewport(request);
                    if (viewport.start < viewport.end) {
                        this.fulfillQueries({
                            viewport,
                            queries,
                            request,
                        });
                    }
                },
            });
            /**
             * subscription management
             */
            const unsubscribe = () => {
                this.unsubscribe(subscriptionId);
            };
            const update = (subscriptionUpdate) => this.update(subscriptionId, subscriptionUpdate);
            return { unsubscribe, update };
        };
        this.update = async (subscriptionId, subscriptionUpdate) => {
            const subscription = this.subscriptions.getSubscription(subscriptionId);
            const updatedSubscription = { ...subscription, ...subscriptionUpdate };
            if ('queries' in updatedSubscription) {
                return this.subscriptions.updateSubscription(subscriptionId, {
                    ...updatedSubscription,
                    fulfill: () => {
                        this.fulfillQueries({
                            viewport: this.getAdjustedViewport(updatedSubscription.request),
                            queries: updatedSubscription.queries,
                            request: updatedSubscription.request,
                        });
                    },
                });
            }
        };
        this.registerRequest = (subscription, requestInformations) => {
            const { queries, request } = subscription;
            queries.forEach((query) => this.dataSourceStore.initiateRequest({
                request,
                query,
                onSuccess: this.dataCache.onSuccess,
                onError: this.dataCache.onError,
            }, requestInformations));
        };
        /**
         * Unsubscribe from the data module.
         *
         * Prevents the provided callbacks associated with the given subscription from being called, and prevents
         * the previously queried data streams from being queried any longer.
         */
        this.unsubscribe = (subscriptionId) => {
            this.subscriptions.removeSubscription(subscriptionId);
        };
        const { initialDataCache, cacheSettings } = configuration;
        this.dataSourceStore = new DataSourceStore(dataSource);
        this.dataCache = new DataCache(initialDataCache);
        this.cacheSettings = {
            ...DEFAULT_CACHE_SETTINGS,
            ...cacheSettings,
        };
        this.subscriptions = new SubscriptionStore({
            dataSourceStore: this.dataSourceStore,
            dataCache: this.dataCache,
            cacheSettings: this.cacheSettings,
        });
    }
}

const SECOND_IN_MS$1 = 1000;

const DEFAULT_REGION = 'us-west-2';
const DEFAULT_PARTITION = 'com';
const constructEndpoint = (subDomain) => ([awsRegion, awsPartition]) => ({
    url: new URL(`https://${subDomain}.${awsRegion}.amazonaws.${awsPartition}/`),
});
const getEndpointPovider = ({ subDomain, awsRegion, awsPartition, }) => {
    let region = Promise.resolve(DEFAULT_REGION);
    let partition = Promise.resolve(DEFAULT_PARTITION);
    if (awsRegion) {
        region =
            typeof awsRegion === 'string' ? Promise.resolve(awsRegion) : awsRegion();
    }
    if (awsPartition) {
        partition =
            typeof awsPartition === 'string'
                ? Promise.resolve(awsPartition)
                : awsPartition();
    }
    return () => Promise.all([region, partition]).then(constructEndpoint(subDomain));
};

const subDomain$1 = 'iotsitewise';
const sitewiseSdk = ({ credentials, awsRegion, awsPartition, }) => new IoTSiteWiseClient({
    region: awsRegion || DEFAULT_REGION,
    endpoint: getEndpointPovider({ subDomain: subDomain$1, awsRegion, awsPartition }),
    credentials,
});
const getSiteWiseClient = (input) => {
    const { iotSiteWiseClient, awsCredentials, awsRegion } = input;
    if (iotSiteWiseClient) {
        return iotSiteWiseClient;
    }
    if (awsCredentials) {
        return sitewiseSdk({ credentials: awsCredentials, awsRegion });
    }
    throw Error('IoTSiteWiseClient not found or credentials missing');
};

const subDomain = 'iotevents';
const eventsSdk = ({ credentials, awsRegion, awsPartition, }) => new IoTEventsClient({
    region: awsRegion || DEFAULT_REGION,
    endpoint: getEndpointPovider({ subDomain, awsRegion, awsPartition }),
    credentials,
});
const getIotEventsClient = (input) => {
    const { iotEventsClient, awsCredentials, awsRegion } = input;
    if (iotEventsClient) {
        return iotEventsClient;
    }
    if (awsCredentials) {
        return eventsSdk({ credentials: awsCredentials, awsRegion });
    }
    throw Error('IoTEventsClient not found or credentials missing');
};

/**
 * Predicate Utilities
 *
 * A place for generic predicates. Useful when needing predicates which play nicely
 * with typescript, or other non-trivial predicate logic.
 *
 * Providing smart predicates with built in type guards can give us stronger typing in our business logic.
 * https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types
 *
 * Example:
 *
 * Without Type Guards (to be avoided):
 * ```
 * const maybeItems : (Item | null)[] = SOME_MAYBE_ITEMS;
 * const items: Item[] = maybeItems.filter(x => x != null) as Item[];
 * ```
 *
 * With Type Guards:
 * ```
 * const maybeItems : (Item | null)[] = SOME_MAYBE_ITEMS;
 * const items: Item[] = maybeItems.filter(isDefined);
 * ```
 *
 * No type casting necessary :-) all you have to do is trust that the shared predicate properly
 * type guards.
 *
 */
const isDefined = (value) => value != null;
const isNumber = (val) => typeof val === 'number';
const isString = (val) => typeof val === 'string';

async function* fetchAssetModelsFromQuery({ queries, assetModuleSession, }) {
    const assetQueries = queries
        .map((query) => ('assets' in query ? query.assets : undefined))
        .filter(isDefined);
    for (const assets of assetQueries) {
        for (const asset of assets) {
            try {
                const { assetModelId } = await assetModuleSession.fetchAssetSummary({
                    assetId: asset.assetId,
                });
                const assetModelResponse = assetModelId &&
                    (await assetModuleSession.fetchAssetModel({ assetModelId }));
                const maybeModeledDataStreams = await Promise.all(asset.properties.map((property) => assetModuleSession.describeModeledDataStream({
                    assetPropertyId: property.propertyId,
                    assetId: asset.assetId,
                    assetModelId: assetModelId !== null && assetModelId !== void 0 ? assetModelId : '',
                })));
                const modeledDataStreams = maybeModeledDataStreams.filter((ds) => ds != null);
                if (assetModelResponse) {
                    yield {
                        assetModels: { [asset.assetId]: assetModelResponse },
                        modeledDataStreams,
                    };
                }
            }
            catch (err) {
                yield { errors: { [asset.assetId]: err } };
            }
        }
    }
}

// Something that is not likely to occur in any UUID implementation or propertyAlias
const ID_SEPARATOR = '---';
const toId = (propertyInfo) => {
    if ('assetId' in propertyInfo) {
        return `${propertyInfo.assetId}${ID_SEPARATOR}${propertyInfo.propertyId}`;
    }
    return propertyInfo.propertyAlias;
};
const fromId = (dataStreamId) => {
    if (!dataStreamId.includes(ID_SEPARATOR)) {
        return { propertyAlias: dataStreamId };
    }
    const [assetId, propertyId] = dataStreamId.split(ID_SEPARATOR);
    return {
        assetId,
        propertyId,
    };
};

const constructAlarmThresholds = (alarm) => {
    const propertyStreamId = toId({
        assetId: alarm.assetId,
        propertyId: alarm.inputPropertyId,
    });
    const alarmStreamId = toId({
        assetId: alarm.assetId,
        propertyId: alarm.alarmStatePropertyId,
    });
    const upperCaseStateName = alarm.state.toUpperCase();
    const state = ALARM_STATUS[upperCaseStateName];
    const alarmStatus = ALARM_STATUS_MAP[state];
    const inputPropertyThreshold = {
        comparisonOperator: alarm.comparisonOperator,
        severity: alarm.severity,
        value: isNumber(alarm.threshold)
            ? alarm.threshold
            : isString(alarm.threshold)
                ? parseFloat(alarm.threshold)
                : alarm.threshold,
        dataStreamIds: [propertyStreamId],
        color: AWSUI_RED_600,
        showValue: true,
        icon: alarmStatus.icon,
        description: alarm.rule,
    };
    const alarmStatePropertyThresholds = Object.keys(ALARM_STATUS_MAP).map((alarmStatus) => {
        const status = ALARM_STATUS_MAP[alarmStatus];
        return {
            value: alarmStatus,
            color: status.color,
            severity: status.severity,
            icon: status.icon,
            comparisonOperator: COMPARISON_OPERATOR.EQUAL,
            dataStreamIds: [alarmStreamId],
            description: alarm.rule,
        };
    });
    return [inputPropertyThreshold, ...alarmStatePropertyThresholds];
};

async function* fetchAlarmsFromQuery({ queries, alarmModule, }) {
    const assetQueries = queries
        .map((query) => ('assets' in query ? query.assets : undefined))
        .filter(isDefined);
    for (const assets of assetQueries) {
        for (const { assetId, properties } of assets) {
            for (const { propertyId } of properties) {
                const alarm = await alarmModule.getAlarm({
                    assetId,
                    alarmStatePropertyId: propertyId,
                });
                if (alarm) {
                    const alarmStreamId = toId({ assetId, propertyId });
                    const thresholds = constructAlarmThresholds(alarm);
                    yield { alarms: { [alarmStreamId]: alarm }, thresholds };
                }
            }
        }
    }
}

const toDataType = (propertyDataType) => {
    if (propertyDataType === 'STRING') {
        return 'STRING';
    }
    if (propertyDataType === 'BOOLEAN') {
        return 'BOOLEAN';
    }
    return 'NUMBER';
};

const completePropertyStream = ({ modeledDataStreams, assetModel, assetId, propertyId, dataStream, alarms, }) => {
    if (!assetModel) {
        return;
    }
    const property = modeledDataStreams.find((property) => property.propertyId === propertyId && property.assetId === assetId);
    if (!property) {
        return;
    }
    return {
        ...dataStream,
        name: property.name,
        unit: property.unit,
        assetName: property.assetName,
        dataType: toDataType(property.dataType),
        associatedStreams: Object.keys(alarms)
            .filter((id) => {
            const alarm = alarms[id];
            return (alarm.assetId === assetId && alarm.inputPropertyId === propertyId);
        })
            .map((id) => ({
            id,
            type: StreamType.ALARM,
        })),
    };
};

/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return (array && array.length) ? array[0] : undefined;
}

var head_1 = head;

var first = head_1;

const isAlarm = (model) => model.type === 'AWS/ALARM';
const isAlarmState = (property) => property.name === 'AWS/ALARM_STATE';
const getAlarmStatePropertyFromAssetModel = (alarmStatePropertyId) => ({ properties, name, }) => {
    const alarmStateProperty = properties === null || properties === void 0 ? void 0 : properties.find((property) => (property === null || property === void 0 ? void 0 : property.id) === alarmStatePropertyId && isAlarmState(property));
    return (alarmStateProperty && {
        ...alarmStateProperty,
        name,
    });
};
const getAlarmStateProperty = (assetModel, alarmStatePropertyId) => {
    var _a;
    return first((_a = assetModel.assetModelCompositeModels) === null || _a === void 0 ? void 0 : _a.filter(isAlarm).map(getAlarmStatePropertyFromAssetModel(alarmStatePropertyId)).filter(isDefined));
};

const parseAlarmData = (value) => {
    try {
        const { stateName } = JSON.parse(value);
        let normalizedStateName;
        if (ALARM_STATUS[stateName] != null) {
            normalizedStateName = ALARM_STATUS[stateName];
        }
        else {
            normalizedStateName = stateName;
        }
        return normalizedStateName;
    }
    catch (err) {
        throw new Error(`Could not parse alarm data: ${err}`);
    }
};

const constructAlarmStreamData = ({ data, }) => {
    return data.map(({ x, y }) => {
        if (typeof y === 'string') {
            return { x, y: parseAlarmData(y) };
        }
        return { x, y };
    });
};

/**
 * infer if stream is an AWS IoT Events alarm stream ingested into AWS SiteWise Asset Alarm State Property
 */
const isIoTEventsAlarmStateProperty = (propertyValue) => {
    if (typeof propertyValue === 'string') {
        try {
            const { stateName } = JSON.parse(propertyValue);
            return Object.keys(ALARM_STATUS).includes(stateName.toUpperCase());
        }
        catch (_a) {
            return false;
        }
    }
    return false;
};
const completeAlarmStream = ({ assetModel, propertyId, dataStream, }) => {
    var _a, _b;
    if (!assetModel) {
        if (isIoTEventsAlarmStateProperty((_b = dataStream.data[((_a = dataStream.data) === null || _a === void 0 ? void 0 : _a.length) - 1]) === null || _b === void 0 ? void 0 : _b.y)) {
            return {
                ...dataStream,
                streamType: 'ALARM',
                data: constructAlarmStreamData({ data: dataStream.data }),
            };
        }
        return;
    }
    const alarmStateProperty = getAlarmStateProperty(assetModel, propertyId);
    if (!alarmStateProperty) {
        return;
    }
    return {
        ...dataStream,
        name: alarmStateProperty.name,
        streamType: 'ALARM',
        data: constructAlarmStreamData({ data: dataStream.data }),
        dataType: toDataType(alarmStateProperty.dataType),
    };
};

/**
 * Get completed data streams by merging together the data streams with the asset models and alarms.
 */
const completeDataStreams = ({ modeledDataStreams, dataStreams, assetModels, alarms, }) => {
    return dataStreams.map((dataStream) => {
        var _a;
        const propertyInfo = fromId(dataStream.id);
        if ('propertyAlias' in propertyInfo) {
            const latestValue = (_a = dataStream.data.at(-1)) === null || _a === void 0 ? void 0 : _a.y;
            const dataType = typeof latestValue === 'boolean'
                ? 'BOOLEAN'
                : typeof latestValue === 'string'
                    ? 'STRING'
                    : 'NUMBER';
            return { ...dataStream, name: propertyInfo.propertyAlias, dataType };
        }
        const { assetId, propertyId } = propertyInfo;
        const assetModel = assetModels[assetId];
        const propertyStream = completePropertyStream({
            modeledDataStreams,
            assetModel,
            dataStream,
            assetId,
            propertyId,
            alarms,
        });
        const alarmPropertyStream = completeAlarmStream({
            assetModel,
            propertyId,
            dataStream,
        });
        if (propertyStream) {
            return propertyStream;
        }
        if (alarmPropertyStream) {
            return alarmPropertyStream;
        }
        return dataStream;
    });
};

class CreateTimeSeriesDataStore {
    constructor({ initialState, callback, }) {
        this.callback = callback;
        this.state = { ...initialState };
    }
    update() {
        const { thresholds, viewport, alarms, assetModels, dataStreams, modeledDataStreams, } = this.state; //add assetProeprties
        this.callback({
            dataStreams: completeDataStreams({
                dataStreams,
                assetModels,
                alarms,
                modeledDataStreams,
            }),
            viewport,
            thresholds,
        });
    }
    appendTimeSeriesData(updatedState) {
        const { thresholds, dataStreams, modeledDataStreams, ...rest } = updatedState;
        const newDataStreams = dataStreams === null || dataStreams === void 0 ? void 0 : dataStreams.filter((dataStream) => !this.state.dataStreams.map(({ id }) => id).includes(dataStream.id));
        this.state.dataStreams = [
            ...this.state.dataStreams.map((dataStream) => {
                const updatedDataStream = dataStreams === null || dataStreams === void 0 ? void 0 : dataStreams.find(({ id }) => dataStream.id === id);
                if (updatedDataStream) {
                    return { ...dataStream, ...updatedDataStream };
                }
                return dataStream;
            }),
            ...(newDataStreams || []),
        ];
        this.state.modeledDataStreams = [
            ...this.state.modeledDataStreams,
            ...(modeledDataStreams || []),
        ];
        this.state.thresholds = [...this.state.thresholds, ...(thresholds || [])];
        lodash_merge(this.state, rest);
        this.update();
    }
    getState() {
        return this.state;
    }
}

const subscribeToTimeSeriesData = (dataModule, assetModuleSession, alarmModule) => ({ queries, request }, callback) => {
    const store = new CreateTimeSeriesDataStore({
        initialState: {
            modeledDataStreams: [],
            dataStreams: [],
            thresholds: [],
            assetModels: {},
            alarms: {},
            errors: {},
        },
        callback,
    });
    const { update, unsubscribe } = dataModule.subscribeToDataStreams({ queries, request }, (data) => {
        store.appendTimeSeriesData({
            dataStreams: data.dataStreams,
            viewport: data.viewport,
        });
    });
    const updateAssetModels = (queries) => {
        (async () => {
            for await (const response of fetchAssetModelsFromQuery({
                queries,
                assetModuleSession,
            })) {
                const assetModels = 'assetModels' in response && response.assetModels;
                const modeledDataStreams = 'modeledDataStreams' in response && response.modeledDataStreams;
                const errors = 'errors' in response && response.errors;
                if (assetModels) {
                    store.appendTimeSeriesData({ assetModels });
                }
                if (modeledDataStreams) {
                    store.appendTimeSeriesData({ modeledDataStreams });
                }
                if (errors) {
                    store.appendTimeSeriesData({ errors });
                }
            }
        })();
    };
    updateAssetModels(queries);
    const updateAlarms = (queries) => {
        (async () => {
            for await (const { alarms, thresholds } of fetchAlarmsFromQuery({
                queries,
                alarmModule,
            })) {
                store.appendTimeSeriesData({ alarms, thresholds });
            }
        })();
    };
    updateAlarms(queries);
    return {
        unsubscribe: () => {
            unsubscribe();
        },
        update: (subscriptionUpdate) => {
            update(subscriptionUpdate);
            const { queries } = subscriptionUpdate;
            if (queries) {
                updateAssetModels(queries);
                updateAlarms(queries);
            }
        },
    };
};

const timeSeriesDataSession = (session) => {
    return session.siteWiseTimeSeriesModule;
};
const assetSession = (session) => {
    const assetSession = session.siteWiseAssetModule.startSession();
    session.attachDataModuleSession(assetSession);
    return assetSession;
};
const alarmsSession = (session) => {
    return session.siteWiseAlarmModule;
};

/**
 * Provider for SiteWise time series data
 */
class SiteWiseTimeSeriesDataProvider {
    constructor(session, input) {
        this.update = () => { };
        this.session = session;
        this.input = input;
    }
    subscribe(observer) {
        const { session } = this;
        const { update, unsubscribe } = subscribeToTimeSeriesData(timeSeriesDataSession(session), assetSession(session), alarmsSession(session))(this.input, (timeSeriesData) => observer.next([timeSeriesData]));
        this.update = update;
        /** @todo move into datamodule namespace when sessions are supported on time series module */
        this.session.attachDataModuleSession({
            close: unsubscribe,
        });
    }
    updateSubscription(subscriptionUpdate) {
        this.update(subscriptionUpdate);
    }
    unsubscribe() {
        this.session.close();
    }
    updateViewport(viewport) {
        this.update({
            request: {
                settings: this.input.request.settings,
                viewport,
            },
        });
    }
}

class SiteWiseAssetCache {
    constructor() {
        this.assetCache = {};
        this.assetModelCache = {};
        this.propertyValueCache = {};
        this.hierarchyCache = {};
        this.errorCache = [];
        this.isDescribeAssetResponse = (assetAny) => assetAny.assetId != undefined;
    }
    storeErrors(err) {
        this.errorCache.push(err);
    }
    getAllErrors() {
        return this.errorCache;
    }
    convertToAssetSummary(assetDescription) {
        return {
            id: assetDescription.assetId,
            arn: assetDescription.assetArn,
            name: assetDescription.assetName,
            assetModelId: assetDescription.assetModelId,
            creationDate: assetDescription.assetCreationDate,
            lastUpdateDate: assetDescription.assetLastUpdateDate,
            status: assetDescription.assetStatus,
            hierarchies: assetDescription.assetHierarchies,
        };
    }
    assetPropertyValueKey(assetId, propertyId) {
        return assetId + ':' + propertyId;
    }
    getAssetSummary(assetId) {
        return this.assetCache[assetId];
    }
    storeAssetSummary(assetAny) {
        const assetSummary = this.isDescribeAssetResponse(assetAny)
            ? this.convertToAssetSummary(assetAny)
            : assetAny;
        if (assetSummary.id != undefined) {
            this.assetCache[assetSummary.id] = assetSummary;
        }
    }
    storeAssetSummaries(assetSummaryList) {
        assetSummaryList.forEach((summary) => {
            this.storeAssetSummary(summary);
        });
    }
    getAssetModel(assetModelId) {
        return this.assetModelCache[assetModelId];
    }
    storeAssetModel(assetModel) {
        if (assetModel.assetModelId != undefined) {
            this.assetModelCache[assetModel.assetModelId] = assetModel;
        }
    }
    getPropertyValue(assetId, propertyId) {
        return this.propertyValueCache[this.assetPropertyValueKey(assetId, propertyId)];
    }
    storePropertyValue(assetId, propertyId, assetPropertyValue) {
        this.propertyValueCache[this.assetPropertyValueKey(assetId, propertyId)] =
            assetPropertyValue;
    }
    getHierarchy(hierarchyId) {
        return this.hierarchyCache[hierarchyId];
    }
    newCachedAssetSummaryBlock() {
        return {
            assetIds: [],
            loadingStage: LoadingStateEnum.NOT_LOADED,
            paginationToken: undefined,
        };
    }
    setupHierarchyCache(hierarchyId) {
        let storedHierarchy = this.getHierarchy(hierarchyId);
        if (!storedHierarchy) {
            storedHierarchy = this.newCachedAssetSummaryBlock();
            this.hierarchyCache[hierarchyId] = storedHierarchy;
        }
        return storedHierarchy;
    }
    appendHierarchyResults(hierarchyId, assetSummaries, loadingState, paginationToken) {
        const storedHierarchy = this.setupHierarchyCache(hierarchyId);
        storedHierarchy.loadingStage = loadingState;
        storedHierarchy.paginationToken = paginationToken;
        if (!assetSummaries) {
            return;
        }
        assetSummaries.forEach((assetSummary) => {
            if (assetSummary.id != undefined) {
                this.storeAssetSummary(assetSummary);
                storedHierarchy.assetIds.push(assetSummary.id);
            }
        });
    }
    setHierarchyLoadingState(hierarchyId, loadingState) {
        const storedHierarchy = this.setupHierarchyCache(hierarchyId);
        storedHierarchy.loadingStage = loadingState;
    }
}

class SiteWiseAssetSession {
    constructor(processor) {
        this.processor = processor;
    }
    _requestAssetSummary(query) {
        return new Observable((observer) => {
            this.processor.getAssetSummary(query, observer);
        });
    }
    _requestAssetModel(query) {
        return new Observable((observer) => {
            this.processor.getAssetModel(query, observer);
        });
    }
    _requestAssetPropertyValue(query) {
        return new Observable((observer) => {
            this.processor.getAssetPropertyValue(query, observer);
        });
    }
    _requestRootAssets() {
        return new Observable((observer) => {
            const query = {
                assetHierarchyId: HIERARCHY_ROOT_ID,
            };
            this.processor.getAssetHierarchy(query, observer);
        });
    }
    _requestAssetHierarchy(query) {
        return new Observable((observer) => {
            this.processor.getAssetHierarchy(query, observer);
        });
    }
    fetchAssetHierarchy(query) {
        return lastValueFrom(this._requestAssetHierarchy(query));
    }
    fetchAssetModel(query) {
        return lastValueFrom(this._requestAssetModel(query));
    }
    fetchAssetPropertyValue(query) {
        return lastValueFrom(this._requestAssetPropertyValue(query));
    }
    fetchAssetSummary(query) {
        return lastValueFrom(this._requestAssetSummary(query));
    }
    fetchRootAssets() {
        return lastValueFrom(this._requestRootAssets());
    }
    async describeModeledDataStream(input) {
        return this.processor.describeModeledDataStream(input);
    }
    requestAssetHierarchy(query, observer) {
        return this._requestAssetHierarchy(query).subscribe(observer);
    }
    requestAssetModel(query, observer) {
        return this._requestAssetModel(query).subscribe(observer);
    }
    requestAssetPropertyValue(query, observer) {
        return this._requestAssetPropertyValue(query).subscribe(observer);
    }
    requestAssetSummary(query, observer) {
        return this._requestAssetSummary(query).subscribe(observer);
    }
    requestRootAssets(observer) {
        return this._requestRootAssets().subscribe(observer);
    }
    /**
     * Close the session, causes all requests to be terminated
     */
    close() {
        // complete all observables in the request queue
    }
}

/**
 * * broadcast any new value of the worker to all consumers
 * * Newly attached consumers immediately receive the latest value
 * * When the worker completes the 'onTeardown' callback is invoked
 * * When the last subscriber unsubscribed the 'onTeardown' callback is invoked
 * * When 'onTeardown' is invoked all subscribers are automatically completed.
 */
class RequestProcessorWorker extends ReplaySubject {
    constructor(producer, finalizer) {
        super(1);
        this.subscribers = [];
        // when the Observable calls complete(), call finalizer()
        this.producer = producer.pipe(finalize(finalizer));
        // connect the single producer to all consumers
        this.broadcastSubscription = this.producer.subscribe(this);
        // when the last observer unsubscribes, call finalizer()
        this.broadcastSubscription.add(finalizer);
    }
    removeSubscriber(subscriber) {
        const index = this.subscribers.indexOf(subscriber);
        if (index > -1) {
            this.subscribers.splice(index, 1);
        }
    }
    addSubscriber(subscriber) {
        this.subscribers.push(subscriber);
        subscriber.add(() => {
            this.removeSubscriber(subscriber);
            if (this.subscribers.length === 0) {
                this.broadcastSubscription.unsubscribe();
            }
        });
        return super.subscribe(subscriber);
    }
}

class RequestProcessorWorkerGroup {
    constructor(workerFactory, queryToKey) {
        this.activeQueries = new Map();
        this.workerFactory = workerFactory;
        this.queryToKey = queryToKey;
    }
    subscribe(query, observer) {
        var _a;
        const key = this.queryToKey(query);
        if (!this.activeQueries.get(key)) {
            this.activeQueries.set(key, new RequestProcessorWorker(this.workerFactory(query), () => {
                this.activeQueries.delete(key);
            }));
        }
        (_a = this.activeQueries.get(key)) === null || _a === void 0 ? void 0 : _a.addSubscriber(observer);
    }
    size() {
        return this.activeQueries.size;
    }
}

class RequestProcessor {
    constructor(api, cache) {
        this.MAX_RESULTS = 250;
        this.assetSummaryWorkers = new RequestProcessorWorkerGroup((query) => this.assetSummaryWorkerFactory(query), (query) => query.assetId);
        this.assetModelWorkers = new RequestProcessorWorkerGroup((query) => this.assetModelWorkerFactory(query), (query) => query.assetModelId);
        this.assetPropertyValueWorkers = new RequestProcessorWorkerGroup((query) => this.assetPropertyValueWorkerFactory(query), (query) => query.assetId + ':' + query.propertyId);
        this.hierarchyWorkers = new RequestProcessorWorkerGroup((query) => this.loadHierarchyWorkerFactory(query), (query) => assetHierarchyQueryKey(query));
        this.api = api;
        this.cache = cache;
    }
    assetSummaryWorkerFactory(assetSummaryQuery) {
        return new Observable((observer) => {
            const assetSummary = this.cache.getAssetSummary(assetSummaryQuery.assetId);
            if (assetSummary != undefined) {
                observer.next(assetSummary);
                observer.complete();
                return;
            }
            this.api
                .describeAsset({ assetId: assetSummaryQuery.assetId })
                .then((assetSummary) => {
                this.cache.storeAssetSummary(assetSummary);
                observer.next(this.cache.getAssetSummary(assetSummaryQuery.assetId));
                observer.complete();
            })
                .catch((err) => {
                var _a;
                observer.error({
                    msg: err.message,
                    type: err.name,
                    status: (_a = err.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode,
                });
            });
        });
    }
    getAssetSummary(assetSummaryRequest, observer) {
        this.assetSummaryWorkers.subscribe(assetSummaryRequest, observer);
    }
    async describeModeledDataStream(input) {
        return this.api.describeModeledDataStream(input);
    }
    assetPropertyValueWorkerFactory(assetPropertyValueQuery) {
        return new Observable((observer) => {
            const propertyValue = this.cache.getPropertyValue(assetPropertyValueQuery.assetId, assetPropertyValueQuery.propertyId);
            if (propertyValue != undefined) {
                observer.next(propertyValue);
                observer.complete();
                return;
            }
            this.api
                .getPropertyValue({
                assetId: assetPropertyValueQuery.assetId,
                propertyId: assetPropertyValueQuery.propertyId,
            })
                .then((propertyValue) => {
                if (propertyValue.propertyValue != undefined) {
                    this.cache.storePropertyValue(assetPropertyValueQuery.assetId, assetPropertyValueQuery.propertyId, propertyValue.propertyValue);
                    observer.next(this.cache.getPropertyValue(assetPropertyValueQuery.assetId, assetPropertyValueQuery.propertyId));
                    observer.complete();
                }
            })
                .catch((err) => {
                var _a;
                observer.error({
                    msg: err.message,
                    type: err.name,
                    status: (_a = err.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode,
                });
            });
        });
    }
    getAssetPropertyValue(assetPropertyValueQuery, observer) {
        this.assetPropertyValueWorkers.subscribe(assetPropertyValueQuery, observer);
    }
    assetModelWorkerFactory(assetModelQuery) {
        return new Observable((observer) => {
            const model = this.cache.getAssetModel(assetModelQuery.assetModelId);
            if (model != undefined) {
                observer.next(model);
                observer.complete();
                return;
            }
            this.api
                .describeAssetModel({ assetModelId: assetModelQuery.assetModelId })
                .then((model) => {
                this.cache.storeAssetModel(model);
                observer.next(this.cache.getAssetModel(assetModelQuery.assetModelId));
                observer.complete();
            })
                .catch((err) => {
                var _a;
                observer.error({
                    msg: err.message,
                    type: err.name,
                    status: (_a = err.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode,
                });
            });
        });
    }
    getAssetModel(assetModelRequest, observer) {
        this.assetModelWorkers.subscribe(assetModelRequest, observer);
    }
    buildAssetSummaryList(hierarchyId, cachedValue) {
        return {
            assetHierarchyId: hierarchyId,
            assets: cachedValue.assetIds.map((assetId) => this.cache.getAssetSummary(assetId)),
            loadingState: cachedValue.loadingStage,
        };
    }
    hierarchyFromCache(hierarchyRequest) {
        // make sure something is in the cache for this hierarchyId:
        let cachedValue = this.cache.getHierarchy(assetHierarchyQueryKey(hierarchyRequest));
        if (!cachedValue) {
            this.cache.setHierarchyLoadingState(assetHierarchyQueryKey(hierarchyRequest), LoadingStateEnum.NOT_LOADED);
            cachedValue = this.cache.getHierarchy(assetHierarchyQueryKey(hierarchyRequest));
        }
        return this.buildAssetSummaryList(hierarchyRequest.assetHierarchyId, cachedValue);
    }
    hierarchyRootRequest(paginationToken) {
        return new Observable((observer) => {
            this.api
                .listAssets({
                filter: ListAssetsFilter.TOP_LEVEL,
                maxResults: this.MAX_RESULTS,
                nextToken: paginationToken,
                assetModelId: undefined,
            })
                .then((result) => {
                observer.next(result);
            })
                .catch((err) => {
                var _a;
                observer.error({
                    msg: err.message,
                    type: err.name,
                    status: (_a = err.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode,
                });
            });
        });
    }
    hierarchyBranchRequest(query, paginationToken) {
        return new Observable((observer) => {
            this.api
                .listAssociatedAssets({
                hierarchyId: query.assetHierarchyId,
                maxResults: this.MAX_RESULTS,
                traversalDirection: TraversalDirection.CHILD,
                assetId: query.assetId,
                nextToken: paginationToken,
            })
                .then((result) => {
                observer.next(result);
            })
                .catch((err) => {
                var _a;
                observer.error({
                    msg: err.message,
                    type: err.name,
                    status: (_a = err.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode,
                });
            });
        });
    }
    cacheHierarchyUpdate(query, results) {
        const hasMoreResults = !!results.nextToken;
        this.cache.appendHierarchyResults(assetHierarchyQueryKey(query), results.assetSummaries, hasMoreResults ? LoadingStateEnum.LOADING : LoadingStateEnum.LOADED, results.nextToken);
        return this.hierarchyFromCache(query);
    }
    loadHierarchyWorkerFactory(query) {
        const cachedValue = this.cache.getHierarchy(assetHierarchyQueryKey(query));
        if (query.assetHierarchyId !== HIERARCHY_ROOT_ID && !query.assetId) {
            throw 'Queries for children require a parent AssetId';
        }
        return new Observable((observer) => {
            let observable;
            if (query.assetHierarchyId === HIERARCHY_ROOT_ID) {
                observable = this.hierarchyRootRequest(cachedValue.paginationToken).pipe(expand((result) => {
                    return result.nextToken
                        ? this.hierarchyRootRequest(cachedValue.paginationToken)
                        : EMPTY;
                }), map((value) => {
                    return this.cacheHierarchyUpdate(query, value);
                }));
            }
            else {
                observable = this.hierarchyBranchRequest(query, cachedValue.paginationToken).pipe(expand((result) => {
                    return result.nextToken
                        ? this.hierarchyBranchRequest(query, cachedValue.paginationToken)
                        : EMPTY;
                }), map((value) => {
                    return this.cacheHierarchyUpdate(query, value);
                }));
            }
            observable.subscribe({
                next: (results) => {
                    if (results) {
                        observer.next(results);
                    }
                    if (results && results.loadingState === LoadingStateEnum.LOADED) {
                        observer.complete();
                    }
                },
                error: (err) => {
                    this.cache.storeErrors(err);
                    const errors = this.cache.getAllErrors();
                    observer.error(errors);
                },
            });
            return () => {
                // TODO: check if this is required
                observer.unsubscribe();
                // if the unsubscribe aborts an ongoing request chain set the state to PAUSED
                // TODO: check for a race condition where this happens first and then a result returns from a request, clobbering the PAUSED value
                if (cachedValue.loadingStage !== LoadingStateEnum.LOADED) {
                    this.cache.setHierarchyLoadingState(query.assetHierarchyId, LoadingStateEnum.PAUSED);
                }
            };
        });
    }
    getAssetHierarchy(query, observer) {
        const cachedValue = this.hierarchyFromCache(query);
        if (cachedValue && cachedValue.loadingState === LoadingStateEnum.LOADED) {
            return observer.next(cachedValue);
        }
        this.hierarchyWorkers.subscribe(query, observer);
    }
    startSession() {
        return new SiteWiseAssetSession(this);
    }
}

class SiteWiseAssetModule {
    constructor(api) {
        this.api = api;
        this.assetCache = new SiteWiseAssetCache();
        this.requestProcessor = new RequestProcessor(this.api, this.assetCache);
    }
    startSession() {
        return this.requestProcessor.startSession();
    }
}

class Branch {
    constructor() {
        this.isExpanded = false;
        this.assetIds = [];
        this.loadingState = LoadingStateEnum.NOT_LOADED;
    }
}
class AssetNode {
    constructor(asset) {
        this.properties = new Map();
        this.asset = asset;
    }
}
class SiteWiseAssetTreeSession {
    constructor(session, query) {
        // look up a node by its assetId
        this.assetNodes = {};
        // look up the id's of a hierarchy by "assetId-hierarchyId"
        this.branches = {};
        // a map of subscriptions that can be canceled
        // private readonly expansionSubscriptions: Record<string, Subscription> = {};
        this.subject = new BehaviorSubject([]);
        this.rootBranchRef = new BranchReference(undefined, HIERARCHY_ROOT_ID);
        this.treeUpdateSubject = new Subject();
        this.treeUpdateSubscription = this.treeUpdateSubject
            .pipe(debounceTime(1000 / 30)) // 1/30th of a second
            .subscribe(() => this.emitTreeUpdate());
        this.assetSession = session;
        this.query = {
            withModels: false,
            ...query,
        };
        if (query.asset == null) {
            // query starts at the root of the account
            this.expand(this.rootBranchRef);
        }
        else {
            // query starts at the specified root Asset
            const root = new Branch();
            this.branches[this.rootBranchRef.key] = root;
            this.assetSession.requestAssetSummary({ assetId: query.asset.assetId }, {
                next: (assetSummary) => {
                    this.saveAsset(assetSummary);
                    root.assetIds.push(assetSummary.id);
                    this.updateTree();
                },
                error: (err) => {
                    this.subject.error(err);
                },
            });
        }
    }
    subscribe(observer) {
        this.subject.subscribe(observer);
    }
    unsubscribe() {
        this.treeUpdateSubscription.unsubscribe();
        this.assetSession.close();
    }
    expand(branchRef) {
        // if the branch exists already, just make it expanded
        const existingExpanded = this.makeExpanded(branchRef);
        // if the branch does not exist, or isn't fully loaded, start loading it
        if (!existingExpanded ||
            existingExpanded.loadingState != LoadingStateEnum.LOADED) {
            if (branchRef.hierarchyId === HIERARCHY_ROOT_ID) {
                this.assetSession.requestRootAssets({
                    next: (results) => {
                        this.saveExpandedHierarchy(branchRef, results.assets, results.loadingState);
                        this.updateTree();
                    },
                    error: (err) => {
                        this.subject.error(err);
                    },
                });
            }
            else {
                this.assetSession.requestAssetHierarchy({
                    assetId: branchRef.assetId,
                    assetHierarchyId: branchRef.hierarchyId,
                }, {
                    next: (results) => {
                        this.saveExpandedHierarchy(branchRef, results.assets, results.loadingState);
                        this.updateTree();
                    },
                    error: (err) => {
                        this.subject.error(err);
                    },
                });
            }
        }
    }
    loadAssetRelatedData(assetNode) {
        var _a;
        if (!assetNode.asset || !assetNode.asset.id) {
            throw 'AssetNode is missing a properly specified Asset';
        }
        const assetId = assetNode.asset.id;
        // load related Asset Model and any of the requested properties that the Model contains
        if (this.query.withModels || ((_a = this.query.withPropertyValues) === null || _a === void 0 ? void 0 : _a.length)) {
            this.assetSession.requestAssetModel({ assetModelId: assetNode.asset.assetModelId }, {
                next: (model) => {
                    var _a;
                    assetNode.model = model;
                    this.updateTree();
                    (_a = this.query.withPropertyValues) === null || _a === void 0 ? void 0 : _a.forEach((propertyId) => {
                        if (this.containsPropertyId(model, propertyId)) {
                            this.assetSession.requestAssetPropertyValue({ assetId: assetId, propertyId: propertyId }, {
                                next: (propertyValue) => {
                                    assetNode.properties.set(propertyId, propertyValue);
                                    this.updateTree();
                                },
                                error: (err) => {
                                    this.subject.error(err);
                                },
                            });
                        }
                    });
                },
                error: (err) => {
                    this.subject.error(err);
                },
            });
        }
    }
    containsPropertyId(model, propertyId) {
        var _a;
        return (propertyId &&
            ((_a = model.assetModelProperties) === null || _a === void 0 ? void 0 : _a.some((prop) => propertyId === prop.id)));
    }
    collapse(branch) {
        const existingBranch = this.getBranch(branch);
        if (existingBranch) {
            existingBranch.isExpanded = false;
        }
        this.updateTree();
    }
    updateTree() {
        this.treeUpdateSubject.next();
    }
    emitTreeUpdate() {
        let roots = [];
        const rootBranch = this.getBranch(this.rootBranchRef);
        if (rootBranch) {
            roots = rootBranch.assetIds.map((assetId) => {
                return this.toAssetTreeNode(this.assetNodes[assetId]);
            });
        }
        this.subject.next(roots);
    }
    // recursively build the tree from a single starting node
    toAssetTreeNode(assetNode) {
        var _a;
        const node = {
            asset: assetNode.asset,
            hierarchies: new Map(),
            properties: new Map(),
        };
        if (assetNode.model) {
            node.model = assetNode.model;
        }
        assetNode.properties.forEach((value, key) => {
            node.properties.set(key, value);
        });
        // recursively descend all hierarchies that have been loaded:
        (_a = assetNode.asset.hierarchies) === null || _a === void 0 ? void 0 : _a.forEach((hierarchy) => {
            const branchRef = new BranchReference(assetNode.asset.id, hierarchy.id);
            const group = {
                name: hierarchy.name,
                id: branchRef.hierarchyId,
                children: [],
                isExpanded: false,
                loadingState: LoadingStateEnum.NOT_LOADED,
            };
            node.hierarchies.set(branchRef.hierarchyId, group);
            const existingBranch = this.getBranch(branchRef);
            if (existingBranch) {
                group.isExpanded = existingBranch === null || existingBranch === void 0 ? void 0 : existingBranch.isExpanded;
                group.loadingState = existingBranch === null || existingBranch === void 0 ? void 0 : existingBranch.loadingState;
                if (existingBranch.isExpanded) {
                    group.children = existingBranch.assetIds.map((nodeId) => this.toAssetTreeNode(this.assetNodes[nodeId]));
                }
            }
        });
        return node;
    }
    getBranch(branch) {
        return this.branches[branch.key];
    }
    putBranch(branchRef, branch) {
        this.branches[branchRef.key] = branch;
    }
    makeExpanded(branch) {
        const existingBranch = this.getBranch(branch);
        // a tree update is only needed when the branch was not expanded
        if (existingBranch && !existingBranch.isExpanded) {
            existingBranch.isExpanded = true;
            if (existingBranch.assetIds.length) {
                this.updateTree();
            }
        }
        return existingBranch;
    }
    saveExpandedHierarchy(branchRef, childAssets, loadingState) {
        let existingBranch = this.getBranch(branchRef);
        if (!existingBranch) {
            existingBranch = new Branch();
            existingBranch.isExpanded = true;
            this.putBranch(branchRef, existingBranch);
        }
        const assetIds = childAssets.map((assetSummary) => assetSummary.id);
        existingBranch.assetIds = assetIds;
        existingBranch.loadingState = loadingState;
        childAssets.forEach((asset) => this.saveAsset(asset));
    }
    // create new asset nodes as needed:
    saveAsset(asset) {
        if (!asset.id) {
            throw 'AssetSummary is missing an id property';
        }
        const assetNode = this.assetNodes[asset.id];
        if (!assetNode) {
            const assetNode = new AssetNode(asset);
            this.assetNodes[asset.id] = assetNode;
            this.loadAssetRelatedData(assetNode);
        }
        return assetNode;
    }
}

/**
 * Component session to manage component data module sessions.
 * Contains a reference to sitewise data modules
 */
class SiteWiseComponentSession {
    constructor({ componentId, siteWiseTimeSeriesModule, siteWiseAssetModule, siteWiseAlarmModule, }) {
        this.sessions = [];
        this.componentId = componentId;
        this.siteWiseTimeSeriesModule = siteWiseTimeSeriesModule;
        this.siteWiseAssetModule = siteWiseAssetModule;
        this.siteWiseAlarmModule = siteWiseAlarmModule;
    }
    attachDataModuleSession(session) {
        this.sessions.push(session);
    }
    close() {
        this.sessions.forEach((session) => session.close());
    }
}

const createSiteWiseAssetDataSource = (api) => {
    const describeModeledDataStreamRequest = new DescribeModeledDataStreamRequest(api);
    return {
        describeAsset: (input) => {
            return api.send(new DescribeAssetCommand(input));
        },
        getPropertyValue: (input) => {
            return api.send(new GetAssetPropertyValueCommand(input));
        },
        describeAssetModel: (input) => {
            return api.send(new DescribeAssetModelCommand(input));
        },
        listAssets: (input) => {
            return api.send(new ListAssetsCommand(input));
        },
        listAssociatedAssets: (input) => {
            return api.send(new ListAssociatedAssetsCommand(input));
        },
        describeModeledDataStream: (input) => {
            return describeModeledDataStreamRequest.send(input);
        },
    };
};

const NANO_SECOND_IN_MS = 1 / 1000000;
const SECOND_IN_MS = 1000;
const SITEWISE_PREVIEW_DATE = new Date(2018, 0, 1);

/** converts the TimeInNanos to milliseconds */
const toTimestamp = (time) => (time &&
    Math.floor((time.timeInSeconds || 0) * SECOND_IN_MS +
        (time.offsetInNanos || 0) * NANO_SECOND_IN_MS)) ||
    0;
/**
 * Extracts the value out of a SiteWise Model Variant
 *
 * SiteWise Model values can either be a string, number or boolean.
 *
 * NOTE: Currently we treat booleans as strings.
 */
const toValue = (variant) => {
    if (variant == null) {
        throw new Error('variant is undefined');
    }
    const { doubleValue, integerValue, stringValue, booleanValue } = variant;
    if (doubleValue != null) {
        return doubleValue;
    }
    if (integerValue != null) {
        return integerValue;
    }
    if (stringValue != null) {
        return stringValue;
    }
    if (booleanValue != null) {
        return booleanValue.toString();
    }
    throw new Error('Expected value to have at least one property value, but instead it has none!');
};
/**
 * Converts a SiteWise response for data into a data point understood by IoT App Kit.
 */
const toDataPoint = (assetPropertyValue) => {
    if (assetPropertyValue == null) {
        return undefined;
    }
    const { timestamp, value, quality } = assetPropertyValue;
    const dataValue = toValue(value);
    if (dataValue == null) {
        return undefined;
    }
    return {
        x: toTimestamp(timestamp),
        y: dataValue,
        quality,
    };
};
// TODO: support outputting multiple sets of DataStream for multiple aggregate types.
const aggregateToValue = ({ average, count, maximum, minimum, sum, standardDeviation, }) => {
    if (average != null) {
        return average;
    }
    if (count != null) {
        return count;
    }
    if (maximum != null) {
        return maximum;
    }
    if (minimum != null) {
        return minimum;
    }
    if (sum != null) {
        return sum;
    }
    if (standardDeviation != null) {
        return standardDeviation;
    }
    throw new Error('Expected there to be a valid aggregate contained in `Aggregates`');
};
/**
 * AggregatedValue currently might not return timestamp according to the typescript AggregatedValue interface
 */
const getAggregateTimestamp = (timestamp) => {
    if (timestamp instanceof Date) {
        return timestamp.getTime();
    }
    throw new Error('Expected timestamp to be instance of Date');
};
/**
 * Aggregates To Data Point
 *
 * Converts an `AggregatedValue` to the data point view model
 */
const aggregateToDataPoint = ({ timestamp, value, quality, }) => ({
    x: getAggregateTimestamp(timestamp),
    y: aggregateToValue(value),
    quality,
});

const dataStreamFromSiteWise = ({ dataPoints = [], resolution = 0, aggregationType, ...propertyInfo }) => {
    return {
        id: toId(propertyInfo),
        aggregationType,
        data: dataPoints,
        resolution,
    };
};

const MAX_AGGREGATED_DATA_POINTS = 4000;
const MAX_RAW_HISTORICAL_DATA_POINTS = 20000;
const MAX_AGGREGATED_REQUEST_ENTRIES = 16;
const MAX_RAW_HISTORICAL_REQUEST_ENTRIES = 16;
const MAX_RAW_LATEST_REQUEST_ENTRIES = 128;

// use -1 to represent a batch with no max result limit
const NO_LIMIT_BATCH = -1;
/**
 * bucket entries by maxResults, chunk buckets if required.
 * entries[] => [[entries, -1], [entries, 1000], [entries, 16]]
 *
 * @param entries
 * @returns buckets: [BatchHistoricalEntry[], number | undefined][]
 */
function createRawLatestEntryBatches(entries) {
    const buckets = {};
    entries.forEach((entry) => {
        const maxEntryResults = entry.maxResults || NO_LIMIT_BATCH;
        if (buckets[maxEntryResults]) {
            buckets[maxEntryResults] = buckets[maxEntryResults].concat([entry]);
        }
        else {
            buckets[maxEntryResults] = [entry];
        }
    });
    // chunk buckets that are larger than MAX_BATCH_ENTRIES
    return Object.keys(buckets)
        .map((key) => {
        const maxEntryResults = Number(key);
        const bucket = buckets[maxEntryResults];
        return chunkRawLatestBatch(bucket).map((chunk) => [
            chunk,
            maxEntryResults === NO_LIMIT_BATCH
                ? NO_LIMIT_BATCH
                : chunk.length * maxEntryResults,
        ]);
    })
        .flat();
}
function createRawHistoricalEntryBatches(entries) {
    const buckets = {};
    /*
     * singles contains the entries that should not be combined.
     * For example, most-recent-request entries are not combined to ensure a
     * dedicated request with maxResults of 1 is fired for each entry.
     */
    const singles = [];
    entries.forEach((entry) => {
        // Do NOT combine most recent requests
        if (isMostRecentRequest(entry)) {
            singles.push([[entry], 1]);
            return;
        }
        const maxEntryResults = entry.maxResults || NO_LIMIT_BATCH;
        if (buckets[maxEntryResults]) {
            buckets[maxEntryResults] = buckets[maxEntryResults].concat([entry]);
        }
        else {
            buckets[maxEntryResults] = [entry];
        }
    });
    // chunk buckets that are larger than MAX_BATCH_ENTRIES
    return Object.keys(buckets)
        .map((key) => {
        const maxEntryResults = Number(key);
        const bucket = buckets[maxEntryResults];
        return chunkRawHistoricalBatch(bucket).map((chunk) => [
            chunk,
            maxEntryResults === NO_LIMIT_BATCH
                ? NO_LIMIT_BATCH
                : chunk.length * maxEntryResults,
        ]);
    })
        .flat()
        .concat(singles);
}
function createAggregateEntryBatches(entries) {
    const buckets = {};
    /*
     * singles contains the entries that should not be combined.
     * For example, most-recent-request entries are not combined to ensure a
     * dedicated request with maxResults of 1 is fired for each entry.
     */
    const singles = [];
    entries.forEach((entry) => {
        // Do NOT combine most recent requests
        if (isMostRecentRequest(entry)) {
            singles.push([[entry], 1]);
            return;
        }
        const maxEntryResults = entry.maxResults || NO_LIMIT_BATCH;
        if (buckets[maxEntryResults]) {
            buckets[maxEntryResults] = buckets[maxEntryResults].concat([entry]);
        }
        else {
            buckets[maxEntryResults] = [entry];
        }
    });
    // chunk buckets that are larger than MAX_BATCH_ENTRIES
    return Object.keys(buckets)
        .map((key) => {
        const maxEntryResults = Number(key);
        const bucket = buckets[maxEntryResults];
        return chunkAggregatedBatch(bucket).map((chunk) => [
            chunk,
            maxEntryResults === NO_LIMIT_BATCH
                ? NO_LIMIT_BATCH
                : chunk.length * maxEntryResults,
        ]);
    })
        .flat()
        .concat(singles);
}
function calculateNextRawHistoricalBatchSize({ maxResults, dataPointsFetched, }) {
    return maxResults === NO_LIMIT_BATCH
        ? MAX_RAW_HISTORICAL_DATA_POINTS
        : Math.min(maxResults - dataPointsFetched, MAX_RAW_HISTORICAL_DATA_POINTS);
}
function calculateNextAggregatedBatchSize({ maxResults, dataPointsFetched, }) {
    return maxResults === NO_LIMIT_BATCH
        ? MAX_AGGREGATED_DATA_POINTS
        : Math.min(maxResults - dataPointsFetched, MAX_AGGREGATED_DATA_POINTS);
}
/**
 * check if batch still needs to be paginated.
 */
const shouldFetchNextBatch = ({ nextToken, maxResults, dataPointsFetched, }) => !!nextToken &&
    (maxResults === NO_LIMIT_BATCH ||
        (dataPointsFetched !== null &&
            dataPointsFetched !== undefined &&
            dataPointsFetched < maxResults));
function chunkRawLatestBatch(batch) {
    const chunks = [];
    for (let i = 0; i < batch.length; i += MAX_RAW_LATEST_REQUEST_ENTRIES) {
        chunks.push(batch.slice(i, i + MAX_RAW_LATEST_REQUEST_ENTRIES));
    }
    return chunks;
}
function chunkRawHistoricalBatch(batch) {
    const chunks = [];
    for (let i = 0; i < batch.length; i += MAX_RAW_HISTORICAL_REQUEST_ENTRIES) {
        chunks.push(batch.slice(i, i + MAX_RAW_HISTORICAL_REQUEST_ENTRIES));
    }
    return chunks;
}
function chunkAggregatedBatch(batch) {
    const chunks = [];
    for (let i = 0; i < batch.length; i += MAX_AGGREGATED_REQUEST_ENTRIES) {
        chunks.push(batch.slice(i, i + MAX_AGGREGATED_REQUEST_ENTRIES));
    }
    return chunks;
}
function isMostRecentRequest({ requestInformation }) {
    if (requestInformation == null) {
        return false;
    }
    const { fetchMostRecentBeforeEnd, fetchMostRecentBeforeStart } = requestInformation;
    return fetchMostRecentBeforeEnd || fetchMostRecentBeforeStart || false;
}

/**
 * Given a batch, or array of entries, deduplicate the batch.
 */
function deduplicateBatch(batch) {
    return lodash_uniqwith(batch, compareEntryUniqueness);
}
/**
 * Compares one entry to another, determining if the first is unique.
 */
function compareEntryUniqueness(a, b) {
    return lodash_isequal(getEntryRequestInformation(a), getEntryRequestInformation(b));
}
/**
 * Gets relevant request information off the entry.
 */
function getEntryRequestInformation(entry) {
    const { refId: _refId, cacheSettings: _cacheSettings, ...requestInformationWithoutOmittedFields } = entry.requestInformation;
    return requestInformationWithoutOmittedFields;
}

const RAW_DATA_RECENCY_THRESHOLD = 10; // in seconds
/**
 * Whether the given date is within the threshold to consider as a end date for a latest property request.
 * @param date the date to consider
 * @returns Whether the given date is within the threshold
 */
const withinLatestPropertyDataThreshold = (date) => Date.now() - date.getTime() < RAW_DATA_RECENCY_THRESHOLD * SECOND_IN_MS$1;

const flattenRequestInfoByFetch = ({ fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd, ...rest }) => {
    const infos = [];
    if (fetchMostRecentBeforeStart) {
        infos.push({
            ...rest,
            fetchMostRecentBeforeStart,
        });
    }
    if (fetchMostRecentBeforeEnd) {
        infos.push({
            ...rest,
            fetchMostRecentBeforeEnd,
        });
    }
    if (fetchFromStartToEnd) {
        infos.push({
            ...rest,
            fetchFromStartToEnd,
        });
    }
    return infos;
};

const sendRequest$2 = ({ client, batch, maxResults, requestIndex, // used to create and regenerate (for paginating) a unique entryId
nextToken: prevToken, dataPointsFetched = 0, // track number of data points fetched so far
 }) => {
    // callback cache makes it convenient to capture request data in a closure.
    // the cache exposes methods that only require batch response entry as an argument.
    const callbackCache = {};
    const batchSize = calculateNextRawHistoricalBatchSize({
        maxResults,
        dataPointsFetched,
    });
    client
        .send(new BatchGetAssetPropertyValueHistoryCommand({
        entries: deduplicateBatch(batch).map((entry, entryIndex) => {
            const { requestInformation, onError, onSuccess, requestStart, requestEnd, } = entry;
            const { id, resolution, aggregationType } = requestInformation;
            // use 2D array indices as entryIDs to guarantee uniqueness
            // entryId is used to map batch entries with the appropriate callback
            const entryId = String(`${requestIndex}-${entryIndex}`);
            // save request entry data in functional closure.
            callbackCache[entryId] = {
                onError: ({ errorMessage: msg = 'batch historical error', errorCode: status, }) => {
                    onError({
                        id,
                        resolution: 0,
                        error: { msg, status },
                        aggregationType: requestInformation.aggregationType,
                    });
                },
                onSuccess: ({ assetPropertyValueHistory }) => {
                    if (assetPropertyValueHistory) {
                        onSuccess([
                            dataStreamFromSiteWise({
                                ...fromId(id),
                                aggregationType,
                                resolution: RESOLUTION_TO_MS_MAPPING[resolution],
                                dataPoints: assetPropertyValueHistory
                                    .map((assetPropertyValue) => toDataPoint(assetPropertyValue))
                                    .filter(isDefined),
                            }),
                        ], requestInformation, requestStart, requestEnd);
                    }
                },
            };
            // BatchGetAssetPropertyValueHistoryEntry
            return {
                ...fromId(requestInformation.id),
                startDate: requestStart,
                endDate: requestEnd,
                entryId,
                timeOrdering: TimeOrdering.DESCENDING,
            };
        }),
        maxResults: batchSize,
        nextToken: prevToken,
    }))
        .then((response) => {
        const { errorEntries, successEntries, nextToken } = response;
        // execute the correct callback for each entry
        // empty entries and entries that don't exist in the cache are ignored.
        // TODO: implement retries for retry-able batch errors
        errorEntries === null || errorEntries === void 0 ? void 0 : errorEntries.forEach((entry) => { var _a; return entry.entryId && ((_a = callbackCache[entry.entryId]) === null || _a === void 0 ? void 0 : _a.onError(entry)); });
        successEntries === null || successEntries === void 0 ? void 0 : successEntries.forEach((entry) => { var _a; return entry.entryId && ((_a = callbackCache[entry.entryId]) === null || _a === void 0 ? void 0 : _a.onSuccess(entry)); });
        // increment number of data points fetched
        dataPointsFetched += batchSize;
        if (shouldFetchNextBatch({ nextToken, maxResults, dataPointsFetched })) {
            sendRequest$2({
                client,
                batch,
                maxResults,
                requestIndex,
                nextToken,
                dataPointsFetched,
            });
        }
    });
};
const batchGetHistoricalPropertyDataPointsForProperty = ({ client, entries, }) => createRawHistoricalEntryBatches(entries)
    .filter((batch) => batch.length > 0) // filter out empty batches
    .map(([batch, maxResults], requestIndex) => sendRequest$2({ client, batch, maxResults, requestIndex }));
const shouldAcceptRequest = ({ end, fetchFromStartToEnd, fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, resolution, }) => {
    return (resolution === '0' &&
        ((!withinLatestPropertyDataThreshold(end) && fetchMostRecentBeforeEnd) ||
            fetchFromStartToEnd ||
            fetchMostRecentBeforeStart));
};
const batchGetHistoricalPropertyDataPoints = ({ params, client, }) => {
    const entries = [];
    // fan out params into individual entries, handling fetchMostRecentBeforeStart
    params.forEach(({ requestInformations, maxResults, onSuccess, onError }) => {
        requestInformations
            .filter(shouldAcceptRequest)
            // fanout on fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd into dedicated request info
            .flatMap(flattenRequestInfoByFetch)
            .forEach((requestInformation) => {
            // only 1 of the following options are enabled at this point:
            // fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd
            const { fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd, start, end, } = requestInformation;
            if (fetchMostRecentBeforeStart) {
                entries.push({
                    requestInformation,
                    maxResults: 1,
                    onSuccess,
                    onError,
                    requestStart: new Date(0, 0, 0),
                    requestEnd: start,
                });
            }
            else if (fetchMostRecentBeforeEnd) {
                entries.push({
                    requestInformation,
                    maxResults: 1,
                    onSuccess,
                    onError,
                    requestStart: new Date(0, 0, 0),
                    requestEnd: end,
                });
            }
            else if (fetchFromStartToEnd) {
                entries.push({
                    requestInformation,
                    maxResults,
                    onSuccess,
                    onError,
                    requestStart: start,
                    requestEnd: end,
                });
            }
        });
    });
    // sort entries to ensure earliest data is fetched first because batch API has a property limit
    entries.sort((a, b) => b.requestInformation.start.getTime() -
        a.requestInformation.start.getTime());
    if (entries.length > 0) {
        batchGetHistoricalPropertyDataPointsForProperty({
            entries,
            client,
        });
    }
};

const sendRequest$1 = ({ client, batch, maxResults, requestIndex, // used to create and regenerate (for paginating) a unique entryId
nextToken: prevToken, dataPointsFetched = 0, // track number of data points fetched so far
 }) => {
    // callback cache makes it convenient to capture request data in a closure.
    // the cache exposes methods that only require batch response entry as an argument.
    const callbackCache = {};
    const batchSize = calculateNextAggregatedBatchSize({
        maxResults,
        dataPointsFetched,
    });
    client
        .send(new BatchGetAssetPropertyAggregatesCommand({
        entries: deduplicateBatch(batch).map((entry, entryIndex) => {
            const { requestInformation, onError, onSuccess, requestStart, requestEnd, } = entry;
            const { id, resolution, aggregationType } = requestInformation;
            // use 2D array indices as entryIDs to guarantee uniqueness
            // entryId is used to map batch entries with the appropriate callback
            const entryId = String(`${requestIndex}-${entryIndex}`);
            // save request entry data in functional closure.
            callbackCache[entryId] = {
                onError: ({ errorMessage: msg = 'batch aggregate error', errorCode: status, }) => {
                    onError({
                        id,
                        resolution: parseDuration(resolution),
                        error: { msg, status },
                        aggregationType: aggregationType,
                    });
                },
                onSuccess: ({ aggregatedValues }) => {
                    if (aggregatedValues) {
                        onSuccess([
                            dataStreamFromSiteWise({
                                ...fromId(id),
                                dataPoints: aggregatedValues
                                    .map((aggregatedValue) => aggregateToDataPoint(aggregatedValue))
                                    .filter(isDefined),
                                resolution: RESOLUTION_TO_MS_MAPPING[resolution],
                                aggregationType: aggregationType,
                            }),
                        ], requestInformation, requestStart, requestEnd);
                    }
                },
            };
            // BatchGetAssetPropertyValueAggregatesEntry
            return {
                ...fromId(requestInformation.id),
                aggregateTypes: [
                    requestInformation.aggregationType,
                ],
                resolution,
                startDate: requestStart,
                endDate: requestEnd,
                entryId,
                timeOrdering: TimeOrdering.DESCENDING,
            };
        }),
        maxResults: batchSize,
        nextToken: prevToken,
    }))
        .then((response) => {
        const { errorEntries, successEntries, nextToken } = response;
        // execute the correct callback for each entry
        // empty entries and entries that don't exist in the cache are ignored.
        // TODO: implement retries for retry-able batch errors
        errorEntries === null || errorEntries === void 0 ? void 0 : errorEntries.forEach((entry) => { var _a; return entry.entryId && ((_a = callbackCache[entry.entryId]) === null || _a === void 0 ? void 0 : _a.onError(entry)); });
        successEntries === null || successEntries === void 0 ? void 0 : successEntries.forEach((entry) => { var _a; return entry.entryId && ((_a = callbackCache[entry.entryId]) === null || _a === void 0 ? void 0 : _a.onSuccess(entry)); });
        // increment number of data points fetched
        dataPointsFetched += batchSize;
        if (shouldFetchNextBatch({ nextToken, maxResults, dataPointsFetched })) {
            sendRequest$1({
                client,
                batch,
                maxResults,
                requestIndex,
                nextToken,
                dataPointsFetched,
            });
        }
    });
};
const batchGetAggregatedPropertyDataPointsForProperty = ({ client, entries, }) => createAggregateEntryBatches(entries)
    .filter((batch) => batch.length > 0) // filter out empty batches
    .map(([batch, maxResults], requestIndex) => sendRequest$1({ client, batch, maxResults, requestIndex }));
const batchGetAggregatedPropertyDataPoints = ({ params, client, }) => {
    const entries = [];
    // fan out params into individual entries, handling fetchMostRecentBeforeStart
    params.forEach(({ requestInformations, maxResults, onSuccess, onError }) => {
        requestInformations
            // Aggregates for raw data only (denoted by '0')
            .filter(({ resolution }) => resolution !== '0')
            // fanout on fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd into dedicated request info
            .flatMap(flattenRequestInfoByFetch)
            .forEach((requestInformation) => {
            // only 1 of the following options are enabled at this point:
            // fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd
            const { fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd, start, end, } = requestInformation;
            if (fetchMostRecentBeforeStart) {
                entries.push({
                    requestInformation,
                    maxResults: 1,
                    onSuccess,
                    onError,
                    requestStart: new Date(0, 0, 0),
                    requestEnd: start,
                });
            }
            else if (fetchMostRecentBeforeEnd) {
                entries.push({
                    requestInformation,
                    maxResults: 1,
                    onSuccess,
                    onError,
                    requestStart: new Date(0, 0, 0),
                    requestEnd: end,
                });
            }
            else if (fetchFromStartToEnd) {
                entries.push({
                    requestInformation,
                    maxResults,
                    onSuccess,
                    onError,
                    requestStart: start,
                    requestEnd: end,
                });
            }
        });
    });
    // sort entries to ensure earliest data is fetched first because batch API has a property limit
    entries.sort((a, b) => b.requestInformation.start.getTime() -
        a.requestInformation.start.getTime());
    if (entries.length > 0) {
        batchGetAggregatedPropertyDataPointsForProperty({
            entries,
            client,
        });
    }
};

/**
 *  This API currently does not paginate and nextToken will always be null. However, once
 *  Hybrid Query (hot/cold) is supported it's possible that the API will not return
 *  all entries in a single API request. Supporting nextToken future-proofs this implementation.
 */
const sendRequest = ({ client, batch, requestIndex, // used to create and regenerate (for paginating) a unique entryId
nextToken: prevToken, }) => {
    // callback cache makes it convenient to capture request data in a closure.
    // the cache exposes methods that only require batch response entry as an argument.
    const callbackCache = {};
    client
        .send(new BatchGetAssetPropertyValueCommand({
        entries: deduplicateBatch(batch).map((entry, entryIndex) => {
            const { requestInformation, onError, onSuccess, requestStart, requestEnd, } = entry;
            const { id } = requestInformation;
            // use 2D array indices as entryIDs to guarantee uniqueness
            // entryId is used to map batch entries with the appropriate callback
            const entryId = String(`${requestIndex}-${entryIndex}`);
            // save request entry data in functional closure.
            callbackCache[entryId] = {
                onError: ({ errorMessage: msg = 'batch latest value error', errorCode: status, }) => {
                    onError({
                        id,
                        resolution: 0,
                        error: { msg, status },
                        aggregationType: requestInformation.aggregationType,
                    });
                },
                onSuccess: ({ assetPropertyValue }) => {
                    if (assetPropertyValue) {
                        const dataStream = dataStreamFromSiteWise({
                            ...fromId(id),
                            dataPoints: [toDataPoint(assetPropertyValue)].filter(isDefined),
                        });
                        onSuccess([dataStream], requestInformation, requestStart, requestEnd);
                    }
                },
            };
            // BatchGetAssetPropertyValueEntry
            return {
                ...fromId(requestInformation.id),
                entryId,
            };
        }),
        nextToken: prevToken,
    }))
        .then((response) => {
        const { errorEntries, successEntries, nextToken } = response;
        // execute the correct callback for each entry
        // empty entries and entries that don't exist in the cache are ignored.
        // TODO: implement retries for retry-able batch errors
        errorEntries === null || errorEntries === void 0 ? void 0 : errorEntries.forEach((entry) => { var _a; return entry.entryId && ((_a = callbackCache[entry.entryId]) === null || _a === void 0 ? void 0 : _a.onError(entry)); });
        successEntries === null || successEntries === void 0 ? void 0 : successEntries.forEach((entry) => { var _a; return entry.entryId && ((_a = callbackCache[entry.entryId]) === null || _a === void 0 ? void 0 : _a.onSuccess(entry)); });
        if (shouldFetchNextBatch({ nextToken, maxResults: NO_LIMIT_BATCH })) {
            sendRequest({
                client,
                batch,
                requestIndex,
                nextToken,
            });
        }
    });
};
const batchGetLatestPropertyDataPointsForProperty = ({ client, entries, }) => createRawLatestEntryBatches(entries)
    .filter((batch) => batch.length > 0) // filter out empty batches
    .map(([batch], requestIndex) => sendRequest({ client, batch, requestIndex }));
const batchGetLatestPropertyDataPoints = ({ params, client, }) => {
    const entries = [];
    // fan out params into individual entries, handling fetchMostRecentBeforeStart
    params.forEach(({ requestInformations, onSuccess, onError }) => {
        requestInformations
            .filter(({ end, fetchMostRecentBeforeEnd, resolution }) => resolution === '0' &&
            withinLatestPropertyDataThreshold(end) &&
            fetchMostRecentBeforeEnd)
            .forEach((requestInformation) => {
            const { end } = requestInformation;
            entries.push({
                requestInformation,
                onSuccess,
                onError,
                requestStart: new Date(0, 0, 0),
                requestEnd: end,
            });
        });
    });
    // sort entries to ensure earliest data is fetched first because batch API has a property limit
    entries.sort((a, b) => b.requestInformation.start.getTime() -
        a.requestInformation.start.getTime());
    if (entries.length > 0) {
        batchGetLatestPropertyDataPointsForProperty({
            entries,
            client,
        });
    }
};

class SiteWiseClient {
    constructor(siteWiseSdk, settings = {}) {
        this.siteWiseSdk = siteWiseSdk;
        this.settings = settings;
        /**
         * Instantiate batch data loaders for latest, historical, and aggregated data.
         * by default, data loaders will schedule batches for each frame of execution which ensures
         * no additional latency when capturing many related requests in a single batch.
         */
        this.latestPropertyDataLoader = new dataloader(async (keys) => {
            batchGetLatestPropertyDataPoints({
                params: keys.flat(),
                client: this.siteWiseSdk,
            });
            return keys.map(() => undefined); // values are updated in data cache and don't need to be rebroadcast
        }, {
            batchScheduleFn: this.settings.batchDuration
                ? (callback) => setTimeout(callback, this.settings.batchDuration)
                : undefined,
        });
        this.historicalPropertyDataLoader = new dataloader(async (keys) => {
            batchGetHistoricalPropertyDataPoints({
                params: keys.flat(),
                client: this.siteWiseSdk,
            });
            return keys.map(() => undefined);
        }, {
            batchScheduleFn: this.settings.batchDuration
                ? (callback) => setTimeout(callback, this.settings.batchDuration)
                : undefined,
        });
        this.aggregatedPropertyDataLoader = new dataloader(async (keys) => {
            batchGetAggregatedPropertyDataPoints({
                params: keys.flat(),
                client: this.siteWiseSdk,
            });
            return keys.map(() => undefined);
        }, {
            batchScheduleFn: this.settings.batchDuration
                ? (callback) => setTimeout(callback, this.settings.batchDuration)
                : undefined,
        });
    }
    getLatestPropertyDataPoint(params) {
        return this.latestPropertyDataLoader.load(params);
    }
    getHistoricalPropertyDataPoints(params) {
        return this.historicalPropertyDataLoader.load(params);
    }
    getAggregatedPropertyDataPoints(params) {
        return this.aggregatedPropertyDataLoader.load(params);
    }
}

const getAggregatedPropertyDataPointsForProperty = ({ requestInformation, assetId, propertyId, maxResults, onSuccess, onError, nextToken: prevToken, client, }) => {
    let { start, end } = requestInformation;
    // only 1 of the following options are enabled at this point:
    // fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd
    const { aggregationType, fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, resolution, } = requestInformation;
    if (aggregationType == null) {
        console.error('Failed to call getAggregatedPropertyDataPointsForProperty(...) due to missing `aggregationType` in the requestInformation.');
        return;
    }
    const fetchMostRecent = fetchMostRecentBeforeStart || fetchMostRecentBeforeEnd;
    // fetch leading point without mutating requestInformation
    if (fetchMostRecentBeforeStart) {
        end = start;
        // default to year of SiteWise Preview to not workload edge gateway
        start = SITEWISE_PREVIEW_DATE;
        maxResults = 1;
    }
    else if (fetchMostRecentBeforeEnd) {
        start = SITEWISE_PREVIEW_DATE;
        maxResults = 1;
    }
    return client
        .send(new GetAssetPropertyAggregatesCommand({
        assetId,
        propertyId,
        startDate: start,
        endDate: end,
        resolution,
        aggregateTypes: [aggregationType],
        maxResults,
        timeOrdering: TimeOrdering.DESCENDING,
        nextToken: prevToken,
    }))
        .then(({ aggregatedValues, nextToken }) => {
        if (aggregatedValues) {
            /** Report the page of data to the data-module */
            const dataPoints = aggregatedValues
                .map((assetPropertyValue) => aggregateToDataPoint(assetPropertyValue))
                .filter(isDefined);
            onSuccess([
                dataStreamFromSiteWise({
                    assetId,
                    propertyId,
                    dataPoints,
                    resolution: RESOLUTION_TO_MS_MAPPING[resolution],
                    aggregationType,
                }),
            ], requestInformation, start, end);
        }
        if (nextToken && !fetchMostRecent) {
            getAggregatedPropertyDataPointsForProperty({
                requestInformation,
                assetId,
                propertyId,
                maxResults,
                onError,
                onSuccess,
                nextToken,
                client,
            });
        }
    })
        .catch((err) => {
        var _a;
        const id = toId({ assetId, propertyId });
        onError({
            id,
            resolution: parseDuration(resolution),
            error: {
                msg: err.message,
                type: err.name,
                status: (_a = err.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode,
            },
        });
    });
};
const getAggregatedPropertyDataPoints = async ({ client, requestInformations, maxResults, onSuccess, onError, }) => {
    const requests = requestInformations
        .filter(({ resolution }) => resolution !== '0')
        .sort((a, b) => b.start.getTime() - a.start.getTime())
        // fanout on fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd into dedicated request info
        .flatMap(flattenRequestInfoByFetch)
        .map((requestInformation) => {
        const { assetId, propertyId } = toSiteWiseAssetProperty(requestInformation.id);
        return getAggregatedPropertyDataPointsForProperty({
            requestInformation,
            client,
            assetId,
            propertyId,
            maxResults,
            onSuccess,
            onError,
        });
    });
    try {
        await Promise.all(requests);
    }
    catch (err) {
        // NOOP
    }
};

const getHistoricalPropertyDataPointsForProperty = ({ requestInformation, assetId, propertyId, maxResults, onSuccess, onError, nextToken: prevToken, client, }) => {
    let { start, end } = requestInformation;
    // only 1 of the following options are enabled at this point:
    // fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd
    const { fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd } = requestInformation;
    const fetchMostRecent = fetchMostRecentBeforeStart || fetchMostRecentBeforeEnd;
    // fetch leading point without mutating requestInformation
    if (fetchMostRecentBeforeStart) {
        end = start;
        // default to year of SiteWise Preview to not workload edge gateway
        start = SITEWISE_PREVIEW_DATE;
        maxResults = 1;
    }
    else if (fetchMostRecentBeforeEnd) {
        start = SITEWISE_PREVIEW_DATE;
        maxResults = 1;
    }
    return client
        .send(new GetAssetPropertyValueHistoryCommand({
        assetId,
        propertyId,
        startDate: start,
        endDate: end,
        maxResults,
        timeOrdering: TimeOrdering.DESCENDING,
        nextToken: prevToken,
    }))
        .then((response) => {
        if (response) {
            const { assetPropertyValueHistory, nextToken } = response;
            if (assetPropertyValueHistory) {
                /** Report the page of data to the data-module */
                const dataPoints = assetPropertyValueHistory
                    .map((assetPropertyValue) => toDataPoint(assetPropertyValue))
                    .filter(isDefined);
                onSuccess([dataStreamFromSiteWise({ assetId, propertyId, dataPoints })], requestInformation, start, end);
            }
            if (nextToken && !fetchMostRecent) {
                getHistoricalPropertyDataPointsForProperty({
                    requestInformation,
                    assetId,
                    propertyId,
                    maxResults,
                    onError,
                    onSuccess,
                    nextToken,
                    client,
                });
            }
        }
    })
        .catch((err) => {
        var _a;
        const id = toId({ assetId, propertyId });
        onError({
            id,
            resolution: 0,
            error: {
                msg: err.message,
                type: err.name,
                status: (_a = err.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode,
            },
        });
    });
};
const getHistoricalPropertyDataPoints = async ({ client, requestInformations, maxResults, onSuccess, onError, }) => {
    const requests = requestInformations
        .filter(({ resolution }) => resolution === '0')
        .sort((a, b) => b.start.getTime() - a.start.getTime())
        // fanout on fetchMostRecentBeforeStart, fetchMostRecentBeforeEnd, fetchFromStartToEnd into dedicated request info
        .flatMap(flattenRequestInfoByFetch)
        .map((requestInformation) => {
        const { assetId, propertyId } = toSiteWiseAssetProperty(requestInformation.id);
        return getHistoricalPropertyDataPointsForProperty({
            requestInformation,
            client,
            assetId,
            propertyId,
            maxResults,
            onSuccess,
            onError,
        });
    });
    try {
        await Promise.all(requests);
    }
    catch (err) {
        // NOOP
    }
};

const getLatestPropertyDataPoint = async ({ onSuccess, onError, client, requestInformations, }) => {
    const requests = requestInformations
        .filter(({ resolution, fetchMostRecentBeforeEnd }) => resolution === '0' && fetchMostRecentBeforeEnd)
        .sort((a, b) => b.start.getTime() - a.start.getTime())
        .map((requestInformation) => {
        const { assetId, propertyId } = toSiteWiseAssetProperty(requestInformation.id);
        return client
            .send(new GetAssetPropertyValueCommand({ assetId, propertyId }))
            .then((res) => ({
            siteWiseData: {
                dataPoints: [toDataPoint(res.propertyValue)].filter(isDefined),
                assetId,
                propertyId,
            },
            requestInformation,
        }))
            .catch((err) => {
            var _a;
            const dataStreamId = toId({ assetId, propertyId });
            onError({
                id: dataStreamId,
                resolution: 0,
                error: {
                    msg: err.message,
                    type: err.name,
                    status: (_a = err.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode,
                },
            });
            return undefined;
        });
    });
    try {
        await Promise.all(requests).then((results) => {
            results
                .filter(isDefined)
                .map(({ siteWiseData, requestInformation }) => ({
                dataStream: dataStreamFromSiteWise(siteWiseData),
                requestInformation,
            }))
                .forEach(({ dataStream, requestInformation }) => {
                const lastDataPoint = dataStream.data.slice(-1)[0];
                // default to year of SiteWise Preview to not workload edge gateway
                const start = lastDataPoint
                    ? new Date(lastDataPoint.x)
                    : SITEWISE_PREVIEW_DATE;
                onSuccess([dataStream], requestInformation, start, requestInformation.end);
            });
        });
    }
    catch (_a) {
        // NOOP
    }
};

class SiteWiseClientEdge {
    constructor(siteWiseSdk) {
        this.siteWiseSdk = siteWiseSdk;
    }
    getLatestPropertyDataPoint(params) {
        return getLatestPropertyDataPoint({
            client: this.siteWiseSdk,
            ...params,
        });
    }
    getHistoricalPropertyDataPoints(params) {
        return getHistoricalPropertyDataPoints({
            client: this.siteWiseSdk,
            ...params,
        });
    }
    getAggregatedPropertyDataPoints(params) {
        return getAggregatedPropertyDataPoints({
            client: this.siteWiseSdk,
            ...params,
        });
    }
}

const DEFAULT_RESOLUTION_MAPPING = {
    [MINUTE_IN_MS$1 * 15]: SupportedResolutions.ONE_MINUTE,
    [HOUR_IN_MS * 15]: SupportedResolutions.ONE_HOUR,
    [DAY_IN_MS * 60]: SupportedResolutions.ONE_DAY,
};
const isSiteWiseResolution = (resolution) => {
    return Object.values(SupportedResolutions).includes(resolution);
};
const determineResolution = ({ resolution, start, end, }) => {
    if (typeof resolution === 'string') {
        return resolution;
    }
    const resolutionOverride = resolution || DEFAULT_RESOLUTION_MAPPING;
    const viewportTimeSpan = end.getTime() - start.getTime();
    const matchedViewport = Object.keys(resolutionOverride)
        .sort((a, b) => parseInt(b) - parseInt(a))
        .find((viewport) => viewportTimeSpan >= parseInt(viewport));
    if (matchedViewport) {
        const matchedResolution = resolutionOverride[parseInt(matchedViewport)];
        if (!isSiteWiseResolution(matchedResolution)) {
            throw new Error(`${matchedResolution} is not a valid SiteWise aggregation resolution, must match regex pattern '1m|15m|1h|1d'`);
        }
        return matchedResolution;
    }
    else {
        return '0';
    }
};
const createDataSource = (siteWise, settings = {}) => {
    const { edgeMode } = settings;
    const client = edgeMode === 'enabled'
        ? new SiteWiseClientEdge(siteWise)
        : new SiteWiseClient(siteWise, settings);
    return {
        initiateRequest: ({ onSuccess, onError }, requestInformations) => {
            Promise.all([
                client.getLatestPropertyDataPoint({
                    onSuccess,
                    onError,
                    requestInformations,
                }),
                client.getAggregatedPropertyDataPoints({
                    requestInformations,
                    onSuccess,
                    onError,
                }),
                client.getHistoricalPropertyDataPoints({
                    requestInformations,
                    onSuccess,
                    onError,
                }),
            ]);
        },
        getRequestsFromQuery: async ({ query, request }) => {
            var _a, _b, _c;
            const resolution = determineResolution({
                resolution: (_a = request.settings) === null || _a === void 0 ? void 0 : _a.resolution,
                start: viewportStartDate(request.viewport),
                end: viewportEndDate(request.viewport),
            });
            const assetRequests = ((_b = query.assets) === null || _b === void 0 ? void 0 : _b.flatMap(({ assetId, properties }) => properties.map(({ propertyId, resolution: resolutionOverride, aggregationType, refId, }) => {
                const finalResolution = resolutionOverride != null ? resolutionOverride : resolution;
                return {
                    id: toId({ assetId, propertyId }),
                    refId,
                    aggregationType: parseDuration(finalResolution) === 0
                        ? undefined
                        : aggregationType,
                    resolution: finalResolution,
                };
            }))) || [];
            const propertyAliasRequests = ((_c = query.properties) === null || _c === void 0 ? void 0 : _c.map(({ propertyAlias, resolution: resolutionOverride, aggregationType, refId, }) => {
                const finalResolution = resolutionOverride != null ? resolutionOverride : resolution;
                return {
                    id: toId({ propertyAlias }),
                    refId,
                    aggregationType: parseDuration(finalResolution) === 0
                        ? undefined
                        : aggregationType,
                    resolution: finalResolution,
                };
            })) || [];
            return [...propertyAliasRequests, ...assetRequests];
        },
    };
};

class EventsClient {
    constructor(eventsSdk) {
        this.eventsSdk = eventsSdk;
    }
    async getAlarmModel(name) {
        return this.eventsSdk.send(new DescribeAlarmModelCommand({
            alarmModelName: name,
        }));
    }
}

class Cache {
    constructor(client) {
        this.alarmModels = {};
        this.client = client;
    }
    async getAlarmModel(name) {
        if (this.alarmModels[name]) {
            return this.alarmModels[name];
        }
        const { severity, alarmRule } = await this.client.getAlarmModel(name);
        if (!(alarmRule === null || alarmRule === void 0 ? void 0 : alarmRule.simpleRule)) {
            throw new Error('Could not get alarm rule');
        }
        const { inputProperty, comparisonOperator, threshold } = alarmRule.simpleRule;
        if (!inputProperty || !comparisonOperator || !threshold || !severity) {
            throw new Error('Could not parse alarm');
        }
        const inputPropertyId = inputProperty;
        const scComparisonOperator = IoTEventsToSynchroChartsComparisonOperator[comparisonOperator];
        const thresholdPropertyId = threshold;
        const alarm = {
            inputPropertyId,
            comparisonOperator: scComparisonOperator,
            thresholdPropertyId,
            severity,
        };
        this.alarmModels[name] = alarm;
        return alarm;
    }
}

const getAlarmModelName = (alarmSourceArn) => {
    const splitAlarmArn = alarmSourceArn.split('/');
    return splitAlarmArn[splitAlarmArn.length - 1];
};

const removeBackticks = (value) => {
    return value.replace(/^`|`$/g, '');
};
const SITE_WISE_BACKED_PROPERTY_PREFIX = '$sitewise';
const isBackedBySiteWiseAssetProperty = (maybeAssetProperty) => maybeAssetProperty.startsWith(SITE_WISE_BACKED_PROPERTY_PREFIX);
/**
 * Extracts the propertyId from an iot events expressions
 *
 * $sitewise.assetModel.`assetModelId`.`propertyId`.propertyValue.value
 *
 * "In AWS IoT Events, you use expressions to specify values in alarm models"
 *
 * More on that here https://docs.aws.amazon.com/iot-sitewise/latest/userguide/define-iot-events-alarm-cli.html
 */
const getPropertyId = (modelPropertyId) => {
    if (modelPropertyId == null) {
        return undefined;
    }
    if (!isBackedBySiteWiseAssetProperty(modelPropertyId)) {
        return undefined;
    }
    const splitInputProperty = modelPropertyId.split('.');
    return removeBackticks(splitInputProperty[3]);
};

const getAlarmSourceProperty = (assetModel, alarmStatePropertyId) => {
    var _a;
    return (_a = assetModel.assetModelCompositeModels) === null || _a === void 0 ? void 0 : _a.filter(({ type }) => type === 'AWS/ALARM').map(({ properties }) => properties).filter((properties) => properties === null || properties === void 0 ? void 0 : properties.some((property) => (property === null || property === void 0 ? void 0 : property.id) === alarmStatePropertyId)).flat().find((property) => (property === null || property === void 0 ? void 0 : property.name) === 'AWS/ALARM_SOURCE');
};

class SiteWiseAlarmModule {
    constructor(client, siteWiseAssetModule) {
        this.client = new EventsClient(client);
        this.assetModuleSession = siteWiseAssetModule.startSession();
        this.cache = new Cache(this.client);
    }
    async getAlarmModel(name) {
        return this.cache.getAlarmModel(name);
    }
    async getAlarm({ assetId, alarmStatePropertyId, }) {
        var _a, _b, _c;
        try {
            const alarmAsset = await this.assetModuleSession.fetchAssetSummary({
                assetId,
            });
            const assetModelId = alarmAsset === null || alarmAsset === void 0 ? void 0 : alarmAsset.assetModelId;
            const assetModel = await this.assetModuleSession.fetchAssetModel({
                assetModelId: assetModelId,
            });
            const alarmSourceId = (_a = getAlarmSourceProperty(assetModel, alarmStatePropertyId)) === null || _a === void 0 ? void 0 : _a.id;
            if (!alarmSourceId) {
                return undefined;
            }
            const alarmSourcePropertyValue = await this.assetModuleSession.fetchAssetPropertyValue({
                assetId,
                propertyId: alarmSourceId,
            });
            const alarmModelName = getAlarmModelName(toValue(alarmSourcePropertyValue.value));
            const { comparisonOperator, thresholdPropertyId: thresholdPropertyIdExpression, inputPropertyId: inputPropertyIdExpression, severity, } = await this.getAlarmModel(alarmModelName);
            const alarmStatePropertyValue = await this.assetModuleSession.fetchAssetPropertyValue({
                assetId: assetId,
                propertyId: alarmStatePropertyId,
            });
            const state = parseAlarmData(toValue(alarmStatePropertyValue.value));
            const thresholdPropertyId = getPropertyId(thresholdPropertyIdExpression);
            const thresholdPropertyValue = await this.assetModuleSession.fetchAssetPropertyValue({
                assetId,
                propertyId: thresholdPropertyId,
            });
            const inputPropertyId = getPropertyId(inputPropertyIdExpression);
            const inputPropertyName = (_c = (_b = assetModel.assetModelProperties) === null || _b === void 0 ? void 0 : _b.find(({ id }) => id === inputPropertyId)) === null || _c === void 0 ? void 0 : _c.name;
            const threshold = toValue(thresholdPropertyValue.value);
            const rule = `${inputPropertyName} ${COMPARISON_SYMBOL[comparisonOperator]} ${threshold}`;
            return {
                assetId,
                alarmStatePropertyId,
                inputPropertyId,
                thresholdPropertyId,
                comparisonOperator,
                threshold,
                severity,
                rule,
                state,
            };
        }
        catch (_d) {
            return undefined;
        }
    }
}

// creates async function which requests cachedDataStreams until all the data for viewport is present
const fetchTimeSeriesData = (siteWiseTimeSeriesModule) => async ({ query, viewport, settings, }) => {
    return new Promise((resolve) => {
        siteWiseTimeSeriesModule.getCachedDataStreams({
            queries: [query],
            viewport,
            settings,
            emitDataStreams: (ds) => resolve(ds),
        });
    });
};

const SOURCE = 'iotsitewise';
/**
 * Initialize IoT App Kit
 *
 * @param awsCredentials - https://www.npmjs.com/package/@aws-sdk/credential-providers
 * @param awsRegion - Region for AWS based data sources to point towards, i.e. us-east-1
 */
const initialize = (input) => {
    const siteWiseClient = getSiteWiseClient(input);
    const iotEventsClient = getIotEventsClient(input);
    const assetDataSource = createSiteWiseAssetDataSource(siteWiseClient);
    const siteWiseAssetModule = new SiteWiseAssetModule(assetDataSource);
    const siteWiseTimeSeriesModule = new TimeSeriesDataModule(createDataSource(siteWiseClient, input.settings));
    const siteWiseAlarmModule = new SiteWiseAlarmModule(iotEventsClient, siteWiseAssetModule);
    return {
        query: {
            fetchTimeSeriesData: fetchTimeSeriesData(siteWiseTimeSeriesModule),
            timeSeriesData: (query) => ({
                toQueryString: () => JSON.stringify({
                    source: SOURCE,
                    queryType: 'time-series-data',
                    query,
                }),
                build: (sessionId, params) => new SiteWiseTimeSeriesDataProvider(new SiteWiseComponentSession({
                    componentId: sessionId,
                    siteWiseTimeSeriesModule,
                    siteWiseAssetModule,
                    siteWiseAlarmModule,
                }), {
                    queries: [query],
                    request: params,
                }),
            }),
            anomalyData: (query) => ({
                query,
                iotSiteWiseClient: siteWiseClient,
            }),
            alarmData: (query) => ({
                query,
                iotSiteWiseClient: siteWiseClient,
                iotEventsClient: iotEventsClient,
            }),
            assetTree: {
                fromRoot: (args = {}) => ({
                    toQueryString: () => JSON.stringify({
                        source: SOURCE,
                        queryType: 'assets-from-root',
                        query: args,
                    }),
                    build: (sessionId) => {
                        const session = new SiteWiseComponentSession({
                            componentId: sessionId,
                            siteWiseTimeSeriesModule,
                            siteWiseAssetModule,
                            siteWiseAlarmModule,
                        });
                        return new SiteWiseAssetTreeSession(assetSession(session), args);
                    },
                }),
                fromAsset: (args) => {
                    return {
                        toQueryString: () => JSON.stringify({
                            source: SOURCE,
                            queryType: 'assets-from-asset',
                            query: args,
                        }),
                        build: (sessionId) => {
                            const session = new SiteWiseComponentSession({
                                componentId: sessionId,
                                siteWiseTimeSeriesModule,
                                siteWiseAssetModule,
                                siteWiseAlarmModule,
                            });
                            return new SiteWiseAssetTreeSession(assetSession(session), args);
                        },
                    };
                },
            },
        },
    };
};

const getEnvCredentials = () => {
  if (process.env.AWS_ACCESS_KEY_ID == null ||
    process.env.AWS_SECRET_ACCESS_KEY == null ||
    process.env.AWS_SESSION_TOKEN == null) {
    throw new Error('Missing credentials: must provide the following env variables: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and AWS_SESSION_TOKEN within .env');
  }
  return {
    // Provided by `.env` environment variable file
    accessKeyId: process.env.AWS_ACCESS_KEY_ID,
    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,
    sessionToken: process.env.AWS_SESSION_TOKEN,
  };
};

const awsuiCss = "div.awsui_column-layout_vvxn7_75n2g_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;word-wrap:break-word}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106:not(#\\9){margin:calc(var(--space-grid-gutter-pfst95, 20px) / -2);}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-no-gutters_vvxn7_75n2g_111:not(#\\9){margin:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114:not(#\\9){margin:calc(-1 * var(--space-grid-gutter-pfst95, 20px) / 2) calc(-1 * var(--space-grid-gutter-pfst95, 20px))}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114>*:not(#\\9){border-left:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-breakpoint-default_vvxn7_75n2g_121>*:not(#\\9):nth-child(1n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-columns-1_vvxn7_75n2g_124.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-child(1n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-columns-1_vvxn7_75n2g_124.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-child(1n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-columns-2_vvxn7_75n2g_130.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-child(2n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-columns-2_vvxn7_75n2g_130.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-child(2n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-columns-3_vvxn7_75n2g_136.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-child(2n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-columns-3_vvxn7_75n2g_136.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-child(3n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-child(2n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-variant-text-grid_vvxn7_75n2g_114.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-child(4n+1){border-left-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106:not(#\\9):not(.awsui_grid-no-gutters_vvxn7_75n2g_111)>*{padding:calc(var(--space-grid-gutter-pfst95, 20px) / 2)}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106:not(#\\9):not(.awsui_grid-no-gutters_vvxn7_75n2g_111).awsui_grid-variant-text-grid_vvxn7_75n2g_114>*{padding:0 var(--space-grid-gutter-pfst95, 20px);margin:calc(var(--space-grid-gutter-pfst95, 20px) / 2) 0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155:not(#\\9){}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155>*:not(#\\9){border-right:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-breakpoint-default_vvxn7_75n2g_121>*:not(#\\9):nth-child(1n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-columns-1_vvxn7_75n2g_124.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-child(1n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-columns-1_vvxn7_75n2g_124.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-child(1n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-columns-2_vvxn7_75n2g_130.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-child(2n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-columns-2_vvxn7_75n2g_130.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-child(2n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-columns-3_vvxn7_75n2g_136.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-child(2n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-columns-3_vvxn7_75n2g_136.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-child(3n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-child(2n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-vertical-borders_vvxn7_75n2g_155.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-child(4n){border-right-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188:not(#\\9){}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188>*:not(#\\9){border-bottom:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188>*:not(#\\9):last-child{border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-2_vvxn7_75n2g_130.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-last-child(2):nth-child(2n+1){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-2_vvxn7_75n2g_130.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(2):nth-child(2n+1){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-3_vvxn7_75n2g_136.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-last-child(2):nth-child(2n+1){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-3_vvxn7_75n2g_136.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(2):nth-child(3n+1){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-3_vvxn7_75n2g_136.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(2):nth-child(3n+2){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-3_vvxn7_75n2g_136.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(3):nth-child(3n+1){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xxs_vvxn7_75n2g_124>*:not(#\\9):nth-last-child(2):nth-child(2n+1){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(2):nth-child(4n+1){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(2):nth-child(4n+2){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(2):nth-child(4n+3){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(3):nth-child(4n+1){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(3):nth-child(4n+2){border-bottom-width:0}div.awsui_column-layout_vvxn7_75n2g_93>.awsui_grid_vvxn7_75n2g_106.awsui_grid-horizontal-borders_vvxn7_75n2g_188.awsui_grid-columns-4_vvxn7_75n2g_142.awsui_grid-breakpoint-xs_vvxn7_75n2g_127>*:not(#\\9):nth-last-child(4):nth-child(4n+1){border-bottom-width:0}.awsui_root_18582_cbbsj_93:not(#\\9){display:flex}.awsui_child_18582_cbbsj_97:not(#\\9){}.awsui_child_18582_cbbsj_97:not(#\\9):empty{display:none}.awsui_horizontal_18582_cbbsj_108:not(#\\9){flex-direction:row;flex-wrap:wrap}.awsui_horizontal-xxxs_18582_cbbsj_112:not(#\\9){gap:var(--space-xxxs-rq3iss, 2px)}.awsui_horizontal-xxs_18582_cbbsj_115:not(#\\9){gap:var(--space-xxs-a6783b, 4px)}.awsui_horizontal-xs_18582_cbbsj_118:not(#\\9){gap:var(--space-xs-inub5w, 8px)}.awsui_horizontal-s_18582_cbbsj_121:not(#\\9){gap:var(--space-s-rd607g, 12px)}.awsui_horizontal-m_18582_cbbsj_124:not(#\\9){gap:var(--space-m-sptmsg, 16px)}.awsui_horizontal-l_18582_cbbsj_127:not(#\\9){gap:var(--space-l-ds615y, 20px)}.awsui_horizontal-xl_18582_cbbsj_130:not(#\\9){gap:var(--space-xl-7jca1b, 24px)}.awsui_horizontal-xxl_18582_cbbsj_133:not(#\\9){gap:var(--space-xxl-eiq7g3, 32px)}.awsui_vertical_18582_cbbsj_140:not(#\\9){flex-direction:column}.awsui_vertical-xxxs_18582_cbbsj_143:not(#\\9){row-gap:var(--space-xxxs-rq3iss, 2px)}.awsui_vertical-xxs_18582_cbbsj_146:not(#\\9){row-gap:var(--space-xxs-a6783b, 4px)}.awsui_vertical-xs_18582_cbbsj_149:not(#\\9){row-gap:var(--space-xs-inub5w, 8px)}.awsui_vertical-s_18582_cbbsj_152:not(#\\9){row-gap:var(--space-scaled-s-gczsk7, 12px)}.awsui_vertical-m_18582_cbbsj_155:not(#\\9){row-gap:var(--space-scaled-m-9q5ipc, 16px)}.awsui_vertical-l_18582_cbbsj_158:not(#\\9){row-gap:var(--space-scaled-l-x5pubp, 20px)}.awsui_vertical-xl_18582_cbbsj_161:not(#\\9){row-gap:var(--space-scaled-xl-ozgbvg, 24px)}.awsui_vertical-xxl_18582_cbbsj_164:not(#\\9){row-gap:var(--space-scaled-xxl-v4jc9u, 32px)}.awsui_align-center_18582_cbbsj_168:not(#\\9){align-items:center}.awsui_align-start_18582_cbbsj_172:not(#\\9){align-items:start}.awsui_align-end_18582_cbbsj_176:not(#\\9){align-items:end}.awsui_root_fvjdu_bq8ka_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:flex;flex-direction:row;flex-wrap:wrap;box-sizing:border-box;padding-left:0;margin:0;list-style:none}.awsui_button_fvjdu_bq8ka_113:not(#\\9),.awsui_dots_fvjdu_bq8ka_114:not(#\\9){min-width:var(--space-l-ds615y, 20px);border:var(--border-field-width-2vpp5j, 1px) solid transparent}.awsui_button_fvjdu_bq8ka_113:not(#\\9){cursor:pointer;text-align:center;box-sizing:border-box;background:transparent;line-height:inherit;padding:0}.awsui_button_fvjdu_bq8ka_113:not(#\\9):focus{outline:none}body[data-awsui-focus-visible=true] .awsui_button_fvjdu_bq8ka_113:not(#\\9):focus{outline:2px dotted transparent;border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-item-focused-t884ih, #0073bb);border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 var(--border-control-focus-ring-shadow-spread-oufv0y, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button-disabled_fvjdu_bq8ka_136:not(#\\9){cursor:default;color:var(--color-text-interactive-disabled-k4q23b, #aab7b8)}.awsui_arrow_fvjdu_bq8ka_141:not(#\\9){color:var(--color-text-interactive-default-djvtmz, #545b64)}.awsui_arrow_fvjdu_bq8ka_141:not(#\\9):not(.awsui_button-disabled_fvjdu_bq8ka_136):hover{color:var(--color-text-interactive-hover-55cagk, #16191f)}.awsui_arrow_fvjdu_bq8ka_141.awsui_button-disabled_fvjdu_bq8ka_136:not(#\\9){color:var(--color-text-interactive-disabled-k4q23b, #aab7b8)}.awsui_page-number_fvjdu_bq8ka_151:not(#\\9){color:var(--color-text-pagination-page-number-default-qvdjdy, #545b64)}.awsui_page-number_fvjdu_bq8ka_151:not(#\\9):not(.awsui_button-disabled_fvjdu_bq8ka_136):hover{color:var(--color-text-interactive-hover-55cagk, #16191f)}.awsui_page-number_fvjdu_bq8ka_151.awsui_button-current_fvjdu_bq8ka_157:not(#\\9){font-weight:var(--font-wayfinding-link-active-weight-3yc06k, 700);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto);color:var(--color-text-interactive-active-j3cxbp, #16191f)}.awsui_page-number_fvjdu_bq8ka_151.awsui_button-current_fvjdu_bq8ka_157.awsui_button-disabled_fvjdu_bq8ka_136:not(#\\9){color:var(--color-text-pagination-page-number-active-disabled-wuw3oo, #545b64)}.awsui_page-number_fvjdu_bq8ka_151.awsui_button-disabled_fvjdu_bq8ka_136:not(#\\9){color:var(--color-text-interactive-disabled-k4q23b, #aab7b8)}.awsui_dots_fvjdu_bq8ka_114:not(#\\9){color:var(--color-text-interactive-default-djvtmz, #545b64)}.awsui_page-item_fvjdu_bq8ka_174:not(#\\9),.awsui_dots_fvjdu_bq8ka_114:not(#\\9){margin:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-xxs-a6783b, 4px);text-align:center;box-sizing:border-box;padding:0}.awsui_page-item_fvjdu_bq8ka_174:not(#\\9):first-child,.awsui_dots_fvjdu_bq8ka_114:not(#\\9):first-child{margin-left:0}.awsui_page-item_fvjdu_bq8ka_174:not(#\\9):last-child,.awsui_dots_fvjdu_bq8ka_114:not(#\\9):last-child{margin-right:0}.awsui_root-disabled_fvjdu_bq8ka_190>.awsui_dots_fvjdu_bq8ka_114:not(#\\9){color:var(--color-text-interactive-disabled-k4q23b, #aab7b8)}.awsui_root_1i0s3_fdn1f_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto}.awsui_header_1i0s3_fdn1f_106:not(#\\9):not(.awsui_full-page_1i0s3_fdn1f_106){margin-bottom:var(--space-scaled-m-9q5ipc, 16px)}.awsui_content_1i0s3_fdn1f_110:not(#\\9){}.awsui_error_1i0s3_fdn1f_114:not(#\\9){}.awsui_footer_1i0s3_fdn1f_118:not(#\\9){margin-top:var(--space-scaled-l-x5pubp, 20px)}.awsui_actions-section_1i0s3_fdn1f_122:not(#\\9){display:flex;flex-direction:row-reverse;justify-content:space-between;flex-wrap:wrap;margin-left:calc(-1 * var(--space-scaled-m-9q5ipc, 16px));margin-bottom:calc(-1 * var(--space-scaled-m-9q5ipc, 16px))}.awsui_secondary-actions_1i0s3_fdn1f_131:not(#\\9){min-width:1px;margin-left:var(--space-scaled-m-9q5ipc, 16px);margin-bottom:var(--space-scaled-m-9q5ipc, 16px)}.awsui_actions_1i0s3_fdn1f_122:not(#\\9){min-width:1px;margin-left:var(--space-scaled-m-9q5ipc, 16px);margin-bottom:var(--space-scaled-m-9q5ipc, 16px)}.awsui_root_18wu0_1nckn_93:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto}.awsui_box_18wu0_1nckn_207.awsui_p-variant_18wu0_1nckn_207.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_b-variant_18wu0_1nckn_207.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_strong-variant_18wu0_1nckn_207.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_code-variant_18wu0_1nckn_207.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_pre-variant_18wu0_1nckn_207.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_samp-variant_18wu0_1nckn_207.awsui_color-default_18wu0_1nckn_207:not(#\\9){color:var(--color-text-body-default-rlujvh, #16191f)}.awsui_box_18wu0_1nckn_207.awsui_h1-variant_18wu0_1nckn_211.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h2-variant_18wu0_1nckn_211.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h3-variant_18wu0_1nckn_211.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h4-variant_18wu0_1nckn_211.awsui_color-default_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h5-variant_18wu0_1nckn_211.awsui_color-default_18wu0_1nckn_207:not(#\\9){color:var(--color-text-heading-default-p5akhh, #16191f)}.awsui_box_18wu0_1nckn_207.awsui_small-variant_18wu0_1nckn_215.awsui_color-default_18wu0_1nckn_207:not(#\\9){color:var(--color-text-small-bbucjz, #687078)}.awsui_box_18wu0_1nckn_207.awsui_a-variant_18wu0_1nckn_219.awsui_color-default_18wu0_1nckn_207:not(#\\9){color:var(--color-text-link-default-lwrgyu, #0073bb)}.awsui_box_18wu0_1nckn_207.awsui_small-variant_18wu0_1nckn_215.awsui_font-size-default_18wu0_1nckn_223:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_code-variant_18wu0_1nckn_207.awsui_font-size-default_18wu0_1nckn_223:not(#\\9){font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal)}.awsui_box_18wu0_1nckn_207.awsui_p-variant_18wu0_1nckn_207.awsui_font-size-default_18wu0_1nckn_223:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_b-variant_18wu0_1nckn_207.awsui_font-size-default_18wu0_1nckn_223:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_strong-variant_18wu0_1nckn_207.awsui_font-size-default_18wu0_1nckn_223:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_pre-variant_18wu0_1nckn_207.awsui_font-size-default_18wu0_1nckn_223:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_samp-variant_18wu0_1nckn_207.awsui_font-size-default_18wu0_1nckn_223:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_a-variant_18wu0_1nckn_219.awsui_font-size-default_18wu0_1nckn_223:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px)}.awsui_box_18wu0_1nckn_207.awsui_h5-variant_18wu0_1nckn_211.awsui_font-size-default_18wu0_1nckn_223:not(#\\9){font-size:var(--font-size-heading-xs-4u3wan, 16px);line-height:var(--line-height-heading-xs-au4jub, 20px)}.awsui_box_18wu0_1nckn_207.awsui_h4-variant_18wu0_1nckn_211.awsui_font-size-default_18wu0_1nckn_223:not(#\\9){font-size:var(--font-size-heading-s-hwcx2q, 16px);line-height:var(--line-height-heading-s-m093oq, 20px);letter-spacing:var(--letter-spacing-heading-s-2369b0, normal)}.awsui_box_18wu0_1nckn_207.awsui_h3-variant_18wu0_1nckn_211.awsui_font-size-default_18wu0_1nckn_223:not(#\\9){font-size:var(--font-size-heading-m-ulervk, 18px);line-height:var(--line-height-heading-m-88a3m6, 22px);letter-spacing:var(--letter-spacing-heading-m-9g78ia, normal)}.awsui_box_18wu0_1nckn_207.awsui_h2-variant_18wu0_1nckn_211.awsui_font-size-default_18wu0_1nckn_223:not(#\\9){font-size:var(--font-size-heading-l-u89ro8, 18px);line-height:var(--line-height-heading-l-z752l3, 22px);letter-spacing:var(--letter-spacing-heading-l-v8uzhr, normal)}.awsui_box_18wu0_1nckn_207.awsui_h1-variant_18wu0_1nckn_211.awsui_font-size-default_18wu0_1nckn_223:not(#\\9){font-size:var(--font-size-heading-xl-z8h967, 28px);line-height:var(--line-height-heading-xl-44izce, 36px);letter-spacing:var(--letter-spacing-heading-xl-y4tqgw, normal)}.awsui_box_18wu0_1nckn_207.awsui_p-variant_18wu0_1nckn_207.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_code-variant_18wu0_1nckn_207.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_pre-variant_18wu0_1nckn_207.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_samp-variant_18wu0_1nckn_207.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_small-variant_18wu0_1nckn_215.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_a-variant_18wu0_1nckn_219.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9){font-weight:400}.awsui_box_18wu0_1nckn_207.awsui_strong-variant_18wu0_1nckn_207.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_b-variant_18wu0_1nckn_207.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9){font-weight:700}.awsui_box_18wu0_1nckn_207.awsui_h5-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9){font-weight:var(--font-weight-heading-xs-yzr1e0, 400)}.awsui_box_18wu0_1nckn_207.awsui_h4-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9){font-weight:var(--font-weight-heading-s-hg02sg, 700)}.awsui_box_18wu0_1nckn_207.awsui_h3-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9){font-weight:var(--font-weight-heading-m-ra39kx, 400)}.awsui_box_18wu0_1nckn_207.awsui_h2-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9){font-weight:var(--font-weight-heading-l-jlzyui, 700)}.awsui_box_18wu0_1nckn_207.awsui_h1-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9){font-weight:var(--font-weight-heading-xl-2jbc8j, 400)}.awsui_box_18wu0_1nckn_207.awsui_h1-variant_18wu0_1nckn_211:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h2-variant_18wu0_1nckn_211:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h3-variant_18wu0_1nckn_211:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h4-variant_18wu0_1nckn_211:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h5-variant_18wu0_1nckn_211:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-variant_18wu0_1nckn_207:not(#\\9){margin:0;text-decoration:none;padding:var(--space-xxs-a6783b, 4px) 0}.awsui_box_18wu0_1nckn_207.awsui_small-variant_18wu0_1nckn_215:not(#\\9){display:inline-block}.awsui_box_18wu0_1nckn_207.awsui_code-variant_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_pre-variant_18wu0_1nckn_207:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_samp-variant_18wu0_1nckn_207:not(#\\9){font-family:var(--font-family-monospace-sera44, Monaco, Menlo, Consolas, \"Courier Prime\", Courier, \"Courier New\", monospace);background:transparent}.awsui_box_18wu0_1nckn_207.awsui_key-label-variant_18wu0_1nckn_303:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);font-weight:var(--font-display-label-weight-w2bkol, 400);color:var(--color-text-label-ezn36c, #545b64);margin-bottom:var(--space-key-value-gap-xmtv08, 2px)}.awsui_box_18wu0_1nckn_207.awsui_value-large-variant_18wu0_1nckn_310:not(#\\9){font-size:var(--font-size-display-l-ij3zok, 44px);line-height:var(--line-height-display-l-aqze16, 56px);letter-spacing:var(--letter-spacing-display-l-frfij1, normal);font-weight:var(--font-box-value-large-weight-wtv0yd, 300);color:inherit}.awsui_box_18wu0_1nckn_207.awsui_h1-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h2-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h3-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h4-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_h5-variant_18wu0_1nckn_211.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_value-large-variant_18wu0_1nckn_310.awsui_font-weight-default_18wu0_1nckn_263:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_font-weight-heavy_18wu0_1nckn_317:not(#\\9){-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_box_18wu0_1nckn_207.awsui_color-inverted_18wu0_1nckn_322:not(#\\9){color:var(--color-text-notification-default-d9f7z3, #fafafa)}.awsui_box_18wu0_1nckn_207.awsui_color-text-label_18wu0_1nckn_325:not(#\\9){color:var(--color-text-label-ezn36c, #545b64)}.awsui_box_18wu0_1nckn_207.awsui_color-text-body-secondary_18wu0_1nckn_328:not(#\\9){color:var(--color-text-body-secondary-bgqgd0, #545b64)}.awsui_box_18wu0_1nckn_207.awsui_color-text-status-error_18wu0_1nckn_331:not(#\\9){color:var(--color-text-status-error-a5tqz1, #d13212)}.awsui_box_18wu0_1nckn_207.awsui_color-text-status-success_18wu0_1nckn_334:not(#\\9){color:var(--color-text-status-success-a6oxaq, #1d8102)}.awsui_box_18wu0_1nckn_207.awsui_color-text-status-info_18wu0_1nckn_337:not(#\\9){color:var(--color-text-status-info-lfbxn4, #0073bb)}.awsui_box_18wu0_1nckn_207.awsui_color-text-status-inactive_18wu0_1nckn_340:not(#\\9){color:var(--color-text-status-inactive-8fmnw5, #687078)}.awsui_box_18wu0_1nckn_207.awsui_color-text-status-warning_18wu0_1nckn_343:not(#\\9){color:var(--color-text-status-warning-g3wln0, #906806)}.awsui_box_18wu0_1nckn_207.awsui_color-inherit_18wu0_1nckn_346:not(#\\9){color:inherit}.awsui_box_18wu0_1nckn_207.awsui_font-size-body-s_18wu0_1nckn_349:not(#\\9){font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal)}.awsui_box_18wu0_1nckn_207.awsui_font-size-body-m_18wu0_1nckn_354:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px)}.awsui_box_18wu0_1nckn_207.awsui_font-size-heading-xs_18wu0_1nckn_358:not(#\\9){font-size:var(--font-size-heading-xs-4u3wan, 16px);line-height:var(--line-height-heading-xs-au4jub, 20px)}.awsui_box_18wu0_1nckn_207.awsui_font-size-heading-s_18wu0_1nckn_362:not(#\\9){font-size:var(--font-size-heading-s-hwcx2q, 16px);line-height:var(--line-height-heading-s-m093oq, 20px);letter-spacing:var(--letter-spacing-heading-s-2369b0, normal)}.awsui_box_18wu0_1nckn_207.awsui_font-size-heading-m_18wu0_1nckn_367:not(#\\9){font-size:var(--font-size-heading-m-ulervk, 18px);line-height:var(--line-height-heading-m-88a3m6, 22px);letter-spacing:var(--letter-spacing-heading-m-9g78ia, normal)}.awsui_box_18wu0_1nckn_207.awsui_font-size-heading-l_18wu0_1nckn_372:not(#\\9){font-size:var(--font-size-heading-l-u89ro8, 18px);line-height:var(--line-height-heading-l-z752l3, 22px);letter-spacing:var(--letter-spacing-heading-l-v8uzhr, normal)}.awsui_box_18wu0_1nckn_207.awsui_font-size-heading-xl_18wu0_1nckn_377:not(#\\9){font-size:var(--font-size-heading-xl-z8h967, 28px);line-height:var(--line-height-heading-xl-44izce, 36px);letter-spacing:var(--letter-spacing-heading-xl-y4tqgw, normal)}.awsui_box_18wu0_1nckn_207.awsui_font-size-display-l_18wu0_1nckn_382:not(#\\9){font-size:var(--font-size-display-l-ij3zok, 44px);line-height:var(--line-height-display-l-aqze16, 56px);letter-spacing:var(--letter-spacing-display-l-frfij1, normal)}.awsui_box_18wu0_1nckn_207.awsui_font-weight-light_18wu0_1nckn_387:not(#\\9){font-weight:300}.awsui_box_18wu0_1nckn_207.awsui_font-weight-normal_18wu0_1nckn_390:not(#\\9){font-weight:400}.awsui_box_18wu0_1nckn_207.awsui_font-weight-bold_18wu0_1nckn_393:not(#\\9){font-weight:700}.awsui_box_18wu0_1nckn_207.awsui_font-weight-heavy_18wu0_1nckn_317:not(#\\9){font-weight:var(--font-weight-heavy-8h6pk1, 700)}.awsui_t-left_18wu0_1nckn_400:not(#\\9){text-align:left}.awsui_t-right_18wu0_1nckn_404:not(#\\9){text-align:right}.awsui_t-center_18wu0_1nckn_408:not(#\\9){text-align:center}.awsui_box_18wu0_1nckn_207.awsui_p-n_18wu0_1nckn_509:not(#\\9){padding:var(--space-scaled-none-98elrj, 0px) var(--space-none-63da7t, 0px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-n_18wu0_1nckn_513:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-n_18wu0_1nckn_514:not(#\\9){padding-top:var(--space-scaled-none-98elrj, 0px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-n_18wu0_1nckn_518:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-n_18wu0_1nckn_519:not(#\\9){padding-right:var(--space-none-63da7t, 0px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-n_18wu0_1nckn_523:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-n_18wu0_1nckn_514:not(#\\9){padding-bottom:var(--space-scaled-none-98elrj, 0px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-n_18wu0_1nckn_528:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-n_18wu0_1nckn_519:not(#\\9){padding-left:var(--space-none-63da7t, 0px)}.awsui_box_18wu0_1nckn_207.awsui_p-xxxs_18wu0_1nckn_533:not(#\\9){padding:var(--space-scaled-xxxs-emyscj, 2px) var(--space-xxxs-rq3iss, 2px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-xxxs_18wu0_1nckn_537:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xxxs_18wu0_1nckn_538:not(#\\9){padding-top:var(--space-scaled-xxxs-emyscj, 2px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-xxxs_18wu0_1nckn_542:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xxxs_18wu0_1nckn_543:not(#\\9){padding-right:var(--space-xxxs-rq3iss, 2px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-xxxs_18wu0_1nckn_547:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xxxs_18wu0_1nckn_538:not(#\\9){padding-bottom:var(--space-scaled-xxxs-emyscj, 2px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-xxxs_18wu0_1nckn_552:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xxxs_18wu0_1nckn_543:not(#\\9){padding-left:var(--space-xxxs-rq3iss, 2px)}.awsui_box_18wu0_1nckn_207.awsui_p-xxs_18wu0_1nckn_557:not(#\\9){padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-xxs-a6783b, 4px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-xxs_18wu0_1nckn_561:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xxs_18wu0_1nckn_562:not(#\\9){padding-top:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-xxs_18wu0_1nckn_566:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xxs_18wu0_1nckn_567:not(#\\9){padding-right:var(--space-xxs-a6783b, 4px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-xxs_18wu0_1nckn_571:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xxs_18wu0_1nckn_562:not(#\\9){padding-bottom:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-xxs_18wu0_1nckn_576:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xxs_18wu0_1nckn_567:not(#\\9){padding-left:var(--space-xxs-a6783b, 4px)}.awsui_box_18wu0_1nckn_207.awsui_p-xs_18wu0_1nckn_581:not(#\\9){padding:var(--space-scaled-xs-u0e7ft, 8px) var(--space-xs-inub5w, 8px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-xs_18wu0_1nckn_585:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xs_18wu0_1nckn_586:not(#\\9){padding-top:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-xs_18wu0_1nckn_590:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xs_18wu0_1nckn_591:not(#\\9){padding-right:var(--space-xs-inub5w, 8px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-xs_18wu0_1nckn_595:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xs_18wu0_1nckn_586:not(#\\9){padding-bottom:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-xs_18wu0_1nckn_600:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xs_18wu0_1nckn_591:not(#\\9){padding-left:var(--space-xs-inub5w, 8px)}.awsui_box_18wu0_1nckn_207.awsui_p-s_18wu0_1nckn_605:not(#\\9){padding:var(--space-scaled-s-gczsk7, 12px) var(--space-s-rd607g, 12px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-s_18wu0_1nckn_609:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-s_18wu0_1nckn_610:not(#\\9){padding-top:var(--space-scaled-s-gczsk7, 12px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-s_18wu0_1nckn_614:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-s_18wu0_1nckn_615:not(#\\9){padding-right:var(--space-s-rd607g, 12px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-s_18wu0_1nckn_619:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-s_18wu0_1nckn_610:not(#\\9){padding-bottom:var(--space-scaled-s-gczsk7, 12px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-s_18wu0_1nckn_624:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-s_18wu0_1nckn_615:not(#\\9){padding-left:var(--space-s-rd607g, 12px)}.awsui_box_18wu0_1nckn_207.awsui_p-m_18wu0_1nckn_629:not(#\\9){padding:var(--space-scaled-m-9q5ipc, 16px) var(--space-m-sptmsg, 16px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-m_18wu0_1nckn_633:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-m_18wu0_1nckn_634:not(#\\9){padding-top:var(--space-scaled-m-9q5ipc, 16px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-m_18wu0_1nckn_638:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-m_18wu0_1nckn_639:not(#\\9){padding-right:var(--space-m-sptmsg, 16px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-m_18wu0_1nckn_643:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-m_18wu0_1nckn_634:not(#\\9){padding-bottom:var(--space-scaled-m-9q5ipc, 16px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-m_18wu0_1nckn_648:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-m_18wu0_1nckn_639:not(#\\9){padding-left:var(--space-m-sptmsg, 16px)}.awsui_box_18wu0_1nckn_207.awsui_p-l_18wu0_1nckn_528:not(#\\9){padding:var(--space-scaled-l-x5pubp, 20px) var(--space-l-ds615y, 20px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-l_18wu0_1nckn_657:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-l_18wu0_1nckn_658:not(#\\9){padding-top:var(--space-scaled-l-x5pubp, 20px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-l_18wu0_1nckn_662:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-l_18wu0_1nckn_663:not(#\\9){padding-right:var(--space-l-ds615y, 20px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-l_18wu0_1nckn_667:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-l_18wu0_1nckn_658:not(#\\9){padding-bottom:var(--space-scaled-l-x5pubp, 20px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-l_18wu0_1nckn_672:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-l_18wu0_1nckn_663:not(#\\9){padding-left:var(--space-l-ds615y, 20px)}.awsui_box_18wu0_1nckn_207.awsui_p-xl_18wu0_1nckn_677:not(#\\9){padding:var(--space-scaled-xl-ozgbvg, 24px) var(--space-xl-7jca1b, 24px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-xl_18wu0_1nckn_681:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xl_18wu0_1nckn_682:not(#\\9){padding-top:var(--space-scaled-xl-ozgbvg, 24px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-xl_18wu0_1nckn_686:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xl_18wu0_1nckn_687:not(#\\9){padding-right:var(--space-xl-7jca1b, 24px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-xl_18wu0_1nckn_691:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xl_18wu0_1nckn_682:not(#\\9){padding-bottom:var(--space-scaled-xl-ozgbvg, 24px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-xl_18wu0_1nckn_696:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xl_18wu0_1nckn_687:not(#\\9){padding-left:var(--space-xl-7jca1b, 24px)}.awsui_box_18wu0_1nckn_207.awsui_p-xxl_18wu0_1nckn_701:not(#\\9){padding:var(--space-scaled-xxl-v4jc9u, 32px) var(--space-xxl-eiq7g3, 32px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-xxl_18wu0_1nckn_705:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xxl_18wu0_1nckn_706:not(#\\9){padding-top:var(--space-scaled-xxl-v4jc9u, 32px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-xxl_18wu0_1nckn_710:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xxl_18wu0_1nckn_711:not(#\\9){padding-right:var(--space-xxl-eiq7g3, 32px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-xxl_18wu0_1nckn_715:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xxl_18wu0_1nckn_706:not(#\\9){padding-bottom:var(--space-scaled-xxl-v4jc9u, 32px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-xxl_18wu0_1nckn_720:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xxl_18wu0_1nckn_711:not(#\\9){padding-left:var(--space-xxl-eiq7g3, 32px)}.awsui_box_18wu0_1nckn_207.awsui_p-xxxl_18wu0_1nckn_725:not(#\\9){padding:var(--space-scaled-xxxl-kyg1bf, 40px) var(--space-xxxl-rhml9p, 40px)}.awsui_box_18wu0_1nckn_207.awsui_p-top-xxxl_18wu0_1nckn_729:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xxxl_18wu0_1nckn_730:not(#\\9){padding-top:var(--space-scaled-xxxl-kyg1bf, 40px)}.awsui_box_18wu0_1nckn_207.awsui_p-right-xxxl_18wu0_1nckn_734:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xxxl_18wu0_1nckn_735:not(#\\9){padding-right:var(--space-xxxl-rhml9p, 40px)}.awsui_box_18wu0_1nckn_207.awsui_p-bottom-xxxl_18wu0_1nckn_739:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-vertical-xxxl_18wu0_1nckn_730:not(#\\9){padding-bottom:var(--space-scaled-xxxl-kyg1bf, 40px)}.awsui_box_18wu0_1nckn_207.awsui_p-left-xxxl_18wu0_1nckn_744:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_p-horizontal-xxxl_18wu0_1nckn_735:not(#\\9){padding-left:var(--space-xxxl-rhml9p, 40px)}.awsui_box_18wu0_1nckn_207.awsui_m-n_18wu0_1nckn_749:not(#\\9){margin:var(--space-scaled-none-98elrj, 0px) var(--space-none-63da7t, 0px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-n_18wu0_1nckn_753:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-n_18wu0_1nckn_754:not(#\\9){margin-top:var(--space-scaled-none-98elrj, 0px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-n_18wu0_1nckn_758:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-n_18wu0_1nckn_759:not(#\\9){margin-right:var(--space-none-63da7t, 0px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-n_18wu0_1nckn_763:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-n_18wu0_1nckn_754:not(#\\9){margin-bottom:var(--space-scaled-none-98elrj, 0px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-n_18wu0_1nckn_768:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-n_18wu0_1nckn_759:not(#\\9){margin-left:var(--space-none-63da7t, 0px)}.awsui_box_18wu0_1nckn_207.awsui_m-xxxs_18wu0_1nckn_773:not(#\\9){margin:var(--space-scaled-xxxs-emyscj, 2px) var(--space-xxxs-rq3iss, 2px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-xxxs_18wu0_1nckn_777:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xxxs_18wu0_1nckn_778:not(#\\9){margin-top:var(--space-scaled-xxxs-emyscj, 2px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-xxxs_18wu0_1nckn_782:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xxxs_18wu0_1nckn_783:not(#\\9){margin-right:var(--space-xxxs-rq3iss, 2px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-xxxs_18wu0_1nckn_787:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xxxs_18wu0_1nckn_778:not(#\\9){margin-bottom:var(--space-scaled-xxxs-emyscj, 2px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-xxxs_18wu0_1nckn_792:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xxxs_18wu0_1nckn_783:not(#\\9){margin-left:var(--space-xxxs-rq3iss, 2px)}.awsui_box_18wu0_1nckn_207.awsui_m-xxs_18wu0_1nckn_797:not(#\\9){margin:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-xxs-a6783b, 4px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-xxs_18wu0_1nckn_801:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xxs_18wu0_1nckn_802:not(#\\9){margin-top:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-xxs_18wu0_1nckn_806:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xxs_18wu0_1nckn_807:not(#\\9){margin-right:var(--space-xxs-a6783b, 4px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-xxs_18wu0_1nckn_811:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xxs_18wu0_1nckn_802:not(#\\9){margin-bottom:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-xxs_18wu0_1nckn_816:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xxs_18wu0_1nckn_807:not(#\\9){margin-left:var(--space-xxs-a6783b, 4px)}.awsui_box_18wu0_1nckn_207.awsui_m-xs_18wu0_1nckn_821:not(#\\9){margin:var(--space-scaled-xs-u0e7ft, 8px) var(--space-xs-inub5w, 8px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-xs_18wu0_1nckn_825:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xs_18wu0_1nckn_826:not(#\\9){margin-top:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-xs_18wu0_1nckn_830:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xs_18wu0_1nckn_831:not(#\\9){margin-right:var(--space-xs-inub5w, 8px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-xs_18wu0_1nckn_835:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xs_18wu0_1nckn_826:not(#\\9){margin-bottom:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-xs_18wu0_1nckn_840:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xs_18wu0_1nckn_831:not(#\\9){margin-left:var(--space-xs-inub5w, 8px)}.awsui_box_18wu0_1nckn_207.awsui_m-s_18wu0_1nckn_845:not(#\\9){margin:var(--space-scaled-s-gczsk7, 12px) var(--space-s-rd607g, 12px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-s_18wu0_1nckn_849:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-s_18wu0_1nckn_850:not(#\\9){margin-top:var(--space-scaled-s-gczsk7, 12px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-s_18wu0_1nckn_854:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-s_18wu0_1nckn_855:not(#\\9){margin-right:var(--space-s-rd607g, 12px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-s_18wu0_1nckn_859:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-s_18wu0_1nckn_850:not(#\\9){margin-bottom:var(--space-scaled-s-gczsk7, 12px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-s_18wu0_1nckn_864:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-s_18wu0_1nckn_855:not(#\\9){margin-left:var(--space-s-rd607g, 12px)}.awsui_box_18wu0_1nckn_207.awsui_m-m_18wu0_1nckn_869:not(#\\9){margin:var(--space-scaled-m-9q5ipc, 16px) var(--space-m-sptmsg, 16px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-m_18wu0_1nckn_873:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-m_18wu0_1nckn_874:not(#\\9){margin-top:var(--space-scaled-m-9q5ipc, 16px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-m_18wu0_1nckn_878:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-m_18wu0_1nckn_879:not(#\\9){margin-right:var(--space-m-sptmsg, 16px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-m_18wu0_1nckn_883:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-m_18wu0_1nckn_874:not(#\\9){margin-bottom:var(--space-scaled-m-9q5ipc, 16px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-m_18wu0_1nckn_888:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-m_18wu0_1nckn_879:not(#\\9){margin-left:var(--space-m-sptmsg, 16px)}.awsui_box_18wu0_1nckn_207.awsui_m-l_18wu0_1nckn_768:not(#\\9){margin:var(--space-scaled-l-x5pubp, 20px) var(--space-l-ds615y, 20px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-l_18wu0_1nckn_897:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-l_18wu0_1nckn_898:not(#\\9){margin-top:var(--space-scaled-l-x5pubp, 20px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-l_18wu0_1nckn_902:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-l_18wu0_1nckn_903:not(#\\9){margin-right:var(--space-l-ds615y, 20px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-l_18wu0_1nckn_907:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-l_18wu0_1nckn_898:not(#\\9){margin-bottom:var(--space-scaled-l-x5pubp, 20px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-l_18wu0_1nckn_912:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-l_18wu0_1nckn_903:not(#\\9){margin-left:var(--space-l-ds615y, 20px)}.awsui_box_18wu0_1nckn_207.awsui_m-xl_18wu0_1nckn_917:not(#\\9){margin:var(--space-scaled-xl-ozgbvg, 24px) var(--space-xl-7jca1b, 24px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-xl_18wu0_1nckn_921:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xl_18wu0_1nckn_922:not(#\\9){margin-top:var(--space-scaled-xl-ozgbvg, 24px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-xl_18wu0_1nckn_926:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xl_18wu0_1nckn_927:not(#\\9){margin-right:var(--space-xl-7jca1b, 24px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-xl_18wu0_1nckn_931:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xl_18wu0_1nckn_922:not(#\\9){margin-bottom:var(--space-scaled-xl-ozgbvg, 24px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-xl_18wu0_1nckn_936:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xl_18wu0_1nckn_927:not(#\\9){margin-left:var(--space-xl-7jca1b, 24px)}.awsui_box_18wu0_1nckn_207.awsui_m-xxl_18wu0_1nckn_941:not(#\\9){margin:var(--space-scaled-xxl-v4jc9u, 32px) var(--space-xxl-eiq7g3, 32px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-xxl_18wu0_1nckn_945:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xxl_18wu0_1nckn_946:not(#\\9){margin-top:var(--space-scaled-xxl-v4jc9u, 32px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-xxl_18wu0_1nckn_950:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xxl_18wu0_1nckn_951:not(#\\9){margin-right:var(--space-xxl-eiq7g3, 32px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-xxl_18wu0_1nckn_955:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xxl_18wu0_1nckn_946:not(#\\9){margin-bottom:var(--space-scaled-xxl-v4jc9u, 32px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-xxl_18wu0_1nckn_960:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xxl_18wu0_1nckn_951:not(#\\9){margin-left:var(--space-xxl-eiq7g3, 32px)}.awsui_box_18wu0_1nckn_207.awsui_m-xxxl_18wu0_1nckn_965:not(#\\9){margin:var(--space-scaled-xxxl-kyg1bf, 40px) var(--space-xxxl-rhml9p, 40px)}.awsui_box_18wu0_1nckn_207.awsui_m-top-xxxl_18wu0_1nckn_969:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xxxl_18wu0_1nckn_970:not(#\\9){margin-top:var(--space-scaled-xxxl-kyg1bf, 40px)}.awsui_box_18wu0_1nckn_207.awsui_m-right-xxxl_18wu0_1nckn_974:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xxxl_18wu0_1nckn_975:not(#\\9){margin-right:var(--space-xxxl-rhml9p, 40px)}.awsui_box_18wu0_1nckn_207.awsui_m-bottom-xxxl_18wu0_1nckn_979:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-vertical-xxxl_18wu0_1nckn_970:not(#\\9){margin-bottom:var(--space-scaled-xxxl-kyg1bf, 40px)}.awsui_box_18wu0_1nckn_207.awsui_m-left-xxxl_18wu0_1nckn_984:not(#\\9),.awsui_box_18wu0_1nckn_207.awsui_m-horizontal-xxxl_18wu0_1nckn_975:not(#\\9){margin-left:var(--space-xxxl-rhml9p, 40px)}.awsui_box_18wu0_1nckn_207.awsui_d-block_18wu0_1nckn_989:not(#\\9){display:block}.awsui_box_18wu0_1nckn_207.awsui_d-inline_18wu0_1nckn_992:not(#\\9){display:inline}.awsui_box_18wu0_1nckn_207.awsui_d-inline-block_18wu0_1nckn_995:not(#\\9){display:inline-block}.awsui_box_18wu0_1nckn_207.awsui_d-none_18wu0_1nckn_998:not(#\\9){display:none}.awsui_f-left_18wu0_1nckn_1002:not(#\\9){float:left}.awsui_f-right_18wu0_1nckn_1006:not(#\\9){float:right}.awsui_text-content_6absk_7xl79_94:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;}.awsui_text-content_6absk_7xl79_94 h1:not(#\\9),.awsui_text-content_6absk_7xl79_94 h2:not(#\\9),.awsui_text-content_6absk_7xl79_94 h3:not(#\\9),.awsui_text-content_6absk_7xl79_94 h4:not(#\\9),.awsui_text-content_6absk_7xl79_94 h5:not(#\\9),.awsui_text-content_6absk_7xl79_94 p:not(#\\9){font-family:inherit;font-weight:normal;text-decoration:none;margin:0;padding:var(--space-xxs-a6783b, 4px) 0}.awsui_text-content_6absk_7xl79_94 h1:not(#\\9),.awsui_text-content_6absk_7xl79_94 h2:not(#\\9),.awsui_text-content_6absk_7xl79_94 h3:not(#\\9),.awsui_text-content_6absk_7xl79_94 h4:not(#\\9),.awsui_text-content_6absk_7xl79_94 h5:not(#\\9){color:var(--color-text-heading-default-p5akhh, #16191f)}.awsui_text-content_6absk_7xl79_94 h1:not(#\\9){font-size:var(--font-size-heading-xl-z8h967, 28px);line-height:var(--line-height-heading-xl-44izce, 36px);letter-spacing:var(--letter-spacing-heading-xl-y4tqgw, normal);font-weight:var(--font-weight-heading-xl-2jbc8j, 400);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_text-content_6absk_7xl79_94 h2:not(#\\9){font-size:var(--font-size-heading-l-u89ro8, 18px);line-height:var(--line-height-heading-l-z752l3, 22px);letter-spacing:var(--letter-spacing-heading-l-v8uzhr, normal);font-weight:var(--font-weight-heading-l-jlzyui, 700);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_text-content_6absk_7xl79_94 h3:not(#\\9){font-size:var(--font-size-heading-m-ulervk, 18px);line-height:var(--line-height-heading-m-88a3m6, 22px);letter-spacing:var(--letter-spacing-heading-m-9g78ia, normal);font-weight:var(--font-weight-heading-m-ra39kx, 400);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_text-content_6absk_7xl79_94 h4:not(#\\9){font-size:var(--font-size-heading-s-hwcx2q, 16px);line-height:var(--line-height-heading-s-m093oq, 20px);letter-spacing:var(--letter-spacing-heading-s-2369b0, normal);font-weight:var(--font-weight-heading-s-hg02sg, 700);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_text-content_6absk_7xl79_94 h5:not(#\\9){font-size:var(--font-size-heading-xs-4u3wan, 16px);line-height:var(--line-height-heading-xs-au4jub, 20px);font-weight:var(--font-weight-heading-xs-yzr1e0, 400);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_text-content_6absk_7xl79_94 b:not(#\\9),.awsui_text-content_6absk_7xl79_94 strong:not(#\\9){font-weight:700}.awsui_text-content_6absk_7xl79_94 p:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:inherit}.awsui_text-content_6absk_7xl79_94 small:not(#\\9){display:inline-block;font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal);color:var(--color-text-small-bbucjz, #687078)}.awsui_text-content_6absk_7xl79_94 small a:not(#\\9){font-size:inherit;color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:inherit;letter-spacing:normal;text-decoration:underline;text-decoration-color:currentColor;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_text-content_6absk_7xl79_94 small a:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_text-content_6absk_7xl79_94 small a:not(#\\9),.awsui-mode-entering .awsui_text-content_6absk_7xl79_94 small a:not(#\\9){animation:none;transition:none}.awsui_text-content_6absk_7xl79_94 small a:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_text-content_6absk_7xl79_94 small a:not(#\\9):focus{outline:none}.awsui_text-content_6absk_7xl79_94 small a:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_text-content_6absk_7xl79_94 small a:not(#\\9):active,.awsui_text-content_6absk_7xl79_94 small a:not(#\\9):focus,.awsui_text-content_6absk_7xl79_94 small a:not(#\\9):hover{text-decoration:underline;text-decoration-color:currentColor}.awsui_text-content_6absk_7xl79_94 code:not(#\\9),.awsui_text-content_6absk_7xl79_94 pre:not(#\\9),.awsui_text-content_6absk_7xl79_94 samp:not(#\\9){font-family:var(--font-family-monospace-sera44, Monaco, Menlo, Consolas, \"Courier Prime\", Courier, \"Courier New\", monospace);background:transparent}.awsui_text-content_6absk_7xl79_94 code:not(#\\9){font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal)}.awsui_text-content_6absk_7xl79_94 a:not(#\\9){color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:inherit;letter-spacing:normal;text-decoration:underline;text-decoration-color:currentColor;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_text-content_6absk_7xl79_94 a:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_text-content_6absk_7xl79_94 a:not(#\\9),.awsui-mode-entering .awsui_text-content_6absk_7xl79_94 a:not(#\\9){animation:none;transition:none}.awsui_text-content_6absk_7xl79_94 a:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_text-content_6absk_7xl79_94 a:not(#\\9):focus{outline:none}.awsui_text-content_6absk_7xl79_94 a:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_text-content_6absk_7xl79_94 a:not(#\\9):active,.awsui_text-content_6absk_7xl79_94 a:not(#\\9):focus,.awsui_text-content_6absk_7xl79_94 a:not(#\\9):hover{text-decoration:underline;text-decoration-color:currentColor}.awsui_text-content_6absk_7xl79_94 a:not(#\\9):focus{outline:thin dotted;outline:var(--border-link-focus-ring-outline-x5z0d3, 5px auto Highlight);outline-offset:2px;outline-color:var(--color-border-item-focused-t884ih, #0073bb);border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 var(--border-link-focus-ring-shadow-spread-1nkh7a, 0px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_text-content_6absk_7xl79_94 ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol:not(#\\9){padding-left:var(--space-l-ds615y, 20px);margin:var(--space-scaled-xs-u0e7ft, 8px) 0;list-style-position:outside}.awsui_text-content_6absk_7xl79_94 ul+ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ul+ol:not(#\\9),.awsui_text-content_6absk_7xl79_94 ul>li+ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ul>li+li:not(#\\9),.awsui_text-content_6absk_7xl79_94 ul>li+ol:not(#\\9),.awsui_text-content_6absk_7xl79_94 ul>li>ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ul>li>ol:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol+ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol+ol:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol>li+ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol>li+li:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol>li+ol:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol>li>ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol>li>ol:not(#\\9){padding-top:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_text-content_6absk_7xl79_94 ul>li>ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ul>li>ol:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol>li>ul:not(#\\9),.awsui_text-content_6absk_7xl79_94 ol>li>ol:not(#\\9){margin:0}.awsui_root_2rhyz_1dbxw_93:not(#\\9){}.awsui_input_2rhyz_1dbxw_97:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-field-horizontal-wfaq0d, 8px);color:var(--color-text-body-default-rlujvh, #16191f);width:100%;cursor:text;box-sizing:border-box;background-color:var(--color-background-input-default-66bx4w, #ffffff);border-radius:var(--border-radius-input-jnmu21, 2px);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-default-sm4mjn, #687078);font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);height:var(--size-vertical-input-18ku63, 32px)}.awsui_input_2rhyz_1dbxw_97.awsui_input-readonly_2rhyz_1dbxw_120:not(#\\9){background-color:var(--color-background-input-default-66bx4w, #ffffff);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-disabled-73z8co, #eaeded)}.awsui_input_2rhyz_1dbxw_97:not(#\\9)::-webkit-input-placeholder{color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic;-webkit-user-select:none;user-select:none}.awsui_input_2rhyz_1dbxw_97:not(#\\9)::-ms-input-placeholder{color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic}.awsui_input_2rhyz_1dbxw_97:not(#\\9)::-moz-placeholder{color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic;opacity:1}.awsui_input_2rhyz_1dbxw_97:not(#\\9):-ms-input-placeholder{color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic}.awsui_input_2rhyz_1dbxw_97:not(#\\9):-moz-placeholder{color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic;opacity:1}.awsui_input_2rhyz_1dbxw_97:not(#\\9):focus{outline:2px dotted transparent;border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-item-focused-t884ih, #0073bb);border-radius:var(--border-radius-input-jnmu21, 2px);box-shadow:0 0 0 var(--border-control-focus-ring-shadow-spread-oufv0y, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_input_2rhyz_1dbxw_97:not(#\\9):disabled{background-color:var(--color-background-input-disabled-0azib6, #eaeded);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-disabled-73z8co, #eaeded);color:var(--color-text-input-disabled-26hyji, #879596);cursor:auto;cursor:default}.awsui_input_2rhyz_1dbxw_97:not(#\\9):disabled::-webkit-input-placeholder{color:var(--color-text-input-placeholder-disabled-1lvfii, #687078);-webkit-user-select:none;user-select:none}.awsui_input_2rhyz_1dbxw_97:not(#\\9):disabled::-ms-input-placeholder{color:var(--color-text-input-placeholder-disabled-1lvfii, #687078)}.awsui_input_2rhyz_1dbxw_97:not(#\\9):disabled::-moz-placeholder{color:var(--color-text-input-placeholder-disabled-1lvfii, #687078);opacity:1}.awsui_input_2rhyz_1dbxw_97:not(#\\9):disabled:-ms-input-placeholder{color:var(--color-text-input-placeholder-disabled-1lvfii, #687078)}.awsui_input_2rhyz_1dbxw_97:not(#\\9):disabled:-moz-placeholder{color:var(--color-text-input-placeholder-disabled-1lvfii, #687078);opacity:1}.awsui_input_2rhyz_1dbxw_97:not(#\\9):invalid{box-shadow:none}.awsui_input_2rhyz_1dbxw_97.awsui_input-invalid_2rhyz_1dbxw_181:not(#\\9){color:var(--color-text-status-error-a5tqz1, #d13212);border-color:var(--color-text-status-error-a5tqz1, #d13212);padding-left:calc(\n  var(--space-field-horizontal-wfaq0d, 8px) - (var(--border-invalid-width-5eyrjt, 4px) - var(--border-field-width-2vpp5j, 1px))\n);border-left-width:var(--border-invalid-width-5eyrjt, 4px)}.awsui_input_2rhyz_1dbxw_97.awsui_input-invalid_2rhyz_1dbxw_181:not(#\\9):focus{box-shadow:0 0 0 var(--border-control-invalid-focus-ring-shadow-spread-mejja6, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_input_2rhyz_1dbxw_97.awsui_input-invalid_2rhyz_1dbxw_181.awsui_input-has-icon-left_2rhyz_1dbxw_192:not(#\\9){padding-left:calc(\n        var(--space-field-icon-offset-uc4al5, 32px) - (var(--border-invalid-width-5eyrjt, 4px) - var(--border-field-width-2vpp5j, 1px))\n      )}.awsui_input_2rhyz_1dbxw_97.awsui_input-type-search_2rhyz_1dbxw_197:not(#\\9){box-sizing:border-box;-webkit-appearance:none;}.awsui_input_2rhyz_1dbxw_97.awsui_input-type-search_2rhyz_1dbxw_197:not(#\\9)::-ms-clear{display:none}.awsui_input_2rhyz_1dbxw_97.awsui_input-type-search_2rhyz_1dbxw_197:not(#\\9)::-webkit-search-decoration{-webkit-appearance:none;}.awsui_input_2rhyz_1dbxw_97.awsui_input-type-search_2rhyz_1dbxw_197:not(#\\9)::-webkit-search-cancel-button{display:none}.awsui_input_2rhyz_1dbxw_97.awsui_input-has-icon-left_2rhyz_1dbxw_192:not(#\\9){padding-left:var(--space-field-icon-offset-uc4al5, 32px)}.awsui_input_2rhyz_1dbxw_97.awsui_input-has-icon-right_2rhyz_1dbxw_213:not(#\\9){padding-right:var(--space-field-icon-offset-uc4al5, 32px)}.awsui_input_2rhyz_1dbxw_97.awsui_input-has-no-border-radius_2rhyz_1dbxw_216:not(#\\9){border-radius:var(--border-radius-dropdown-ewtx9q, 0px)}.awsui_input-container_2rhyz_1dbxw_220:not(#\\9){display:flex;position:relative}.awsui_input-icon-left_2rhyz_1dbxw_225:not(#\\9){position:absolute;pointer-events:none;left:var(--space-field-horizontal-wfaq0d, 8px);top:calc(50% - var(--line-height-body-m-4ax85e, 22px) / 2)}.awsui_input-icon-right_2rhyz_1dbxw_232:not(#\\9){position:absolute;top:calc(50% - var(--line-height-body-m-4ax85e, 22px) / 2);right:calc(var(--space-field-horizontal-wfaq0d, 8px) - var(--space-xxs-a6783b, 4px))}.awsui_input-button-right_2rhyz_1dbxw_238:not(#\\9){}.awsui_root_1wzqe_ie2zy_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto}.awsui_search-field_1wzqe_ie2zy_106:not(#\\9){display:flex;align-items:flex-end;max-width:calc(688px - 2 * var(--space-l-ds615y, 20px))}.awsui_input-wrapper_1wzqe_ie2zy_112:not(#\\9){flex-grow:1}.awsui_add-token_1wzqe_ie2zy_116:not(#\\9){border-left:1px solid var(--color-border-divider-default-1mmknt, #eaeded);box-sizing:border-box;margin-left:var(--space-m-sptmsg, 16px);padding-left:var(--space-m-sptmsg, 16px)}.awsui_tokens_1wzqe_ie2zy_123:not(#\\9){margin:var(--space-xs-inub5w, 8px) 0}.awsui_token-operator_1wzqe_ie2zy_127:not(#\\9){font-weight:bold}.awsui_property-editor_1wzqe_ie2zy_131:not(#\\9),.awsui_token-editor_1wzqe_ie2zy_132:not(#\\9){-webkit-user-select:text;user-select:text;margin:var(--space-xxs-a6783b, 4px)}.awsui_property-editor-form_1wzqe_ie2zy_136:not(#\\9),.awsui_token-editor-form_1wzqe_ie2zy_137:not(#\\9){margin-bottom:var(--space-scaled-l-x5pubp, 20px)}.awsui_property-editor-field-property_1wzqe_ie2zy_140:not(#\\9),.awsui_token-editor-field-property_1wzqe_ie2zy_141:not(#\\9){}.awsui_property-editor-field-operator_1wzqe_ie2zy_144:not(#\\9),.awsui_token-editor-field-operator_1wzqe_ie2zy_145:not(#\\9){margin-top:var(--space-scaled-l-x5pubp, 20px)}.awsui_property-editor-field-value_1wzqe_ie2zy_148:not(#\\9),.awsui_token-editor-field-value_1wzqe_ie2zy_149:not(#\\9){margin-top:var(--space-scaled-l-x5pubp, 20px)}.awsui_property-editor-cancel_1wzqe_ie2zy_152:not(#\\9),.awsui_token-editor-cancel_1wzqe_ie2zy_153:not(#\\9){margin-right:var(--space-xs-inub5w, 8px)}.awsui_property-editor-submit_1wzqe_ie2zy_156:not(#\\9),.awsui_token-editor-submit_1wzqe_ie2zy_157:not(#\\9){}.awsui_property-editor-actions_1wzqe_ie2zy_160:not(#\\9),.awsui_token-editor-actions_1wzqe_ie2zy_161:not(#\\9){display:flex;justify-content:flex-end;padding-top:var(--space-s-rd607g, 12px);border-top:1px solid var(--color-border-dropdown-item-default-062h8i, #eaeded)}.awsui_token-editor-actions_1wzqe_ie2zy_161:not(#\\9){padding-right:calc(var(--space-m-sptmsg, 16px) + var(--space-xxs-a6783b, 4px));margin-left:calc(-1 * var(--space-m-sptmsg, 16px) + -1 * var(--space-xxs-a6783b, 4px));margin-right:calc(-1 * var(--space-m-sptmsg, 16px) + -1 * var(--space-xxs-a6783b, 4px))}.awsui_property-editor_1wzqe_ie2zy_131:not(#\\9){padding:var(--space-m-sptmsg, 16px);overflow-y:auto}.awsui_custom-content-wrapper_1wzqe_ie2zy_179:not(#\\9){display:contents}.awsui_custom-control_1wzqe_ie2zy_183:not(#\\9){margin-right:var(--space-s-rd607g, 12px)}.awsui_input_1wzqe_ie2zy_112:not(#\\9){flex:1}.awsui_results_1wzqe_ie2zy_191:not(#\\9){padding:calc(var(--space-scaled-xxs-ugy2pw, 4px) + var(--border-field-width-2vpp5j, 1px));padding-left:0;padding-right:0}.awsui_token-trigger_1wzqe_ie2zy_197:not(#\\9){min-width:0;word-break:break-word}.awsui_remove-all_1wzqe_ie2zy_202:not(#\\9),.awsui_token-label_1wzqe_ie2zy_203:not(#\\9),.awsui_join-operation_1wzqe_ie2zy_204:not(#\\9),.awsui_custom-filter-actions_1wzqe_ie2zy_205:not(#\\9){}.awsui_alert_mx3cw_2izks_93:not(#\\9){animation:awsui_awsui-motion-fade-in_mx3cw_2izks_1 var(--motion-duration-show-paced-1a355f, 180ms) var(--motion-easing-show-paced-uosx37, ease-out)}@keyframes awsui_awsui-motion-fade-in_mx3cw_2izks_1{from{opacity:0.2}to{opacity:1}}@media (prefers-reduced-motion: reduce){.awsui_alert_mx3cw_2izks_93:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_alert_mx3cw_2izks_93:not(#\\9),.awsui-mode-entering .awsui_alert_mx3cw_2izks_93:not(#\\9){animation:none;transition:none}.awsui_root_mx3cw_2izks_119:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;word-wrap:break-word;max-width:100%;overflow:hidden;display:block}.awsui_root_mx3cw_2izks_119.awsui_hidden_mx3cw_2izks_135:not(#\\9){display:none}.awsui_alert_mx3cw_2izks_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;position:relative;display:grid;grid-template-columns:1fr;border-radius:var(--border-radius-alert-d41lte, 2px);border:var(--border-field-width-2vpp5j, 1px) solid;padding:var(--space-alert-vertical-8r7n6v, 12px) var(--space-alert-horizontal-oyqx05, 20px);background-color:var(--color-background-container-content-pb0lp5, #ffffff)}.awsui_alert_mx3cw_2izks_93.awsui_with-dismiss_mx3cw_2izks_158:not(#\\9),.awsui_alert_mx3cw_2izks_93.awsui_with-action_mx3cw_2izks_158:not(#\\9){grid-template-columns:1fr auto}.awsui_alert_mx3cw_2izks_93.awsui_with-action_mx3cw_2izks_158.awsui_with-dismiss_mx3cw_2izks_158:not(#\\9){grid-template-columns:1fr auto auto}.awsui_alert_mx3cw_2izks_93.awsui_breakpoint-default_mx3cw_2izks_164.awsui_with-action_mx3cw_2izks_158:not(#\\9){grid-template-columns:1fr auto}.awsui_alert_mx3cw_2izks_93.awsui_breakpoint-default_mx3cw_2izks_164:not(#\\9):not(.awsui_with-dismiss_mx3cw_2izks_158){grid-template-columns:1fr}.awsui_header_mx3cw_2izks_171:not(#\\9){font-weight:700}.awsui_action_mx3cw_2izks_175:not(#\\9){white-space:nowrap;margin-left:var(--space-alert-action-left-3z1yjb, 20px)}.awsui_action-slot_mx3cw_2izks_180:not(#\\9),.awsui_action-button_mx3cw_2izks_181:not(#\\9){}.awsui_alert-focus-wrapper_mx3cw_2izks_185:not(#\\9){display:grid;grid-template-columns:min-content auto}.awsui_alert-focus-wrapper_mx3cw_2izks_185:not(#\\9):focus{outline:none}body[data-awsui-focus-visible=true] .awsui_alert-focus-wrapper_mx3cw_2izks_185:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_alert-focus-wrapper_mx3cw_2izks_185:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_alert-focus-wrapper_mx3cw_2izks_185:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_text_mx3cw_2izks_211:not(#\\9){min-width:0;padding:var(--border-field-width-2vpp5j, 1px) 0;margin:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-xxs-a6783b, 4px)}.awsui_text_mx3cw_2izks_211.awsui_icon_mx3cw_2izks_216:not(#\\9){margin-left:0}.awsui_text_mx3cw_2izks_211.awsui_message_mx3cw_2izks_219:not(#\\9){margin-right:var(--space-alert-message-right-svow5j, 0px)}.awsui_breakpoint-default_mx3cw_2izks_164>.awsui_action_mx3cw_2izks_175:not(#\\9){grid-row:2;margin-bottom:var(--space-xxs-a6783b, 4px)}.awsui_breakpoint-default_mx3cw_2izks_164.awsui_icon-size-medium_mx3cw_2izks_227>.awsui_action_mx3cw_2izks_175:not(#\\9){margin-left:calc(var(--size-icon-medium-d9rdun, 16px) + var(--space-xs-inub5w, 8px))}.awsui_breakpoint-default_mx3cw_2izks_164.awsui_icon-size-big_mx3cw_2izks_230>.awsui_action_mx3cw_2izks_175:not(#\\9){margin-left:calc(var(--size-icon-big-rl4tdi, 32px) + var(--space-xs-inub5w, 8px))}.awsui_breakpoint-default_mx3cw_2izks_164.awsui_icon-size-normal_mx3cw_2izks_233>.awsui_action_mx3cw_2izks_175:not(#\\9){margin-left:calc(var(--size-icon-normal-as5jb3, 16px) + var(--space-xs-inub5w, 8px))}.awsui_content_mx3cw_2izks_237:not(#\\9){}.awsui_dismiss_mx3cw_2izks_241:not(#\\9){margin-right:calc(-1 * var(--space-xxs-a6783b, 4px));margin-left:var(--space-s-rd607g, 12px)}.awsui_dismiss-button_mx3cw_2izks_246:not(#\\9){}.awsui_type-error_mx3cw_2izks_250:not(#\\9){border-color:var(--color-border-status-error-pwclyd, #d13212);background-color:var(--color-background-status-error-zzlt4q, #fdf3f1)}.awsui_type-error_mx3cw_2izks_250>.awsui_alert-focus-wrapper_mx3cw_2izks_185>.awsui_icon_mx3cw_2izks_216:not(#\\9){color:var(--color-text-status-error-a5tqz1, #d13212)}.awsui_type-warning_mx3cw_2izks_258:not(#\\9){border-color:var(--color-border-status-warning-p1qx7d, #906806);background-color:var(--color-background-status-warning-iv51lc, #fffce9)}.awsui_type-warning_mx3cw_2izks_258>.awsui_alert-focus-wrapper_mx3cw_2izks_185>.awsui_icon_mx3cw_2izks_216:not(#\\9){color:var(--color-text-status-warning-g3wln0, #906806)}.awsui_type-success_mx3cw_2izks_266:not(#\\9){border-color:var(--color-border-status-success-xorqjf, #1d8102);background-color:var(--color-background-status-success-97x61g, #f2f8f0)}.awsui_type-success_mx3cw_2izks_266>.awsui_alert-focus-wrapper_mx3cw_2izks_185>.awsui_icon_mx3cw_2izks_216:not(#\\9){color:var(--color-text-status-success-a6oxaq, #1d8102)}.awsui_type-info_mx3cw_2izks_274:not(#\\9){border-color:var(--color-border-status-info-uwhmay, #0073bb);background-color:var(--color-background-status-info-nlr7o9, #f1faff)}.awsui_type-info_mx3cw_2izks_274>.awsui_alert-focus-wrapper_mx3cw_2izks_185>.awsui_icon_mx3cw_2izks_216:not(#\\9){color:var(--color-text-status-info-lfbxn4, #0073bb)}.awsui_root_1sdq3_1o0yk_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:flex;align-items:center;max-width:calc(688px - 2 * var(--space-l-ds615y, 20px))}.awsui_input_1sdq3_1o0yk_109:not(#\\9){flex:1}.awsui_results_1sdq3_1o0yk_113:not(#\\9){color:var(--color-text-form-label-ug2d1t, #16191f);display:inline-block;box-sizing:border-box;white-space:nowrap;padding-left:var(--space-s-rd607g, 12px)}:root{--color-transparent-wsdzc0:transparent;--color-charts-red-300-v8pqah:#ea7158;--color-charts-red-400-0ycrl8:#dc5032;--color-charts-red-500-jo79ux:#d13313;--color-charts-red-600-2ymghb:#ba2e0f;--color-charts-red-700-c3rnal:#a82a0c;--color-charts-red-800-lgald1:#972709;--color-charts-red-900-y3eemg:#892407;--color-charts-red-1000-yyqzp1:#7d2105;--color-charts-red-1100-0wecq8:#721e03;--color-charts-red-1200-hmkpnx:#671c00;--color-charts-orange-300-jcenox:#e07941;--color-charts-orange-400-nev5rq:#cc5f21;--color-charts-orange-500-48gu0y:#bc4d01;--color-charts-orange-600-yv1nii:#a84401;--color-charts-orange-700-rxl6xd:#983c02;--color-charts-orange-800-ce4xic:#8a3603;--color-charts-orange-900-0tbeoy:#7e3103;--color-charts-orange-1000-ex4m37:#732c02;--color-charts-orange-1100-4ch1cj:#692801;--color-charts-orange-1200-qa2la0:#602400;--color-charts-yellow-300-qcjduj:#b2911c;--color-charts-yellow-400-baglyr:#9c7b0b;--color-charts-yellow-500-9t08lz:#8a6b05;--color-charts-yellow-600-mh3u9i:#7b5f04;--color-charts-yellow-700-le1hth:#6f5504;--color-charts-yellow-800-4aztx5:#654d03;--color-charts-yellow-900-12my7v:#5d4503;--color-charts-yellow-1000-5wr65g:#553f03;--color-charts-yellow-1100-oprwqp:#4d3901;--color-charts-yellow-1200-5z19hy:#483300;--color-charts-green-300-885xbr:#67a353;--color-charts-green-400-9jzy7f:#41902c;--color-charts-green-500-9ejswg:#1f8104;--color-charts-green-600-j06vr3:#1a7302;--color-charts-green-700-dxtver:#176702;--color-charts-green-800-c9mg6a:#145d02;--color-charts-green-900-hu961o:#125502;--color-charts-green-1000-rgvlm5:#104d01;--color-charts-green-1100-g032j3:#0f4601;--color-charts-green-1200-fffr8z:#0d4000;--color-charts-teal-300-pdwqwl:#2ea597;--color-charts-teal-400-87xyxa:#1c8e81;--color-charts-teal-500-4ih4dj:#0d7d70;--color-charts-teal-600-nsdkdk:#096f64;--color-charts-teal-700-89s4th:#06645a;--color-charts-teal-800-pj7d71:#045b52;--color-charts-teal-900-0u0vgk:#03524a;--color-charts-teal-1000-qt39rn:#014b44;--color-charts-teal-1100-jjpoec:#01443e;--color-charts-teal-1200-fz7ds6:#003e38;--color-charts-blue-1-300-mvslh1:#529ccb;--color-charts-blue-1-400-vfffdq:#3184c2;--color-charts-blue-1-500-5qq8ll:#0273bb;--color-charts-blue-1-600-1jjw30:#0166ab;--color-charts-blue-1-700-7e7h6g:#015b9d;--color-charts-blue-1-800-6ew8r4:#015292;--color-charts-blue-1-900-ejk9n2:#014a87;--color-charts-blue-1-1000-47wlti:#01437d;--color-charts-blue-1-1100-iwkugu:#003c75;--color-charts-blue-1-1200-s6xraf:#00366d;--color-charts-blue-2-300-iy07jw:#688ae8;--color-charts-blue-2-400-hy6jpz:#5978e3;--color-charts-blue-2-500-hmxwyv:#4066df;--color-charts-blue-2-600-o0wevj:#3759ce;--color-charts-blue-2-700-cmchf6:#314fbf;--color-charts-blue-2-800-bpld4x:#2c46b1;--color-charts-blue-2-900-3xlmt8:#273ea5;--color-charts-blue-2-1000-f5iopd:#23379b;--color-charts-blue-2-1100-c3tt87:#1f3191;--color-charts-blue-2-1200-4qi1dr:#1b2b88;--color-charts-purple-300-960s4o:#a783e1;--color-charts-purple-400-1xajzn:#9469d6;--color-charts-purple-500-tdtd0d:#8456ce;--color-charts-purple-600-4796yr:#7749bf;--color-charts-purple-700-xj79jn:#6b40b2;--color-charts-purple-800-yvd90z:#6237a7;--color-charts-purple-900-h50lkc:#59309d;--color-charts-purple-1000-iuih7d:#512994;--color-charts-purple-1100-asapzo:#4a238b;--color-charts-purple-1200-2w5zbu:#431d84;--color-charts-pink-300-g5b3l1:#da7596;--color-charts-pink-400-z1x9dh:#ce567c;--color-charts-pink-500-rhmtrw:#c33d69;--color-charts-pink-600-dr25sz:#b1325c;--color-charts-pink-700-q6nx7n:#a32952;--color-charts-pink-800-2taysn:#962249;--color-charts-pink-900-w0oqu6:#8b1b42;--color-charts-pink-1000-i1lck3:#81143b;--color-charts-pink-1100-8of6pv:#780d35;--color-charts-pink-1200-s5fsms:#6f062f;--color-charts-status-critical-26qhog:#7d2105;--color-charts-status-high-am1khe:#ba2e0f;--color-charts-status-medium-mlf4vh:#cc5f21;--color-charts-status-low-xd6yyp:#b2911c;--color-charts-status-positive-si8nxj:#67a353;--color-charts-status-info-978qj9:#3184c2;--color-charts-status-neutral-lupxsj:#879596;--color-charts-threshold-negative-4peb4g:#d13212;--color-charts-threshold-positive-mi3mwk:#1d8102;--color-charts-threshold-info-lldfpx:#0073bb;--color-charts-threshold-neutral-mt9ytx:#687078;--color-charts-line-grid-8ig2w3:#d5dbdb;--color-charts-line-tick-o06ewi:#d5dbdb;--color-charts-line-axis-ah4nkd:#d5dbdb;--color-charts-palette-categorical-1-8b4eoo:#688ae8;--color-charts-palette-categorical-2-7k6x03:#c33d69;--color-charts-palette-categorical-3-t6ajxf:#2ea597;--color-charts-palette-categorical-4-aths19:#8456ce;--color-charts-palette-categorical-5-p0nlbd:#e07941;--color-charts-palette-categorical-6-c7u7pv:#3759ce;--color-charts-palette-categorical-7-z8w12m:#962249;--color-charts-palette-categorical-8-d3flyi:#096f64;--color-charts-palette-categorical-9-1l76ah:#6237a7;--color-charts-palette-categorical-10-ecf5xi:#a84401;--color-charts-palette-categorical-11-1mok8v:#273ea5;--color-charts-palette-categorical-12-dtnap1:#780d35;--color-charts-palette-categorical-13-6uykyg:#03524a;--color-charts-palette-categorical-14-8ew2g1:#4a238b;--color-charts-palette-categorical-15-basy54:#7e3103;--color-charts-palette-categorical-16-ss1voi:#1b2b88;--color-charts-palette-categorical-17-5bmruj:#ce567c;--color-charts-palette-categorical-18-j5i5wm:#003e38;--color-charts-palette-categorical-19-4moj4n:#9469d6;--color-charts-palette-categorical-20-tqrwxf:#602400;--color-charts-palette-categorical-21-apb1sz:#4066df;--color-charts-palette-categorical-22-ljfqak:#a32952;--color-charts-palette-categorical-23-p85q7b:#0d7d70;--color-charts-palette-categorical-24-vn32ho:#6b40b2;--color-charts-palette-categorical-25-v2ek2u:#bc4d01;--color-charts-palette-categorical-26-e2ms6a:#2c46b1;--color-charts-palette-categorical-27-mtylhv:#81143b;--color-charts-palette-categorical-28-0hiaor:#045b52;--color-charts-palette-categorical-29-ktyv4f:#512994;--color-charts-palette-categorical-30-db1785:#8a3603;--color-charts-palette-categorical-31-l7yf28:#1f3191;--color-charts-palette-categorical-32-lzfh57:#da7596;--color-charts-palette-categorical-33-kaanp8:#01443e;--color-charts-palette-categorical-34-m2v68i:#a783e1;--color-charts-palette-categorical-35-rayjg3:#692801;--color-charts-palette-categorical-36-uiqmsn:#5978e3;--color-charts-palette-categorical-37-ygqr3y:#b1325c;--color-charts-palette-categorical-38-d67rfy:#1c8e81;--color-charts-palette-categorical-39-ceut5m:#7749bf;--color-charts-palette-categorical-40-fzhfxp:#cc5f21;--color-charts-palette-categorical-41-6i1l8r:#314fbf;--color-charts-palette-categorical-42-9ud2pl:#8b1b42;--color-charts-palette-categorical-43-wxf6os:#06645a;--color-charts-palette-categorical-44-ovegri:#59309d;--color-charts-palette-categorical-45-g4rnlt:#983c02;--color-charts-palette-categorical-46-m8gaer:#23379b;--color-charts-palette-categorical-47-g2w96d:#6f062f;--color-charts-palette-categorical-48-k8kiz7:#014b44;--color-charts-palette-categorical-49-sw40c5:#431d84;--color-charts-palette-categorical-50-w2luek:#732c02;--color-background-badge-icon-4mo0wt:#d13212;--color-background-button-link-active-34rko8:#eaeded;--color-background-button-link-hover-jv3f2k:#fafafa;--color-background-button-normal-active-czecy2:#eaeded;--color-background-button-normal-default-r433m6:#ffffff;--color-background-button-normal-disabled-ejdxb1:#ffffff;--color-background-button-normal-hover-afg7z9:#fafafa;--color-background-button-primary-active-qjb1np:#12293b;--color-background-button-primary-default-zz5irg:#0073bb;--color-background-button-primary-disabled-2w63xd:#ffffff;--color-background-button-primary-hover-c6t12k:#0a4a74;--color-background-calendar-today-x6vg6n:#f2f3f3;--color-background-cell-shaded-gppcg5:#f2f3f3;--color-background-code-editor-gutter-active-line-default-52tgix:#687078;--color-background-code-editor-gutter-active-line-error-kbld3k:#d13212;--color-background-code-editor-gutter-default-ria8z9:#f2f3f3;--color-background-code-editor-loading-fmqmbg:#f2f3f3;--color-background-code-editor-pane-item-hover-uw1s87:#eaeded;--color-background-code-editor-status-bar-8oe90a:#f2f3f3;--color-background-container-content-pb0lp5:#ffffff;--color-background-container-header-pmlnr3:#fafafa;--color-background-control-checked-q75knx:#0073bb;--color-background-control-default-x4w3j0:#ffffff;--color-background-control-disabled-vkotqk:#d5dbdb;--color-background-dropdown-item-default-2p2g22:#ffffff;--color-background-dropdown-item-dimmed-ta7f22:transparent;--color-background-dropdown-item-filter-match-ugvt1w:#f1faff;--color-background-dropdown-item-hover-6qhcjz:#f2f3f3;--color-background-dropdown-item-selected-pz82cn:#f1faff;--color-background-home-header-r8d99o:#000000;--color-background-input-default-66bx4w:#ffffff;--color-background-input-disabled-0azib6:#eaeded;--color-background-item-selected-8e1q8b:#f1faff;--color-background-layout-main-okygtx:#f2f3f3;--color-background-layout-mobile-panel-1g9iiz:#ffffff;--color-background-layout-panel-content-qv5yhf:#ffffff;--color-background-layout-panel-hover-mcickn:#eaeded;--color-background-layout-toggle-active-1uhv1w:#2a2e33;--color-background-layout-toggle-default-gp69as:transparent;--color-background-layout-toggle-hover-wwbsq6:#545b64;--color-background-layout-toggle-selected-active-3nl5wx:#0073bb;--color-background-layout-toggle-selected-default-rx4hqe:#0073bb;--color-background-layout-toggle-selected-hover-9gel8c:#0a4a74;--color-background-modal-overlay-rsidw7:rgba(242, 243, 243, 0.9);--color-background-notification-blue-xlzco3:#0073bb;--color-background-notification-green-jo2m1l:#1d8102;--color-background-notification-grey-iechs6:#545b64;--color-background-notification-red-5io73r:#d13212;--color-background-notification-yellow-8mfjgu:#ffe457;--color-background-notification-stack-bar-985j8p:#2a2e33;--color-background-notification-stack-bar-active-n8furo:#2a2e33;--color-background-notification-stack-bar-hover-cao0p2:#545b64;--color-background-popover-ft56xl:#ffffff;--color-background-progress-bar-content-default-hbebrl:#0073bb;--color-background-progress-bar-content-in-flash-v3roh6:rgba(255, 255, 255, 0.7);--color-background-progress-bar-layout-default-n7v8t0:#eaeded;--color-background-progress-bar-layout-in-flash-7vdtbb:rgba(255, 255, 255, 0.25);--color-background-segment-active-d8q9iy:#0073bb;--color-background-segment-default-9ooxg1:#ffffff;--color-background-segment-disabled-log6bm:#ffffff;--color-background-segment-hover-tvysh8:#ffffff;--color-background-status-error-zzlt4q:#fdf3f1;--color-background-status-info-nlr7o9:#f1faff;--color-background-status-success-97x61g:#f2f8f0;--color-background-status-warning-iv51lc:#fffce9;--color-background-table-header-d4x481:#fafafa;--color-background-tiles-disabled-f3fyva:#eaeded;--color-background-toggle-checked-disabled-o63zu0:#99cbe4;--color-background-toggle-default-six3cw:#545b64;--color-border-button-normal-active-zrx2x0:#545b64;--color-border-button-normal-default-a1f0ud:#545b64;--color-border-button-normal-disabled-2z1mk8:#d5dbdb;--color-border-button-normal-hover-j7d6r6:#16191f;--color-border-button-primary-disabled-oe36ny:#d5dbdb;--color-border-calendar-grid-bl278b:#eaeded;--color-border-calendar-grid-selected-focus-ring-9q7e5h:#0073bb;--color-border-code-editor-ace-active-line-light-theme-1qhjfw:#d5dbdb;--color-border-code-editor-ace-active-line-dark-theme-52wu88:#687078;--color-border-code-editor-default-ovjs83:#d5dbdb;--color-border-code-editor-pane-item-hover-gk4v4i:#687078;--color-border-container-divider-4z4y7u:#eaeded;--color-border-container-top-ige66g:#eaeded;--color-border-control-checked-tl007y:#0073bb;--color-border-control-default-1igjc0:#687078;--color-border-control-disabled-n4rl6j:#d5dbdb;--color-border-divider-active-vdhfnx:#687078;--color-border-divider-default-1mmknt:#eaeded;--color-border-divider-panel-bottom-r9jdco:rgba(0, 28, 36, 0.15);--color-border-divider-panel-side-cmx3ak:transparent;--color-border-dropdown-container-5izm18:transparent;--color-border-dropdown-group-u3qa6a:#eaeded;--color-border-dropdown-item-default-062h8i:#eaeded;--color-border-dropdown-item-hover-5oku75:#879596;--color-border-dropdown-item-dimmed-hover-t0ewzv:#879596;--color-border-dropdown-item-top-l8o9uk:#eaeded;--color-border-editable-cell-hover-kuz17r:#879596;--color-border-input-default-sm4mjn:#687078;--color-border-input-disabled-73z8co:#eaeded;--color-border-item-focused-t884ih:#0073bb;--color-border-item-placeholder-kd6njx:transparent;--color-border-item-selected-bmiwgz:#0073bb;--color-border-layout-6apkl4:#d5dbdb;--color-border-notification-stack-bar-xsjsc8:#2a2e33;--color-border-popover-p8haek:#d5dbdb;--color-border-segment-active-w8feiw:#16191f;--color-border-segment-default-yqxei2:#687078;--color-border-segment-disabled-6zsba4:#d5dbdb;--color-border-segment-hover-0dlw9k:#16191f;--color-border-status-error-pwclyd:#d13212;--color-border-status-info-uwhmay:#0073bb;--color-border-status-success-xorqjf:#1d8102;--color-border-status-warning-p1qx7d:#906806;--color-border-divider-interactive-default-x2thzf:#687078;--color-border-tabs-divider-ol648v:#aab7b8;--color-border-tabs-shadow-k1zhjd:#eaeded;--color-border-tabs-underline-uahgcp:#16191f;--color-border-tiles-disabled-10gnrm:transparent;--color-border-tutorial-d7429l:#aab7b8;--color-foreground-control-default-5f7j2k:#ffffff;--color-foreground-control-disabled-4rcx89:#ffffff;--color-shadow-default-4md8jt:rgba(0, 28, 36, 0.5);--color-stroke-chart-line-7l0ljd:#879596;--color-text-accent-qe8oro:#0073bb;--color-text-body-default-rlujvh:#16191f;--color-text-body-secondary-bgqgd0:#545b64;--color-text-breadcrumb-current-nu3iko:#687078;--color-text-breadcrumb-icon-mdeyh2:#687078;--color-text-button-inline-icon-default-buw7w7:#545b64;--color-text-button-inline-icon-disabled-phk84s:#aab7b8;--color-text-button-inline-icon-hover-0pwsg2:#16191f;--color-text-button-normal-active-v6nfdh:#16191f;--color-text-button-normal-default-eqebde:#545b64;--color-text-button-normal-hover-bk2x1u:#16191f;--color-text-link-button-normal-default-x8uncu:#545b64;--color-text-link-button-normal-hover-hm6g27:#16191f;--color-text-link-button-normal-active-8cfe84:#16191f;--color-text-button-primary-active-0k4v93:#ffffff;--color-text-button-primary-default-6dta4b:#ffffff;--color-text-button-primary-hover-fk4ryc:#ffffff;--color-text-calendar-day-hover-06fz50:#16191f;--color-text-calendar-month-axtdn0:#545b64;--color-text-code-editor-gutter-active-line-qjn6d7:#ffffff;--color-text-code-editor-gutter-default-ml5ea9:#16191f;--color-text-code-editor-status-bar-disabled-izcnps:#879596;--color-text-code-editor-tab-button-error-el5pk3:#ffffff;--color-text-column-header-nhdjo5:#545b64;--color-text-column-sorting-icon-jjivph:#687078;--color-text-control-disabled-9r7x35:#aab7b8;--color-text-counter-001jjm:#687078;--color-text-disabled-tmkonv:#aab7b8;--color-text-dropdown-footer-349c2x:#687078;--color-text-dropdown-group-label-ihg7kk:#545b64;--color-text-dropdown-header-90kv5m:#16191f;--color-text-dropdown-item-default-wx27oj:#16191f;--color-text-dropdown-item-dimmed-94uait:#aab7b8;--color-text-dropdown-item-disabled-g9c04k:#aab7b8;--color-text-dropdown-item-filter-match-qs8rft:#0073bb;--color-text-dropdown-item-highlighted-t48eqn:#16191f;--color-text-dropdown-item-secondary-tbkgco:#687078;--color-text-dropdown-item-secondary-hover-91iztt:#687078;--color-text-empty-79ttcu:#687078;--color-text-expandable-section-default-yax29s:#545b64;--color-text-expandable-section-hover-th9u3f:#16191f;--color-text-expandable-section-navigation-icon-default-bniq5i:#879596;--color-text-form-default-agajwv:#16191f;--color-text-form-label-ug2d1t:#16191f;--color-text-form-secondary-wh2xkx:#687078;--color-text-group-label-3l0dih:#545b64;--color-text-heading-default-p5akhh:#16191f;--color-text-heading-secondary-jkk2pc:#545b64;--color-text-home-header-default-4ixpxi:#ffffff;--color-text-home-header-secondary-pimdc4:#d5dbdb;--color-text-icon-subtle-fzoo43:#687078;--color-text-input-disabled-26hyji:#879596;--color-text-input-placeholder-vi9sh8:#687078;--color-text-input-placeholder-disabled-1lvfii:#687078;--color-text-interactive-active-j3cxbp:#16191f;--color-text-interactive-default-djvtmz:#545b64;--color-text-interactive-disabled-k4q23b:#aab7b8;--color-text-interactive-hover-55cagk:#16191f;--color-text-interactive-inverted-default-mrgn6e:#d5dbdb;--color-text-interactive-inverted-hover-qliijo:#fafafa;--color-text-inverted-obwu99:#ffffff;--color-text-label-ezn36c:#545b64;--color-text-layout-toggle-gxpm7t:#545b64;--color-text-layout-toggle-active-9lot34:#ffffff;--color-text-layout-toggle-hover-pyp0b8:#0073bb;--color-text-layout-toggle-selected-gjgi5r:#ffffff;--color-text-link-default-lwrgyu:#0073bb;--color-text-link-hover-kmrtvm:#0a4a74;--color-text-link-inverted-hover-o3xt6o:#fafafa;--color-text-link-button-underline-vw7ht0:currentColor;--color-text-link-button-underline-hover-mp175e:currentColor;--color-text-notification-default-d9f7z3:#fafafa;--color-text-notification-stack-bar-3tz2wm:#ffffff;--color-text-notification-yellow-13otoi:#16191f;--color-text-pagination-page-number-active-disabled-wuw3oo:#545b64;--color-text-pagination-page-number-default-qvdjdy:#545b64;--color-text-segment-active-j9wjrk:#ffffff;--color-text-segment-default-uylum7:#545b64;--color-text-segment-hover-7mglzi:#0073bb;--color-text-small-bbucjz:#687078;--color-text-status-error-a5tqz1:#d13212;--color-text-status-inactive-8fmnw5:#687078;--color-text-status-info-lfbxn4:#0073bb;--color-text-status-success-a6oxaq:#1d8102;--color-text-status-warning-g3wln0:#906806;--color-text-top-navigation-title-bo5eb6:#16191f;--color-board-placeholder-active-r0ywv2:#d5dbdb;--color-board-placeholder-hover-hbn672:#99cbe4;--color-drag-placeholder-active-tcno63:#d5dbdb;--color-drag-placeholder-hover-8lb5mf:#99cbe4;--color-dropzone-background-active-2eefhd:#d5dbdb;--color-dropzone-background-hover-022hgn:#99cbe4;--color-dropzone-text-active-j474oi:#545b64;--color-dropzone-text-hover-rfgx5p:#12293b;--font-box-value-large-weight-wtv0yd:300;--font-button-letter-spacing-ahp09k:0.25px;--font-button-weight-jfejp1:700;--font-chart-detail-size-ns6b0n:14px;--font-display-label-weight-w2bkol:400;--font-expandable-heading-size-lj02xx:14px;--font-family-base-b4eaqi:\"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif;--font-family-monospace-sera44:Monaco, Menlo, Consolas, \"Courier Prime\", Courier, \"Courier New\", monospace;--font-header-h2-description-line-height-jj9arc:16px;--font-header-h2-description-size-8avpy1:12px;--font-link-button-letter-spacing-y4oyax:normal;--font-link-button-weight-gsuhhv:400;--font-panel-header-line-height-2yn36j:22px;--font-panel-header-size-r7jlin:18px;--font-size-body-m-jirw9u:14px;--font-size-body-s-ucr7d6:12px;--font-size-display-l-ij3zok:44px;--font-size-heading-xl-z8h967:28px;--font-size-heading-l-u89ro8:18px;--font-size-heading-m-ulervk:18px;--font-size-heading-s-hwcx2q:16px;--font-size-heading-xs-4u3wan:16px;--font-smoothing-moz-osx-58s982:auto;--font-smoothing-webkit-rg3jdt:auto;--font-tabs-disabled-weight-istqzx:400;--font-tabs-line-height-gsriti:22px;--font-tabs-size-647go8:14px;--font-wayfinding-link-active-weight-3yc06k:700;--font-weight-heading-xl-2jbc8j:400;--font-weight-heading-l-jlzyui:700;--font-weight-heading-m-ra39kx:400;--font-weight-heading-s-hg02sg:700;--font-weight-heading-xs-yzr1e0:400;--font-weight-heavy-8h6pk1:700;--letter-spacing-body-s-rksemx:normal;--letter-spacing-display-l-frfij1:normal;--letter-spacing-heading-xl-y4tqgw:normal;--letter-spacing-heading-l-v8uzhr:normal;--letter-spacing-heading-m-9g78ia:normal;--letter-spacing-heading-s-2369b0:normal;--line-height-body-m-4ax85e:22px;--line-height-body-s-lnbzsa:16px;--line-height-display-l-aqze16:56px;--line-height-heading-xl-44izce:36px;--line-height-heading-l-z752l3:22px;--line-height-heading-m-88a3m6:22px;--line-height-heading-s-m093oq:20px;--line-height-heading-xs-au4jub:20px;--border-active-width-sbv7bd:2px;--border-code-editor-status-divider-width-y1gbin:0px;--border-container-sticky-width-z1hq8m:1px;--border-container-top-width-qyo5h4:1px;--border-control-focus-ring-shadow-spread-oufv0y:1px;--border-control-invalid-focus-ring-shadow-spread-mejja6:1px;--border-divider-list-width-fsy9j8:1px;--border-divider-section-width-9dl636:1px;--border-dropdown-virtual-offset-width-fgy998:0px;--border-field-width-2vpp5j:1px;--border-invalid-width-5eyrjt:4px;--border-item-width-f0bcsu:1px;--border-line-chart-dash-array-ayiln3:3 5;--border-line-chart-line-join-wyxdg2:miter;--border-line-chart-width-2yp0z7:2px;--border-panel-header-width-g9tf1j:0px;--border-panel-top-width-56unkv:0px;--border-radius-alert-d41lte:2px;--border-radius-badge-8ouvml:16px;--border-radius-button-lbgihl:2px;--border-radius-calendar-day-focus-ring-jo6kg0:2px;--border-radius-code-editor-11706l:0px;--border-radius-container-y85mnh:0px;--border-radius-control-circular-focus-ring-71or2m:50%;--border-radius-control-default-focus-ring-fc6z2l:2px;--border-radius-dropdown-ewtx9q:0px;--border-radius-dropzone-2kbkl3:0px;--border-radius-flashbar-y72uhk:0px;--border-radius-item-fcd5og:0px;--border-radius-input-jnmu21:2px;--border-radius-popover-yu74or:2px;--border-radius-tabs-focus-ring-bf34o9:0px;--border-radius-tiles-6xhybc:2px;--border-radius-token-17x9l6:2px;--border-radius-tutorial-panel-item-cq5rw9:2px;--border-table-sticky-width-r7cax4:0px;--border-link-focus-ring-outline-x5z0d3:5px auto Highlight;--border-link-focus-ring-shadow-spread-1nkh7a:0px;--motion-duration-extra-slow-vamr5b:270ms;--motion-duration-fast-pml190:90ms;--motion-duration-moderate-bggcsm:135ms;--motion-duration-refresh-only-fast-n43vlu:115ms;--motion-duration-refresh-only-medium-af0v35:165ms;--motion-duration-refresh-only-slow-uid2xp:250ms;--motion-duration-rotate-180-i3ygzg:135ms;--motion-duration-rotate-90-1zdthq:135ms;--motion-duration-show-paced-1a355f:180ms;--motion-duration-show-quick-b6n9lb:135ms;--motion-duration-slow-mz6oyq:180ms;--motion-duration-transition-quick-dm1zcq:90ms;--motion-duration-transition-show-paced-qcfnau:180ms;--motion-duration-transition-show-quick-6dpisk:90ms;--motion-easing-ease-out-quart-x76njy:cubic-bezier(0.165, 0.84, 0.44, 1);--motion-easing-refresh-only-a-yzzzm8:cubic-bezier(0, 0, 0, 1);--motion-easing-refresh-only-b-wb1nw6:cubic-bezier(1, 0, 0.83, 1);--motion-easing-refresh-only-c-lo9udz:cubic-bezier(0.84, 0, 0.16, 1);--motion-easing-rotate-180-qx5hdf:cubic-bezier(0.165, 0.84, 0.44, 1);--motion-easing-rotate-90-acpifo:cubic-bezier(0.165, 0.84, 0.44, 1);--motion-easing-show-paced-uosx37:ease-out;--motion-easing-show-quick-vlcbqf:ease-out;--motion-easing-transition-quick-74hmmw:linear;--motion-easing-transition-show-paced-qe3gc9:ease-out;--motion-easing-responsive-uaq9t7:ease-out;--motion-easing-sticky-z6h8g6:ease-out;--motion-easing-expressive-j0sm5d:ease-out;--motion-duration-responsive-omyop9:135ms;--motion-duration-expressive-ocxint:180ms;--motion-duration-complex-rkf59l:270ms;--motion-keyframes-fade-in-2pgjq5:awsui-fade-in-35003c;--motion-keyframes-fade-out-dpw9hm:awsui-fade-out-35003c;--motion-keyframes-status-icon-error-xptwgn:awsui-none-35003c;--motion-keyframes-scale-popup-mdhdi4:awsui-none-35003c;--size-calendar-grid-width-tzf7xv:234px;--size-control-q9uk7g:14px;--size-icon-big-rl4tdi:32px;--size-icon-large-x6jwev:48px;--size-icon-medium-d9rdun:16px;--size-icon-normal-as5jb3:16px;--size-table-selection-horizontal-6yz3cl:54px;--size-vertical-input-18ku63:32px;--size-vertical-panel-icon-offset-47mfcv:15px;--space-alert-action-left-3z1yjb:20px;--space-alert-horizontal-oyqx05:20px;--space-alert-message-right-svow5j:0px;--space-alert-vertical-8r7n6v:12px;--space-button-focus-outline-gutter-2g5ia0:3px;--space-button-horizontal-kqt1zg:20px;--space-button-icon-focus-outline-gutter-vertical-atye4f:3px;--space-button-icon-only-horizontal-5iqrhy:16px;--space-button-inline-icon-focus-outline-gutter-747equ:3px;--space-button-modal-dismiss-vertical-17om1h:4px;--space-calendar-grid-focus-outline-gutter-qirwc5:0px;--space-calendar-grid-selected-focus-outline-gutter-11qiv4:2px;--space-card-horizontal-ai1anx:20px;--space-card-vertical-k85wjn:20px;--space-code-editor-status-focus-outline-gutter-txw0hu:3px;--space-container-content-top-smfayu:16px;--space-container-header-top-isuu42:12px;--space-container-header-bottom-7poudk:12px;--space-container-horizontal-6u2610:20px;--space-content-header-padding-bottom-lycl1l:16px;--space-dark-header-overlap-distance-g6mtzl:0px;--space-expandable-section-icon-offset-top-om84w8:8px;--space-field-horizontal-wfaq0d:8px;--space-field-icon-offset-uc4al5:32px;--space-filtering-token-dismiss-button-focus-outline-gutter-s0rper:0px;--space-filtering-token-operation-select-focus-outline-gutter-kjeacy:0px;--space-flashbar-action-left-cntuo6:16px;--space-flashbar-dismiss-right-qskwhk:4px;--space-flashbar-horizontal-eamqqp:12px;--space-grid-gutter-pfst95:20px;--space-key-value-gap-xmtv08:2px;--space-layout-content-bottom-6h9urw:20px;--space-layout-toggle-diameter-e6hjiu:40px;--space-layout-toggle-padding-mgz0u7:20px;--space-modal-content-bottom-jf04k3:20px;--space-modal-horizontal-plzmda:20px;--space-option-icon-big-top-6g0v28:2px;--space-panel-nav-left-6b3r3r:32px;--space-panel-side-left-f4trxi:32px;--space-panel-side-right-5u66nh:32px;--space-panel-split-top-w0vp0o:0px;--space-segmented-control-focus-outline-gutter-c956dm:3px;--space-tabs-content-top-qqb5pb:16px;--space-tabs-focus-outline-gutter-eftd59:0px;--space-table-content-bottom-4wzfhv:0px;--space-table-embedded-header-top-hxr64p:12px;--space-table-footer-horizontal-kvgjs1:20px;--space-table-header-focus-outline-gutter-7em6qj:0px;--space-table-header-horizontal-icvlet:20px;--space-table-header-tools-bottom-quuidt:4px;--space-table-header-tools-full-page-bottom-6xklb5:4px;--space-table-horizontal-4gmq7g:0px;--space-scaled-2x-xxs-mfdb10:4px;--space-scaled-2x-m-rh97jh:16px;--space-scaled-2x-l-ik0kek:20px;--space-scaled-2x-xl-g1o31j:24px;--space-scaled-2x-xxxl-4usad4:40px;--space-scaled-none-98elrj:0px;--space-scaled-xxxs-emyscj:2px;--space-scaled-xxs-ugy2pw:4px;--space-scaled-xs-u0e7ft:8px;--space-scaled-s-gczsk7:12px;--space-scaled-m-9q5ipc:16px;--space-scaled-l-x5pubp:20px;--space-scaled-xl-ozgbvg:24px;--space-scaled-xxl-v4jc9u:32px;--space-scaled-xxxl-kyg1bf:40px;--space-static-xxxs-lv75px:2px;--space-static-xxs-k9hlp3:4px;--space-static-xs-lb1zri:8px;--space-static-s-ftfmal:12px;--space-static-m-jb7duq:16px;--space-static-l-63ezv6:20px;--space-static-xl-cd6u05:24px;--space-static-xxl-q0k852:32px;--space-static-xxxl-m9wxgy:40px;--space-none-63da7t:0px;--space-xxxs-rq3iss:2px;--space-xxs-a6783b:4px;--space-xs-inub5w:8px;--space-s-rd607g:12px;--space-m-sptmsg:16px;--space-l-ds615y:20px;--space-xl-7jca1b:24px;--space-xxl-eiq7g3:32px;--space-xxxl-rhml9p:40px;--shadow-container-jwc36p:0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-container-stacked-q43z60:0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-container-active-1gt28y:0px 4px 8px rgba(0, 28, 36, 0.45);--shadow-dropdown-ixmllj:0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-dropup-uhb2zg:0 -1px 1px 0 rgba(0, 28, 36, 0.3), 1px -1px 1px 0 rgba(0, 28, 36, 0.15), -1px -1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-flash-collapsed-ngw0jk:0px 2px 2px rgba(0, 0, 0, 0.15);--shadow-flash-sticky-6z04cw:0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-modal-cavj11:0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-panel-qf38d8:0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-panel-toggle-joszwo:0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-popover-atdz1j:0px 1px 4px -2px rgba(0, 28, 36, 0.5);--shadow-split-bottom-igu10s:0 -2px 1px -1px rgba(0, 28, 36, 0.15), 0 -1px 1px -1px rgba(0, 28, 36, 0.3);--shadow-split-side-hj3xha:0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15);--shadow-sticky-fftr9t:0px 1px 4px -2px rgba(0, 28, 36, 0.5);--shadow-sticky-embedded-2khilm:0px 1px 4px -2px rgba(0, 28, 36, 0.5);--shadow-sticky-column-first-wkhcx1:4px 0 8px 0 rgba(0, 28, 36, 0.1);--shadow-sticky-column-last-4qhui6:-4px 0 8px 0 rgba(0, 28, 36, 0.1)}@media not print{.awsui-dark-mode:not(#\\9){--color-charts-red-300-v8pqah:#d63f38;--color-charts-red-400-0ycrl8:#ed5958;--color-charts-red-500-jo79ux:#fe6e73;--color-charts-red-600-2ymghb:#ff8a8a;--color-charts-red-700-c3rnal:#ffa09e;--color-charts-red-800-lgald1:#ffb3b0;--color-charts-red-900-y3eemg:#ffc4c0;--color-charts-red-1000-yyqzp1:#ffd2cf;--color-charts-red-1100-0wecq8:#ffe0dd;--color-charts-red-1200-hmkpnx:#ffecea;--color-charts-orange-300-jcenox:#c55305;--color-charts-orange-400-nev5rq:#de6923;--color-charts-orange-500-48gu0y:#f27c36;--color-charts-orange-600-yv1nii:#f89256;--color-charts-orange-700-rxl6xd:#fca572;--color-charts-orange-800-ce4xic:#ffb68b;--color-charts-orange-900-0tbeoy:#ffc6a4;--color-charts-orange-1000-ex4m37:#ffd4bb;--color-charts-orange-1100-4ch1cj:#ffe1cf;--color-charts-orange-1200-qa2la0:#ffede2;--color-charts-yellow-300-qcjduj:#977001;--color-charts-yellow-400-baglyr:#b08400;--color-charts-yellow-500-9t08lz:#c59600;--color-charts-yellow-600-mh3u9i:#d3a61c;--color-charts-yellow-700-le1hth:#dfb52c;--color-charts-yellow-800-4aztx5:#eac33a;--color-charts-yellow-900-12my7v:#f1cf65;--color-charts-yellow-1000-5wr65g:#f7db8a;--color-charts-yellow-1100-oprwqp:#fce5a8;--color-charts-yellow-1200-5z19hy:#ffefc9;--color-charts-green-300-885xbr:#48851a;--color-charts-green-400-9jzy7f:#5a9b29;--color-charts-green-500-9ejswg:#69ae34;--color-charts-green-600-j06vr3:#7dbd4c;--color-charts-green-700-dxtver:#8fca61;--color-charts-green-800-c9mg6a:#9fd673;--color-charts-green-900-hu961o:#b2df8d;--color-charts-green-1000-rgvlm5:#c5e7a8;--color-charts-green-1100-g032j3:#d5efbe;--color-charts-green-1200-fffr8z:#e4f7d5;--color-charts-teal-300-pdwqwl:#018977;--color-charts-teal-400-87xyxa:#009d89;--color-charts-teal-500-4ih4dj:#00b09b;--color-charts-teal-600-nsdkdk:#40bfa9;--color-charts-teal-700-89s4th:#5fccb7;--color-charts-teal-800-pj7d71:#77d7c3;--color-charts-teal-900-0u0vgk:#94e0d0;--color-charts-teal-1000-qt39rn:#ace9db;--color-charts-teal-1100-jjpoec:#c2f0e6;--color-charts-teal-1200-fz7ds6:#d7f7f0;--color-charts-blue-1-300-mvslh1:#00819c;--color-charts-blue-1-400-vfffdq:#0497ba;--color-charts-blue-1-500-5qq8ll:#08aad2;--color-charts-blue-1-600-1jjw30:#44b9dd;--color-charts-blue-1-700-7e7h6g:#63c6e7;--color-charts-blue-1-800-6ew8r4:#79d2f0;--color-charts-blue-1-900-ejk9n2:#98dcf5;--color-charts-blue-1-1000-47wlti:#b3e4f8;--color-charts-blue-1-1100-iwkugu:#caedfc;--color-charts-blue-1-1200-s6xraf:#ddf4ff;--color-charts-blue-2-300-iy07jw:#486de8;--color-charts-blue-2-400-hy6jpz:#6384f5;--color-charts-blue-2-500-hmxwyv:#7698fe;--color-charts-blue-2-600-o0wevj:#8ea9ff;--color-charts-blue-2-700-cmchf6:#a2b8ff;--color-charts-blue-2-800-bpld4x:#b1c5ff;--color-charts-blue-2-900-3xlmt8:#c3d1ff;--color-charts-blue-2-1000-f5iopd:#d2dcff;--color-charts-blue-2-1100-c3tt87:#dfe6ff;--color-charts-blue-2-1200-4qi1dr:#ecf0ff;--color-charts-purple-300-960s4o:#8d59de;--color-charts-purple-400-1xajzn:#a173ea;--color-charts-purple-500-tdtd0d:#b088f5;--color-charts-purple-600-4796yr:#bf9bf9;--color-charts-purple-700-xj79jn:#cbabfc;--color-charts-purple-800-yvd90z:#d6baff;--color-charts-purple-900-h50lkc:#dfc8ff;--color-charts-purple-1000-iuih7d:#e8d5ff;--color-charts-purple-1100-asapzo:#efe2ff;--color-charts-purple-1200-2w5zbu:#f5edff;--color-charts-pink-300-g5b3l1:#c64a70;--color-charts-pink-400-z1x9dh:#d56889;--color-charts-pink-500-rhmtrw:#e07f9d;--color-charts-pink-600-dr25sz:#eb92ad;--color-charts-pink-700-q6nx7n:#f5a2bb;--color-charts-pink-800-2taysn:#ffb0c8;--color-charts-pink-900-w0oqu6:#ffc1d4;--color-charts-pink-1000-i1lck3:#ffd1de;--color-charts-pink-1100-8of6pv:#ffdfe8;--color-charts-pink-1200-s5fsms:#ffecf1;--color-charts-status-critical-26qhog:#d63f38;--color-charts-status-high-am1khe:#fe6e73;--color-charts-status-medium-mlf4vh:#f89256;--color-charts-status-low-xd6yyp:#dfb52c;--color-charts-status-positive-si8nxj:#69ae34;--color-charts-status-info-978qj9:#08aad2;--color-charts-threshold-negative-4peb4g:#ff5d64;--color-charts-threshold-positive-mi3mwk:#6aaf35;--color-charts-threshold-info-lldfpx:#44b9d6;--color-charts-threshold-neutral-mt9ytx:#95a5a6;--color-charts-line-grid-8ig2w3:#414750;--color-charts-line-tick-o06ewi:#414750;--color-charts-line-axis-ah4nkd:#414750;--color-charts-palette-categorical-1-8b4eoo:#486de8;--color-charts-palette-categorical-2-7k6x03:#e07f9d;--color-charts-palette-categorical-3-t6ajxf:#018977;--color-charts-palette-categorical-4-aths19:#b088f5;--color-charts-palette-categorical-5-p0nlbd:#c55305;--color-charts-palette-categorical-6-c7u7pv:#8ea9ff;--color-charts-palette-categorical-7-z8w12m:#ffb0c8;--color-charts-palette-categorical-8-d3flyi:#40bfa9;--color-charts-palette-categorical-9-1l76ah:#d6baff;--color-charts-palette-categorical-10-ecf5xi:#f89256;--color-charts-palette-categorical-11-1mok8v:#c3d1ff;--color-charts-palette-categorical-12-dtnap1:#ffdfe8;--color-charts-palette-categorical-13-6uykyg:#94e0d0;--color-charts-palette-categorical-14-8ew2g1:#efe2ff;--color-charts-palette-categorical-15-basy54:#ffc6a4;--color-charts-palette-categorical-16-ss1voi:#ecf0ff;--color-charts-palette-categorical-17-5bmruj:#d56889;--color-charts-palette-categorical-18-j5i5wm:#d7f7f0;--color-charts-palette-categorical-19-4moj4n:#a173ea;--color-charts-palette-categorical-20-tqrwxf:#ffede2;--color-charts-palette-categorical-21-apb1sz:#7698fe;--color-charts-palette-categorical-22-ljfqak:#f5a2bb;--color-charts-palette-categorical-23-p85q7b:#00b09b;--color-charts-palette-categorical-24-vn32ho:#cbabfc;--color-charts-palette-categorical-25-v2ek2u:#f27c36;--color-charts-palette-categorical-26-e2ms6a:#b1c5ff;--color-charts-palette-categorical-27-mtylhv:#ffd1de;--color-charts-palette-categorical-28-0hiaor:#77d7c3;--color-charts-palette-categorical-29-ktyv4f:#e8d5ff;--color-charts-palette-categorical-30-db1785:#ffb68b;--color-charts-palette-categorical-31-l7yf28:#dfe6ff;--color-charts-palette-categorical-32-lzfh57:#c64a70;--color-charts-palette-categorical-33-kaanp8:#c2f0e6;--color-charts-palette-categorical-34-m2v68i:#8d59de;--color-charts-palette-categorical-35-rayjg3:#ffe1cf;--color-charts-palette-categorical-36-uiqmsn:#6384f5;--color-charts-palette-categorical-37-ygqr3y:#eb92ad;--color-charts-palette-categorical-38-d67rfy:#009d89;--color-charts-palette-categorical-39-ceut5m:#bf9bf9;--color-charts-palette-categorical-40-fzhfxp:#de6923;--color-charts-palette-categorical-41-6i1l8r:#a2b8ff;--color-charts-palette-categorical-42-9ud2pl:#ffc1d4;--color-charts-palette-categorical-43-wxf6os:#5fccb7;--color-charts-palette-categorical-44-ovegri:#dfc8ff;--color-charts-palette-categorical-45-g4rnlt:#fca572;--color-charts-palette-categorical-46-m8gaer:#d2dcff;--color-charts-palette-categorical-47-g2w96d:#ffecf1;--color-charts-palette-categorical-48-k8kiz7:#ace9db;--color-charts-palette-categorical-49-sw40c5:#f5edff;--color-charts-palette-categorical-50-w2luek:#ffd4bb;--color-background-badge-icon-4mo0wt:#ff5d64;--color-background-button-link-active-34rko8:#16191f;--color-background-button-link-hover-jv3f2k:#21252c;--color-background-button-normal-active-czecy2:#16191f;--color-background-button-normal-default-r433m6:#2a2e33;--color-background-button-normal-disabled-ejdxb1:#2a2e33;--color-background-button-normal-hover-afg7z9:#21252c;--color-background-button-primary-active-qjb1np:#44b9d6;--color-background-button-primary-default-zz5irg:#44b9d6;--color-background-button-primary-disabled-2w63xd:#2a2e33;--color-background-button-primary-hover-c6t12k:#00a1c9;--color-background-calendar-today-x6vg6n:#16191f;--color-background-cell-shaded-gppcg5:#16191f;--color-background-code-editor-gutter-active-line-default-52tgix:#879596;--color-background-code-editor-gutter-active-line-error-kbld3k:#ff5d64;--color-background-code-editor-gutter-default-ria8z9:#21252c;--color-background-code-editor-loading-fmqmbg:#21252c;--color-background-code-editor-pane-item-hover-uw1s87:#414750;--color-background-code-editor-status-bar-8oe90a:#21252c;--color-background-container-content-pb0lp5:#2a2e33;--color-background-container-header-pmlnr3:#21252c;--color-background-control-checked-q75knx:#00a1c9;--color-background-control-default-x4w3j0:#1a2029;--color-background-control-disabled-vkotqk:#414750;--color-background-dropdown-item-default-2p2g22:#2a2e33;--color-background-dropdown-item-filter-match-ugvt1w:#12293b;--color-background-dropdown-item-hover-6qhcjz:#414750;--color-background-dropdown-item-selected-pz82cn:#12293b;--color-background-input-default-66bx4w:#1a2029;--color-background-input-disabled-0azib6:#414750;--color-background-item-selected-8e1q8b:#12293b;--color-background-layout-main-okygtx:#16191f;--color-background-layout-mobile-panel-1g9iiz:#2a2e33;--color-background-layout-panel-content-qv5yhf:#2a2e33;--color-background-layout-panel-hover-mcickn:#414750;--color-background-layout-toggle-selected-active-3nl5wx:#00a1c9;--color-background-layout-toggle-selected-default-rx4hqe:#44b9d6;--color-background-layout-toggle-selected-hover-9gel8c:#44b9d6;--color-background-modal-overlay-rsidw7:rgba(22, 25, 31, 0.8);--color-background-notification-grey-iechs6:#687078;--color-background-popover-ft56xl:#21252c;--color-background-progress-bar-content-default-hbebrl:#00a1c9;--color-background-progress-bar-content-in-flash-v3roh6:#fafafa;--color-background-progress-bar-layout-default-n7v8t0:#414750;--color-background-segment-active-d8q9iy:#00a1c9;--color-background-segment-default-9ooxg1:#2a2e33;--color-background-segment-disabled-log6bm:#2a2e33;--color-background-segment-hover-tvysh8:#2a2e33;--color-background-status-error-zzlt4q:#270a11;--color-background-status-info-nlr7o9:#12293b;--color-background-status-success-97x61g:#172211;--color-background-status-warning-iv51lc:#1d1906;--color-background-table-header-d4x481:#21252c;--color-background-tiles-disabled-f3fyva:#2a2e33;--color-background-toggle-checked-disabled-o63zu0:#0a4a74;--color-background-toggle-default-six3cw:#879596;--color-border-button-normal-active-zrx2x0:#879596;--color-border-button-normal-default-a1f0ud:#879596;--color-border-button-normal-disabled-2z1mk8:#414750;--color-border-button-normal-hover-j7d6r6:#aab7b8;--color-border-button-primary-disabled-oe36ny:#414750;--color-border-calendar-grid-bl278b:#414750;--color-border-calendar-grid-selected-focus-ring-9q7e5h:#00a1c9;--color-border-code-editor-default-ovjs83:#687078;--color-border-code-editor-pane-item-hover-gk4v4i:#879596;--color-border-container-divider-4z4y7u:#414750;--color-border-container-top-ige66g:#2a2e33;--color-border-control-checked-tl007y:#00a1c9;--color-border-control-default-1igjc0:#879596;--color-border-control-disabled-n4rl6j:#414750;--color-border-divider-default-1mmknt:#414750;--color-border-divider-panel-bottom-r9jdco:rgba(0, 0, 0, 0.3);--color-border-dropdown-group-u3qa6a:#414750;--color-border-dropdown-item-default-062h8i:#414750;--color-border-dropdown-item-top-l8o9uk:#414750;--color-border-input-default-sm4mjn:#879596;--color-border-input-disabled-73z8co:#414750;--color-border-item-focused-t884ih:#00a1c9;--color-border-item-selected-bmiwgz:#00a1c9;--color-border-layout-6apkl4:#414750;--color-border-popover-p8haek:#545b64;--color-border-segment-active-w8feiw:#ffffff;--color-border-segment-default-yqxei2:#879596;--color-border-segment-disabled-6zsba4:#414750;--color-border-segment-hover-0dlw9k:#ffffff;--color-border-status-info-uwhmay:#00a1c9;--color-border-status-warning-p1qx7d:#e0ca57;--color-border-tabs-divider-ol648v:#414750;--color-border-tabs-shadow-k1zhjd:rgba(0, 0, 0, 0.3);--color-border-tabs-underline-uahgcp:#fafafa;--color-border-tiles-disabled-10gnrm:#414750;--color-border-tutorial-d7429l:#879596;--color-foreground-control-disabled-4rcx89:#687078;--color-shadow-default-4md8jt:rgba(0, 0, 0, 0.5);--color-text-accent-qe8oro:#44b9d6;--color-text-body-default-rlujvh:#d5dbdb;--color-text-body-secondary-bgqgd0:#d5dbdb;--color-text-breadcrumb-current-nu3iko:#d5dbdb;--color-text-button-inline-icon-default-buw7w7:#d5dbdb;--color-text-button-inline-icon-disabled-phk84s:#687078;--color-text-button-inline-icon-hover-0pwsg2:#fafafa;--color-text-button-normal-active-v6nfdh:#fafafa;--color-text-button-normal-default-eqebde:#d5dbdb;--color-text-button-normal-hover-bk2x1u:#fafafa;--color-text-link-button-normal-default-x8uncu:#d5dbdb;--color-text-link-button-normal-hover-hm6g27:#fafafa;--color-text-link-button-normal-active-8cfe84:#fafafa;--color-text-button-primary-active-0k4v93:#16191f;--color-text-button-primary-default-6dta4b:#16191f;--color-text-button-primary-hover-fk4ryc:#16191f;--color-text-calendar-day-hover-06fz50:#eaeded;--color-text-calendar-month-axtdn0:#d5dbdb;--color-text-code-editor-gutter-active-line-qjn6d7:#16191f;--color-text-code-editor-gutter-default-ml5ea9:#d5dbdb;--color-text-code-editor-status-bar-disabled-izcnps:#687078;--color-text-code-editor-tab-button-error-el5pk3:#16191f;--color-text-column-header-nhdjo5:#95a5a6;--color-text-column-sorting-icon-jjivph:#95a5a6;--color-text-control-disabled-9r7x35:#687078;--color-text-counter-001jjm:#95a5a6;--color-text-disabled-tmkonv:#687078;--color-text-dropdown-footer-349c2x:#95a5a6;--color-text-dropdown-group-label-ihg7kk:#95a5a6;--color-text-dropdown-header-90kv5m:#fafafa;--color-text-dropdown-item-default-wx27oj:#d5dbdb;--color-text-dropdown-item-dimmed-94uait:#687078;--color-text-dropdown-item-disabled-g9c04k:#687078;--color-text-dropdown-item-filter-match-qs8rft:#44b9d6;--color-text-dropdown-item-highlighted-t48eqn:#eaeded;--color-text-dropdown-item-secondary-tbkgco:#95a5a6;--color-text-dropdown-item-secondary-hover-91iztt:#d5dbdb;--color-text-empty-79ttcu:#d5dbdb;--color-text-expandable-section-default-yax29s:#d5dbdb;--color-text-expandable-section-hover-th9u3f:#fafafa;--color-text-expandable-section-navigation-icon-default-bniq5i:#95a5a6;--color-text-form-default-agajwv:#d5dbdb;--color-text-form-label-ug2d1t:#d5dbdb;--color-text-form-secondary-wh2xkx:#95a5a6;--color-text-group-label-3l0dih:#95a5a6;--color-text-heading-default-p5akhh:#eaeded;--color-text-heading-secondary-jkk2pc:#d5dbdb;--color-text-home-header-default-4ixpxi:#eaeded;--color-text-icon-subtle-fzoo43:#aab7b8;--color-text-input-disabled-26hyji:#687078;--color-text-input-placeholder-vi9sh8:#879596;--color-text-input-placeholder-disabled-1lvfii:#879596;--color-text-interactive-active-j3cxbp:#fafafa;--color-text-interactive-default-djvtmz:#d5dbdb;--color-text-interactive-disabled-k4q23b:#687078;--color-text-interactive-hover-55cagk:#fafafa;--color-text-inverted-obwu99:#16191f;--color-text-label-ezn36c:#95a5a6;--color-text-layout-toggle-gxpm7t:#d5dbdb;--color-text-layout-toggle-active-9lot34:#1a2029;--color-text-layout-toggle-hover-pyp0b8:#00a1c9;--color-text-layout-toggle-selected-gjgi5r:#16191f;--color-text-link-default-lwrgyu:#44b9d6;--color-text-link-hover-kmrtvm:#99cbe4;--color-text-pagination-page-number-active-disabled-wuw3oo:#d5dbdb;--color-text-pagination-page-number-default-qvdjdy:#d5dbdb;--color-text-segment-active-j9wjrk:#1a2029;--color-text-segment-default-uylum7:#d5dbdb;--color-text-segment-hover-7mglzi:#00a1c9;--color-text-small-bbucjz:#95a5a6;--color-text-status-error-a5tqz1:#ff5d64;--color-text-status-inactive-8fmnw5:#95a5a6;--color-text-status-info-lfbxn4:#44b9d6;--color-text-status-success-a6oxaq:#6aaf35;--color-text-status-warning-g3wln0:#e0ca57;--color-text-top-navigation-title-bo5eb6:#fafafa;--color-board-placeholder-active-r0ywv2:#687078;--color-board-placeholder-hover-hbn672:#0073bb;--color-drag-placeholder-active-tcno63:#687078;--color-drag-placeholder-hover-8lb5mf:#0073bb;--color-dropzone-background-active-2eefhd:#687078;--color-dropzone-background-hover-022hgn:#0073bb;--color-dropzone-text-active-j474oi:#16191f;--color-dropzone-text-hover-rfgx5p:#ffffff;--shadow-container-jwc36p:0 1px 1px 0 rgba(0, 0, 0, 0.3), 1px 1px 1px 0 rgba(0, 0, 0, 0.3), -1px 1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-container-stacked-q43z60:0 1px 1px 0 rgba(0, 0, 0, 0.3), 1px 1px 1px 0 rgba(0, 0, 0, 0.3), -1px 1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-dropdown-ixmllj:0 1px 1px 0 rgba(0, 0, 0, 0.3), 1px 1px 1px 0 rgba(0, 0, 0, 0.3), -1px 1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-dropup-uhb2zg:0 -1px 1px 0 rgba(0, 0, 0, 0.3), 1px -1px 1px 0 rgba(0, 0, 0, 0.3), -1px -1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-flash-sticky-6z04cw:0 1px 1px 0 rgba(0, 0, 0, 0.3), 1px 1px 1px 0 rgba(0, 0, 0, 0.3), -1px 1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-modal-cavj11:0 1px 1px 0 rgba(0, 0, 0, 0.3), 1px 1px 1px 0 rgba(0, 0, 0, 0.3), -1px 1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-panel-qf38d8:0 1px 1px 0 rgba(0, 0, 0, 0.3), 1px 1px 1px 0 rgba(0, 0, 0, 0.3), -1px 1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-panel-toggle-joszwo:0 1px 1px 0 rgba(0, 0, 0, 0.3), 1px 1px 1px 0 rgba(0, 0, 0, 0.3), -1px 1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-popover-atdz1j:0px 1px 4px -2px rgba(0, 0, 0, 0.5);--shadow-split-bottom-igu10s:0 -2px 1px -1px rgba(0, 0, 0, 0.3), 0 -1px 1px -1px rgba(0, 0, 0, 0.3);--shadow-split-side-hj3xha:0 1px 1px 0 rgba(0, 0, 0, 0.3), 1px 1px 1px 0 rgba(0, 0, 0, 0.3), -1px 1px 1px 0 rgba(0, 0, 0, 0.3);--shadow-sticky-fftr9t:0px 1px 4px -2px rgba(0, 0, 0, 0.5);--shadow-sticky-embedded-2khilm:0px 1px 4px -2px rgba(0, 0, 0, 0.5);--shadow-sticky-column-first-wkhcx1:4px 0 8px 0 rgba(0, 0, 0, 0.5);--shadow-sticky-column-last-4qhui6:-4px 0 8px 0 rgba(0, 0, 0, 0.5)}}.awsui-compact-mode:not(#\\9){--size-vertical-input-18ku63:28px;--size-vertical-panel-icon-offset-47mfcv:13px;--space-alert-vertical-8r7n6v:8px;--space-button-modal-dismiss-vertical-17om1h:2px;--space-card-vertical-k85wjn:16px;--space-container-content-top-smfayu:12px;--space-container-header-top-isuu42:8px;--space-container-header-bottom-7poudk:8px;--space-content-header-padding-bottom-lycl1l:12px;--space-expandable-section-icon-offset-top-om84w8:4px;--space-grid-gutter-pfst95:16px;--space-key-value-gap-xmtv08:0px;--space-layout-content-bottom-6h9urw:16px;--space-layout-toggle-padding-mgz0u7:16px;--space-modal-content-bottom-jf04k3:16px;--space-panel-side-left-f4trxi:24px;--space-panel-side-right-5u66nh:24px;--space-tabs-content-top-qqb5pb:12px;--space-table-embedded-header-top-hxr64p:8px;--space-table-header-tools-bottom-quuidt:2px;--space-scaled-2x-xxs-mfdb10:0px;--space-scaled-2x-m-rh97jh:8px;--space-scaled-2x-l-ik0kek:12px;--space-scaled-2x-xl-g1o31j:16px;--space-scaled-2x-xxxl-4usad4:24px;--space-scaled-xxxs-emyscj:0px;--space-scaled-xxs-ugy2pw:2px;--space-scaled-xs-u0e7ft:4px;--space-scaled-s-gczsk7:8px;--space-scaled-m-9q5ipc:12px;--space-scaled-l-x5pubp:16px;--space-scaled-xl-ozgbvg:20px;--space-scaled-xxl-v4jc9u:24px;--space-scaled-xxxl-kyg1bf:32px}.awsui-motion-disabled:not(#\\9){--motion-duration-extra-slow-vamr5b:0ms;--motion-duration-fast-pml190:0ms;--motion-duration-moderate-bggcsm:0ms;--motion-duration-refresh-only-fast-n43vlu:0ms;--motion-duration-refresh-only-medium-af0v35:0ms;--motion-duration-refresh-only-slow-uid2xp:0ms;--motion-duration-rotate-180-i3ygzg:0ms;--motion-duration-rotate-90-1zdthq:0ms;--motion-duration-show-paced-1a355f:0ms;--motion-duration-show-quick-b6n9lb:0ms;--motion-duration-slow-mz6oyq:0ms;--motion-duration-transition-quick-dm1zcq:0ms;--motion-duration-transition-show-paced-qcfnau:0ms;--motion-duration-transition-show-quick-6dpisk:0ms;--motion-duration-responsive-omyop9:0ms;--motion-duration-expressive-ocxint:0ms;--motion-duration-complex-rkf59l:0ms}.awsui-context-compact-table:not(#\\9){--size-vertical-input-18ku63:28px;--space-alert-vertical-8r7n6v:8px;--space-button-modal-dismiss-vertical-17om1h:2px;--space-card-vertical-k85wjn:16px;--space-container-content-top-smfayu:12px;--space-container-header-top-isuu42:8px;--space-container-header-bottom-7poudk:8px;--space-content-header-padding-bottom-lycl1l:12px;--space-expandable-section-icon-offset-top-om84w8:4px;--space-key-value-gap-xmtv08:0px;--space-layout-content-bottom-6h9urw:16px;--space-layout-toggle-padding-mgz0u7:16px;--space-modal-content-bottom-jf04k3:16px;--space-panel-side-left-f4trxi:24px;--space-panel-side-right-5u66nh:24px;--space-tabs-content-top-qqb5pb:12px;--space-table-embedded-header-top-hxr64p:8px;--space-table-header-tools-bottom-quuidt:2px;--space-scaled-xxxs-emyscj:0px;--space-scaled-xxs-ugy2pw:2px;--space-scaled-xs-u0e7ft:4px;--space-scaled-s-gczsk7:8px;--space-scaled-m-9q5ipc:12px;--space-scaled-l-x5pubp:16px;--space-scaled-xl-ozgbvg:20px;--space-scaled-xxl-v4jc9u:24px;--space-scaled-xxxl-kyg1bf:32px}.awsui-context-top-navigation:not(#\\9){--color-background-badge-icon-4mo0wt:#ff5d64;--color-background-button-link-active-34rko8:#16191f;--color-background-button-link-hover-jv3f2k:#21252c;--color-background-button-normal-active-czecy2:#16191f;--color-background-button-normal-default-r433m6:#2a2e33;--color-background-button-normal-disabled-ejdxb1:#2a2e33;--color-background-button-normal-hover-afg7z9:#21252c;--color-background-button-primary-active-qjb1np:#44b9d6;--color-background-button-primary-default-zz5irg:#44b9d6;--color-background-button-primary-disabled-2w63xd:#2a2e33;--color-background-button-primary-hover-c6t12k:#00a1c9;--color-background-calendar-today-x6vg6n:#16191f;--color-background-cell-shaded-gppcg5:#16191f;--color-background-code-editor-gutter-active-line-default-52tgix:#879596;--color-background-code-editor-gutter-active-line-error-kbld3k:#ff5d64;--color-background-code-editor-gutter-default-ria8z9:#21252c;--color-background-code-editor-loading-fmqmbg:#21252c;--color-background-code-editor-pane-item-hover-uw1s87:#414750;--color-background-code-editor-status-bar-8oe90a:#21252c;--color-background-container-content-pb0lp5:#232f3e;--color-background-container-header-pmlnr3:#21252c;--color-background-control-checked-q75knx:#00a1c9;--color-background-control-default-x4w3j0:#1a2029;--color-background-control-disabled-vkotqk:#414750;--color-background-dropdown-item-default-2p2g22:#232f3e;--color-background-dropdown-item-filter-match-ugvt1w:#12293b;--color-background-dropdown-item-hover-6qhcjz:#414750;--color-background-dropdown-item-selected-pz82cn:#12293b;--color-background-input-default-66bx4w:#1a2029;--color-background-input-disabled-0azib6:#414750;--color-background-item-selected-8e1q8b:#12293b;--color-background-layout-main-okygtx:#16191f;--color-background-layout-mobile-panel-1g9iiz:#232f3e;--color-background-layout-panel-content-qv5yhf:#232f3e;--color-background-layout-panel-hover-mcickn:#414750;--color-background-layout-toggle-selected-active-3nl5wx:#00a1c9;--color-background-layout-toggle-selected-default-rx4hqe:#44b9d6;--color-background-layout-toggle-selected-hover-9gel8c:#44b9d6;--color-background-modal-overlay-rsidw7:rgba(22, 25, 31, 0.8);--color-background-notification-grey-iechs6:#687078;--color-background-popover-ft56xl:#21252c;--color-background-progress-bar-content-default-hbebrl:#00a1c9;--color-background-progress-bar-content-in-flash-v3roh6:#fafafa;--color-background-progress-bar-layout-default-n7v8t0:#414750;--color-background-segment-active-d8q9iy:#00a1c9;--color-background-segment-default-9ooxg1:#2a2e33;--color-background-segment-disabled-log6bm:#2a2e33;--color-background-segment-hover-tvysh8:#2a2e33;--color-background-status-error-zzlt4q:#270a11;--color-background-status-info-nlr7o9:#12293b;--color-background-status-success-97x61g:#172211;--color-background-status-warning-iv51lc:#1d1906;--color-background-table-header-d4x481:#21252c;--color-background-tiles-disabled-f3fyva:#2a2e33;--color-background-toggle-checked-disabled-o63zu0:#0a4a74;--color-background-toggle-default-six3cw:#879596;--color-border-button-normal-active-zrx2x0:#879596;--color-border-button-normal-default-a1f0ud:#879596;--color-border-button-normal-disabled-2z1mk8:#414750;--color-border-button-normal-hover-j7d6r6:#aab7b8;--color-border-button-primary-disabled-oe36ny:#414750;--color-border-calendar-grid-bl278b:#414750;--color-border-calendar-grid-selected-focus-ring-9q7e5h:#00a1c9;--color-border-code-editor-default-ovjs83:#687078;--color-border-code-editor-pane-item-hover-gk4v4i:#879596;--color-border-container-divider-4z4y7u:#414750;--color-border-container-top-ige66g:#2a2e33;--color-border-control-checked-tl007y:#00a1c9;--color-border-control-default-1igjc0:#879596;--color-border-control-disabled-n4rl6j:#414750;--color-border-divider-default-1mmknt:#414750;--color-border-divider-panel-bottom-r9jdco:rgba(0, 0, 0, 0.3);--color-border-dropdown-group-u3qa6a:#414750;--color-border-dropdown-item-default-062h8i:#414750;--color-border-dropdown-item-top-l8o9uk:#414750;--color-border-input-default-sm4mjn:#879596;--color-border-input-disabled-73z8co:#414750;--color-border-item-focused-t884ih:#00a1c9;--color-border-item-selected-bmiwgz:#00a1c9;--color-border-layout-6apkl4:#414750;--color-border-popover-p8haek:#545b64;--color-border-segment-active-w8feiw:#ffffff;--color-border-segment-default-yqxei2:#879596;--color-border-segment-disabled-6zsba4:#414750;--color-border-segment-hover-0dlw9k:#ffffff;--color-border-status-info-uwhmay:#00a1c9;--color-border-status-warning-p1qx7d:#e0ca57;--color-border-tabs-divider-ol648v:#414750;--color-border-tabs-shadow-k1zhjd:rgba(0, 0, 0, 0.3);--color-border-tabs-underline-uahgcp:#fafafa;--color-border-tiles-disabled-10gnrm:#414750;--color-border-tutorial-d7429l:#879596;--color-foreground-control-disabled-4rcx89:#687078;--color-shadow-default-4md8jt:rgba(0, 0, 0, 0.5);--color-text-accent-qe8oro:#44b9d6;--color-text-body-default-rlujvh:#d5dbdb;--color-text-body-secondary-bgqgd0:#d5dbdb;--color-text-breadcrumb-current-nu3iko:#d5dbdb;--color-text-button-inline-icon-default-buw7w7:#d5dbdb;--color-text-button-inline-icon-disabled-phk84s:#687078;--color-text-button-inline-icon-hover-0pwsg2:#fafafa;--color-text-button-normal-active-v6nfdh:#fafafa;--color-text-button-normal-default-eqebde:#d5dbdb;--color-text-button-normal-hover-bk2x1u:#fafafa;--color-text-link-button-normal-default-x8uncu:#d5dbdb;--color-text-link-button-normal-hover-hm6g27:#fafafa;--color-text-link-button-normal-active-8cfe84:#fafafa;--color-text-button-primary-active-0k4v93:#16191f;--color-text-button-primary-default-6dta4b:#16191f;--color-text-button-primary-hover-fk4ryc:#16191f;--color-text-calendar-day-hover-06fz50:#eaeded;--color-text-calendar-month-axtdn0:#d5dbdb;--color-text-code-editor-gutter-active-line-qjn6d7:#16191f;--color-text-code-editor-gutter-default-ml5ea9:#d5dbdb;--color-text-code-editor-status-bar-disabled-izcnps:#687078;--color-text-code-editor-tab-button-error-el5pk3:#16191f;--color-text-column-header-nhdjo5:#95a5a6;--color-text-column-sorting-icon-jjivph:#95a5a6;--color-text-control-disabled-9r7x35:#687078;--color-text-counter-001jjm:#95a5a6;--color-text-disabled-tmkonv:#687078;--color-text-dropdown-footer-349c2x:#95a5a6;--color-text-dropdown-group-label-ihg7kk:#95a5a6;--color-text-dropdown-header-90kv5m:#fafafa;--color-text-dropdown-item-default-wx27oj:#d5dbdb;--color-text-dropdown-item-dimmed-94uait:#687078;--color-text-dropdown-item-disabled-g9c04k:#687078;--color-text-dropdown-item-filter-match-qs8rft:#44b9d6;--color-text-dropdown-item-highlighted-t48eqn:#eaeded;--color-text-dropdown-item-secondary-tbkgco:#95a5a6;--color-text-dropdown-item-secondary-hover-91iztt:#d5dbdb;--color-text-empty-79ttcu:#d5dbdb;--color-text-expandable-section-default-yax29s:#d5dbdb;--color-text-expandable-section-hover-th9u3f:#fafafa;--color-text-expandable-section-navigation-icon-default-bniq5i:#95a5a6;--color-text-form-default-agajwv:#d5dbdb;--color-text-form-label-ug2d1t:#d5dbdb;--color-text-form-secondary-wh2xkx:#95a5a6;--color-text-group-label-3l0dih:#95a5a6;--color-text-heading-default-p5akhh:#eaeded;--color-text-heading-secondary-jkk2pc:#d5dbdb;--color-text-home-header-default-4ixpxi:#eaeded;--color-text-icon-subtle-fzoo43:#aab7b8;--color-text-input-disabled-26hyji:#687078;--color-text-input-placeholder-vi9sh8:#879596;--color-text-input-placeholder-disabled-1lvfii:#879596;--color-text-interactive-active-j3cxbp:#fafafa;--color-text-interactive-default-djvtmz:#d5dbdb;--color-text-interactive-disabled-k4q23b:#687078;--color-text-interactive-hover-55cagk:#fafafa;--color-text-inverted-obwu99:#16191f;--color-text-label-ezn36c:#95a5a6;--color-text-layout-toggle-gxpm7t:#d5dbdb;--color-text-layout-toggle-active-9lot34:#1a2029;--color-text-layout-toggle-hover-pyp0b8:#00a1c9;--color-text-layout-toggle-selected-gjgi5r:#16191f;--color-text-link-default-lwrgyu:#44b9d6;--color-text-link-hover-kmrtvm:#99cbe4;--color-text-pagination-page-number-active-disabled-wuw3oo:#d5dbdb;--color-text-pagination-page-number-default-qvdjdy:#d5dbdb;--color-text-segment-active-j9wjrk:#1a2029;--color-text-segment-default-uylum7:#d5dbdb;--color-text-segment-hover-7mglzi:#00a1c9;--color-text-small-bbucjz:#95a5a6;--color-text-status-error-a5tqz1:#ff5d64;--color-text-status-inactive-8fmnw5:#95a5a6;--color-text-status-info-lfbxn4:#44b9d6;--color-text-status-success-a6oxaq:#6aaf35;--color-text-status-warning-g3wln0:#e0ca57;--color-text-top-navigation-title-bo5eb6:#fafafa;--color-board-placeholder-active-r0ywv2:#687078;--color-board-placeholder-hover-hbn672:#0073bb;--color-drag-placeholder-active-tcno63:#687078;--color-drag-placeholder-hover-8lb5mf:#0073bb;--color-dropzone-background-active-2eefhd:#687078;--color-dropzone-background-hover-022hgn:#0073bb;--color-dropzone-text-active-j474oi:#16191f;--color-dropzone-text-hover-rfgx5p:#ffffff}.awsui-context-flashbar:not(#\\9){--color-border-calendar-grid-bl278b:#fafafa;--color-border-calendar-grid-selected-focus-ring-9q7e5h:#fafafa;--color-border-container-divider-4z4y7u:#fafafa;--color-border-divider-default-1mmknt:#fafafa;--color-border-dropdown-group-u3qa6a:#fafafa;--color-border-dropdown-item-default-062h8i:#fafafa;--color-border-dropdown-item-top-l8o9uk:#fafafa;--color-border-item-focused-t884ih:#fafafa;--color-border-tabs-shadow-k1zhjd:#fafafa;--color-text-body-default-rlujvh:#fafafa;--color-text-expandable-section-default-yax29s:#fafafa;--color-text-expandable-section-hover-th9u3f:#fafafa;--color-text-heading-secondary-jkk2pc:#fafafa}.awsui-context-flashbar-warning:not(#\\9){--color-border-calendar-grid-bl278b:#16191f;--color-border-calendar-grid-selected-focus-ring-9q7e5h:#16191f;--color-border-container-divider-4z4y7u:#16191f;--color-border-divider-default-1mmknt:#16191f;--color-border-dropdown-group-u3qa6a:#16191f;--color-border-dropdown-item-default-062h8i:#16191f;--color-border-dropdown-item-top-l8o9uk:#16191f;--color-border-item-focused-t884ih:#16191f;--color-border-tabs-shadow-k1zhjd:#16191f;--color-text-expandable-section-default-yax29s:#16191f;--color-text-heading-secondary-jkk2pc:#16191f;--color-text-interactive-inverted-default-mrgn6e:#545b64;--color-text-interactive-inverted-hover-qliijo:#16191f;--color-text-link-inverted-hover-o3xt6o:#16191f;--color-text-notification-default-d9f7z3:#16191f}.awsui-context-alert:not(#\\9){--color-border-calendar-grid-bl278b:#545b64;--color-border-container-divider-4z4y7u:#545b64;--color-border-divider-default-1mmknt:#545b64;--color-border-dropdown-group-u3qa6a:#545b64;--color-border-dropdown-item-default-062h8i:#545b64;--color-border-dropdown-item-top-l8o9uk:#545b64;--color-border-tabs-shadow-k1zhjd:#545b64}@media not print{.awsui-dark-mode .awsui-context-flashbar:not(#\\9){--color-border-tabs-shadow-k1zhjd:rgba(0, 0, 0, 0.3)}}@media not print{.awsui-context-flashbar.awsui-dark-mode:not(#\\9){--color-border-tabs-shadow-k1zhjd:rgba(0, 0, 0, 0.3)}}@media not print{.awsui-dark-mode .awsui-context-flashbar-warning:not(#\\9){--color-border-tabs-shadow-k1zhjd:rgba(0, 0, 0, 0.3);--color-text-body-default-rlujvh:#16191f;--color-text-expandable-section-hover-th9u3f:#16191f}}@media not print{.awsui-context-flashbar-warning.awsui-dark-mode:not(#\\9){--color-border-tabs-shadow-k1zhjd:rgba(0, 0, 0, 0.3);--color-text-body-default-rlujvh:#16191f;--color-text-expandable-section-hover-th9u3f:#16191f}}@media not print{.awsui-dark-mode .awsui-context-alert:not(#\\9){--color-border-calendar-grid-bl278b:#d5dbdb;--color-border-container-divider-4z4y7u:#d5dbdb;--color-border-divider-default-1mmknt:#d5dbdb;--color-border-dropdown-group-u3qa6a:#d5dbdb;--color-border-dropdown-item-default-062h8i:#d5dbdb;--color-border-dropdown-item-top-l8o9uk:#d5dbdb;--color-border-tabs-shadow-k1zhjd:rgba(0, 0, 0, 0.3)}}@media not print{.awsui-context-alert.awsui-dark-mode:not(#\\9){--color-border-calendar-grid-bl278b:#d5dbdb;--color-border-container-divider-4z4y7u:#d5dbdb;--color-border-divider-default-1mmknt:#d5dbdb;--color-border-dropdown-group-u3qa6a:#d5dbdb;--color-border-dropdown-item-default-062h8i:#d5dbdb;--color-border-dropdown-item-top-l8o9uk:#d5dbdb;--color-border-tabs-shadow-k1zhjd:rgba(0, 0, 0, 0.3)}}@keyframes awsui-fade-in-35003c{from{opacity:0}to{opacity:1}}@keyframes awsui-fade-out-35003c{from{opacity:1}to{opacity:0}}.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){animation:awsui_awsui-motion-fade-in-dropdown_qwoo0_14w2x_1 var(--motion-duration-show-quick-b6n9lb, 135ms) var(--motion-easing-show-quick-vlcbqf, ease-out)}@keyframes awsui_awsui-motion-fade-in-dropdown_qwoo0_14w2x_1{from{opacity:0.4}to{opacity:1}}@media (prefers-reduced-motion: reduce){.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9),.awsui-mode-entering .awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){animation:none;transition:none}.awsui_dropdown-content-wrapper_qwoo0_14w2x_93.awsui_refresh_qwoo0_14w2x_114:not(#\\9){transform-origin:top;animation-name:awsui_awsui-motion-fade-in-0_qwoo0_14w2x_1;animation-duration:var(--motion-duration-show-quick-b6n9lb, 135ms);animation-timing-function:var(--motion-easing-show-quick-vlcbqf, ease-out)}@keyframes awsui_awsui-motion-fade-in-0_qwoo0_14w2x_1{from{opacity:0}to{opacity:1}}@media (prefers-reduced-motion: reduce){.awsui_dropdown-content-wrapper_qwoo0_14w2x_93.awsui_refresh_qwoo0_14w2x_114:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_dropdown-content-wrapper_qwoo0_14w2x_93.awsui_refresh_qwoo0_14w2x_114:not(#\\9),.awsui-mode-entering .awsui_dropdown-content-wrapper_qwoo0_14w2x_93.awsui_refresh_qwoo0_14w2x_114:not(#\\9){animation:none;transition:none}.awsui_root_qwoo0_14w2x_143:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;position:relative;white-space:inherit}.awsui_root_qwoo0_14w2x_143.awsui_interior_qwoo0_14w2x_157:not(#\\9){position:static}.awsui_dropdown_qwoo0_14w2x_93:not(#\\9){position:absolute;display:none;z-index:2000;-webkit-user-select:none;user-select:none;transform-origin:top}.awsui_dropdown_qwoo0_14w2x_93.awsui_use-portal_qwoo0_14w2x_168:not(#\\9){z-index:7000}.awsui_dropdown_qwoo0_14w2x_93:not(#\\9):not(.awsui_interior_qwoo0_14w2x_157){transform:translateY(0px);transition:transform var(--motion-duration-show-quick-b6n9lb, 135ms)}@media (prefers-reduced-motion: reduce){.awsui_dropdown_qwoo0_14w2x_93:not(#\\9):not(.awsui_interior_qwoo0_14w2x_157){animation:none;transition:none}}.awsui-motion-disabled .awsui_dropdown_qwoo0_14w2x_93:not(#\\9):not(.awsui_interior_qwoo0_14w2x_157),.awsui-mode-entering .awsui_dropdown_qwoo0_14w2x_93:not(#\\9):not(.awsui_interior_qwoo0_14w2x_157){animation:none;transition:none}.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){position:relative;background-color:var(--color-background-dropdown-item-default-2p2g22, #ffffff);outline:none;box-shadow:var(--shadow-dropdown-ixmllj, 0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15));border-radius:var(--border-radius-dropdown-ewtx9q, 0px);border-top:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-container-top-ige66g, #eaeded);box-sizing:border-box;border-bottom:none}.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9)::after{content:\"\";position:absolute;z-index:1;top:-1px;left:0px;bottom:0px;right:0px;background-color:transparent;border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-dropdown-container-5izm18, transparent);border-radius:var(--border-radius-dropdown-ewtx9q, 0px);pointer-events:none}@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none){.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-container-top-ige66g, #eaeded)}}.awsui_dropdown-content-wrapper_qwoo0_14w2x_93.awsui_is-empty_qwoo0_14w2x_213:not(#\\9)::after{display:none}.awsui_dropdown-drop-up_qwoo0_14w2x_216>.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){transform-origin:bottom;box-shadow:var(--shadow-dropup-uhb2zg, 0 -1px 1px 0 rgba(0, 28, 36, 0.3), 1px -1px 1px 0 rgba(0, 28, 36, 0.15), -1px -1px 1px 0 rgba(0, 28, 36, 0.15))}.awsui_dropdown-drop-up_qwoo0_14w2x_216.awsui_with-limited-width_qwoo0_14w2x_220>.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){border-top:none}.awsui_dropdown-drop-left_qwoo0_14w2x_223:not(#\\9){right:0}.awsui_dropdown-drop-right_qwoo0_14w2x_226:not(#\\9){left:0}.awsui_dropdown_qwoo0_14w2x_93.awsui_occupy-entire-width_qwoo0_14w2x_229:not(#\\9){min-width:100%}.awsui_dropdown_qwoo0_14w2x_93.awsui_stretch-beyond-trigger-width_qwoo0_14w2x_232:not(#\\9){width:max-content;max-width:var(--awsui-dropdown-default-max-width-y98gph, 100%)}.awsui_dropdown_qwoo0_14w2x_93.awsui_hide-upper-border_qwoo0_14w2x_236>.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){border-top:none}.awsui_dropdown_qwoo0_14w2x_93.awsui_interior_qwoo0_14w2x_157>.awsui_dropdown-content-wrapper_qwoo0_14w2x_93:not(#\\9){margin-top:-1px;border-top:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-container-top-ige66g, #eaeded)}.awsui_dropdown_qwoo0_14w2x_93.awsui_open_qwoo0_14w2x_243:not(#\\9){display:block}.awsui_dropdown_qwoo0_14w2x_93.awsui_open_qwoo0_14w2x_243:not(#\\9):not(.awsui_interior_qwoo0_14w2x_157).awsui_refresh_qwoo0_14w2x_114[data-animating=true]{transform:translateY(4px)}.awsui_dropdown_qwoo0_14w2x_93.awsui_open_qwoo0_14w2x_243:not(#\\9):not(.awsui_interior_qwoo0_14w2x_157).awsui_refresh_qwoo0_14w2x_114[data-animating=true].awsui_dropdown-drop-up_qwoo0_14w2x_216{transform:translateY(-4px)}.awsui_dropdown_qwoo0_14w2x_93.awsui_open_qwoo0_14w2x_243.awsui_nowrap_qwoo0_14w2x_252:not(#\\9){white-space:nowrap;overflow:scroll}.awsui_dropdown-content_qwoo0_14w2x_93:not(#\\9){display:flex;flex-direction:column;width:100%}.awsui_stretch-trigger-height_qwoo0_14w2x_263:not(#\\9){height:100%}.awsui_options-list_19gcf_1bx3f_93:not(#\\9){padding:0;margin:0;outline:none;border:none;border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;white-space:inherit;overflow-y:auto;flex:1 1 auto;min-height:0;border-radius:var(--border-radius-dropdown-ewtx9q, 0px)}.awsui_decrease-top-margin_19gcf_1bx3f_115:not(#\\9){margin-top:-1px}.awsui_root_vrgzu_caucr_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;padding:var(--space-xxs-a6783b, 4px) var(--space-field-horizontal-wfaq0d, 8px) calc(var(--space-xxs-a6783b, 4px) + var(--space-xxxs-rq3iss, 2px));color:var(--color-text-dropdown-footer-349c2x, #687078)}.awsui_root_vrgzu_caucr_93>.awsui_recovery_vrgzu_caucr_107:not(#\\9){}.awsui_button-trigger_18eso_5tc31_97>.awsui_arrow_18eso_5tc31_97:not(#\\9){transition:transform var(--motion-duration-rotate-180-i3ygzg, 135ms) var(--motion-easing-rotate-180-qx5hdf, cubic-bezier(0.165, 0.84, 0.44, 1))}@media (prefers-reduced-motion: reduce){.awsui_button-trigger_18eso_5tc31_97>.awsui_arrow_18eso_5tc31_97:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_button-trigger_18eso_5tc31_97>.awsui_arrow_18eso_5tc31_97:not(#\\9),.awsui-mode-entering .awsui_button-trigger_18eso_5tc31_97>.awsui_arrow_18eso_5tc31_97:not(#\\9){animation:none;transition:none}.awsui_button-trigger_18eso_5tc31_97:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;position:relative;display:flex;width:100%;justify-content:space-between;align-items:center;padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-field-horizontal-wfaq0d, 8px);background-color:var(--color-background-input-default-66bx4w, #ffffff);border-radius:var(--border-radius-input-jnmu21, 2px);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-default-sm4mjn, #687078);min-height:var(--size-vertical-input-18ku63, 32px)}.awsui_button-trigger_18eso_5tc31_97.awsui_has-caret_18eso_5tc31_137:not(#\\9){padding-right:var(--space-field-icon-offset-uc4al5, 32px)}.awsui_button-trigger_18eso_5tc31_97>.awsui_placeholder_18eso_5tc31_140:not(#\\9){color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic}.awsui_button-trigger_18eso_5tc31_97>.awsui_arrow_18eso_5tc31_97:not(#\\9){position:absolute;right:var(--space-field-horizontal-wfaq0d, 8px);top:calc(50% - var(--line-height-body-m-4ax85e, 22px) / 2);color:var(--color-text-button-inline-icon-default-buw7w7, #545b64)}.awsui_button-trigger_18eso_5tc31_97:not(#\\9):hover>.awsui_arrow_18eso_5tc31_97{color:var(--color-text-button-inline-icon-hover-0pwsg2, #16191f)}.awsui_button-trigger_18eso_5tc31_97.awsui_pressed_18eso_5tc31_153>.awsui_arrow_18eso_5tc31_97:not(#\\9){transform:rotate(-180deg)}.awsui_button-trigger_18eso_5tc31_97.awsui_disabled_18eso_5tc31_156:not(#\\9){background-color:var(--color-background-input-disabled-0azib6, #eaeded);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-disabled-73z8co, #eaeded);color:var(--color-text-input-disabled-26hyji, #879596);cursor:auto}.awsui_button-trigger_18eso_5tc31_97.awsui_disabled_18eso_5tc31_156>.awsui_arrow_18eso_5tc31_97:not(#\\9){color:var(--color-text-button-inline-icon-disabled-phk84s, #aab7b8)}.awsui_button-trigger_18eso_5tc31_97.awsui_disabled_18eso_5tc31_156.awsui_in-filtering-token_18eso_5tc31_165:not(#\\9){border-color:var(--color-border-control-disabled-n4rl6j, #d5dbdb)}.awsui_button-trigger_18eso_5tc31_97.awsui_disabled_18eso_5tc31_156>.awsui_placeholder_18eso_5tc31_140:not(#\\9){color:var(--color-text-input-placeholder-disabled-1lvfii, #687078)}.awsui_button-trigger_18eso_5tc31_97.awsui_read-only_18eso_5tc31_171:not(#\\9){background-color:var(--color-background-input-default-66bx4w, #ffffff);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-disabled-73z8co, #eaeded)}.awsui_button-trigger_18eso_5tc31_97:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button-trigger_18eso_5tc31_97:not(#\\9):not(.awsui_in-filtering-token_18eso_5tc31_165):focus{outline:2px dotted transparent;border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-item-focused-t884ih, #0073bb);border-radius:var(--border-radius-input-jnmu21, 2px);box-shadow:0 0 0 var(--border-control-focus-ring-shadow-spread-oufv0y, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button-trigger_18eso_5tc31_97:not(#\\9):not(.awsui_in-filtering-token_18eso_5tc31_165):invalid{box-shadow:none}.awsui_button-trigger_18eso_5tc31_97:not(#\\9):not(.awsui_in-filtering-token_18eso_5tc31_165).awsui_invalid_18eso_5tc31_188,.awsui_button-trigger_18eso_5tc31_97:not(#\\9):not(.awsui_in-filtering-token_18eso_5tc31_165).awsui_invalid_18eso_5tc31_188:focus{color:var(--color-text-status-error-a5tqz1, #d13212);border-color:var(--color-text-status-error-a5tqz1, #d13212);padding-left:calc(\n  var(--space-field-horizontal-wfaq0d, 8px) - (var(--border-invalid-width-5eyrjt, 4px) - var(--border-field-width-2vpp5j, 1px))\n);border-left-width:var(--border-invalid-width-5eyrjt, 4px)}.awsui_button-trigger_18eso_5tc31_97:not(#\\9):not(.awsui_in-filtering-token_18eso_5tc31_165).awsui_invalid_18eso_5tc31_188:focus,.awsui_button-trigger_18eso_5tc31_97:not(#\\9):not(.awsui_in-filtering-token_18eso_5tc31_165).awsui_invalid_18eso_5tc31_188:focus:focus{box-shadow:0 0 0 var(--border-control-invalid-focus-ring-shadow-spread-mejja6, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button-trigger_18eso_5tc31_97.awsui_in-filtering-token_18eso_5tc31_165:not(#\\9){border-color:var(--color-border-item-selected-bmiwgz, #0073bb);border-top-right-radius:0;border-bottom-right-radius:0;height:100%}body[data-awsui-focus-visible=true] .awsui_button-trigger_18eso_5tc31_97.awsui_in-filtering-token_18eso_5tc31_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button-trigger_18eso_5tc31_97.awsui_in-filtering-token_18eso_5tc31_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-filtering-token-operation-select-focus-outline-gutter-kjeacy, 0px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button-trigger_18eso_5tc31_97.awsui_in-filtering-token_18eso_5tc31_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-filtering-token-operation-select-focus-outline-gutter-kjeacy, 0px));top:calc(-1 * var(--space-filtering-token-operation-select-focus-outline-gutter-kjeacy, 0px));width:calc(100% + 2 * var(--space-filtering-token-operation-select-focus-outline-gutter-kjeacy, 0px));height:calc(100% + 2 * var(--space-filtering-token-operation-select-focus-outline-gutter-kjeacy, 0px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button-trigger_18eso_5tc31_97.awsui_inline-tokens_18eso_5tc31_223:not(#\\9){padding-top:0;padding-bottom:0}.awsui_root_1afi9_aq1fm_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto}.awsui_root_1afi9_aq1fm_93:not(#\\9):not(.awsui_hidden_1afi9_aq1fm_105){border-top:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-dropdown-item-default-062h8i, #eaeded)}.awsui_root_1afi9_aq1fm_93:not(#\\9):not(.awsui_hidden_1afi9_aq1fm_105).awsui_no-items_1afi9_aq1fm_108{border-top:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-dropdown-item-top-l8o9uk, #eaeded)}.awsui_content_1wepg_1hmu4_93:not(#\\9),.awsui_description_1wepg_1hmu4_94:not(#\\9),.awsui_label_1wepg_1hmu4_95:not(#\\9){display:block}.awsui_outline_1wepg_1hmu4_99:not(#\\9){display:none}.awsui_outline_1wepg_1hmu4_99.awsui_show-outline_1wepg_1hmu4_102:not(#\\9){display:block}body[data-awsui-focus-visible=true] .awsui_native-input_1wepg_1hmu4_106:not(#\\9):focus+.awsui_outline_1wepg_1hmu4_99{display:block}.awsui_wrapper_1wepg_1hmu4_110:not(#\\9){min-width:0;word-break:break-word;display:flex}.awsui_label-wrapper_1wepg_1hmu4_116:not(#\\9){position:relative;display:flex;cursor:default}.awsui_content_1wepg_1hmu4_93:not(#\\9){min-width:0;word-break:break-word}.awsui_empty-content_1wepg_1hmu4_127:not(#\\9){width:0px}.awsui_description_1wepg_1hmu4_94:not(#\\9){color:var(--color-text-form-secondary-wh2xkx, #687078);font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal)}.awsui_description-bottom-padding_1wepg_1hmu4_137:not(#\\9){padding-bottom:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_label_1wepg_1hmu4_95:not(#\\9),.awsui_description_1wepg_1hmu4_94:not(#\\9){padding-left:var(--space-xs-inub5w, 8px)}.awsui_label-disabled_1wepg_1hmu4_145:not(#\\9),.awsui_description-disabled_1wepg_1hmu4_146:not(#\\9){color:var(--color-text-control-disabled-9r7x35, #aab7b8)}.awsui_control_1wepg_1hmu4_151:not(#\\9){position:relative}.awsui_control_1wepg_1hmu4_151>input:not(#\\9),.awsui_control_1wepg_1hmu4_151>svg:not(#\\9),.awsui_control_1wepg_1hmu4_151>.awsui_outline_1wepg_1hmu4_99:not(#\\9){position:absolute;width:100%;height:100%;top:0;left:0}.awsui_control_1wepg_1hmu4_151>input:not(#\\9){opacity:0;z-index:1;-webkit-user-select:none;user-select:none;cursor:default;margin:0}.awsui_option_1p2cx_1blxw_97:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:flex;align-items:flex-start;width:100%;min-width:0;box-sizing:border-box;color:inherit}.awsui_option_1p2cx_1blxw_97:not(#\\9):not(.awsui_disabled_1p2cx_1blxw_115){cursor:inherit}.awsui_option_1p2cx_1blxw_97.awsui_parent_1p2cx_1blxw_118:not(#\\9){font-weight:bold}.awsui_option_1p2cx_1blxw_97.awsui_parent_1p2cx_1blxw_118:not(#\\9):not(.awsui_disabled_1p2cx_1blxw_115):not(.awsui_highlighted_1p2cx_1blxw_121){color:var(--color-text-dropdown-group-label-ihg7kk, #545b64)}.awsui_content_1p2cx_1blxw_125:not(#\\9){width:100%;display:flex;flex-direction:column;min-width:0}.awsui_label-content_1p2cx_1blxw_132:not(#\\9){display:flex;justify-content:space-between;flex-wrap:wrap}.awsui_label_1p2cx_1blxw_132:not(#\\9),.awsui_tag_1p2cx_1blxw_139:not(#\\9),.awsui_label-tag_1p2cx_1blxw_140:not(#\\9){min-width:0;word-break:break-word}.awsui_label_1p2cx_1blxw_132:not(#\\9),.awsui_tag_1p2cx_1blxw_139:not(#\\9){flex-wrap:wrap}.awsui_label-prefix_1p2cx_1blxw_150:not(#\\9){font-weight:700}.awsui_label-tag_1p2cx_1blxw_140:not(#\\9){padding-left:var(--space-s-rd607g, 12px);flex:auto;text-align:right}.awsui_label-tag_1p2cx_1blxw_140:not(#\\9):empty{display:none}.awsui_tags_1p2cx_1blxw_163:not(#\\9),.awsui_description_1p2cx_1blxw_164:not(#\\9){font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal);color:var(--color-text-dropdown-item-secondary-tbkgco, #687078);flex-wrap:wrap}.awsui_tags_1p2cx_1blxw_163.awsui_highlighted_1p2cx_1blxw_121:not(#\\9),.awsui_description_1p2cx_1blxw_164.awsui_highlighted_1p2cx_1blxw_121:not(#\\9){color:var(--color-text-dropdown-item-secondary-hover-91iztt, #687078)}.awsui_tags_1p2cx_1blxw_163.awsui_selected_1p2cx_1blxw_175:not(#\\9),.awsui_description_1p2cx_1blxw_164.awsui_selected_1p2cx_1blxw_175:not(#\\9){color:var(--color-text-dropdown-item-secondary-tbkgco, #687078)}.awsui_tags_1p2cx_1blxw_163:not(#\\9){display:flex;align-items:stretch}.awsui_tag_1p2cx_1blxw_139:not(#\\9):not(:last-child){padding-right:var(--space-m-sptmsg, 16px)}.awsui_icon_1p2cx_1blxw_189:not(#\\9){padding-right:var(--space-xs-inub5w, 8px);align-content:center;display:flex;flex-shrink:0}.awsui_icon-size-big_1p2cx_1blxw_196:not(#\\9){padding-top:var(--space-option-icon-big-top-6g0v28, 2px)}.awsui_filtering-match-highlight_1p2cx_1blxw_200:not(#\\9){background-color:var(--color-background-dropdown-item-filter-match-ugvt1w, #f1faff);color:var(--color-text-dropdown-item-filter-match-qs8rft, #0073bb);font-weight:bold}.awsui_disabled_1p2cx_1blxw_115:not(#\\9){color:var(--color-text-dropdown-item-disabled-g9c04k, #aab7b8);pointer-events:none}.awsui_disabled_1p2cx_1blxw_115>.awsui_content_1p2cx_1blxw_125>.awsui_tags_1p2cx_1blxw_163:not(#\\9),.awsui_disabled_1p2cx_1blxw_115>.awsui_content_1p2cx_1blxw_125>.awsui_description_1p2cx_1blxw_164:not(#\\9){color:currentColor}.awsui_trigger-variant_1p2cx_1blxw_215:not(#\\9){white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.awsui_selectable-item_15o6u_2dgzl_93:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;position:relative;list-style:none;z-index:1;border:var(--border-divider-list-width-fsy9j8, 1px) solid transparent;border-top-color:var(--color-border-dropdown-item-default-062h8i, #eaeded);border-bottom-color:var(--color-border-dropdown-item-default-062h8i, #eaeded);background-color:var(--color-background-dropdown-item-default-2p2g22, #ffffff);color:var(--color-text-dropdown-item-default-wx27oj, #16191f);border-left-width:0;border-right-width:0;padding:calc(\n  var(--space-xxs-a6783b, 4px) + (var(--border-item-width-f0bcsu, 1px) - var(--border-divider-list-width-fsy9j8, 1px))\n) calc(var(--space-field-horizontal-wfaq0d, 8px) + var(--border-item-width-f0bcsu, 1px))}.awsui_selectable-item_15o6u_2dgzl_93.awsui_pad-bottom_15o6u_2dgzl_115:not(#\\9){padding-bottom:calc(calc(\n  var(--space-xxs-a6783b, 4px) + (var(--border-item-width-f0bcsu, 1px) - var(--border-divider-list-width-fsy9j8, 1px))\n) + var(--space-xxxs-rq3iss, 2px));border-bottom-color:transparent}.awsui_selectable-item_15o6u_2dgzl_93:not(#\\9):not(:first-child){margin-top:calc(-1 * var(--border-item-width-f0bcsu, 1px))}.awsui_selectable-item_15o6u_2dgzl_93.awsui_has-background_15o6u_2dgzl_124:not(#\\9){background-color:var(--color-background-dropdown-item-hover-6qhcjz, #f2f3f3)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_highlighted_15o6u_2dgzl_127:not(#\\9),.awsui_selectable-item_15o6u_2dgzl_93.awsui_selected_15o6u_2dgzl_127:not(#\\9){color:var(--color-text-dropdown-item-highlighted-t48eqn, #16191f);border-width:var(--border-item-width-f0bcsu, 1px);border-radius:var(--border-radius-item-fcd5og, 0px);padding:var(--space-xxs-a6783b, 4px) var(--space-field-horizontal-wfaq0d, 8px)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_highlighted_15o6u_2dgzl_127.awsui_pad-bottom_15o6u_2dgzl_115:not(#\\9),.awsui_selectable-item_15o6u_2dgzl_93.awsui_selected_15o6u_2dgzl_127.awsui_pad-bottom_15o6u_2dgzl_115:not(#\\9){padding-bottom:calc(var(--space-xxs-a6783b, 4px) + var(--space-xxxs-rq3iss, 2px))}.awsui_selectable-item_15o6u_2dgzl_93.awsui_highlighted_15o6u_2dgzl_127:not(#\\9){z-index:2;background-color:var(--color-background-dropdown-item-hover-6qhcjz, #f2f3f3);border-color:var(--color-border-dropdown-item-hover-5oku75, #879596)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_highlighted_15o6u_2dgzl_127.awsui_disabled_15o6u_2dgzl_141:not(#\\9){color:var(--color-text-dropdown-item-dimmed-94uait, #aab7b8);border-color:var(--color-border-dropdown-item-dimmed-hover-t0ewzv, #879596);background-color:var(--color-background-dropdown-item-dimmed-ta7f22, transparent)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_selected_15o6u_2dgzl_127:not(#\\9){background-color:var(--color-background-dropdown-item-selected-pz82cn, #f1faff)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_selected_15o6u_2dgzl_127.awsui_next-item-selected_15o6u_2dgzl_149:not(#\\9){border-bottom-left-radius:0;border-bottom-right-radius:0}.awsui_selectable-item_15o6u_2dgzl_93.awsui_selected_15o6u_2dgzl_127+.awsui_selectable-item_15o6u_2dgzl_93.awsui_selected_15o6u_2dgzl_127:not(#\\9){border-top-left-radius:0;border-top-right-radius:0}.awsui_selectable-item_15o6u_2dgzl_93.awsui_highlighted_15o6u_2dgzl_127.awsui_is-keyboard_15o6u_2dgzl_157:not(#\\9){border-color:var(--color-border-item-focused-t884ih, #0073bb);box-shadow:inset 0 0 0 var(--border-control-focus-ring-shadow-spread-oufv0y, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_parent_15o6u_2dgzl_161:not(#\\9){font-weight:bold;color:var(--color-text-dropdown-group-label-ihg7kk, #545b64)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_parent_15o6u_2dgzl_161:not(#\\9):not(.awsui_interactiveGroups_15o6u_2dgzl_165){border-top-color:var(--color-border-dropdown-group-u3qa6a, #eaeded);padding:var(--space-xs-inub5w, 8px)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_parent_15o6u_2dgzl_161.awsui_interactiveGroups_15o6u_2dgzl_165:not(#\\9){padding:calc(\n  var(--space-xs-inub5w, 8px) + (var(--border-item-width-f0bcsu, 1px) - var(--border-divider-list-width-fsy9j8, 1px))\n) calc(var(--space-field-horizontal-wfaq0d, 8px) + var(--border-item-width-f0bcsu, 1px))}.awsui_selectable-item_15o6u_2dgzl_93.awsui_parent_15o6u_2dgzl_161.awsui_interactiveGroups_15o6u_2dgzl_165.awsui_highlighted_15o6u_2dgzl_127:not(#\\9){color:var(--color-text-dropdown-item-highlighted-t48eqn, #16191f)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_parent_15o6u_2dgzl_161.awsui_interactiveGroups_15o6u_2dgzl_165.awsui_highlighted_15o6u_2dgzl_127:not(#\\9),.awsui_selectable-item_15o6u_2dgzl_93.awsui_parent_15o6u_2dgzl_161.awsui_interactiveGroups_15o6u_2dgzl_165.awsui_selected_15o6u_2dgzl_127:not(#\\9){padding:var(--space-xs-inub5w, 8px) var(--space-field-horizontal-wfaq0d, 8px)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_child_15o6u_2dgzl_180:not(#\\9){padding-left:calc(var(--space-xxl-eiq7g3, 32px) + var(--border-item-width-f0bcsu, 1px))}.awsui_selectable-item_15o6u_2dgzl_93.awsui_child_15o6u_2dgzl_180.awsui_highlighted_15o6u_2dgzl_127:not(#\\9),.awsui_selectable-item_15o6u_2dgzl_93.awsui_child_15o6u_2dgzl_180.awsui_selected_15o6u_2dgzl_127:not(#\\9){padding-left:var(--space-xxl-eiq7g3, 32px)}.awsui_selectable-item_15o6u_2dgzl_93.awsui_disabled_15o6u_2dgzl_141:not(#\\9){color:var(--color-text-dropdown-item-disabled-g9c04k, #aab7b8)}.awsui_selectable-item_15o6u_2dgzl_93:not(#\\9):not(.awsui_disabled_15o6u_2dgzl_141):not(.awsui_parent_15o6u_2dgzl_161){cursor:pointer}.awsui_selectable-item_15o6u_2dgzl_93.awsui_interactiveGroups_15o6u_2dgzl_165:not(#\\9):not(.awsui_disabled_15o6u_2dgzl_141){cursor:pointer}.awsui_selectable-item_15o6u_2dgzl_93.awsui_virtual_15o6u_2dgzl_195:not(#\\9){position:absolute;top:var(--border-dropdown-virtual-offset-width-fgy998, 0px);left:0;width:100%;box-sizing:border-box}.awsui_selectable-item_15o6u_2dgzl_93.awsui_virtual_15o6u_2dgzl_195:not(#\\9):first-of-type:not(.awsui_selected_15o6u_2dgzl_127,.awsui_highlighted_15o6u_2dgzl_127){border-top-color:var(--color-border-dropdown-item-top-l8o9uk, #eaeded)}.awsui_measure-strut_15o6u_2dgzl_206:not(#\\9){position:absolute;pointer-events:none;height:100%;width:100%;top:0;left:0;padding-top:var(--border-divider-list-width-fsy9j8, 1px)}.awsui_measure-strut-first_15o6u_2dgzl_215:not(#\\9){padding-bottom:var(--border-divider-list-width-fsy9j8, 1px)}.awsui_screenreader-content_15o6u_2dgzl_219:not(#\\9){position:absolute !important;top:-9999px !important;left:-9999px !important}.awsui_option-content_15o6u_2dgzl_225:not(#\\9){}.awsui_root_10m3l_zru9u_97:not(#\\9){display:flex;align-content:stretch}.awsui_token_10m3l_zru9u_102:not(#\\9){border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-item-selected-bmiwgz, #0073bb);display:flex;align-items:stretch;background:var(--color-background-item-selected-8e1q8b, #f1faff);border-radius:var(--border-radius-token-17x9l6, 2px);color:var(--color-text-body-default-rlujvh, #16191f);height:100%;box-sizing:border-box}.awsui_show-operation_10m3l_zru9u_113:not(#\\9){border-left:none;border-top-left-radius:0;border-bottom-left-radius:0}.awsui_select_10m3l_zru9u_119:not(#\\9){}.awsui_token-content_10m3l_zru9u_123:not(#\\9){padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-field-horizontal-wfaq0d, 8px)}.awsui_dismiss-button_10m3l_zru9u_127:not(#\\9){width:30px;margin:0;border:none;padding:0 var(--space-xxs-a6783b, 4px);color:var(--color-text-interactive-default-djvtmz, #545b64);background-color:transparent;border-left:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-item-selected-bmiwgz, #0073bb)}body[data-awsui-focus-visible=true] .awsui_dismiss-button_10m3l_zru9u_127:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_dismiss-button_10m3l_zru9u_127:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-filtering-token-dismiss-button-focus-outline-gutter-s0rper, 0px) - 1px)}body[data-awsui-focus-visible=true] .awsui_dismiss-button_10m3l_zru9u_127:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-filtering-token-dismiss-button-focus-outline-gutter-s0rper, 0px));top:calc(-1 * var(--space-filtering-token-dismiss-button-focus-outline-gutter-s0rper, 0px));width:calc(100% + 2 * var(--space-filtering-token-dismiss-button-focus-outline-gutter-s0rper, 0px));height:calc(100% + 2 * var(--space-filtering-token-dismiss-button-focus-outline-gutter-s0rper, 0px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_dismiss-button_10m3l_zru9u_127:not(#\\9):focus{outline:none;text-decoration:none}.awsui_dismiss-button_10m3l_zru9u_127:not(#\\9):hover{cursor:pointer;color:var(--color-text-interactive-hover-55cagk, #16191f)}.awsui_token-disabled_10m3l_zru9u_163:not(#\\9){border-color:var(--color-border-control-disabled-n4rl6j, #d5dbdb);background-color:var(--color-background-container-content-pb0lp5, #ffffff);color:var(--color-text-disabled-tmkonv, #aab7b8);pointer-events:none}.awsui_token-disabled_10m3l_zru9u_163>.awsui_dismiss-button_10m3l_zru9u_127:not(#\\9){color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);border-color:var(--color-border-control-disabled-n4rl6j, #d5dbdb)}.awsui_root_1fn7j_o7h6o_93:not(#\\9){position:absolute;width:100%;height:100%;top:0;left:0}.awsui_root_1fn7j_o7h6o_93>.awsui_styled-box_1fn7j_o7h6o_100:not(#\\9){fill:var(--color-background-control-default-x4w3j0, #ffffff);stroke:var(--color-border-control-default-1igjc0, #687078);stroke-width:var(--border-field-width-2vpp5j, 1px);transition:fill var(--motion-duration-transition-quick-dm1zcq, 90ms) var(--motion-easing-transition-quick-74hmmw, linear), stroke var(--motion-duration-transition-quick-dm1zcq, 90ms) var(--motion-easing-transition-quick-74hmmw, linear)}.awsui_root_1fn7j_o7h6o_93>.awsui_styled-box-checked_1fn7j_o7h6o_106:not(#\\9),.awsui_root_1fn7j_o7h6o_93>.awsui_styled-box-indeterminate_1fn7j_o7h6o_106:not(#\\9){fill:var(--color-background-control-checked-q75knx, #0073bb);stroke:var(--color-border-control-checked-tl007y, #0073bb)}.awsui_root_1fn7j_o7h6o_93>.awsui_styled-box-disabled_1fn7j_o7h6o_110:not(#\\9){fill:var(--color-background-control-disabled-vkotqk, #d5dbdb);stroke:var(--color-border-control-disabled-n4rl6j, #d5dbdb)}@media (prefers-reduced-motion: reduce){.awsui_root_1fn7j_o7h6o_93>.awsui_styled-box_1fn7j_o7h6o_100:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_root_1fn7j_o7h6o_93>.awsui_styled-box_1fn7j_o7h6o_100:not(#\\9),.awsui-mode-entering .awsui_root_1fn7j_o7h6o_93>.awsui_styled-box_1fn7j_o7h6o_100:not(#\\9){animation:none;transition:none}.awsui_root_1fn7j_o7h6o_93>.awsui_styled-line_1fn7j_o7h6o_124:not(#\\9){stroke:var(--color-foreground-control-default-5f7j2k, #ffffff);stroke-width:2;fill:none}.awsui_root_1fn7j_o7h6o_93>.awsui_styled-line-disabled_1fn7j_o7h6o_129:not(#\\9){stroke:var(--color-foreground-control-disabled-4rcx89, #ffffff)}.awsui_root_k2y2q_1ongl_93.awsui_root_k2y2q_1ongl_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:flex}.awsui_checkbox-control_k2y2q_1ongl_107:not(#\\9){margin-top:calc((var(--line-height-body-m-4ax85e, 22px) - var(--size-control-q9uk7g, 14px)) / 2);min-height:var(--size-control-q9uk7g, 14px);min-width:var(--size-control-q9uk7g, 14px);height:var(--size-control-q9uk7g, 14px);width:var(--size-control-q9uk7g, 14px)}.awsui_outline_k2y2q_1ongl_115:not(#\\9){position:relative}.awsui_outline_k2y2q_1ongl_115:not(#\\9){outline:2px dotted transparent;outline-offset:calc(2px - 1px)}.awsui_outline_k2y2q_1ongl_115:not(#\\9)::before{content:\" \";display:block;position:absolute;left:calc(-1 * 2px);top:calc(-1 * 2px);width:calc(100% + 2 * 2px);height:calc(100% + 2 * 2px);border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}@keyframes awsui_spinner-rotator_1612d_z0eew_1{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes awsui_spinner-line-left_1612d_z0eew_1{0%{transform:rotate(0deg)}50%{transform:rotate(120deg)}100%{transform:rotate(0deg)}}@keyframes awsui_spinner-line-right_1612d_z0eew_1{0%{transform:rotate(90deg)}50%{transform:rotate(-30deg)}100%{transform:rotate(90deg)}}.awsui_root_1612d_z0eew_127:not(#\\9){display:inline-block;vertical-align:top;animation:awsui_spinner-rotator_1612d_z0eew_1 0.7s linear infinite;box-sizing:border-box;line-height:0}.awsui_root_1612d_z0eew_127.awsui_size-normal_1612d_z0eew_135:not(#\\9){width:var(--size-icon-normal-as5jb3, 16px);height:var(--size-icon-normal-as5jb3, 16px);padding:calc((var(--size-icon-normal-as5jb3, 16px) - 12px) / 2);margin-top:calc((var(--line-height-body-m-4ax85e, 22px) - var(--size-icon-normal-as5jb3, 16px)) / 2);margin-bottom:calc((var(--line-height-body-m-4ax85e, 22px) - var(--size-icon-normal-as5jb3, 16px)) / 2);box-sizing:border-box}.awsui_root_1612d_z0eew_127.awsui_size-big_1612d_z0eew_143:not(#\\9){width:var(--size-icon-big-rl4tdi, 32px);height:var(--size-icon-big-rl4tdi, 32px);padding:calc((var(--size-icon-big-rl4tdi, 32px) - 24px) / 2);margin-top:calc((var(--line-height-heading-xl-44izce, 36px) - var(--size-icon-big-rl4tdi, 32px)) / 2);margin-bottom:calc((var(--line-height-heading-xl-44izce, 36px) - var(--size-icon-big-rl4tdi, 32px)) / 2);box-sizing:border-box}.awsui_root_1612d_z0eew_127.awsui_size-large_1612d_z0eew_151:not(#\\9){width:var(--size-icon-large-x6jwev, 48px);height:var(--size-icon-large-x6jwev, 48px);padding:calc((var(--size-icon-large-x6jwev, 48px) - 36px) / 2);margin-top:calc((var(--line-height-display-l-aqze16, 56px) - var(--size-icon-large-x6jwev, 48px)) / 2);margin-bottom:calc((var(--line-height-display-l-aqze16, 56px) - var(--size-icon-large-x6jwev, 48px)) / 2);box-sizing:border-box}.awsui_root_1612d_z0eew_127.awsui_variant-normal_1612d_z0eew_159:not(#\\9){color:currentColor}.awsui_root_1612d_z0eew_127.awsui_variant-disabled_1612d_z0eew_162:not(#\\9){color:var(--color-text-interactive-disabled-k4q23b, #aab7b8)}.awsui_root_1612d_z0eew_127.awsui_variant-inverted_1612d_z0eew_165:not(#\\9){color:var(--color-text-inverted-obwu99, #ffffff)}.awsui_circle_1612d_z0eew_169:not(#\\9){display:inline-block;width:50%;height:100%;overflow:hidden;position:relative}.awsui_circle_1612d_z0eew_169:not(#\\9):after{position:absolute;box-sizing:border-box;content:\"\";border-radius:50%;border:2px solid;border-right-color:transparent;border-bottom-color:transparent}.awsui_circle_1612d_z0eew_169:not(#\\9):after{animation:1.5s ease-in-out infinite;top:0;left:0;height:100%;width:200%}.awsui_circle_1612d_z0eew_169.awsui_circle-left_1612d_z0eew_193:not(#\\9):after{left:0;animation-name:awsui_spinner-line-left_1612d_z0eew_1}.awsui_circle_1612d_z0eew_169.awsui_circle-right_1612d_z0eew_198:not(#\\9):after{left:-100%;animation-name:awsui_spinner-line-right_1612d_z0eew_1}.awsui_icon-shake_1cbgc_1vmf1_97:not(#\\9){display:inline-block;animation:awsui_awsui-motion-shake-horizontally_1cbgc_1vmf1_1 var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@keyframes awsui_awsui-motion-shake-horizontally_1cbgc_1vmf1_1{0%{transform:translateX(-5px);animation-timing-function:linear}50%{transform:translateX(5px);animation-timing-function:var(--motion-easing-refresh-only-a-yzzzm8, cubic-bezier(0, 0, 0, 1))}100%{transform:translateX(0px)}}@media (prefers-reduced-motion: reduce){.awsui_icon-shake_1cbgc_1vmf1_97:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_icon-shake_1cbgc_1vmf1_97:not(#\\9),.awsui-mode-entering .awsui_icon-shake_1cbgc_1vmf1_97:not(#\\9){animation:none;transition:none}.awsui_container-fade-in_1cbgc_1vmf1_125:not(#\\9){animation:awsui_awsui-motion-fade-in-0_1cbgc_1vmf1_1 var(--motion-duration-refresh-only-medium-af0v35, 165ms) var(--motion-easing-refresh-only-a-yzzzm8, cubic-bezier(0, 0, 0, 1))}@keyframes awsui_awsui-motion-fade-in-0_1cbgc_1vmf1_1{from{opacity:0}to{opacity:1}}@media (prefers-reduced-motion: reduce){.awsui_container-fade-in_1cbgc_1vmf1_125:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_container-fade-in_1cbgc_1vmf1_125:not(#\\9),.awsui-mode-entering .awsui_container-fade-in_1cbgc_1vmf1_125:not(#\\9){animation:none;transition:none}.awsui_root_1cbgc_1vmf1_147:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto}.awsui_root_1cbgc_1vmf1_147.awsui_status-error_1cbgc_1vmf1_156:not(#\\9){color:var(--color-text-status-error-a5tqz1, #d13212)}.awsui_root_1cbgc_1vmf1_147.awsui_status-warning_1cbgc_1vmf1_159:not(#\\9){color:var(--color-text-status-warning-g3wln0, #906806)}.awsui_root_1cbgc_1vmf1_147.awsui_status-success_1cbgc_1vmf1_162:not(#\\9){color:var(--color-text-status-success-a6oxaq, #1d8102)}.awsui_root_1cbgc_1vmf1_147.awsui_status-info_1cbgc_1vmf1_165:not(#\\9){color:var(--color-text-status-info-lfbxn4, #0073bb)}.awsui_root_1cbgc_1vmf1_147.awsui_status-stopped_1cbgc_1vmf1_168:not(#\\9){color:var(--color-text-status-inactive-8fmnw5, #687078)}.awsui_root_1cbgc_1vmf1_147.awsui_status-pending_1cbgc_1vmf1_171:not(#\\9){color:var(--color-text-status-inactive-8fmnw5, #687078)}.awsui_root_1cbgc_1vmf1_147.awsui_status-in-progress_1cbgc_1vmf1_174:not(#\\9){color:var(--color-text-status-inactive-8fmnw5, #687078)}.awsui_root_1cbgc_1vmf1_147.awsui_status-loading_1cbgc_1vmf1_177:not(#\\9){color:var(--color-text-status-inactive-8fmnw5, #687078)}.awsui_root_1cbgc_1vmf1_147.awsui_color-override-red_1cbgc_1vmf1_180:not(#\\9){color:var(--color-text-status-error-a5tqz1, #d13212)}.awsui_root_1cbgc_1vmf1_147.awsui_color-override-grey_1cbgc_1vmf1_183:not(#\\9){color:var(--color-text-status-inactive-8fmnw5, #687078)}.awsui_root_1cbgc_1vmf1_147.awsui_color-override-blue_1cbgc_1vmf1_186:not(#\\9){color:var(--color-text-status-info-lfbxn4, #0073bb)}.awsui_root_1cbgc_1vmf1_147.awsui_color-override-green_1cbgc_1vmf1_189:not(#\\9){color:var(--color-text-status-success-a6oxaq, #1d8102)}.awsui_container_1cbgc_1vmf1_125.awsui_display-inline_1cbgc_1vmf1_193:not(#\\9){min-width:0;word-break:break-word;display:inline}.awsui_container_1cbgc_1vmf1_125.awsui_display-inline_1cbgc_1vmf1_193>.awsui_icon_1cbgc_1vmf1_97:not(#\\9){white-space:nowrap}.awsui_container_1cbgc_1vmf1_125.awsui_display-inline-block_1cbgc_1vmf1_201:not(#\\9){display:inline-block;word-wrap:break-word;word-break:break-all}.awsui_container_1cbgc_1vmf1_125.awsui_display-inline-block_1cbgc_1vmf1_201>.awsui_icon_1cbgc_1vmf1_97:not(#\\9){padding-right:var(--space-xxs-a6783b, 4px)}.awsui_overflow-ellipsis_1cbgc_1vmf1_210:not(#\\9){max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;vertical-align:text-bottom}.awsui_root_4yi2u_1w9vz_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:flex}.awsui_outline_4yi2u_1w9vz_107:not(#\\9){position:relative}.awsui_outline_4yi2u_1w9vz_107:not(#\\9){outline:2px dotted transparent;outline-offset:calc(2px - 1px)}.awsui_outline_4yi2u_1w9vz_107:not(#\\9)::before{content:\" \";display:block;position:absolute;left:calc(-1 * 2px);top:calc(-1 * 2px);width:calc(100% + 2 * 2px);height:calc(100% + 2 * 2px);border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_toggle-control_4yi2u_1w9vz_126:not(#\\9){margin-top:calc((var(--line-height-body-m-4ax85e, 22px) - 16px) / 2);min-height:16px;min-width:24px;height:16px;width:24px;background:var(--color-background-toggle-default-six3cw, #545b64);border-radius:8px}.awsui_toggle-control-checked_4yi2u_1w9vz_135:not(#\\9){background:var(--color-background-control-checked-q75knx, #0073bb)}.awsui_toggle-control-disabled_4yi2u_1w9vz_138:not(#\\9){background:var(--color-background-control-disabled-vkotqk, #d5dbdb)}.awsui_toggle-control-disabled_4yi2u_1w9vz_138.awsui_toggle-control-checked_4yi2u_1w9vz_135:not(#\\9){background:var(--color-background-toggle-checked-disabled-o63zu0, #99cbe4)}.awsui_toggle-handle_4yi2u_1w9vz_145:not(#\\9){display:block;position:absolute;border-radius:6px;background:var(--color-foreground-control-default-5f7j2k, #ffffff);box-shadow:1px 1px rgba(0, 0, 0, 0.25);width:12px;height:12px;top:2px;left:2px;transition:transform var(--motion-duration-fast-pml190, 90ms) var(--motion-easing-ease-out-quart-x76njy, cubic-bezier(0.165, 0.84, 0.44, 1)), background-color var(--motion-duration-fast-pml190, 90ms) var(--motion-easing-ease-out-quart-x76njy, cubic-bezier(0.165, 0.84, 0.44, 1))}.awsui_toggle-handle-checked_4yi2u_1w9vz_157:not(#\\9){transform:translateX(8px)}.awsui_toggle-handle-disabled_4yi2u_1w9vz_160:not(#\\9){background:var(--color-foreground-control-disabled-4rcx89, #ffffff);box-shadow:none}@media (prefers-reduced-motion: reduce){.awsui_toggle-handle_4yi2u_1w9vz_145:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_toggle-handle_4yi2u_1w9vz_145:not(#\\9),.awsui-mode-entering .awsui_toggle-handle_4yi2u_1w9vz_145:not(#\\9){animation:none;transition:none}.awsui_error-icon-shake-wrapper_14mhv_u7hot_97:not(#\\9){animation:awsui_awsui-motion-shake-horizontally_14mhv_u7hot_1 var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@keyframes awsui_awsui-motion-shake-horizontally_14mhv_u7hot_1{0%{transform:translateX(-5px);animation-timing-function:linear}50%{transform:translateX(5px);animation-timing-function:var(--motion-easing-refresh-only-a-yzzzm8, cubic-bezier(0, 0, 0, 1))}100%{transform:translateX(0px)}}@media (prefers-reduced-motion: reduce){.awsui_error-icon-shake-wrapper_14mhv_u7hot_97:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_error-icon-shake-wrapper_14mhv_u7hot_97:not(#\\9),.awsui-mode-entering .awsui_error-icon-shake-wrapper_14mhv_u7hot_97:not(#\\9){animation:none;transition:none}.awsui_error-icon-scale-wrapper_14mhv_u7hot_124:not(#\\9){animation:awsui_awsui-motion-scale-popup_14mhv_u7hot_1 var(--motion-duration-refresh-only-medium-af0v35, 165ms) var(--motion-easing-refresh-only-a-yzzzm8, cubic-bezier(0, 0, 0, 1))}@keyframes awsui_awsui-motion-scale-popup_14mhv_u7hot_1{0%{transform:scale(0.95)}100%{transform:scale(1)}}@media (prefers-reduced-motion: reduce){.awsui_error-icon-scale-wrapper_14mhv_u7hot_124:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_error-icon-scale-wrapper_14mhv_u7hot_124:not(#\\9),.awsui-mode-entering .awsui_error-icon-scale-wrapper_14mhv_u7hot_124:not(#\\9){animation:none;transition:none}.awsui_error_14mhv_u7hot_97:not(#\\9){animation:awsui_awsui-motion-fade-in-0_14mhv_u7hot_1 var(--motion-duration-refresh-only-medium-af0v35, 165ms) var(--motion-easing-refresh-only-a-yzzzm8, cubic-bezier(0, 0, 0, 1))}@keyframes awsui_awsui-motion-fade-in-0_14mhv_u7hot_1{from{opacity:0}to{opacity:1}}@media (prefers-reduced-motion: reduce){.awsui_error_14mhv_u7hot_97:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_error_14mhv_u7hot_97:not(#\\9),.awsui-mode-entering .awsui_error_14mhv_u7hot_97:not(#\\9){animation:none;transition:none}.awsui_root_14mhv_u7hot_168:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;box-sizing:border-box}.awsui_label_14mhv_u7hot_182:not(#\\9){box-sizing:border-box;color:var(--color-text-form-label-ug2d1t, #16191f);display:inline;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);font-weight:var(--font-display-label-weight-w2bkol, 400);margin-right:var(--space-xs-inub5w, 8px)}.awsui_label_14mhv_u7hot_182:not(#\\9):only-child{margin:0}.awsui_info_14mhv_u7hot_195:not(#\\9){padding-left:var(--space-xs-inub5w, 8px);border-left:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_description_14mhv_u7hot_200:not(#\\9),.awsui_constraint_14mhv_u7hot_201:not(#\\9){color:var(--color-text-form-secondary-wh2xkx, #687078);font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal)}.awsui_hints_14mhv_u7hot_208:not(#\\9),.awsui_constraint-has-error_14mhv_u7hot_209:not(#\\9){padding-top:var(--space-xxs-a6783b, 4px)}.awsui_secondary-control_14mhv_u7hot_213:not(#\\9){}.awsui_controls_14mhv_u7hot_217:not(#\\9):not(.awsui_label-hidden_14mhv_u7hot_217){padding-top:var(--space-xxs-a6783b, 4px)}.awsui_control_14mhv_u7hot_217:not(#\\9){min-width:0;word-break:break-word}.awsui_error_14mhv_u7hot_97:not(#\\9){color:var(--color-text-status-error-a5tqz1, #d13212);font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal);display:flex;align-items:flex-start}.awsui_error__message_14mhv_u7hot_235:not(#\\9){margin-left:var(--space-xxs-a6783b, 4px)}.awsui_visually-hidden_14mhv_u7hot_239:not(#\\9){position:absolute !important;top:-9999px !important;left:-9999px !important}.awsui_root_14iqq_164sr_97:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;word-wrap:break-word;position:relative}.awsui_root_14iqq_164sr_97.awsui_fit-height_14iqq_164sr_111:not(#\\9){display:flex;flex-direction:column;height:100%}.awsui_root_14iqq_164sr_97.awsui_fit-height_14iqq_164sr_111.awsui_with-side-media_14iqq_164sr_116:not(#\\9){flex-direction:row}.awsui_root_14iqq_164sr_97.awsui_variant-default_14iqq_164sr_119:not(#\\9),.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9){border-radius:var(--border-radius-container-y85mnh, 0px);box-sizing:border-box;background-color:var(--color-background-container-content-pb0lp5, #ffffff)}.awsui_root_14iqq_164sr_97.awsui_variant-default_14iqq_164sr_119:not(#\\9)::before,.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9)::before{content:\"\";position:absolute;left:0px;top:0px;width:100%;height:100%;pointer-events:none;background:transparent;box-sizing:border-box;border-color:transparent;border-top:var(--border-container-top-width-qyo5h4, 1px) solid var(--color-border-container-top-ige66g, #eaeded);border-radius:var(--border-radius-container-y85mnh, 0px);z-index:1}.awsui_root_14iqq_164sr_97.awsui_variant-default_14iqq_164sr_119:not(#\\9)::after,.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9)::after{content:\"\";position:absolute;left:0px;top:0px;width:100%;height:100%;pointer-events:none;background:transparent;box-sizing:border-box;box-shadow:var(--shadow-container-jwc36p, 0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15));border-radius:var(--border-radius-container-y85mnh, 0px);mix-blend-mode:multiply}@media screen and (-ms-high-contrast: active){.awsui_root_14iqq_164sr_97.awsui_variant-default_14iqq_164sr_119:not(#\\9),.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9){border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-container-top-ige66g, #eaeded)}}.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9):not(:last-child),.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9):not(:last-child)::before,.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9):not(:last-child)::after{border-bottom-right-radius:0;border-bottom-left-radius:0}.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119+.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9),.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119+.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9)::before,.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119+.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9)::after{border-top-left-radius:0;border-top-right-radius:0}.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119+.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9)::before{border-top:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119+.awsui_root_14iqq_164sr_97.awsui_variant-stacked_14iqq_164sr_119:not(#\\9)::after{box-shadow:var(--shadow-container-stacked-q43z60, 0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15))}.awsui_root_14iqq_164sr_97.awsui_sticky-enabled_14iqq_164sr_172:not(#\\9)::before{top:calc(-1 * var(--border-container-top-width-qyo5h4, 1px))}.awsui_root_14iqq_164sr_97.awsui_sticky-enabled_14iqq_164sr_172.awsui_variant-stacked_14iqq_164sr_119:not(#\\9)::before{top:calc(-1 * var(--border-divider-section-width-9dl636, 1px))}.awsui_with-side-media_14iqq_164sr_116:not(#\\9){display:flex;flex-direction:row}.awsui_with-top-media_14iqq_164sr_184:not(#\\9){display:flex;flex-direction:column}.awsui_content-wrapper_14iqq_164sr_189:not(#\\9){display:flex;flex-direction:column;width:100%}.awsui_content-wrapper-fit-height_14iqq_164sr_194:not(#\\9){height:100%;overflow:hidden}.awsui_media_14iqq_164sr_199:not(#\\9){overflow:hidden;flex-shrink:0}.awsui_media_14iqq_164sr_199 img:not(#\\9),.awsui_media_14iqq_164sr_199 video:not(#\\9),.awsui_media_14iqq_164sr_199 picture:not(#\\9){width:100%;height:100%;object-fit:cover;object-position:center}.awsui_media_14iqq_164sr_199 iframe:not(#\\9){width:100%;height:100%;border:0}.awsui_media-top_14iqq_164sr_216:not(#\\9){max-height:66%;border-top-left-radius:var(--border-radius-container-y85mnh, 0px);border-top-right-radius:var(--border-radius-container-y85mnh, 0px)}.awsui_media-side_14iqq_164sr_221:not(#\\9){max-width:66%;border-top-left-radius:var(--border-radius-container-y85mnh, 0px);border-bottom-left-radius:var(--border-radius-container-y85mnh, 0px)}.awsui_header_14iqq_164sr_227:not(#\\9){background-color:var(--color-background-container-header-pmlnr3, #fafafa);border-top-left-radius:var(--border-radius-container-y85mnh, 0px);border-top-right-radius:var(--border-radius-container-y85mnh, 0px)}.awsui_header_14iqq_164sr_227.awsui_header-with-media_14iqq_164sr_232:not(#\\9){background:none}.awsui_header_14iqq_164sr_227.awsui_header-with-media_14iqq_164sr_232:not(#\\9):not(:empty){border-bottom:none}.awsui_header-sticky-disabled_14iqq_164sr_238:not(#\\9){position:relative;z-index:1}.awsui_header-sticky-enabled_14iqq_164sr_242:not(#\\9){top:0;position:sticky;z-index:800}.awsui_header-stuck_14iqq_164sr_248:not(#\\9){border-radius:0}.awsui_header-stuck_14iqq_164sr_248:not(#\\9)::before{border:0}.awsui_header-stuck_14iqq_164sr_248:not(#\\9):not(.awsui_header-variant-cards_14iqq_164sr_254){box-shadow:var(--shadow-sticky-embedded-2khilm, 0px 1px 4px -2px rgba(0, 28, 36, 0.5))}.awsui_header-dynamic-height_14iqq_164sr_257.awsui_header-stuck_14iqq_164sr_248:not(#\\9){margin-bottom:calc(var(--line-height-heading-xl-44izce, 36px) - var(--line-height-heading-l-z752l3, 22px))}.awsui_header_14iqq_164sr_227:not(#\\9):not(:empty){border-bottom:var(--border-container-sticky-width-z1hq8m, 1px) solid var(--color-border-container-divider-4z4y7u, #eaeded)}.awsui_header_14iqq_164sr_227.awsui_with-paddings_14iqq_164sr_263:not(#\\9){padding:var(--space-container-header-top-isuu42, 12px) var(--space-container-horizontal-6u2610, 20px) var(--space-container-header-bottom-7poudk, 12px)}.awsui_header_14iqq_164sr_227.awsui_with-paddings_14iqq_164sr_263.awsui_header-variant-cards_14iqq_164sr_254:not(#\\9){padding:var(--space-container-header-top-isuu42, 12px) var(--space-container-horizontal-6u2610, 20px)}.awsui_header_14iqq_164sr_227.awsui_with-hidden-content_14iqq_164sr_269:not(#\\9){border-bottom-left-radius:var(--border-radius-container-y85mnh, 0px);border-bottom-right-radius:var(--border-radius-container-y85mnh, 0px)}.awsui_header-variant-cards_14iqq_164sr_254:not(#\\9){border-radius:var(--border-radius-container-y85mnh, 0px);box-sizing:border-box}.awsui_header-variant-cards_14iqq_164sr_254:not(#\\9):not(.awsui_header-sticky-enabled_14iqq_164sr_242){position:relative}.awsui_header-variant-cards_14iqq_164sr_254:not(#\\9)::before{content:\"\";position:absolute;left:0px;top:0px;width:100%;height:100%;pointer-events:none;background:transparent;box-sizing:border-box;border-color:transparent;border-top:var(--border-container-top-width-qyo5h4, 1px) solid var(--color-border-container-top-ige66g, #eaeded);border-radius:var(--border-radius-container-y85mnh, 0px);z-index:1}.awsui_header-variant-cards_14iqq_164sr_254:not(#\\9)::after{content:\"\";position:absolute;left:0px;top:0px;width:100%;height:100%;pointer-events:none;background:transparent;box-sizing:border-box;box-shadow:var(--shadow-container-jwc36p, 0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15));border-radius:var(--border-radius-container-y85mnh, 0px);mix-blend-mode:multiply}@media screen and (-ms-high-contrast: active){.awsui_header-variant-cards_14iqq_164sr_254:not(#\\9){border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-container-top-ige66g, #eaeded)}}.awsui_header-variant-cards_14iqq_164sr_254.awsui_header-stuck_14iqq_164sr_248:not(#\\9)::after,.awsui_header-variant-cards_14iqq_164sr_254.awsui_header-stuck_14iqq_164sr_248:not(#\\9)::before{border:0;border-top-left-radius:0;border-top-right-radius:0}.awsui_header-variant-full-page_14iqq_164sr_319.awsui_header-stuck_14iqq_164sr_248:not(#\\9){box-shadow:none}.awsui_header-variant-full-page_14iqq_164sr_319.awsui_header-stuck_14iqq_164sr_248:not(#\\9)::after{content:\"\";position:absolute;right:0;left:0;bottom:0;top:0;box-shadow:var(--shadow-sticky-fftr9t, 0px 1px 4px -2px rgba(0, 28, 36, 0.5));clip-path:polygon(-999% 100%, 999% 100%, 999% 999%, -999% 999%)}.awsui_dark-header_14iqq_164sr_337:not(#\\9){background-color:var(--color-background-layout-main-okygtx, #f2f3f3);color:var(--color-text-body-default-rlujvh, #16191f)}.awsui_content_14iqq_164sr_189:not(#\\9){flex:1}.awsui_content-fit-height_14iqq_164sr_345:not(#\\9){overflow:auto}.awsui_content_14iqq_164sr_189.awsui_with-paddings_14iqq_164sr_263:not(#\\9){padding:var(--space-scaled-l-x5pubp, 20px) var(--space-container-horizontal-6u2610, 20px)}.awsui_header_14iqq_164sr_227+.awsui_content_14iqq_164sr_189.awsui_with-paddings_14iqq_164sr_263:not(#\\9){padding-top:var(--space-container-content-top-smfayu, 16px)}.awsui_header_14iqq_164sr_227+.awsui_content_14iqq_164sr_189.awsui_with-paddings_14iqq_164sr_263.awsui_content-with-media_14iqq_164sr_354:not(#\\9){padding-top:0}.awsui_footer_14iqq_164sr_358.awsui_with-paddings_14iqq_164sr_263:not(#\\9){padding:var(--space-scaled-s-gczsk7, 12px) var(--space-container-horizontal-6u2610, 20px)}.awsui_footer_14iqq_164sr_358.awsui_with-divider_14iqq_164sr_361:not(#\\9){border-top:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_root_qk1j1_1yyt1_93:not(#\\9){}.awsui_textarea_qk1j1_1yyt1_97:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;resize:auto;cursor:text;white-space:pre-wrap;padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-field-horizontal-wfaq0d, 8px);color:var(--color-text-body-default-rlujvh, #16191f);max-width:100%;width:100%;display:block;box-sizing:border-box;background-color:var(--color-background-input-default-66bx4w, #ffffff);border-radius:var(--border-radius-input-jnmu21, 2px);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-default-sm4mjn, #687078);font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px)}.awsui_textarea_qk1j1_1yyt1_97.awsui_textarea-readonly_qk1j1_1yyt1_123:not(#\\9){background-color:var(--color-background-input-default-66bx4w, #ffffff);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-disabled-73z8co, #eaeded)}.awsui_textarea_qk1j1_1yyt1_97:not(#\\9)::placeholder{color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic;opacity:1}.awsui_textarea_qk1j1_1yyt1_97:not(#\\9):-ms-input-placeholder{color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic}.awsui_textarea_qk1j1_1yyt1_97:not(#\\9):focus{outline:2px dotted transparent;border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-item-focused-t884ih, #0073bb);border-radius:var(--border-radius-input-jnmu21, 2px);box-shadow:0 0 0 var(--border-control-focus-ring-shadow-spread-oufv0y, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_textarea_qk1j1_1yyt1_97:not(#\\9):invalid{box-shadow:none}.awsui_textarea_qk1j1_1yyt1_97:not(#\\9):disabled{background-color:var(--color-background-input-disabled-0azib6, #eaeded);border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-input-disabled-73z8co, #eaeded);color:var(--color-text-input-disabled-26hyji, #879596);cursor:auto;cursor:default}.awsui_textarea_qk1j1_1yyt1_97:not(#\\9):disabled::placeholder{color:var(--color-text-input-placeholder-disabled-1lvfii, #687078);opacity:1}.awsui_textarea_qk1j1_1yyt1_97:not(#\\9):disabled:-ms-input-placeholder{color:var(--color-text-input-placeholder-disabled-1lvfii, #687078)}.awsui_textarea_qk1j1_1yyt1_97.awsui_textarea-invalid_qk1j1_1yyt1_159:not(#\\9){color:var(--color-text-status-error-a5tqz1, #d13212);border-color:var(--color-text-status-error-a5tqz1, #d13212);padding-left:calc(\n  var(--space-field-horizontal-wfaq0d, 8px) - (var(--border-invalid-width-5eyrjt, 4px) - var(--border-field-width-2vpp5j, 1px))\n);border-left-width:var(--border-invalid-width-5eyrjt, 4px)}.awsui_textarea_qk1j1_1yyt1_97.awsui_textarea-invalid_qk1j1_1yyt1_159:not(#\\9):focus{box-shadow:0 0 0 var(--border-control-invalid-focus-ring-shadow-spread-mejja6, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_content_vjswe_a4u5m_97:not(#\\9){}.awsui_button_vjswe_a4u5m_101:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;min-width:0;word-break:break-word;font-weight:var(--font-button-weight-jfejp1, 700);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto);letter-spacing:var(--font-button-letter-spacing-ahp09k, 0.25px);border-radius:var(--border-radius-button-lbgihl, 2px);border:var(--border-field-width-2vpp5j, 1px) solid;padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-button-horizontal-kqt1zg, 20px);display:inline-block;text-decoration:none;cursor:pointer}.awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125:not(#\\9){background:var(--color-background-button-normal-default-r433m6, #ffffff);color:var(--color-text-button-normal-default-eqebde, #545b64);border-color:var(--color-border-button-normal-default-a1f0ud, #545b64);position:relative;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125:not(#\\9):hover{background:var(--color-background-button-normal-hover-afg7z9, #fafafa);color:var(--color-text-button-normal-hover-bk2x1u, #16191f);border-color:var(--color-border-button-normal-hover-j7d6r6, #16191f);text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:var(--color-background-button-normal-active-czecy2, #eaeded);color:var(--color-text-button-normal-active-v6nfdh, #16191f);border-color:var(--color-border-button-normal-active-zrx2x0, #545b64)}.awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-normal_vjswe_a4u5m_125.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:var(--color-background-button-normal-disabled-ejdxb1, #ffffff);border-color:var(--color-border-button-normal-disabled-2z1mk8, #d5dbdb);color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209:not(#\\9){background:var(--color-background-button-primary-default-zz5irg, #0073bb);color:var(--color-text-button-primary-default-6dta4b, #ffffff);border-color:var(--color-background-button-primary-default-zz5irg, #0073bb);position:relative;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209:not(#\\9):hover{background:var(--color-background-button-primary-hover-c6t12k, #0a4a74);color:var(--color-text-button-primary-hover-fk4ryc, #ffffff);border-color:var(--color-background-button-primary-hover-c6t12k, #0a4a74);text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:var(--color-background-button-primary-active-qjb1np, #12293b);color:var(--color-text-button-primary-active-0k4v93, #ffffff);border-color:var(--color-background-button-primary-active-qjb1np, #12293b)}.awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-primary_vjswe_a4u5m_209.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:var(--color-background-button-primary-disabled-2w63xd, #ffffff);border-color:var(--color-border-button-primary-disabled-oe36ny, #d5dbdb);color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293:not(#\\9){background:transparent;color:var(--color-text-button-normal-default-eqebde, #545b64);border-color:transparent;position:relative;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293:not(#\\9):hover{background:var(--color-background-button-link-hover-jv3f2k, #fafafa);color:var(--color-text-button-normal-hover-bk2x1u, #16191f);border-color:var(--color-background-button-link-hover-jv3f2k, #fafafa);text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:var(--color-background-button-link-active-34rko8, #eaeded);color:var(--color-text-button-normal-active-v6nfdh, #16191f);border-color:var(--color-background-button-link-active-34rko8, #eaeded)}.awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-link_vjswe_a4u5m_293.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:transparent;border-color:transparent;color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9){background:transparent;color:var(--color-text-interactive-default-djvtmz, #545b64);border-color:transparent;position:relative;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):hover{background:transparent;color:var(--color-text-interactive-hover-55cagk, #16191f);border-color:transparent;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:transparent;color:var(--color-text-interactive-default-djvtmz, #545b64);border-color:transparent}.awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:transparent;border-color:transparent;color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9){background:transparent;color:var(--color-text-button-inline-icon-default-buw7w7, #545b64);border-color:transparent;position:relative;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):hover{background:transparent;color:var(--color-text-button-inline-icon-hover-0pwsg2, #16191f);border-color:transparent;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:transparent;color:var(--color-text-button-inline-icon-default-buw7w7, #545b64);border-color:transparent}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:transparent;border-color:transparent;color:var(--color-text-button-inline-icon-disabled-phk84s, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545:not(#\\9){background:transparent;color:var(--color-text-button-normal-default-eqebde, #545b64);border-color:transparent;border-width:0;position:relative;text-decoration:none;padding:0}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545:not(#\\9):hover{background:transparent;color:var(--color-text-button-normal-hover-bk2x1u, #16191f);border-color:transparent;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:transparent;color:var(--color-text-button-normal-active-v6nfdh, #16191f);border-color:transparent}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-link_vjswe_a4u5m_545.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:transparent;border-color:transparent;color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9){background:transparent;color:var(--color-text-interactive-default-djvtmz, #545b64);border-color:transparent;position:relative;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):hover{background:transparent;color:var(--color-text-interactive-hover-55cagk, #16191f);border-color:transparent;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:transparent;color:var(--color-text-interactive-default-djvtmz, #545b64);border-color:transparent}.awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:transparent;border-color:transparent;color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9){background:transparent;color:var(--color-text-interactive-inverted-default-mrgn6e, #d5dbdb);border-color:transparent;position:relative;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):hover{background:transparent;color:var(--color-text-interactive-inverted-hover-qliijo, #fafafa);border-color:transparent;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:transparent;color:var(--color-text-interactive-inverted-default-mrgn6e, #d5dbdb);border-color:transparent}.awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:transparent;border-color:transparent;color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799:not(#\\9){background:transparent;color:var(--color-text-link-default-lwrgyu, #0073bb);border-color:transparent;border-width:0;position:relative;text-decoration:none;padding:0;font-weight:normal}.awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799:not(#\\9):hover{background:transparent;color:var(--color-text-link-hover-kmrtvm, #0a4a74);border-color:transparent;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:transparent;color:var(--color-text-link-default-lwrgyu, #0073bb);border-color:transparent}.awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-breadcrumb-group_vjswe_a4u5m_799.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:transparent;border-color:transparent;color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886:not(#\\9){background:transparent;color:var(--color-text-button-normal-default-eqebde, #545b64);border-color:transparent;position:relative;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886:not(#\\9):hover{background:transparent;color:var(--color-text-button-normal-hover-bk2x1u, #16191f);border-color:transparent;text-decoration:none}.awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886:not(#\\9):active,.awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_is-activated_vjswe_a4u5m_138:not(#\\9){background:transparent;color:var(--color-text-button-normal-active-v6nfdh, #16191f);border-color:transparent}.awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-focus-outline-gutter-2g5ia0, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9):focus::before,body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));top:calc(-1 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));width:calc(100% + 2 * var(--space-button-focus-outline-gutter-2g5ia0, 3px));height:calc(100% + 2 * var(--space-button-icon-focus-outline-gutter-vertical-atye4f, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px) - 1px)}body[data-awsui-focus-visible=true] .awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));top:calc(-1 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));width:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));height:calc(100% + 2 * var(--space-button-inline-icon-focus-outline-gutter-747equ, 3px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_button_vjswe_a4u5m_101.awsui_variant-menu-trigger_vjswe_a4u5m_886.awsui_disabled_vjswe_a4u5m_201:not(#\\9){background:transparent;border-color:transparent;color:var(--color-text-interactive-disabled-k4q23b, #aab7b8);text-decoration:none;pointer-events:none;cursor:auto}.awsui_button_vjswe_a4u5m_101.awsui_button-no-text_vjswe_a4u5m_970:not(#\\9){padding-left:var(--space-button-icon-only-horizontal-5iqrhy, 16px);padding-right:var(--space-button-icon-only-horizontal-5iqrhy, 16px)}.awsui_button_vjswe_a4u5m_101.awsui_button-no-wrap_vjswe_a4u5m_974:not(#\\9){white-space:nowrap}.awsui_button_vjswe_a4u5m_101.awsui_full-width_vjswe_a4u5m_977:not(#\\9){width:100%;text-align:center}.awsui_button_vjswe_a4u5m_101.awsui_variant-icon_vjswe_a4u5m_165:not(#\\9),.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9),.awsui_button_vjswe_a4u5m_101.awsui_variant-flashbar-icon_vjswe_a4u5m_165:not(#\\9){padding-left:var(--space-xxs-a6783b, 4px);padding-right:var(--space-xxs-a6783b, 4px)}.awsui_button_vjswe_a4u5m_101.awsui_variant-modal-dismiss_vjswe_a4u5m_165:not(#\\9){padding:var(--space-button-modal-dismiss-vertical-17om1h, 4px) var(--space-xxs-a6783b, 4px);margin-right:calc(-1 * var(--space-xxs-a6783b, 4px))}.awsui_button_vjswe_a4u5m_101.awsui_variant-inline-icon_vjswe_a4u5m_183:not(#\\9){padding-top:0;padding-bottom:0;border:0}.awsui_button_vjswe_a4u5m_101>.awsui_icon-left_vjswe_a4u5m_994:not(#\\9){position:relative;left:calc(-1 * var(--space-xxs-a6783b, 4px));margin-right:var(--space-xxs-a6783b, 4px)}.awsui_button_vjswe_a4u5m_101>.awsui_icon-right_vjswe_a4u5m_999:not(#\\9){position:relative;right:calc(-1 * var(--space-xxs-a6783b, 4px));margin-left:var(--space-xxs-a6783b, 4px)}.awsui_button_vjswe_a4u5m_101.awsui_button-no-text_vjswe_a4u5m_970>.awsui_icon_vjswe_a4u5m_994:not(#\\9){margin-right:auto;margin-left:auto;right:0;left:0}.awsui_link_4c84z_xzhnr_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:inline;white-space:inherit;color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:inherit;letter-spacing:normal;text-decoration:none;text-decoration-color:transparent;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_link_4c84z_xzhnr_93:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_link_4c84z_xzhnr_93:not(#\\9),.awsui-mode-entering .awsui_link_4c84z_xzhnr_93:not(#\\9){animation:none;transition:none}.awsui_link_4c84z_xzhnr_93:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93:not(#\\9):focus{outline:none}.awsui_link_4c84z_xzhnr_93:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93:not(#\\9):active,.awsui_link_4c84z_xzhnr_93:not(#\\9):focus,.awsui_link_4c84z_xzhnr_93:not(#\\9):hover{text-decoration:underline;text-decoration-color:currentColor}.awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9){-webkit-font-smoothing:inherit;-moz-osx-font-smoothing:inherit;color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:inherit;letter-spacing:normal;text-decoration:none;text-decoration-color:transparent;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9),.awsui-mode-entering .awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9){animation:none;transition:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9):focus{outline:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9):active,.awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9):focus,.awsui_link_4c84z_xzhnr_93.awsui_variant-secondary_4c84z_xzhnr_140:not(#\\9):hover{text-decoration:underline;text-decoration-color:currentColor}.awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9){color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:inherit;letter-spacing:normal;text-decoration:underline;text-decoration-color:currentColor;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9),.awsui-mode-entering .awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9){animation:none;transition:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9):focus{outline:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9):active,.awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9):focus,.awsui_link_4c84z_xzhnr_93.awsui_variant-primary_4c84z_xzhnr_177:not(#\\9):hover{text-decoration:underline;text-decoration-color:currentColor}.awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9){-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto);color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:var(--font-button-weight-jfejp1, 700);letter-spacing:0.005em;text-decoration:none;text-decoration-color:transparent;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9),.awsui-mode-entering .awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9){animation:none;transition:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9):focus{outline:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9):active,.awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9):focus,.awsui_link_4c84z_xzhnr_93.awsui_variant-info_4c84z_xzhnr_212:not(#\\9):hover{text-decoration:underline;text-decoration-color:var(--color-text-link-button-underline-hover-mp175e, currentColor)}.awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9){color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:var(--font-box-value-large-weight-wtv0yd, 300);text-decoration:underline;text-decoration-color:currentColor;text-decoration-thickness:0.3rem;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9),.awsui-mode-entering .awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9){animation:none;transition:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9):focus{outline:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9):active,.awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9):focus,.awsui_link_4c84z_xzhnr_93.awsui_variant-value-large_4c84z_xzhnr_249:not(#\\9):hover{text-decoration:underline;text-decoration-color:currentColor;text-decoration-thickness:0.3rem}.awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9){color:var(--color-text-interactive-default-djvtmz, #545b64);font-weight:700;letter-spacing:0.005em;text-decoration:none;text-decoration-color:transparent;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9),.awsui-mode-entering .awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9){animation:none;transition:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9):hover{cursor:pointer;color:var(--color-text-interactive-hover-55cagk, #16191f)}.awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9):focus{outline:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9):active{color:var(--color-text-interactive-active-j3cxbp, #16191f)}.awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9):active,.awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9):focus,.awsui_link_4c84z_xzhnr_93.awsui_variant-top-navigation_4c84z_xzhnr_285:not(#\\9):hover{text-decoration:underline;text-decoration-color:transparent}.awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9){color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:var(--font-link-button-weight-gsuhhv, 400);letter-spacing:var(--font-link-button-letter-spacing-y4oyax, normal);text-decoration:underline;text-decoration-color:var(--color-text-link-button-underline-vw7ht0, currentColor);transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9),.awsui-mode-entering .awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9){animation:none;transition:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9):focus{outline:none}.awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9):active,.awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9):focus,.awsui_link_4c84z_xzhnr_93.awsui_variant-recovery_4c84z_xzhnr_320:not(#\\9):hover{text-decoration:underline;text-decoration-color:var(--color-text-link-button-underline-hover-mp175e, currentColor)}.awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9){-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto);color:var(--color-text-link-button-normal-default-x8uncu, #545b64);font-weight:var(--font-button-weight-jfejp1, 700);letter-spacing:var(--font-button-letter-spacing-ahp09k, 0.25px);text-decoration:none;text-decoration-color:transparent;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9),.awsui-mode-entering .awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9){animation:none;transition:none}.awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-button-normal-hover-hm6g27, #16191f)}.awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9):focus{outline:none}.awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9):active{color:var(--color-text-link-button-normal-active-8cfe84, #16191f)}.awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9):active,.awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9):focus,.awsui_link_4c84z_xzhnr_93.awsui_button_4c84z_xzhnr_355:not(#\\9):hover{text-decoration:underline;text-decoration-color:transparent}.awsui_link_4c84z_xzhnr_93.awsui_color-inverted_4c84z_xzhnr_392:not(#\\9){color:var(--color-text-notification-default-d9f7z3, #fafafa)}.awsui_link_4c84z_xzhnr_93.awsui_color-inverted_4c84z_xzhnr_392:not(#\\9):not(.awsui_button_4c84z_xzhnr_355){text-decoration:underline;text-decoration-color:currentColor}.awsui_link_4c84z_xzhnr_93.awsui_color-inverted_4c84z_xzhnr_392:not(#\\9):hover{color:var(--color-text-link-inverted-hover-o3xt6o, #fafafa)}body[data-awsui-focus-visible=true] .awsui_link_4c84z_xzhnr_93:not(#\\9):focus{outline:thin dotted;outline:var(--border-link-focus-ring-outline-x5z0d3, 5px auto Highlight);outline-offset:2px;outline-color:var(--color-border-item-focused-t884ih, #0073bb);border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 var(--border-link-focus-ring-shadow-spread-1nkh7a, 0px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-body-s_4c84z_xzhnr_411:not(#\\9){font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-body-m_4c84z_xzhnr_416:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-heading-xs_4c84z_xzhnr_420:not(#\\9){font-size:var(--font-size-heading-xs-4u3wan, 16px);line-height:var(--line-height-heading-xs-au4jub, 20px)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-heading-s_4c84z_xzhnr_424:not(#\\9){font-size:var(--font-size-heading-s-hwcx2q, 16px);line-height:var(--line-height-heading-s-m093oq, 20px);letter-spacing:var(--letter-spacing-heading-s-2369b0, normal)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-heading-m_4c84z_xzhnr_429:not(#\\9){font-size:var(--font-size-heading-m-ulervk, 18px);line-height:var(--line-height-heading-m-88a3m6, 22px);letter-spacing:var(--letter-spacing-heading-m-9g78ia, normal)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-heading-l_4c84z_xzhnr_434:not(#\\9){font-size:var(--font-size-heading-l-u89ro8, 18px);line-height:var(--line-height-heading-l-z752l3, 22px);letter-spacing:var(--letter-spacing-heading-l-v8uzhr, normal)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-heading-xl_4c84z_xzhnr_439:not(#\\9){font-size:var(--font-size-heading-xl-z8h967, 28px);line-height:var(--line-height-heading-xl-44izce, 36px);letter-spacing:var(--letter-spacing-heading-xl-y4tqgw, normal)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-display-l_4c84z_xzhnr_444:not(#\\9){font-size:var(--font-size-display-l-ij3zok, 44px);line-height:var(--line-height-display-l-aqze16, 56px);letter-spacing:var(--letter-spacing-display-l-frfij1, normal)}.awsui_link_4c84z_xzhnr_93.awsui_font-size-inherit_4c84z_xzhnr_449:not(#\\9){font-size:inherit;line-height:inherit;letter-spacing:inherit}.awsui_icon-wrapper_4c84z_xzhnr_455:not(#\\9){white-space:nowrap}.awsui_icon_4c84z_xzhnr_455:not(#\\9){display:inline-block}.awsui_resize-active_x7peu_bmyf4_93:not(#\\9):not(.awsui_resize-active-with-focus_x7peu_bmyf4_93) *{cursor:col-resize;-webkit-user-select:none;user-select:none}.awsui_resizer_x7peu_bmyf4_98:not(#\\9){bottom:0;cursor:col-resize;position:absolute;right:calc(-1 * var(--space-l-ds615y, 20px) / 2);top:0;width:var(--space-l-ds615y, 20px);z-index:10}.awsui_resize-active_x7peu_bmyf4_93 .awsui_resizer_x7peu_bmyf4_98:not(#\\9){pointer-events:none}th:not(#\\9):last-child>.awsui_resizer_x7peu_bmyf4_98{width:calc(var(--space-l-ds615y, 20px) / 2);right:0}th:not(#\\9):not(:last-child)>.awsui_resizer_x7peu_bmyf4_98:hover::before,th:not(#\\9):not(:last-child)>.awsui_resizer-active_x7peu_bmyf4_114::before{content:\"\";position:absolute;left:calc(var(--space-l-ds615y, 20px) / 2 - 2px);bottom:0;top:0;min-height:var(--line-height-heading-xs-au4jub, 20px);max-height:calc(100% - calc(2 * var(--space-xs-inub5w, 8px) + var(--space-xxxs-rq3iss, 2px)));margin:auto;border-left:2px solid var(--color-border-divider-active-vdhfnx, #687078);box-sizing:border-box}body[data-awsui-focus-visible=true] .awsui_resizer_x7peu_bmyf4_98.awsui_has-focus_x7peu_bmyf4_126:not(#\\9){position:relative;position:absolute}body[data-awsui-focus-visible=true] .awsui_resizer_x7peu_bmyf4_98.awsui_has-focus_x7peu_bmyf4_126:not(#\\9){outline:2px dotted transparent;outline-offset:calc(var(--space-table-header-focus-outline-gutter-7em6qj, 0px) - 1px)}body[data-awsui-focus-visible=true] .awsui_resizer_x7peu_bmyf4_98.awsui_has-focus_x7peu_bmyf4_126:not(#\\9)::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));top:calc(-1 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));width:calc(100% + 2 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));height:calc(100% + 2 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_resizer_x7peu_bmyf4_98.awsui_has-focus_x7peu_bmyf4_126:not(#\\9)::before{box-shadow:inset 0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_tracker_x7peu_bmyf4_149:not(#\\9){display:none;position:absolute;border-left:var(--border-divider-list-width-fsy9j8, 1px) dashed var(--color-border-divider-active-vdhfnx, #687078);width:0;top:0;bottom:0}.awsui_resize-active_x7peu_bmyf4_93 .awsui_tracker_x7peu_bmyf4_149:not(#\\9){display:block}.awsui_root_wih1l_m818p_97:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;width:100%}.awsui_tools_wih1l_m818p_108:not(#\\9){display:flex;align-items:flex-end;flex-wrap:wrap;padding:var(--space-scaled-xs-u0e7ft, 8px) 0 var(--space-table-header-tools-bottom-quuidt, 4px)}.awsui_tools-filtering_wih1l_m818p_114:not(#\\9){max-width:100%;margin-right:var(--space-l-ds615y, 20px)}@supports (flex-basis: fit-content){.awsui_tools-filtering_wih1l_m818p_114:not(#\\9){flex:1 1 fit-content}}@supports not (flex-basis: fit-content){.awsui_tools-filtering_wih1l_m818p_114:not(#\\9){flex:1 1 auto}}.awsui_tools-align-right_wih1l_m818p_128:not(#\\9){display:flex;margin-left:auto}.awsui_tools-pagination_wih1l_m818p_132+.awsui_tools-preferences_wih1l_m818p_132:not(#\\9){border-left:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded);box-sizing:border-box;margin-left:var(--space-xs-inub5w, 8px);padding-left:var(--space-xs-inub5w, 8px)}.awsui_tools-small_wih1l_m818p_138>.awsui_tools-filtering_wih1l_m818p_114:not(#\\9){margin-right:0;margin-bottom:var(--space-scaled-xs-u0e7ft, 8px);flex-basis:100%}.awsui_table_wih1l_m818p_144:not(#\\9){width:100%;border-spacing:0;position:relative;box-sizing:border-box}.awsui_table-layout-fixed_wih1l_m818p_150:not(#\\9){table-layout:fixed}.awsui_wrapper_wih1l_m818p_154:not(#\\9){position:relative;box-sizing:border-box;width:100%;overflow-x:auto;scrollbar-width:none;}.awsui_wrapper_wih1l_m818p_154.awsui_variant-stacked_wih1l_m818p_161>.awsui_table_wih1l_m818p_144:not(#\\9),.awsui_wrapper_wih1l_m818p_154.awsui_variant-container_wih1l_m818p_161>.awsui_table_wih1l_m818p_144:not(#\\9){padding-left:var(--space-table-horizontal-4gmq7g, 0px);padding-right:var(--space-table-horizontal-4gmq7g, 0px)}.awsui_wrapper_wih1l_m818p_154.awsui_variant-container_wih1l_m818p_161:not(#\\9):not(.awsui_has-footer_wih1l_m818p_165){padding-bottom:var(--space-table-content-bottom-4wzfhv, 0px)}.awsui_wrapper_wih1l_m818p_154:not(#\\9):not(.awsui_has-header_wih1l_m818p_168){border-top-right-radius:var(--border-radius-container-y85mnh, 0px);border-top-left-radius:var(--border-radius-container-y85mnh, 0px)}.awsui_wrapper_wih1l_m818p_154:not(#\\9)::-webkit-scrollbar{display:none;}body[data-awsui-focus-visible=true] .awsui_wrapper_wih1l_m818p_154:not(#\\9):focus{outline:2px dotted transparent;outline-offset:2px;border-radius:var(--border-radius-container-y85mnh, 0px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_cell-merged_wih1l_m818p_182:not(#\\9){text-align:center;padding:0}.awsui_cell-merged_wih1l_m818p_182.awsui_has-footer_wih1l_m818p_165:not(#\\9){border-bottom:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_cell-merged-content_wih1l_m818p_193:not(#\\9){box-sizing:border-box;width:100%;padding:var(--space-scaled-m-9q5ipc, 16px) var(--space-l-ds615y, 20px) var(--space-scaled-l-x5pubp, 20px);}@supports (position: sticky){.awsui_cell-merged-content_wih1l_m818p_193:not(#\\9){position:sticky;left:0;margin:0 calc(-2 * var(--space-table-horizontal-4gmq7g, 0px))}}.awsui_empty_wih1l_m818p_208:not(#\\9){color:var(--color-text-empty-79ttcu, #687078)}.awsui_loading_wih1l_m818p_212:not(#\\9){}.awsui_selection-control_wih1l_m818p_221:not(#\\9){box-sizing:border-box;max-width:var(--size-table-selection-horizontal-6yz3cl, 54px);min-width:var(--size-table-selection-horizontal-6yz3cl, 54px);position:relative;width:var(--size-table-selection-horizontal-6yz3cl, 54px)}.awsui_selection-control_wih1l_m818p_221.awsui_selection-control-header_wih1l_m818p_228:not(#\\9){padding:var(--space-scaled-xs-u0e7ft, 8px) var(--space-scaled-l-x5pubp, 20px);border-left:var(--border-item-width-f0bcsu, 1px) solid transparent}.awsui_dark-header_wih1l_m818p_237:not(#\\9){background-color:var(--color-background-layout-main-okygtx, #f2f3f3);color:var(--color-text-body-default-rlujvh, #16191f)}.awsui_header-secondary_wih1l_m818p_242:not(#\\9){overflow:auto;-ms-overflow-style:none;scrollbar-width:none;box-sizing:border-box;width:100%;border-radius:0;background:var(--color-background-table-header-d4x481, #fafafa)}.awsui_header-secondary_wih1l_m818p_242.awsui_variant-stacked_wih1l_m818p_161>.awsui_table_wih1l_m818p_144:not(#\\9),.awsui_header-secondary_wih1l_m818p_242.awsui_variant-container_wih1l_m818p_161>.awsui_table_wih1l_m818p_144:not(#\\9){padding-left:var(--space-table-horizontal-4gmq7g, 0px);padding-right:var(--space-table-horizontal-4gmq7g, 0px)}.awsui_header-secondary_wih1l_m818p_242:not(#\\9)::-webkit-scrollbar{display:none;}.awsui_header-secondary_wih1l_m818p_242.awsui_table-has-header_wih1l_m818p_258:not(#\\9){border-top:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-container-divider-4z4y7u, #eaeded)}.awsui_header-controls_wih1l_m818p_262:not(#\\9){padding-top:var(--space-container-header-top-isuu42, 12px);padding-bottom:var(--space-container-header-bottom-7poudk, 12px)}.awsui_header-controls_wih1l_m818p_262.awsui_variant-full-page_wih1l_m818p_266:not(#\\9){padding-top:0;padding-bottom:calc(var(--space-container-header-bottom-7poudk, 12px) + var(--space-table-header-tools-full-page-bottom-6xklb5, 4px))}.awsui_header-controls_wih1l_m818p_262.awsui_variant-stacked_wih1l_m818p_161:not(#\\9),.awsui_header-controls_wih1l_m818p_262.awsui_variant-container_wih1l_m818p_161:not(#\\9){padding-left:calc(var(--space-table-horizontal-4gmq7g, 0px) + var(--space-table-header-horizontal-icvlet, 20px));padding-right:calc(var(--space-table-horizontal-4gmq7g, 0px) + var(--space-table-header-horizontal-icvlet, 20px))}.awsui_header-controls_wih1l_m818p_262.awsui_variant-embedded_wih1l_m818p_274:not(#\\9),.awsui_header-controls_wih1l_m818p_262.awsui_variant-borderless_wih1l_m818p_274:not(#\\9){padding-left:var(--space-table-header-horizontal-icvlet, 20px);padding-right:var(--space-table-header-horizontal-icvlet, 20px);padding-top:var(--space-table-embedded-header-top-hxr64p, 12px)}.awsui_footer-wrapper_wih1l_m818p_280.awsui_variant-stacked_wih1l_m818p_161:not(#\\9),.awsui_footer-wrapper_wih1l_m818p_280.awsui_variant-container_wih1l_m818p_161:not(#\\9){padding-left:var(--space-table-horizontal-4gmq7g, 0px);padding-right:var(--space-table-horizontal-4gmq7g, 0px)}.awsui_footer_wih1l_m818p_280:not(#\\9){padding:var(--space-scaled-s-gczsk7, 12px) var(--space-table-footer-horizontal-kvgjs1, 20px)}.awsui_footer-with-pagination_wih1l_m818p_288:not(#\\9){display:flex;flex-direction:row;justify-content:space-between;align-items:center;flex-wrap:wrap;gap:var(--space-scaled-s-gczsk7, 12px)}.awsui_footer-pagination_wih1l_m818p_296:not(#\\9){margin-left:auto}.awsui_thead-active_wih1l_m818p_300:not(#\\9),.awsui_row_wih1l_m818p_301:not(#\\9),.awsui_row-selected_wih1l_m818p_302:not(#\\9){}.awsui_body-cell_c6tup_1n7x1_93:not(#\\9){box-sizing:border-box;padding:var(--space-scaled-xs-u0e7ft, 8px) var(--space-scaled-l-x5pubp, 20px) calc(\n  var(--space-scaled-xs-u0e7ft, 8px) + (var(--border-item-width-f0bcsu, 1px) - var(--border-divider-list-width-fsy9j8, 1px))\n);border-top:var(--border-divider-list-width-fsy9j8, 1px) solid transparent;word-wrap:break-word;border-bottom:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded);font-weight:inherit}.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):not(.awsui_body-cell-wrap_c6tup_1n7x1_103){white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):first-child{border-left:var(--border-item-width-f0bcsu, 1px) solid transparent}.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):last-child{border-right:var(--border-item-width-f0bcsu, 1px) solid transparent;padding-right:calc(var(--space-l-ds615y, 20px) - var(--border-item-width-f0bcsu, 1px))}.awsui_body-cell_c6tup_1n7x1_93.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):first-child{}.awsui_body-cell_c6tup_1n7x1_93.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):first-child:not(.awsui_has-striped-rows_c6tup_1n7x1_127){padding-left:var(--space-xxxs-rq3iss, 2px)}.awsui_body-cell_c6tup_1n7x1_93.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):first-child:not(.awsui_has-striped-rows_c6tup_1n7x1_127):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130).awsui_body-cell-editable_c6tup_1n7x1_130:hover{padding-left:calc(var(--space-xxxs-rq3iss, 2px) + var(--border-divider-list-width-fsy9j8, 1px))}.awsui_body-cell_c6tup_1n7x1_93.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):first-child:first-child.awsui_has-striped-rows_c6tup_1n7x1_127{padding-left:var(--space-xxs-a6783b, 4px)}.awsui_body-cell_c6tup_1n7x1_93.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):first-child:first-child.awsui_has-striped-rows-sticky-cell-pad-left_c6tup_1n7x1_136{padding-left:var(--space-table-horizontal-4gmq7g, 0px)}.awsui_body-cell_c6tup_1n7x1_93.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):first-child:not(.awsui_has-selection_c6tup_1n7x1_139):not(.awsui_body-cell-editable_c6tup_1n7x1_130){border-left:none}.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):first-child:not(.awsui_is-visual-refresh_c6tup_1n7x1_115){padding-left:calc(var(--space-l-ds615y, 20px) - var(--border-item-width-f0bcsu, 1px))}.awsui_body-cell-first-row_c6tup_1n7x1_145:not(#\\9){border-top:var(--border-item-width-f0bcsu, 1px) solid transparent}.awsui_body-cell-last-row_c6tup_1n7x1_148:not(#\\9):not(.awsui_body-cell-selected_c6tup_1n7x1_148):not(.awsui_has-footer_c6tup_1n7x1_148){border-bottom:var(--border-item-width-f0bcsu, 1px) solid transparent}.awsui_body-cell-last-row_c6tup_1n7x1_148:not(#\\9):not(.awsui_body-cell-selected_c6tup_1n7x1_148).awsui_has-footer_c6tup_1n7x1_148{border-bottom:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_body-cell-shaded_c6tup_1n7x1_158:not(#\\9){background:var(--color-background-cell-shaded-gppcg5, #f2f3f3)}.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9){background-color:var(--color-background-item-selected-8e1q8b, #f1faff);border-top:var(--border-item-width-f0bcsu, 1px) solid var(--color-border-item-selected-bmiwgz, #0073bb);border-bottom:var(--border-item-width-f0bcsu, 1px) solid var(--color-border-item-selected-bmiwgz, #0073bb);padding-bottom:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9):first-child{border-left:var(--border-item-width-f0bcsu, 1px) solid var(--color-border-item-selected-bmiwgz, #0073bb);border-radius:var(--border-radius-item-fcd5og, 0px) 0 0 var(--border-radius-item-fcd5og, 0px)}.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9):last-child{border-right:var(--border-item-width-f0bcsu, 1px) solid var(--color-border-item-selected-bmiwgz, #0073bb);border-radius:0 var(--border-radius-item-fcd5og, 0px) var(--border-radius-item-fcd5og, 0px) 0}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175:not(#\\9){position:sticky;background:var(--color-background-container-content-pb0lp5, #ffffff);z-index:798;transition-property:padding;transition-duration:var(--motion-duration-transition-show-quick-6dpisk, 90ms);transition-timing-function:var(--motion-easing-sticky-z6h8g6, ease-out)}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell-pad-left_c6tup_1n7x1_183:not(#\\9):not(.awsui_has-selection_c6tup_1n7x1_139):not(.awsui_is-visual-refresh_c6tup_1n7x1_115.awsui_body-cell_c6tup_1n7x1_93:first-child.awsui_has-striped-rows_c6tup_1n7x1_127){padding-left:var(--space-table-horizontal-4gmq7g, 0px)}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175.awsui_body-cell-shaded_c6tup_1n7x1_158:not(#\\9){background:var(--color-background-cell-shaded-gppcg5, #f2f3f3)}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9){background-color:var(--color-background-item-selected-8e1q8b, #f1faff)}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9):first-child{box-shadow:0 0 0 4px var(--color-background-container-content-pb0lp5, #ffffff);clip-path:inset(0 0 0 0)}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9):last-child{box-shadow:4px 0 0 0 var(--color-background-container-content-pb0lp5, #ffffff);clip-path:inset(0 0 0 0)}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9):last-child.awsui_sticky-cell-last-right_c6tup_1n7x1_200{box-shadow:var(--shadow-sticky-column-last-4qhui6, -4px 0 8px 0 rgba(0, 28, 36, 0.1)), 8px 0 0 0 var(--color-background-container-content-pb0lp5, #ffffff);clip-path:inset(0 0 0 -24px)}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell-last-left_c6tup_1n7x1_204:not(#\\9){box-shadow:var(--shadow-sticky-column-first-wkhcx1, 4px 0 8px 0 rgba(0, 28, 36, 0.1));clip-path:inset(0px -24px 0px 0px)}.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell-last-right_c6tup_1n7x1_200:not(#\\9){box-shadow:var(--shadow-sticky-column-last-4qhui6, -4px 0 8px 0 rgba(0, 28, 36, 0.1));clip-path:inset(0 0 0 -24px)}@media (prefers-reduced-motion: reduce){.awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175:not(#\\9),.awsui-mode-entering .awsui_body-cell_c6tup_1n7x1_93.awsui_sticky-cell_c6tup_1n7x1_175:not(#\\9){animation:none;transition:none}.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9):not(:first-child){padding-top:calc(\n  var(--space-scaled-xs-u0e7ft, 8px) + (var(--border-item-width-f0bcsu, 1px) - var(--border-divider-list-width-fsy9j8, 1px))\n)}.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):not(.awsui_body-cell-selected_c6tup_1n7x1_148).awsui_body-cell-next-selected_c6tup_1n7x1_227{border-bottom:0;padding-bottom:calc(var(--space-scaled-xs-u0e7ft, 8px) + var(--border-divider-list-width-fsy9j8, 1px))}.awsui_body-cell-selected_c6tup_1n7x1_148.awsui_body-cell-prev-selected_c6tup_1n7x1_231:not(#\\9){padding-top:calc(\n  var(--space-scaled-xs-u0e7ft, 8px) + (var(--border-item-width-f0bcsu, 1px) - var(--border-divider-list-width-fsy9j8, 1px))\n);border-top:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-item-placeholder-kd6njx, transparent)}.awsui_body-cell-selected_c6tup_1n7x1_148.awsui_body-cell-next-selected_c6tup_1n7x1_227:not(#\\9){border-bottom-width:var(--border-divider-list-width-fsy9j8, 1px)}.awsui_body-cell-selected_c6tup_1n7x1_148.awsui_body-cell-next-selected_c6tup_1n7x1_227:not(#\\9):first-child{border-bottom-left-radius:0}.awsui_body-cell-selected_c6tup_1n7x1_148.awsui_body-cell-next-selected_c6tup_1n7x1_227:not(#\\9):last-child{border-bottom-right-radius:0}.awsui_body-cell-selected_c6tup_1n7x1_148.awsui_body-cell-prev-selected_c6tup_1n7x1_231:not(#\\9):first-child{border-top-left-radius:0}.awsui_body-cell-selected_c6tup_1n7x1_148.awsui_body-cell-prev-selected_c6tup_1n7x1_231:not(#\\9):last-child{border-top-right-radius:0}.awsui_body-cell-selected_c6tup_1n7x1_148:not(#\\9):not(.awsui_body-cell-prev-selected_c6tup_1n7x1_231){padding-top:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_body-cell-editor_c6tup_1n7x1_255:not(#\\9){padding:0 calc(\n  var(--space-xs-inub5w, 8px) + var(--space-xxs-a6783b, 4px)\n) 0 0}.awsui_body-cell-success_c6tup_1n7x1_260:not(#\\9){padding:0 calc(calc(\n  var(--space-xs-inub5w, 8px) + var(--space-xxs-a6783b, 4px)\n) + calc(var(--size-icon-normal-as5jb3, 16px) + var(--space-xs-inub5w, 8px))) 0 0}.awsui_body-cell-success_c6tup_1n7x1_260:not(#\\9),.awsui_body-cell-editor_c6tup_1n7x1_255:not(#\\9){top:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:flex-end;cursor:pointer;outline:0;background:0;border:0;color:var(--color-text-button-normal-default-eqebde, #545b64)}.awsui_body-cell-success_c6tup_1n7x1_260:not(#\\9):hover,.awsui_body-cell-editor_c6tup_1n7x1_255:not(#\\9):hover{color:var(--color-text-button-normal-hover-bk2x1u, #16191f)}.awsui_body-cell-success_c6tup_1n7x1_260:not(#\\9):active,.awsui_body-cell-editor_c6tup_1n7x1_255:not(#\\9):active{color:var(--color-text-button-normal-active-v6nfdh, #16191f)}.awsui_body-cell-success-form_c6tup_1n7x1_285:not(#\\9),.awsui_body-cell-editor-form_c6tup_1n7x1_285:not(#\\9){margin:calc(-1 * var(--space-xs-inub5w, 8px)) calc(-1.5 * var(--space-xs-inub5w, 8px))}.awsui_is-visual-refresh_c6tup_1n7x1_115.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):first-child.awsui_has-striped-rows_c6tup_1n7x1_127>.awsui_body-cell-success-form_c6tup_1n7x1_285,.awsui_is-visual-refresh_c6tup_1n7x1_115.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):first-child.awsui_has-striped-rows_c6tup_1n7x1_127>.awsui_body-cell-editor-form_c6tup_1n7x1_285{margin-left:calc(-1 * var(--space-xxs-a6783b, 4px))}.awsui_is-visual-refresh_c6tup_1n7x1_115.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):first-child:not(.awsui_has-striped-rows_c6tup_1n7x1_127)>.awsui_body-cell-success-form_c6tup_1n7x1_285,.awsui_is-visual-refresh_c6tup_1n7x1_115.awsui_body-cell_c6tup_1n7x1_93:not(#\\9):first-child:not(.awsui_has-striped-rows_c6tup_1n7x1_127)>.awsui_body-cell-editor-form_c6tup_1n7x1_285{margin-left:calc(-1 * var(--space-xxxs-rq3iss, 2px))}.awsui_body-cell-success-row_c6tup_1n7x1_294:not(#\\9),.awsui_body-cell-editor-row_c6tup_1n7x1_294:not(#\\9){display:flex;flex-flow:row nowrap;align-items:center;justify-content:space-between;column-gap:var(--space-xxs-a6783b, 4px)}.awsui_body-cell-success-row_c6tup_1n7x1_294>:not(#\\9):not(:last-child),.awsui_body-cell-editor-row_c6tup_1n7x1_294>:not(#\\9):not(:last-child){flex-grow:1}.awsui_body-cell-success-controls_c6tup_1n7x1_304:not(#\\9),.awsui_body-cell-editor-controls_c6tup_1n7x1_304:not(#\\9){flex-shrink:0}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9){position:relative;cursor:pointer}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130.awsui_sticky-cell_c6tup_1n7x1_175:not(#\\9){position:sticky}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130.awsui_body-cell-edit-active_c6tup_1n7x1_130:not(#\\9){overflow:visible}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130.awsui_body-cell-edit-active_c6tup_1n7x1_130.awsui_sticky-cell_c6tup_1n7x1_175:not(#\\9){position:sticky}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130)>.awsui_body-cell-editor_c6tup_1n7x1_255{opacity:0}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):focus-within{padding-right:calc(var(--space-scaled-l-x5pubp, 20px) + var(--space-l-ds615y, 20px));padding-right:calc(var(--space-scaled-l-x5pubp, 20px) + var(--space-l-ds615y, 20px));position:relative}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):focus-within.awsui_body-cell-has-success_c6tup_1n7x1_328{padding-right:calc(var(--space-scaled-l-x5pubp, 20px) + var(--space-l-ds615y, 20px) + calc(var(--size-icon-normal-as5jb3, 16px) + var(--space-xs-inub5w, 8px)))}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):focus-within>.awsui_body-cell-editor_c6tup_1n7x1_255{opacity:1}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):focus-within>.awsui_body-cell-success_c6tup_1n7x1_260{opacity:1}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):focus-within{outline:2px dotted transparent;outline-offset:calc(calc(-1 * var(--space-scaled-xxs-ugy2pw, 4px)) - 1px)}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):focus-within::before{content:\" \";display:block;position:absolute;left:calc(-1 * calc(-1 * var(--space-scaled-xxs-ugy2pw, 4px)));top:calc(-1 * calc(-1 * var(--space-scaled-xxs-ugy2pw, 4px)));width:calc(100% + 2 * calc(-1 * var(--space-scaled-xxs-ugy2pw, 4px)));height:calc(100% + 2 * calc(-1 * var(--space-scaled-xxs-ugy2pw, 4px)));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):focus-within.awsui_sticky-cell_c6tup_1n7x1_175{position:sticky}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover{position:relative;background-color:var(--color-background-dropdown-item-hover-6qhcjz, #f2f3f3);border:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-editable-cell-hover-kuz17r, #879596);left:calc(-1 * var(--border-divider-list-width-fsy9j8, 1px));right:calc(-1 * var(--border-divider-list-width-fsy9j8, 1px));padding-right:calc(var(--space-scaled-l-x5pubp, 20px) + var(--space-l-ds615y, 20px))}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover>.awsui_body-cell-editor_c6tup_1n7x1_255{opacity:1}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover>.awsui_body-cell-success_c6tup_1n7x1_260{opacity:1}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover:first-child{left:0;right:0}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover>.awsui_body-cell-editor_c6tup_1n7x1_255{padding-right:calc(calc(\n  var(--space-xs-inub5w, 8px) + var(--space-xxs-a6783b, 4px)\n) - (2 * var(--border-divider-list-width-fsy9j8, 1px)))}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover>.awsui_body-cell-success_c6tup_1n7x1_260{padding-right:calc(calc(calc(\n  var(--space-xs-inub5w, 8px) + var(--space-xxs-a6783b, 4px)\n) + calc(var(--size-icon-normal-as5jb3, 16px) + var(--space-xs-inub5w, 8px))) - (2 * var(--border-divider-list-width-fsy9j8, 1px)))}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover.awsui_body-cell-last-row_c6tup_1n7x1_148.awsui_body-cell-selected_c6tup_1n7x1_148,.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover.awsui_body-cell-next-selected_c6tup_1n7x1_227{padding-top:calc(var(--space-scaled-xs-u0e7ft, 8px) - calc(var(--border-divider-list-width-fsy9j8, 1px) / 2));padding-bottom:calc(var(--space-scaled-xs-u0e7ft, 8px) - calc(var(--border-divider-list-width-fsy9j8, 1px) / 2))}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover.awsui_body-cell-last-row_c6tup_1n7x1_148:not(.awsui_body-cell-selected_c6tup_1n7x1_148){padding-top:calc(var(--space-scaled-xs-u0e7ft, 8px) - calc(var(--border-divider-list-width-fsy9j8, 1px)))}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover.awsui_body-cell-first-row_c6tup_1n7x1_145:not(.awsui_body-cell-selected_c6tup_1n7x1_148){padding-top:calc(var(--space-scaled-xs-u0e7ft, 8px) - calc(var(--border-divider-list-width-fsy9j8, 1px)));padding-bottom:calc(var(--space-scaled-xs-u0e7ft, 8px) - calc(var(--border-divider-list-width-fsy9j8, 1px)))}.awsui_body-cell_c6tup_1n7x1_93.awsui_body-cell-editable_c6tup_1n7x1_130:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover.awsui_sticky-cell_c6tup_1n7x1_175{position:sticky}.awsui_body-cell-editable_c6tup_1n7x1_130.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover:first-child{border-top-left-radius:var(--border-radius-item-fcd5og, 0px);border-bottom-left-radius:var(--border-radius-item-fcd5og, 0px)}.awsui_body-cell-editable_c6tup_1n7x1_130.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover:last-child{border-top-right-radius:var(--border-radius-item-fcd5og, 0px);border-bottom-right-radius:var(--border-radius-item-fcd5og, 0px)}.awsui_body-cell-editable_c6tup_1n7x1_130.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover.awsui_body-cell-first-row_c6tup_1n7x1_145>.awsui_body-cell-success_c6tup_1n7x1_260,.awsui_body-cell-editable_c6tup_1n7x1_130.awsui_is-visual-refresh_c6tup_1n7x1_115:not(#\\9):not(.awsui_body-cell-edit-active_c6tup_1n7x1_130):hover.awsui_body-cell-first-row_c6tup_1n7x1_145>.awsui_body-cell-editor_c6tup_1n7x1_255{padding-top:var(--border-divider-list-width-fsy9j8, 1px)}.awsui_header-cell_1spae_hc8xc_93:not(#\\9){position:relative;text-align:left;box-sizing:border-box;border-bottom:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded);background:var(--color-background-table-header-d4x481, #fafafa);color:var(--color-text-column-header-nhdjo5, #545b64);font-weight:var(--font-weight-heading-s-hg02sg, 700);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto);padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-scaled-xs-u0e7ft, 8px)}.awsui_header-cell-sticky_1spae_hc8xc_105:not(#\\9){border-bottom:var(--border-table-sticky-width-r7cax4, 0px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_header-cell-stuck_1spae_hc8xc_108:not(#\\9):not(.awsui_header-cell-variant-full-page_1spae_hc8xc_108){border-bottom-color:transparent}.awsui_header-cell-variant-full-page_1spae_hc8xc_108.awsui_header-cell-hidden_1spae_hc8xc_111:not(#\\9){border-bottom-color:transparent}.awsui_header-cell_1spae_hc8xc_93:not(#\\9):last-child,.awsui_header-cell_1spae_hc8xc_93.awsui_header-cell-sortable_1spae_hc8xc_114:not(#\\9){padding-right:var(--space-xs-inub5w, 8px)}.awsui_header-cell_1spae_hc8xc_93.awsui_sticky-cell_1spae_hc8xc_117:not(#\\9){position:sticky;background:var(--color-background-table-header-d4x481, #fafafa);z-index:798;transition-property:padding;transition-duration:var(--motion-duration-transition-show-quick-6dpisk, 90ms);transition-timing-function:var(--motion-easing-sticky-z6h8g6, ease-out)}.awsui_header-cell_1spae_hc8xc_93.awsui_sticky-cell-pad-left_1spae_hc8xc_125:not(#\\9):not(.awsui_has-selection_1spae_hc8xc_125){padding-left:var(--space-table-horizontal-4gmq7g, 0px)}.awsui_header-cell_1spae_hc8xc_93.awsui_sticky-cell-last-left_1spae_hc8xc_128:not(#\\9){box-shadow:var(--shadow-sticky-column-first-wkhcx1, 4px 0 8px 0 rgba(0, 28, 36, 0.1));clip-path:inset(0px -24px 0px 0px)}.awsui_header-cell_1spae_hc8xc_93.awsui_sticky-cell-last-left_1spae_hc8xc_128:not(#\\9):not(.awsui_header-cell-resizable_1spae_hc8xc_132):before{display:none}.awsui_header-cell_1spae_hc8xc_93.awsui_sticky-cell-last-right_1spae_hc8xc_135:not(#\\9){box-shadow:var(--shadow-sticky-column-last-4qhui6, -4px 0 8px 0 rgba(0, 28, 36, 0.1));clip-path:inset(0 0 0 -24px)}@media (prefers-reduced-motion: reduce){.awsui_header-cell_1spae_hc8xc_93.awsui_sticky-cell_1spae_hc8xc_117:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_header-cell_1spae_hc8xc_93.awsui_sticky-cell_1spae_hc8xc_117:not(#\\9),.awsui-mode-entering .awsui_header-cell_1spae_hc8xc_93.awsui_sticky-cell_1spae_hc8xc_117:not(#\\9){animation:none;transition:none}.awsui_header-cell_1spae_hc8xc_93:not(#\\9):not(:last-child):before{content:\"\";position:absolute;right:0;bottom:0;top:0;min-height:var(--line-height-heading-xs-au4jub, 20px);max-height:calc(100% - calc(2 * var(--space-xs-inub5w, 8px) + var(--space-xxxs-rq3iss, 2px)));margin:auto;border-left:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded);box-sizing:border-box}.awsui_header-cell-resizable_1spae_hc8xc_132:not(#\\9):not(:last-child):before{border-left-color:var(--color-border-divider-interactive-default-x2thzf, #687078)}.awsui_sorting-icon_1spae_hc8xc_165:not(#\\9){position:absolute;top:50%;transform:translateY(-50%);right:var(--space-xxs-a6783b, 4px);color:var(--color-text-column-sorting-icon-jjivph, #687078)}.awsui_edit-icon_1spae_hc8xc_173:not(#\\9){margin-left:var(--space-xxs-a6783b, 4px);margin-top:var(--space-scaled-xxs-ugy2pw, 4px);color:inherit}.awsui_header-cell-content_1spae_hc8xc_179:not(#\\9){position:relative;padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-s-rd607g, 12px)}.awsui_header-cell-sortable_1spae_hc8xc_114>.awsui_header-cell-content_1spae_hc8xc_179:not(#\\9){padding-right:calc(var(--space-xl-7jca1b, 24px) + var(--space-xxs-a6783b, 4px))}.awsui_header-cell-content_1spae_hc8xc_179:not(#\\9):focus{outline:none;text-decoration:none}body[data-awsui-focus-visible=true] .awsui_header-cell-content_1spae_hc8xc_179:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_header-cell-content_1spae_hc8xc_179:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(var(--space-table-header-focus-outline-gutter-7em6qj, 0px) - 1px)}body[data-awsui-focus-visible=true] .awsui_header-cell-content_1spae_hc8xc_179:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));top:calc(-1 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));width:calc(100% + 2 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));height:calc(100% + 2 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}body[data-awsui-focus-visible=true] .awsui_header-cell-content_1spae_hc8xc_179.awsui_header-cell-fake-focus_1spae_hc8xc_208:not(#\\9){position:relative}body[data-awsui-focus-visible=true] .awsui_header-cell-content_1spae_hc8xc_179.awsui_header-cell-fake-focus_1spae_hc8xc_208:not(#\\9){outline:2px dotted transparent;outline-offset:calc(var(--space-table-header-focus-outline-gutter-7em6qj, 0px) - 1px)}body[data-awsui-focus-visible=true] .awsui_header-cell-content_1spae_hc8xc_179.awsui_header-cell-fake-focus_1spae_hc8xc_208:not(#\\9)::before{content:\" \";display:block;position:absolute;left:calc(-1 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));top:calc(-1 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));width:calc(100% + 2 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));height:calc(100% + 2 * var(--space-table-header-focus-outline-gutter-7em6qj, 0px));border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_header-cell-disabled_1spae_hc8xc_226.awsui_header-cell-sorted_1spae_hc8xc_226>.awsui_header-cell-content_1spae_hc8xc_179>.awsui_sorting-icon_1spae_hc8xc_165:not(#\\9){color:var(--color-text-interactive-disabled-k4q23b, #aab7b8)}.awsui_header-cell-sortable_1spae_hc8xc_114:not(#\\9):not(.awsui_header-cell-disabled_1spae_hc8xc_226)>.awsui_header-cell-content_1spae_hc8xc_179{cursor:pointer}.awsui_header-cell-sortable_1spae_hc8xc_114:not(#\\9):not(.awsui_header-cell-disabled_1spae_hc8xc_226)>.awsui_header-cell-content_1spae_hc8xc_179:hover,.awsui_header-cell-sortable_1spae_hc8xc_114:not(#\\9):not(.awsui_header-cell-disabled_1spae_hc8xc_226).awsui_header-cell-sorted_1spae_hc8xc_226>.awsui_header-cell-content_1spae_hc8xc_179{color:var(--color-text-interactive-active-j3cxbp, #16191f)}.awsui_header-cell-sortable_1spae_hc8xc_114:not(#\\9):not(.awsui_header-cell-disabled_1spae_hc8xc_226)>.awsui_header-cell-content_1spae_hc8xc_179:hover>.awsui_sorting-icon_1spae_hc8xc_165,.awsui_header-cell-sortable_1spae_hc8xc_114:not(#\\9):not(.awsui_header-cell-disabled_1spae_hc8xc_226).awsui_header-cell-sorted_1spae_hc8xc_226>.awsui_header-cell-content_1spae_hc8xc_179>.awsui_sorting-icon_1spae_hc8xc_165{color:var(--color-text-interactive-active-j3cxbp, #16191f)}.awsui_header-cell-text_1spae_hc8xc_240:not(#\\9){line-height:var(--line-height-heading-xs-au4jub, 20px);padding-top:calc(var(--space-xxxs-rq3iss, 2px) / 2);padding-bottom:calc(var(--space-xxxs-rq3iss, 2px) / 2)}.awsui_header-cell-text_1spae_hc8xc_240:not(#\\9):not(.awsui_header-cell-text-wrap_1spae_hc8xc_245){white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.awsui_header-cell-ascending_1spae_hc8xc_251:not(#\\9),.awsui_header-cell-descending_1spae_hc8xc_252:not(#\\9){}.awsui_header-cell_1spae_hc8xc_93:not(#\\9):not(.awsui_is-visual-refresh_1spae_hc8xc_262):first-child{padding-left:var(--space-xs-inub5w, 8px)}.awsui_header-cell_1spae_hc8xc_93.awsui_is-visual-refresh_1spae_hc8xc_262:not(#\\9){}.awsui_header-cell_1spae_hc8xc_93.awsui_is-visual-refresh_1spae_hc8xc_262:not(#\\9):first-child:not(.awsui_has-striped-rows_1spae_hc8xc_273){padding-left:var(--space-xxxs-rq3iss, 2px)}.awsui_header-cell_1spae_hc8xc_93.awsui_is-visual-refresh_1spae_hc8xc_262:not(#\\9):first-child:not(.awsui_has-striped-rows_1spae_hc8xc_273).awsui_sticky-cell-pad-left_1spae_hc8xc_125{padding-left:var(--space-table-horizontal-4gmq7g, 0px)}.awsui_header-cell_1spae_hc8xc_93.awsui_is-visual-refresh_1spae_hc8xc_262:not(#\\9):first-child.awsui_has-striped-rows_1spae_hc8xc_273{padding-left:var(--space-xxs-a6783b, 4px)}.awsui_header-cell_1spae_hc8xc_93.awsui_is-visual-refresh_1spae_hc8xc_262:not(#\\9):first-child>.awsui_header-cell-content_1spae_hc8xc_179{padding-left:0}.awsui_header-cell_1spae_hc8xc_93.awsui_is-visual-refresh_1spae_hc8xc_262:not(#\\9):last-child.awsui_header-cell-sortable_1spae_hc8xc_114{padding-right:var(--space-xxxs-rq3iss, 2px)}.awsui_root_1mabk_iqi2r_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:block}.awsui_radio_1mabk_iqi2r_107:not(#\\9){}.awsui_radio_1mabk_iqi2r_107+.awsui_radio_1mabk_iqi2r_107:not(#\\9){margin-top:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_radio--has-description_1mabk_iqi2r_115+.awsui_radio_1mabk_iqi2r_107:not(#\\9){margin-top:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_radio-control_1mabk_iqi2r_119:not(#\\9){margin-top:calc((var(--line-height-body-m-4ax85e, 22px) - var(--size-control-q9uk7g, 14px)) / 2);min-height:var(--size-control-q9uk7g, 14px);min-width:var(--size-control-q9uk7g, 14px);height:var(--size-control-q9uk7g, 14px);width:var(--size-control-q9uk7g, 14px)}.awsui_outline_1mabk_iqi2r_127:not(#\\9){position:relative}.awsui_outline_1mabk_iqi2r_127:not(#\\9){outline:2px dotted transparent;outline-offset:calc(2px - 1px)}.awsui_outline_1mabk_iqi2r_127:not(#\\9)::before{content:\" \";display:block;position:absolute;left:calc(-1 * 2px);top:calc(-1 * 2px);width:calc(100% + 2 * 2px);height:calc(100% + 2 * 2px);border-radius:var(--border-radius-control-circular-focus-ring-71or2m, 50%);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_styled-circle-border_1mabk_iqi2r_146:not(#\\9){stroke:var(--color-border-control-default-1igjc0, #687078);fill:var(--color-background-control-default-x4w3j0, #ffffff)}.awsui_styled-circle-border_1mabk_iqi2r_146.awsui_styled-circle-disabled_1mabk_iqi2r_150:not(#\\9){fill:var(--color-background-control-disabled-vkotqk, #d5dbdb);stroke:var(--color-background-control-disabled-vkotqk, #d5dbdb)}.awsui_styled-circle-fill_1mabk_iqi2r_155:not(#\\9){stroke:var(--color-background-control-checked-q75knx, #0073bb);fill:var(--color-foreground-control-default-5f7j2k, #ffffff);opacity:0;transition:opacity var(--motion-duration-transition-quick-dm1zcq, 90ms) var(--motion-easing-transition-quick-74hmmw, linear)}.awsui_styled-circle-fill_1mabk_iqi2r_155.awsui_styled-circle-checked_1mabk_iqi2r_161:not(#\\9){opacity:1}.awsui_styled-circle-fill_1mabk_iqi2r_155.awsui_styled-circle-disabled_1mabk_iqi2r_150:not(#\\9){fill:var(--color-foreground-control-disabled-4rcx89, #ffffff);stroke:var(--color-background-control-disabled-vkotqk, #d5dbdb)}@media (prefers-reduced-motion: reduce){.awsui_styled-circle-fill_1mabk_iqi2r_155:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_styled-circle-fill_1mabk_iqi2r_155:not(#\\9),.awsui-mode-entering .awsui_styled-circle-fill_1mabk_iqi2r_155:not(#\\9){animation:none;transition:none}.awsui_placeholder_dwuol_d451x_93:not(#\\9){color:var(--color-text-input-placeholder-vi9sh8, #687078);font-style:italic}.awsui_item_dwuol_d451x_98:not(#\\9){display:flex;align-items:center}.awsui_item_dwuol_d451x_98>.awsui_checkbox_dwuol_d451x_102:not(#\\9){position:relative;min-height:var(--size-control-q9uk7g, 14px);min-width:var(--size-control-q9uk7g, 14px);height:var(--size-control-q9uk7g, 14px);width:var(--size-control-q9uk7g, 14px);margin-right:var(--space-field-horizontal-wfaq0d, 8px)}.awsui_filter_dwuol_d451x_111:not(#\\9){z-index:4;flex-shrink:0}.awsui_trigger_dwuol_d451x_116:not(#\\9){white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.awsui_layout-strut_dwuol_d451x_122:not(#\\9){width:100%;position:relative;transform:translate3d(0, 0, 0)}.awsui_list-bottom_dwuol_d451x_128:not(#\\9){}.awsui_selected-icon_dwuol_d451x_132:not(#\\9){color:var(--color-border-item-focused-t884ih, #0073bb)}.awsui_show-label-tag_dwuol_d451x_136>.awsui_selected-icon_dwuol_d451x_132:not(#\\9){padding-left:var(--space-scaled-s-gczsk7, 12px)}.awsui_inline-token-trigger_dwuol_d451x_140:not(#\\9){display:flex;flex-wrap:nowrap;column-gap:var(--space-xxs-a6783b, 4px);width:100%}.awsui_inline-token-list_dwuol_d451x_147:not(#\\9){display:flex;flex-wrap:nowrap;align-items:center;gap:var(--space-xxs-a6783b, 4px);width:100%;overflow-x:hidden;-webkit-mask-image:linear-gradient(270deg, transparent, white 20px, white);mask-image:linear-gradient(270deg, transparent, white 20px, white)}.awsui_inline-token-list_dwuol_d451x_147>.awsui_inline-token_dwuol_d451x_140:not(#\\9){display:flex;align-items:center;min-width:max-content;height:18px;border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-item-selected-bmiwgz, #0073bb);padding:0 var(--space-xxs-a6783b, 4px);background:var(--color-background-item-selected-8e1q8b, #f1faff);border-radius:var(--border-radius-token-17x9l6, 2px);color:var(--color-text-body-default-rlujvh, #16191f)}.awsui_visual-refresh_dwuol_d451x_168>.awsui_inline-token-list_dwuol_d451x_147>.awsui_inline-token_dwuol_d451x_140:not(#\\9){border-radius:var(--border-radius-badge-8ouvml, 16px)}.awsui_inline-token-hidden-placeholder_dwuol_d451x_172:not(#\\9){position:absolute !important;top:-9999px !important;left:-9999px !important}.awsui_inline-token-counter_dwuol_d451x_178:not(#\\9){white-space:nowrap}.awsui_inline-token-trigger--disabled_dwuol_d451x_182>.awsui_inline-token-list_dwuol_d451x_147>.awsui_inline-token_dwuol_d451x_140:not(#\\9){border-color:var(--color-border-control-disabled-n4rl6j, #d5dbdb);background-color:var(--color-background-container-content-pb0lp5, #ffffff);color:var(--color-text-disabled-tmkonv, #aab7b8)}.awsui_root_r2vco_1pfj0_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto}.awsui_root_dm8gx_e8vkc_97:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto}.awsui_root_dm8gx_e8vkc_97.awsui_has-items_dm8gx_e8vkc_109:not(#\\9){padding-top:var(--space-xs-inub5w, 8px)}.awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9){margin:-1px -1px 0 var(--space-xxs-a6783b, 4px);border:1px solid transparent;padding:0 var(--space-xxs-a6783b, 4px);color:var(--color-text-button-inline-icon-default-buw7w7, #545b64);background-color:transparent}body[data-awsui-focus-visible=true] .awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9):focus{position:relative}body[data-awsui-focus-visible=true] .awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9):focus{outline:2px dotted transparent;outline-offset:calc(0px - 1px)}body[data-awsui-focus-visible=true] .awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9):focus::before{content:\" \";display:block;position:absolute;left:calc(-1 * 0px);top:calc(-1 * 0px);width:calc(100% + 2 * 0px);height:calc(100% + 2 * 0px);border-radius:var(--border-radius-control-default-focus-ring-fc6z2l, 2px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9):focus{outline:none;text-decoration:none}.awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9):hover{cursor:pointer;color:var(--color-text-button-inline-icon-hover-0pwsg2, #16191f)}.awsui_token_dm8gx_e8vkc_147:not(#\\9){height:100%;display:flex;flex-direction:column;gap:var(--space-xxs-a6783b, 4px)}.awsui_token-box_dm8gx_e8vkc_154:not(#\\9){height:100%;border:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-item-selected-bmiwgz, #0073bb);padding:var(--space-scaled-xxs-ugy2pw, 4px) var(--space-xxs-a6783b, 4px) var(--space-scaled-xxs-ugy2pw, 4px) var(--space-field-horizontal-wfaq0d, 8px);display:flex;align-items:flex-start;background:var(--color-background-item-selected-8e1q8b, #f1faff);border-radius:var(--border-radius-token-17x9l6, 2px);color:var(--color-text-body-default-rlujvh, #16191f);box-sizing:border-box}.awsui_token-box-error_dm8gx_e8vkc_166:not(#\\9){border-color:var(--color-border-status-error-pwclyd, #d13212);border-left-width:var(--border-invalid-width-5eyrjt, 4px)}.awsui_token-box-error_dm8gx_e8vkc_166>.awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9){color:var(--color-text-interactive-default-djvtmz, #545b64)}.awsui_token-box-error_dm8gx_e8vkc_166>.awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9):hover{color:var(--color-text-interactive-hover-55cagk, #16191f)}.awsui_token-box-disabled_dm8gx_e8vkc_177.awsui_token-box-disabled_dm8gx_e8vkc_177:not(#\\9){border-color:var(--color-border-control-disabled-n4rl6j, #d5dbdb);background-color:var(--color-background-container-content-pb0lp5, #ffffff);color:var(--color-text-disabled-tmkonv, #aab7b8);pointer-events:none}.awsui_token-box-disabled_dm8gx_e8vkc_177.awsui_token-box-disabled_dm8gx_e8vkc_177>.awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9){color:var(--color-text-button-inline-icon-disabled-phk84s, #aab7b8)}.awsui_token-box-disabled_dm8gx_e8vkc_177.awsui_token-box-disabled_dm8gx_e8vkc_177>.awsui_dismiss-button_dm8gx_e8vkc_113:not(#\\9):hover{cursor:auto;color:var(--color-text-button-inline-icon-disabled-phk84s, #aab7b8)}.awsui_icon_h11ix_15s3k_98:not(#\\9){position:relative;display:inline-block;vertical-align:top;}.awsui_icon-flex-height_h11ix_15s3k_104:not(#\\9){display:inline-flex;align-items:center}.awsui_icon_h11ix_15s3k_98>svg:not(#\\9){pointer-events:none}.awsui_icon_h11ix_15s3k_98>svg:not(#\\9){fill:none}.awsui_icon_h11ix_15s3k_98>svg *:not(#\\9){stroke:currentColor}.awsui_icon_h11ix_15s3k_98>svg .stroke-linejoin-round:not(#\\9){stroke-linejoin:round}.awsui_icon_h11ix_15s3k_98>svg .stroke-linecap-square:not(#\\9){stroke-linecap:square}.awsui_icon_h11ix_15s3k_98>svg .stroke-linecap-round:not(#\\9){stroke-linecap:round}.awsui_icon_h11ix_15s3k_98>svg .filled:not(#\\9){fill:currentColor}.awsui_icon_h11ix_15s3k_98.awsui_size-small_h11ix_15s3k_129:not(#\\9){width:var(--size-icon-normal-as5jb3, 16px);box-sizing:border-box}.awsui_icon_h11ix_15s3k_98.awsui_size-small-mapped-height_h11ix_15s3k_133:not(#\\9){height:var(--line-height-body-s-lnbzsa, 16px);padding:calc((var(--line-height-body-s-lnbzsa, 16px) - var(--size-icon-normal-as5jb3, 16px)) / 2) 0}.awsui_icon_h11ix_15s3k_98.awsui_size-small_h11ix_15s3k_129>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-small_h11ix_15s3k_129>img:not(#\\9){width:var(--size-icon-normal-as5jb3, 16px);height:var(--size-icon-normal-as5jb3, 16px);vertical-align:top}.awsui_icon_h11ix_15s3k_98.awsui_size-small_h11ix_15s3k_129>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-small_h11ix_15s3k_129>svg *:not(#\\9){stroke-width:2px}.awsui_icon_h11ix_15s3k_98.awsui_size-normal_h11ix_15s3k_147:not(#\\9){width:var(--size-icon-normal-as5jb3, 16px);box-sizing:border-box}.awsui_icon_h11ix_15s3k_98.awsui_size-normal-mapped-height_h11ix_15s3k_151:not(#\\9){height:var(--line-height-body-m-4ax85e, 22px);padding:calc((var(--line-height-body-m-4ax85e, 22px) - var(--size-icon-normal-as5jb3, 16px)) / 2) 0}.awsui_icon_h11ix_15s3k_98.awsui_size-normal_h11ix_15s3k_147>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-normal_h11ix_15s3k_147>img:not(#\\9){width:var(--size-icon-normal-as5jb3, 16px);height:var(--size-icon-normal-as5jb3, 16px);vertical-align:top}.awsui_icon_h11ix_15s3k_98.awsui_size-normal_h11ix_15s3k_147>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-normal_h11ix_15s3k_147>svg *:not(#\\9){stroke-width:2px}.awsui_icon_h11ix_15s3k_98.awsui_size-medium_h11ix_15s3k_165:not(#\\9){width:var(--size-icon-medium-d9rdun, 16px);box-sizing:border-box}.awsui_icon_h11ix_15s3k_98.awsui_size-medium-mapped-height_h11ix_15s3k_169:not(#\\9){height:var(--line-height-heading-l-z752l3, 22px);padding:calc((var(--line-height-heading-l-z752l3, 22px) - var(--size-icon-medium-d9rdun, 16px)) / 2) 0}.awsui_icon_h11ix_15s3k_98.awsui_size-medium_h11ix_15s3k_165>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-medium_h11ix_15s3k_165>img:not(#\\9){width:var(--size-icon-medium-d9rdun, 16px);height:var(--size-icon-medium-d9rdun, 16px);vertical-align:top}.awsui_icon_h11ix_15s3k_98.awsui_size-medium_h11ix_15s3k_165>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-medium_h11ix_15s3k_165>svg *:not(#\\9){stroke-width:2px}.awsui_icon_h11ix_15s3k_98.awsui_size-big_h11ix_15s3k_183:not(#\\9){width:var(--size-icon-big-rl4tdi, 32px);box-sizing:border-box}.awsui_icon_h11ix_15s3k_98.awsui_size-big-mapped-height_h11ix_15s3k_187:not(#\\9){height:var(--line-height-heading-xl-44izce, 36px);padding:calc((var(--line-height-heading-xl-44izce, 36px) - var(--size-icon-big-rl4tdi, 32px)) / 2) 0}.awsui_icon_h11ix_15s3k_98.awsui_size-big_h11ix_15s3k_183>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-big_h11ix_15s3k_183>img:not(#\\9){width:var(--size-icon-big-rl4tdi, 32px);height:var(--size-icon-big-rl4tdi, 32px);vertical-align:top}.awsui_icon_h11ix_15s3k_98.awsui_size-big_h11ix_15s3k_183>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-big_h11ix_15s3k_183>svg *:not(#\\9){stroke-width:2px}.awsui_icon_h11ix_15s3k_98.awsui_size-large_h11ix_15s3k_201:not(#\\9){width:var(--size-icon-large-x6jwev, 48px);box-sizing:border-box}.awsui_icon_h11ix_15s3k_98.awsui_size-large-mapped-height_h11ix_15s3k_205:not(#\\9){height:var(--line-height-display-l-aqze16, 56px);padding:calc((var(--line-height-display-l-aqze16, 56px) - var(--size-icon-large-x6jwev, 48px)) / 2) 0}.awsui_icon_h11ix_15s3k_98.awsui_size-large_h11ix_15s3k_201>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-large_h11ix_15s3k_201>img:not(#\\9){width:var(--size-icon-large-x6jwev, 48px);height:var(--size-icon-large-x6jwev, 48px);vertical-align:top}.awsui_icon_h11ix_15s3k_98.awsui_size-large_h11ix_15s3k_201>svg:not(#\\9),.awsui_icon_h11ix_15s3k_98.awsui_size-large_h11ix_15s3k_201>svg *:not(#\\9){stroke-width:1.2px}.awsui_icon_h11ix_15s3k_98.awsui_variant-normal_h11ix_15s3k_219:not(#\\9){color:currentColor}.awsui_icon_h11ix_15s3k_98.awsui_variant-disabled_h11ix_15s3k_222:not(#\\9){color:var(--color-text-interactive-disabled-k4q23b, #aab7b8)}.awsui_icon_h11ix_15s3k_98.awsui_variant-inverted_h11ix_15s3k_225:not(#\\9){color:var(--color-text-inverted-obwu99, #ffffff)}.awsui_icon_h11ix_15s3k_98.awsui_variant-subtle_h11ix_15s3k_228:not(#\\9){color:var(--color-text-icon-subtle-fzoo43, #687078)}.awsui_icon_h11ix_15s3k_98.awsui_variant-warning_h11ix_15s3k_231:not(#\\9){color:var(--color-text-status-warning-g3wln0, #906806)}.awsui_icon_h11ix_15s3k_98.awsui_variant-error_h11ix_15s3k_234:not(#\\9){color:var(--color-text-status-error-a5tqz1, #d13212)}.awsui_icon_h11ix_15s3k_98.awsui_variant-success_h11ix_15s3k_237:not(#\\9){color:var(--color-text-status-success-a6oxaq, #1d8102)}.awsui_icon_h11ix_15s3k_98.awsui_variant-link_h11ix_15s3k_240:not(#\\9){color:var(--color-text-link-default-lwrgyu, #0073bb)}.awsui_badge_h11ix_15s3k_244:not(#\\9)::after{content:\"\";position:absolute;width:6px;height:6px;border-radius:4px;background-color:var(--color-background-badge-icon-4mo0wt, #d13212);top:0px;right:-3px}@keyframes awsui_modal-slide-up_1d2i7_1tliy_1{0%{transform:translate(0, 10px)}100%{transform:translate(0, 0)}}.awsui_dialog_1d2i7_1tliy_105:not(#\\9){animation:awsui_modal-slide-up_1d2i7_1tliy_1 var(--motion-duration-slow-mz6oyq, 180ms) ease-out, awsui_awsui-motion-fade-in-0_1d2i7_1tliy_1 var(--motion-duration-slow-mz6oyq, 180ms) ease-out;animation-delay:var(--motion-duration-fast-pml190, 90ms);animation-fill-mode:both}@keyframes awsui_awsui-motion-fade-in-0_1d2i7_1tliy_1{from{opacity:0}to{opacity:1}}@media (prefers-reduced-motion: reduce){.awsui_dialog_1d2i7_1tliy_105:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_dialog_1d2i7_1tliy_105:not(#\\9),.awsui-mode-entering .awsui_dialog_1d2i7_1tliy_105:not(#\\9){animation:none;transition:none}.awsui_dialog_1d2i7_1tliy_105.awsui_refresh_1d2i7_1tliy_128:not(#\\9){animation:awsui_awsui-motion-scale-popup_1d2i7_1tliy_1, awsui_awsui-motion-fade-in-0_1d2i7_1tliy_1;animation-duration:var(--motion-duration-refresh-only-fast-n43vlu, 115ms);animation-timing-function:var(--motion-easing-refresh-only-a-yzzzm8, cubic-bezier(0, 0, 0, 1));animation-fill-mode:both}@keyframes awsui_awsui-motion-fade-in-0_1d2i7_1tliy_1{from{opacity:0}to{opacity:1}}@keyframes awsui_awsui-motion-scale-popup_1d2i7_1tliy_1{0%{transform:scale(0.95)}100%{transform:scale(1)}}@media (prefers-reduced-motion: reduce){.awsui_dialog_1d2i7_1tliy_105.awsui_refresh_1d2i7_1tliy_128:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_dialog_1d2i7_1tliy_105.awsui_refresh_1d2i7_1tliy_128:not(#\\9),.awsui-mode-entering .awsui_dialog_1d2i7_1tliy_105.awsui_refresh_1d2i7_1tliy_128:not(#\\9){animation:none;transition:none}.awsui_root_1d2i7_1tliy_161:not(#\\9){animation:awsui_awsui-motion-fade-in_1d2i7_1tliy_1 var(--motion-duration-extra-slow-vamr5b, 270ms) ease-out;animation-fill-mode:both}@keyframes awsui_awsui-motion-fade-in_1d2i7_1tliy_1{from{opacity:0.2}to{opacity:1}}@media (prefers-reduced-motion: reduce){.awsui_root_1d2i7_1tliy_161:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_root_1d2i7_1tliy_161:not(#\\9),.awsui-mode-entering .awsui_root_1d2i7_1tliy_161:not(#\\9){animation:none;transition:none}.awsui_root_1d2i7_1tliy_161.awsui_refresh_1d2i7_1tliy_128:not(#\\9){animation-duration:var(--motion-duration-refresh-only-fast-n43vlu, 115ms)}@media (prefers-reduced-motion: reduce){.awsui_root_1d2i7_1tliy_161.awsui_refresh_1d2i7_1tliy_128:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_root_1d2i7_1tliy_161.awsui_refresh_1d2i7_1tliy_128:not(#\\9),.awsui-mode-entering .awsui_root_1d2i7_1tliy_161.awsui_refresh_1d2i7_1tliy_128:not(#\\9){animation:none;transition:none}.awsui_root_1d2i7_1tliy_161:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;background-color:var(--color-background-modal-overlay-rsidw7, rgba(242, 243, 243, 0.9));display:flex;align-items:center;justify-items:center;bottom:0;left:0;right:0;top:0;position:fixed;z-index:5000;outline:0;overflow:auto;cursor:pointer}.awsui_root_1d2i7_1tliy_161.awsui_hidden_1d2i7_1tliy_226:not(#\\9){display:none}.awsui_focus-lock_1d2i7_1tliy_230:not(#\\9){align-self:flex-start;margin:auto;padding:var(--space-s-rd607g, 12px) 0;z-index:5000;pointer-events:none}.awsui_dialog_1d2i7_1tliy_105:not(#\\9){position:static;top:0;transform:translate(0, 0);width:calc(100vw - var(--space-s-rd607g, 12px) * 2);box-sizing:border-box;outline:none;z-index:5000;pointer-events:all}.awsui_dialog_1d2i7_1tliy_105.awsui_small_1d2i7_1tliy_248:not(#\\9){max-width:320px}.awsui_dialog_1d2i7_1tliy_105.awsui_medium_1d2i7_1tliy_251:not(#\\9){max-width:600px}.awsui_dialog_1d2i7_1tliy_105.awsui_large_1d2i7_1tliy_254:not(#\\9){max-width:820px}.awsui_dialog_1d2i7_1tliy_105.awsui_max_1d2i7_1tliy_257.awsui_breakpoint-xs_1d2i7_1tliy_257:not(#\\9){max-width:calc(100vw - (2 * 4 * 10px + var(--space-xxxl-rhml9p, 40px)));margin:auto}.awsui_container_1d2i7_1tliy_262:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:block;background-color:var(--color-background-container-content-pb0lp5, #ffffff);word-wrap:break-word;border-top:var(--border-container-top-width-qyo5h4, 1px) solid var(--color-border-container-top-ige66g, #eaeded);border-radius:var(--border-radius-container-y85mnh, 0px);box-shadow:var(--shadow-modal-cavj11, 0 1px 1px 0 rgba(0, 28, 36, 0.3), 1px 1px 1px 0 rgba(0, 28, 36, 0.15), -1px 1px 1px 0 rgba(0, 28, 36, 0.15))}.awsui_content_1d2i7_1tliy_281:not(#\\9){padding:var(--space-container-content-top-smfayu, 16px) var(--space-modal-horizontal-plzmda, 20px) var(--space-modal-content-bottom-jf04k3, 20px)}.awsui_content_1d2i7_1tliy_281.awsui_no-paddings_1d2i7_1tliy_284:not(#\\9){padding:0}.awsui_header_1d2i7_1tliy_288:not(#\\9){padding:var(--space-container-header-top-isuu42, 12px) var(--space-modal-horizontal-plzmda, 20px) var(--space-container-header-bottom-7poudk, 12px);background-color:var(--color-background-container-header-pmlnr3, #fafafa);border-bottom:1px solid var(--color-border-container-divider-4z4y7u, #eaeded);border-radius:var(--border-radius-container-y85mnh, 0px) var(--border-radius-container-y85mnh, 0px) 0 0}.awsui_header--text_1d2i7_1tliy_295:not(#\\9){}.awsui_footer_1d2i7_1tliy_299:not(#\\9){border-top:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded);padding:var(--space-scaled-s-gczsk7, 12px) var(--space-container-horizontal-6u2610, 20px);background-color:var(--color-background-container-content-pb0lp5, #ffffff);position:sticky;bottom:0;z-index:800}.awsui_footer--stuck_1d2i7_1tliy_307:not(#\\9){border-radius:0 0 var(--border-radius-container-y85mnh, 0px) var(--border-radius-container-y85mnh, 0px)}.awsui_footer_1d2i7_1tliy_299:not(#\\9):after{content:\"\";display:table;clear:both}.awsui_dismiss-control_1d2i7_1tliy_316:not(#\\9){}.awsui_modal-open_1d2i7_1tliy_320:not(#\\9){overflow:hidden;box-sizing:border-box}.awsui_root_f8g6q_1pfj0_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto}.awsui_visible-content_tc96w_1fqj8_185:not(#\\9),.awsui_visible-content-toggle_tc96w_1fqj8_186:not(#\\9),.awsui_visible-content-groups_tc96w_1fqj8_187:not(#\\9),.awsui_visible-content-group_tc96w_1fqj8_187:not(#\\9){}.awsui_visible-content-title_tc96w_1fqj8_192:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);font-weight:var(--font-display-label-weight-w2bkol, 400);color:var(--color-text-form-label-ug2d1t, #16191f);margin:0;margin-bottom:var(--space-scaled-l-x5pubp, 20px)}.awsui_visible-content-group-label_tc96w_1fqj8_201:not(#\\9){color:var(--color-text-group-label-3l0dih, #545b64);padding-bottom:var(--space-xs-inub5w, 8px);border-bottom:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_visible-content-option_tc96w_1fqj8_207:not(#\\9){display:flex;flex-wrap:nowrap;justify-content:space-between;padding:var(--space-xs-inub5w, 8px) 0px var(--space-xs-inub5w, 8px) var(--space-scaled-l-x5pubp, 20px);border-bottom:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_visible-content-option_tc96w_1fqj8_207:not(#\\9):last-child{border-bottom:none}.awsui_visible-content-option-label_tc96w_1fqj8_218:not(#\\9){overflow:hidden;text-overflow:ellipsis;padding-right:var(--space-l-ds615y, 20px);flex-grow:1}.awsui_content-display-option-toggle_tc96w_1fqj8_409:not(#\\9){}.awsui_content-display-option-content_tc96w_1fqj8_413:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:flex;align-items:flex-start;padding:var(--space-xs-inub5w, 8px) var(--space-scaled-xs-u0e7ft, 8px) var(--space-xs-inub5w, 8px) 0;background-color:var(--color-background-container-content-pb0lp5, #ffffff);border-radius:var(--border-radius-item-fcd5og, 0px)}.awsui_content-display-option_tc96w_1fqj8_409:not(#\\9){list-style:none;position:relative;border-top:var(--border-divider-list-width-fsy9j8, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_content-display-option_tc96w_1fqj8_409:not(#\\9):not(.awsui_placeholder_tc96w_1fqj8_436).awsui_sorting_tc96w_1fqj8_436{transition:transform var(--motion-duration-transition-quick-dm1zcq, 90ms) var(--motion-easing-transition-quick-74hmmw, linear)}@media (prefers-reduced-motion: reduce){.awsui_content-display-option_tc96w_1fqj8_409:not(#\\9):not(.awsui_placeholder_tc96w_1fqj8_436).awsui_sorting_tc96w_1fqj8_436{animation:none;transition:none}}.awsui-motion-disabled .awsui_content-display-option_tc96w_1fqj8_409:not(#\\9):not(.awsui_placeholder_tc96w_1fqj8_436).awsui_sorting_tc96w_1fqj8_436,.awsui-mode-entering .awsui_content-display-option_tc96w_1fqj8_409:not(#\\9):not(.awsui_placeholder_tc96w_1fqj8_436).awsui_sorting_tc96w_1fqj8_436{animation:none;transition:none}.awsui_content-display-option_tc96w_1fqj8_409.awsui_placeholder_tc96w_1fqj8_436>.awsui_content-display-option-content_tc96w_1fqj8_413:not(#\\9){position:relative}.awsui_content-display-option_tc96w_1fqj8_409.awsui_placeholder_tc96w_1fqj8_436>.awsui_content-display-option-content_tc96w_1fqj8_413:not(#\\9):after{content:\" \";position:absolute;top:0;bottom:0;left:0;right:0;background:var(--color-drag-placeholder-hover-8lb5mf, #99cbe4);border-radius:var(--border-radius-item-fcd5og, 0px)}.awsui_content-display-option-label_tc96w_1fqj8_463:not(#\\9){flex-grow:1;min-width:0;word-break:break-word;padding-right:var(--space-l-ds615y, 20px)}.awsui_drag-overlay_tc96w_1fqj8_470:not(#\\9){box-shadow:var(--shadow-container-active-1gt28y, 0px 4px 8px rgba(0, 28, 36, 0.45));border-radius:var(--border-radius-item-fcd5og, 0px)}body[data-awsui-focus-visible=true] .awsui_drag-overlay_tc96w_1fqj8_470:not(#\\9){position:relative}body[data-awsui-focus-visible=true] .awsui_drag-overlay_tc96w_1fqj8_470:not(#\\9){outline:2px dotted transparent;outline-offset:calc(0px - 1px)}body[data-awsui-focus-visible=true] .awsui_drag-overlay_tc96w_1fqj8_470:not(#\\9)::before{content:\" \";display:block;position:absolute;left:calc(-1 * 0px);top:calc(-1 * 0px);width:calc(100% + 2 * 0px);height:calc(100% + 2 * 0px);border-radius:var(--border-radius-item-fcd5og, 0px);box-shadow:0 0 0 2px var(--color-border-item-focused-t884ih, #0073bb)}.awsui_content-display_tc96w_1fqj8_409:not(#\\9){}.awsui_content-display-title_tc96w_1fqj8_497:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);font-weight:var(--font-display-label-weight-w2bkol, 400);color:var(--color-text-form-label-ug2d1t, #16191f);margin:0}.awsui_content-display-description_tc96w_1fqj8_505:not(#\\9){color:var(--color-text-form-secondary-wh2xkx, #687078);font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal);margin-top:var(--space-scaled-xxxs-emyscj, 2px)}.awsui_content-display-option-list_tc96w_1fqj8_513:not(#\\9){position:relative;list-style:none;padding:0}.awsui_root_tc96w_1fqj8_519:not(#\\9),.awsui_modal-root_tc96w_1fqj8_520:not(#\\9),.awsui_trigger-button_tc96w_1fqj8_521:not(#\\9),.awsui_cancel-button_tc96w_1fqj8_522:not(#\\9),.awsui_confirm-button_tc96w_1fqj8_523:not(#\\9),.awsui_custom_tc96w_1fqj8_524:not(#\\9){}.awsui_second-column-small_tc96w_1fqj8_528:not(#\\9){padding-top:calc(2 * var(--space-scaled-l-x5pubp, 20px))}.awsui_wrap-lines_tc96w_1fqj8_532:not(#\\9),.awsui_striped-rows_tc96w_1fqj8_533:not(#\\9),.awsui_content-density_tc96w_1fqj8_534:not(#\\9),.awsui_page-size_tc96w_1fqj8_535:not(#\\9),.awsui_page-size-form-field_tc96w_1fqj8_536:not(#\\9),.awsui_page-size-radio-group_tc96w_1fqj8_537:not(#\\9),.awsui_sticky-columns_tc96w_1fqj8_538:not(#\\9),.awsui_sticky-columns-form-field_tc96w_1fqj8_539:not(#\\9),.awsui_sticky-columns-radio-group_tc96w_1fqj8_540:not(#\\9),.awsui_sticky-columns-first_tc96w_1fqj8_541:not(#\\9),.awsui_sticky-columns-last_tc96w_1fqj8_542:not(#\\9){}.awsui_root_2qdw9_umq7t_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;cursor:inherit;display:flex;width:100%;flex-wrap:wrap;justify-content:space-between}.awsui_root_2qdw9_umq7t_93.awsui_refresh_2qdw9_umq7t_110:not(#\\9),.awsui_root_2qdw9_umq7t_93:not(#\\9):not(.awsui_root-no-actions_2qdw9_umq7t_110){row-gap:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_root-no-actions_2qdw9_umq7t_110.awsui_root-variant-h2_2qdw9_umq7t_113:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110),.awsui_root-no-actions_2qdw9_umq7t_110.awsui_root-variant-h3_2qdw9_umq7t_113:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110),.awsui_root-has-description_2qdw9_umq7t_113.awsui_root-variant-h2_2qdw9_umq7t_113:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110),.awsui_root-has-description_2qdw9_umq7t_113.awsui_root-variant-h3_2qdw9_umq7t_113:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){padding-bottom:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_root-no-actions_2qdw9_umq7t_110:not(#\\9):not(.awsui_root-has-description_2qdw9_umq7t_113):not(.awsui_refresh_2qdw9_umq7t_110){padding-bottom:calc(var(--space-scaled-xs-u0e7ft, 8px) + var(--space-xxxs-rq3iss, 2px))}.awsui_root-no-actions_2qdw9_umq7t_110.awsui_refresh_2qdw9_umq7t_110.awsui_root-variant-h2_2qdw9_umq7t_113:not(#\\9),.awsui_root-no-actions_2qdw9_umq7t_110.awsui_refresh_2qdw9_umq7t_110.awsui_root-variant-h3_2qdw9_umq7t_113:not(#\\9){row-gap:var(--space-scaled-xxxs-emyscj, 2px)}.awsui_root_2qdw9_umq7t_93.awsui_root-variant-h1_2qdw9_umq7t_122:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){row-gap:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_root-no-actions_2qdw9_umq7t_110:not(#\\9):not(.awsui_root-has-description_2qdw9_umq7t_113).awsui_refresh_2qdw9_umq7t_110.awsui_root-variant-h3_2qdw9_umq7t_113{padding-bottom:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_root_2qdw9_umq7t_93.awsui_root-variant-h1_2qdw9_umq7t_122.awsui_root-has-description_2qdw9_umq7t_113:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){padding-bottom:var(--space-scaled-2x-xxs-mfdb10, 4px)}.awsui_main_2qdw9_umq7t_132:not(#\\9){word-wrap:break-word;max-width:100%;display:flex;justify-content:space-between;width:100%;flex-wrap:wrap;column-gap:var(--space-xs-inub5w, 8px);row-gap:calc(var(--space-scaled-xxs-ugy2pw, 4px) + var(--space-scaled-xxxs-emyscj, 2px))}.awsui_main_2qdw9_umq7t_132.awsui_no-wrap_2qdw9_umq7t_142:not(#\\9){flex-wrap:nowrap}.awsui_main_2qdw9_umq7t_132.awsui_refresh_2qdw9_umq7t_110:not(#\\9){row-gap:var(--space-xxs-a6783b, 4px)}.awsui_main-variant-h1_2qdw9_umq7t_148:not(#\\9){row-gap:var(--space-scaled-2x-xxs-mfdb10, 4px)}.awsui_root-has-description_2qdw9_umq7t_113>.awsui_main_2qdw9_umq7t_132:not(#\\9){row-gap:var(--space-scaled-2x-xxs-mfdb10, 4px)}.awsui_actions_2qdw9_umq7t_156:not(#\\9){display:flex;align-items:flex-start;min-height:var(--size-vertical-input-18ku63, 32px)}.awsui_actions-centered_2qdw9_umq7t_161:not(#\\9){align-items:center}.awsui_actions-variant-h1_2qdw9_umq7t_164.awsui_refresh_2qdw9_umq7t_110:not(#\\9){padding:calc((var(--line-height-heading-xl-44izce, 36px) - var(--size-vertical-input-18ku63, 32px)) / 2) 0}.awsui_actions-variant-h2_2qdw9_umq7t_167.awsui_refresh_2qdw9_umq7t_110:not(#\\9){padding:calc((var(--line-height-heading-l-z752l3, 22px) - var(--size-vertical-input-18ku63, 32px)) / 2) 0}.awsui_actions-variant-h3_2qdw9_umq7t_170.awsui_refresh_2qdw9_umq7t_110:not(#\\9){padding:calc((var(--line-height-heading-m-88a3m6, 22px) - var(--size-vertical-input-18ku63, 32px)) / 2) 0}.awsui_actions-variant-h1_2qdw9_umq7t_164:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){padding:var(--space-scaled-xs-u0e7ft, 8px) 0}.awsui_actions-variant-h2_2qdw9_umq7t_167:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110),.awsui_actions-variant-h3_2qdw9_umq7t_170:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){padding:var(--space-scaled-xxs-ugy2pw, 4px) 0}.awsui_root-has-description_2qdw9_umq7t_113>.awsui_main_2qdw9_umq7t_132>.awsui_actions_2qdw9_umq7t_156:not(#\\9){padding-bottom:0}.awsui_title_2qdw9_umq7t_183:not(#\\9){min-width:0;word-break:break-word;color:var(--color-text-heading-default-p5akhh, #16191f)}.awsui_title-variant-h1_2qdw9_umq7t_188:not(#\\9){font-size:var(--font-size-heading-xl-z8h967, 28px);padding-top:var(--space-scaled-2x-xxs-mfdb10, 4px)}.awsui_title-variant-h1_2qdw9_umq7t_188.awsui_refresh_2qdw9_umq7t_110:not(#\\9){padding-top:calc((var(--size-vertical-input-18ku63, 32px) - var(--line-height-heading-xl-44izce, 36px)) / 2)}.awsui_title-variant-h2_2qdw9_umq7t_195:not(#\\9){font-size:var(--font-size-heading-l-u89ro8, 18px)}.awsui_title-variant-h2_2qdw9_umq7t_195.awsui_refresh_2qdw9_umq7t_110:not(#\\9){padding-top:calc((var(--size-vertical-input-18ku63, 32px) - var(--line-height-heading-l-z752l3, 22px)) / 2)}.awsui_title-variant-h3_2qdw9_umq7t_201:not(#\\9){font-size:var(--font-size-heading-m-ulervk, 18px)}.awsui_title-variant-h3_2qdw9_umq7t_201.awsui_refresh_2qdw9_umq7t_110:not(#\\9){padding-top:calc((var(--size-vertical-input-18ku63, 32px) - var(--line-height-heading-m-88a3m6, 22px)) / 2)}.awsui_title-variant-h2_2qdw9_umq7t_195:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110),.awsui_title-variant-h3_2qdw9_umq7t_201:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){padding-top:var(--space-scaled-xs-u0e7ft, 8px)}.awsui_no-wrap_2qdw9_umq7t_142>.awsui_title_2qdw9_umq7t_183:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){padding-bottom:calc(var(--space-scaled-xxs-ugy2pw, 4px) + var(--space-scaled-xxxs-emyscj, 2px))}.awsui_root-no-actions_2qdw9_umq7t_110.awsui_root-has-description_2qdw9_umq7t_113>.awsui_main_2qdw9_umq7t_132>:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110).awsui_title-variant-h2_2qdw9_umq7t_195,.awsui_root-no-actions_2qdw9_umq7t_110.awsui_root-has-description_2qdw9_umq7t_113>.awsui_main_2qdw9_umq7t_132>:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110).awsui_title-variant-h3_2qdw9_umq7t_201{padding-bottom:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_root-variant-h1_2qdw9_umq7t_122.awsui_root-no-actions_2qdw9_umq7t_110:not(#\\9):not(.awsui_root-has-description_2qdw9_umq7t_113):not(.awsui_refresh_2qdw9_umq7t_110){padding-bottom:var(--space-scaled-2x-xxs-mfdb10, 4px)}.awsui_virtual-space_2qdw9_umq7t_222:not(#\\9){position:absolute !important;top:-9999px !important;left:-9999px !important}.awsui_info_2qdw9_umq7t_228:not(#\\9){padding-right:var(--space-s-rd607g, 12px)}.awsui_description_2qdw9_umq7t_232:not(#\\9){margin:0;padding:0;color:var(--color-text-heading-secondary-jkk2pc, #545b64)}.awsui_description-variant-h1_2qdw9_umq7t_237:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px)}.awsui_description-variant-h2_2qdw9_umq7t_241:not(#\\9){font-size:var(--font-header-h2-description-size-8avpy1, 12px);line-height:var(--font-header-h2-description-line-height-jj9arc, 16px)}.awsui_description-variant-h2_2qdw9_umq7t_241:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){padding-bottom:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_description-variant-h3_2qdw9_umq7t_248:not(#\\9){font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal)}.awsui_description-variant-h3_2qdw9_umq7t_248:not(#\\9):not(.awsui_refresh_2qdw9_umq7t_110){padding-bottom:var(--space-scaled-xxs-ugy2pw, 4px)}.awsui_heading_2qdw9_umq7t_257:not(#\\9){margin:0;display:inline;font-size:inherit;margin-right:var(--space-xs-inub5w, 8px)}.awsui_heading_2qdw9_umq7t_257:not(#\\9):only-child{margin:0}.awsui_heading-variant-h1_2qdw9_umq7t_266:not(#\\9){font-size:var(--font-size-heading-xl-z8h967, 28px);line-height:var(--line-height-heading-xl-44izce, 36px);letter-spacing:var(--letter-spacing-heading-xl-y4tqgw, normal)}.awsui_heading-variant-h2_2qdw9_umq7t_271:not(#\\9){font-size:var(--font-size-heading-l-u89ro8, 18px);line-height:var(--line-height-heading-l-z752l3, 22px);letter-spacing:var(--letter-spacing-heading-l-v8uzhr, normal)}.awsui_heading-variant-h3_2qdw9_umq7t_276:not(#\\9){font-size:var(--font-size-heading-m-ulervk, 18px);line-height:var(--line-height-heading-m-88a3m6, 22px);letter-spacing:var(--letter-spacing-heading-m-9g78ia, normal)}.awsui_heading-text_2qdw9_umq7t_282:not(#\\9){}.awsui_heading-text-variant-h1_2qdw9_umq7t_285:not(#\\9){font-size:var(--font-size-heading-xl-z8h967, 28px);line-height:var(--line-height-heading-xl-44izce, 36px);letter-spacing:var(--letter-spacing-heading-xl-y4tqgw, normal);font-weight:var(--font-weight-heading-xl-2jbc8j, 400);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_heading-text-variant-h2_2qdw9_umq7t_293:not(#\\9){font-size:var(--font-size-heading-l-u89ro8, 18px);line-height:var(--line-height-heading-l-z752l3, 22px);letter-spacing:var(--letter-spacing-heading-l-v8uzhr, normal);font-weight:var(--font-weight-heading-l-jlzyui, 700);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_heading-text-variant-h3_2qdw9_umq7t_301:not(#\\9){font-size:var(--font-size-heading-m-ulervk, 18px);line-height:var(--line-height-heading-m-88a3m6, 22px);letter-spacing:var(--letter-spacing-heading-m-9g78ia, normal);font-weight:var(--font-weight-heading-m-ra39kx, 400);-webkit-font-smoothing:var(--font-smoothing-webkit-rg3jdt, auto);-moz-osx-font-smoothing:var(--font-smoothing-moz-osx-58s982, auto)}.awsui_counter_2qdw9_umq7t_310:not(#\\9){color:var(--color-text-counter-001jjm, #687078);font-weight:400}.awsui_empty-appear_n4qlp_1f8ow_93:not(#\\9){animation:awsui_awsui-motion-fade-in_n4qlp_1f8ow_1 var(--motion-duration-transition-show-paced-qcfnau, 180ms) var(--motion-easing-transition-show-paced-qe3gc9, ease-out)}@keyframes awsui_awsui-motion-fade-in_n4qlp_1f8ow_1{from{opacity:0.2}to{opacity:1}}@media (prefers-reduced-motion: reduce){.awsui_empty-appear_n4qlp_1f8ow_93:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_empty-appear_n4qlp_1f8ow_93:not(#\\9),.awsui-mode-entering .awsui_empty-appear_n4qlp_1f8ow_93:not(#\\9){animation:none;transition:none}.awsui_root_n4qlp_1f8ow_119:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:block}.awsui_empty_n4qlp_1f8ow_93:not(#\\9){font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-empty-79ttcu, #687078)}.awsui_row_n4qlp_1f8ow_139:not(#\\9){}.awsui_row-control_n4qlp_1f8ow_143:not(#\\9){}.awsui_field_n4qlp_1f8ow_147:not(#\\9){}.awsui_add-button_n4qlp_1f8ow_151:not(#\\9){}.awsui_remove-button_n4qlp_1f8ow_155:not(#\\9){}.awsui_button-container-haslabel_n4qlp_1f8ow_159:not(#\\9){padding-top:calc(var(--space-xxs-a6783b, 4px) + var(--line-height-body-m-4ax85e, 22px))}.awsui_button-container-nolabel_n4qlp_1f8ow_163:not(#\\9){padding-top:var(--space-xxs-a6783b, 4px)}.awsui_divider_n4qlp_1f8ow_167:not(#\\9){border-bottom:var(--border-divider-section-width-9dl636, 1px) solid var(--color-border-divider-default-1mmknt, #eaeded)}.awsui_additional-info_n4qlp_1f8ow_171:not(#\\9){color:var(--color-text-form-secondary-wh2xkx, #687078);font-size:var(--font-size-body-s-ucr7d6, 12px);line-height:var(--line-height-body-s-lnbzsa, 16px);letter-spacing:var(--letter-spacing-body-s-rksemx, normal);display:block;word-wrap:break-word;margin-top:var(--space-xxs-a6783b, 4px);}.awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9){color:var(--color-text-link-default-lwrgyu, #0073bb);font-weight:inherit;letter-spacing:normal;text-decoration:underline;text-decoration-color:currentColor;transition-property:color, -webkit-text-decoration;transition-property:color, text-decoration;transition-property:color, text-decoration, -webkit-text-decoration;transition-duration:var(--motion-duration-refresh-only-medium-af0v35, 165ms)}@media (prefers-reduced-motion: reduce){.awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9),.awsui-mode-entering .awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9){animation:none;transition:none}.awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9):hover{cursor:pointer;color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9):focus{outline:none}.awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9):active{color:var(--color-text-link-hover-kmrtvm, #0a4a74)}.awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9):active,.awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9):focus,.awsui_additional-info_n4qlp_1f8ow_171>a:not(#\\9):hover{text-decoration:underline;text-decoration-color:currentColor}.awsui_right-align_n4qlp_1f8ow_217:not(#\\9){float:right}.awsui_header_16mm3_fan6x_93:not(#\\9){position:relative;margin:0;color:var(--color-text-dropdown-group-label-ihg7kk, #545b64);border:var(--border-divider-list-width-fsy9j8, 1px) solid transparent;border-left:0;border-right:0;font-weight:bold;display:flex;justify-content:space-between;padding:calc(\n  var(--space-xxs-a6783b, 4px) + (var(--border-item-width-f0bcsu, 1px) - var(--border-divider-list-width-fsy9j8, 1px))\n) calc(var(--space-button-horizontal-kqt1zg, 20px) + var(--border-item-width-f0bcsu, 1px));z-index:1}.awsui_header_16mm3_fan6x_93.awsui_disabled_16mm3_fan6x_108:not(#\\9){color:var(--color-text-dropdown-item-disabled-g9c04k, #aab7b8);cursor:default}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112:not(#\\9){border-top-color:var(--color-border-dropdown-group-u3qa6a, #eaeded);border-bottom-color:var(--color-border-dropdown-group-u3qa6a, #eaeded);cursor:pointer}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112.awsui_disabled_16mm3_fan6x_108:not(#\\9){cursor:default}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112:not(#\\9):focus{outline:none}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112.awsui_rolled-down_16mm3_fan6x_123:not(#\\9){border-bottom-color:transparent}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112.awsui_highlighted_16mm3_fan6x_126:not(#\\9){background-color:var(--color-background-dropdown-item-hover-6qhcjz, #f2f3f3);color:var(--color-text-dropdown-item-highlighted-t48eqn, #16191f);padding:var(--space-xxs-a6783b, 4px) var(--space-button-horizontal-kqt1zg, 20px);border:var(--border-item-width-f0bcsu, 1px) solid var(--color-border-dropdown-item-hover-5oku75, #879596);border-radius:var(--border-radius-item-fcd5og, 0px);z-index:2}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112.awsui_highlighted_16mm3_fan6x_126.awsui_disabled_16mm3_fan6x_108:not(#\\9){background-color:var(--color-background-dropdown-item-dimmed-ta7f22, transparent);border-color:var(--color-border-dropdown-item-dimmed-hover-t0ewzv, #879596);color:var(--color-text-dropdown-item-dimmed-94uait, #aab7b8)}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112.awsui_highlighted_16mm3_fan6x_126.awsui_is-focused_16mm3_fan6x_139:not(#\\9){border-color:var(--color-border-item-focused-t884ih, #0073bb);box-shadow:inset 0 0 0 var(--border-control-focus-ring-shadow-spread-oufv0y, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112.awsui_variant-navigation_16mm3_fan6x_143:not(#\\9){padding-top:var(--space-xs-inub5w, 8px);padding-bottom:var(--space-xs-inub5w, 8px)}.awsui_header_16mm3_fan6x_93.awsui_expandable-header_16mm3_fan6x_112.awsui_variant-navigation_16mm3_fan6x_143.awsui_highlighted_16mm3_fan6x_126:not(#\\9){border-color:transparent;border-top-color:var(--color-border-dropdown-group-u3qa6a, #eaeded);border-bottom-color:var(--color-border-dropdown-group-u3qa6a, #eaeded);background-color:transparent;color:var(--color-text-accent-qe8oro, #0073bb)}.awsui_category_16mm3_fan6x_155:not(#\\9){list-style:none;margin-top:calc(-1 * var(--border-divider-list-width-fsy9j8, 1px));padding:0}.awsui_category_16mm3_fan6x_155:not(#\\9):first-child{margin-top:0}.awsui_category_16mm3_fan6x_155.awsui_expandable_16mm3_fan6x_112:not(#\\9){border-top:0}.awsui_category_16mm3_fan6x_155:not(#\\9):last-child{border-bottom:none}.awsui_category_16mm3_fan6x_155.awsui_variant-navigation_16mm3_fan6x_143:not(#\\9){padding-top:var(--space-xxs-a6783b, 4px)}.awsui_category_16mm3_fan6x_155.awsui_variant-navigation_16mm3_fan6x_143.awsui_expandable_16mm3_fan6x_112:not(#\\9){padding-top:0}.awsui_expand-icon_16mm3_fan6x_176:not(#\\9){position:relative;left:var(--space-s-rd607g, 12px);width:var(--space-m-sptmsg, 16px);display:inline-block;transition:transform var(--motion-duration-rotate-180-i3ygzg, 135ms) var(--motion-easing-rotate-180-qx5hdf, cubic-bezier(0.165, 0.84, 0.44, 1))}.awsui_expand-icon-up_16mm3_fan6x_183:not(#\\9){transform:rotate(-180deg)}.awsui_expand-icon-right_16mm3_fan6x_186:not(#\\9){transform:rotate(-90deg)}@media (prefers-reduced-motion: reduce){.awsui_expand-icon_16mm3_fan6x_176:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_expand-icon_16mm3_fan6x_176:not(#\\9),.awsui-mode-entering .awsui_expand-icon_16mm3_fan6x_176:not(#\\9){animation:none;transition:none}.awsui_items-list-container_16mm3_fan6x_200:not(#\\9){padding:0;margin:-1px 0 0 0;overflow-y:auto}.awsui_item-element_93a1u_1dz4z_93:not(#\\9){position:relative;z-index:1;border:var(--border-item-width-f0bcsu, 1px) solid transparent;list-style:none;padding:0;color:var(--color-text-dropdown-item-default-wx27oj, #16191f);margin-top:calc(-1 * var(--border-field-width-2vpp5j, 1px));cursor:pointer}.awsui_item-element_93a1u_1dz4z_93.awsui_disabled_93a1u_1dz4z_103:not(#\\9){cursor:default;color:var(--color-text-dropdown-item-disabled-g9c04k, #aab7b8)}.awsui_item-element_93a1u_1dz4z_93:not(#\\9):first-child{margin-top:0}.awsui_item-element_93a1u_1dz4z_93.awsui_last_93a1u_1dz4z_110:not(#\\9){border-bottom:var(--border-item-width-f0bcsu, 1px) solid var(--color-border-dropdown-group-u3qa6a, #eaeded)}.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113:not(#\\9){color:var(--color-text-dropdown-item-highlighted-t48eqn, #16191f);z-index:2}.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-icon_93a1u_1dz4z_117:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-inline-icon_93a1u_1dz4z_117:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-normal_93a1u_1dz4z_117:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-primary_93a1u_1dz4z_117:not(#\\9){background-color:var(--color-background-dropdown-item-hover-6qhcjz, #f2f3f3);border-color:var(--color-border-dropdown-item-hover-5oku75, #879596);border-radius:var(--border-radius-item-fcd5og, 0px)}.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-icon_93a1u_1dz4z_117.awsui_disabled_93a1u_1dz4z_103:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-inline-icon_93a1u_1dz4z_117.awsui_disabled_93a1u_1dz4z_103:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-normal_93a1u_1dz4z_117.awsui_disabled_93a1u_1dz4z_103:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-primary_93a1u_1dz4z_117.awsui_disabled_93a1u_1dz4z_103:not(#\\9){color:var(--color-text-dropdown-item-dimmed-94uait, #aab7b8);border-color:var(--color-border-dropdown-item-dimmed-hover-t0ewzv, #879596);background-color:var(--color-background-dropdown-item-dimmed-ta7f22, transparent)}.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-icon_93a1u_1dz4z_117.awsui_is-focused_93a1u_1dz4z_127:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-inline-icon_93a1u_1dz4z_117.awsui_is-focused_93a1u_1dz4z_127:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-normal_93a1u_1dz4z_117.awsui_is-focused_93a1u_1dz4z_127:not(#\\9),.awsui_item-element_93a1u_1dz4z_93.awsui_highlighted_93a1u_1dz4z_113.awsui_variant-primary_93a1u_1dz4z_117.awsui_is-focused_93a1u_1dz4z_127:not(#\\9){border-color:var(--color-border-item-focused-t884ih, #0073bb);box-shadow:inset 0 0 0 var(--border-control-focus-ring-shadow-spread-oufv0y, 1px) var(--color-border-item-focused-t884ih, #0073bb)}.awsui_item-element_93a1u_1dz4z_93.awsui_variant-navigation_93a1u_1dz4z_131.awsui_highlighted_93a1u_1dz4z_113:not(#\\9){color:var(--color-text-accent-qe8oro, #0073bb)}.awsui_item-element_93a1u_1dz4z_93.awsui_variant-navigation_93a1u_1dz4z_131.awsui_first_93a1u_1dz4z_134:not(#\\9):not(.awsui_has-category-header_93a1u_1dz4z_134){padding-top:var(--space-xxs-a6783b, 4px)}.awsui_item-element_93a1u_1dz4z_93.awsui_variant-navigation_93a1u_1dz4z_131.awsui_last_93a1u_1dz4z_110:not(#\\9){padding-bottom:var(--space-xxs-a6783b, 4px)}.awsui_item-element_93a1u_1dz4z_93.awsui_variant-navigation_93a1u_1dz4z_131.awsui_first_93a1u_1dz4z_134.awsui_last_93a1u_1dz4z_110:not(#\\9){padding-bottom:var(--space-xxs-a6783b, 4px);padding-top:var(--space-xxs-a6783b, 4px)}.awsui_item-element_93a1u_1dz4z_93.awsui_variant-navigation_93a1u_1dz4z_131.awsui_last_93a1u_1dz4z_110:not(#\\9):last-child{padding-bottom:var(--space-xxs-a6783b, 4px)}.awsui_menu-item_93a1u_1dz4z_148:not(#\\9){min-width:0;word-break:break-word;display:flex;align-items:flex-start;padding:var(--space-xxs-a6783b, 4px) var(--space-button-horizontal-kqt1zg, 20px);color:inherit;text-decoration:none;}.awsui_menu-item_93a1u_1dz4z_148:not(#\\9):focus{outline:none}.awsui_has-category-header_93a1u_1dz4z_134>.awsui_menu-item_93a1u_1dz4z_148:not(#\\9),.awsui_has-category-header_93a1u_1dz4z_134>span>.awsui_menu-item_93a1u_1dz4z_148:not(#\\9){padding-left:calc(var(--space-s-rd607g, 12px) + var(--space-button-horizontal-kqt1zg, 20px))}.awsui_icon_93a1u_1dz4z_165:not(#\\9){padding-right:var(--space-xs-inub5w, 8px);flex-shrink:0}.awsui_external-icon_93a1u_1dz4z_170:not(#\\9){margin-left:var(--space-xxs-a6783b, 4px)}.awsui_root_14cnr_ulspv_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;position:static;white-space:inherit;display:inline}.awsui_root_14cnr_ulspv_93>.awsui_trigger_14cnr_ulspv_108:not(#\\9){display:inline}.awsui_root_14cnr_ulspv_93>.awsui_dropdown_14cnr_ulspv_111:not(#\\9){position:static;-webkit-user-select:none;user-select:none;background-color:var(--color-background-dropdown-item-default-2p2g22, #ffffff);outline:none;border-top:none;border-bottom:none;display:flex;flex-direction:column;width:100%}.awsui_root_14cnr_ulspv_93>.awsui_dropdown_14cnr_ulspv_111.awsui_nowrap_14cnr_ulspv_122:not(#\\9){white-space:nowrap}.awsui_root_14cnr_ulspv_93>.awsui_dropdown_14cnr_ulspv_111.awsui_open_14cnr_ulspv_125:not(#\\9){display:flex}.awsui_button-dropdown_sne0l_107af_93:not(#\\9){display:inline-block}.awsui_items-list-container_sne0l_107af_97:not(#\\9){padding:0;margin:0;animation:awsui_awsui-motion-fade-in-0_sne0l_107af_1 500ms var(--motion-easing-show-quick-vlcbqf, ease-out);animation-fill-mode:none}@media (prefers-reduced-motion: reduce){.awsui_items-list-container_sne0l_107af_97:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_items-list-container_sne0l_107af_97:not(#\\9),.awsui-mode-entering .awsui_items-list-container_sne0l_107af_97:not(#\\9){animation:none;transition:none}.awsui_rotate-up_sne0l_107af_114:not(#\\9){transform:rotate(-180deg);transition:transform var(--motion-duration-rotate-180-i3ygzg, 135ms) var(--motion-easing-rotate-180-qx5hdf, cubic-bezier(0.165, 0.84, 0.44, 1))}@media (prefers-reduced-motion: reduce){.awsui_rotate-up_sne0l_107af_114:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_rotate-up_sne0l_107af_114:not(#\\9),.awsui-mode-entering .awsui_rotate-up_sne0l_107af_114:not(#\\9){animation:none;transition:none}.awsui_rotate-down_sne0l_107af_129:not(#\\9){transform:rotate(0deg);transition:transform var(--motion-duration-rotate-180-i3ygzg, 135ms) var(--motion-easing-rotate-180-qx5hdf, cubic-bezier(0.165, 0.84, 0.44, 1))}@media (prefers-reduced-motion: reduce){.awsui_rotate-down_sne0l_107af_129:not(#\\9){animation:none;transition:none}}.awsui-motion-disabled .awsui_rotate-down_sne0l_107af_129:not(#\\9),.awsui-mode-entering .awsui_rotate-down_sne0l_107af_129:not(#\\9){animation:none;transition:none}.awsui_header_sne0l_107af_144:not(#\\9){display:flex;flex-direction:column;list-style:none;padding:var(--space-s-rd607g, 12px) var(--space-l-ds615y, 20px);border:var(--border-field-width-2vpp5j, 1px) solid transparent;border-bottom:var(--border-field-width-2vpp5j, 1px) solid var(--color-border-dropdown-group-u3qa6a, #eaeded)}.awsui_title_sne0l_107af_153:not(#\\9),.awsui_description_sne0l_107af_154:not(#\\9){color:var(--color-text-dropdown-header-90kv5m, #16191f)}.awsui_split-trigger-wrapper_sne0l_107af_158:not(#\\9){display:flex}.awsui_split-trigger-wrapper_sne0l_107af_158>.awsui_trigger-item_sne0l_107af_161>button:not(#\\9):focus{z-index:1}.awsui_split-trigger-wrapper_sne0l_107af_158>.awsui_trigger-item_sne0l_107af_161:not(#\\9):not(:last-child)>.awsui_trigger-button_sne0l_107af_164{border-top-right-radius:0;border-bottom-right-radius:0;padding-right:var(--space-xs-inub5w, 8px);margin-right:var(--space-xxxs-rq3iss, 2px)}.awsui_split-trigger-wrapper_sne0l_107af_158>.awsui_trigger-item_sne0l_107af_161:not(#\\9):not(:first-child)>.awsui_trigger-button_sne0l_107af_164{border-top-left-radius:0;border-bottom-left-radius:0;padding-left:calc(var(--space-xs-inub5w, 8px) - 2px);padding-right:calc(var(--space-xs-inub5w, 8px) - 2px)}.awsui_split-trigger-wrapper_sne0l_107af_158>.awsui_trigger-item_sne0l_107af_161:not(#\\9):not(:first-child).awsui_visual-refresh_sne0l_107af_176>.awsui_trigger-button_sne0l_107af_164{padding-right:calc(var(--space-s-rd607g, 12px) - 2px)}.awsui_split-trigger_sne0l_107af_158:not(#\\9){display:contents}.awsui_dropdown-trigger_sne0l_107af_184:not(#\\9){display:contents}.awsui_test-utils-button-trigger_sne0l_107af_188:not(#\\9){}.awsui_grid_14yj0_mvice_93:not(#\\9){border-collapse:separate;border-spacing:0;caption-side:top;cursor:auto;direction:ltr;empty-cells:show;font-family:serif;font-size:medium;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;line-height:normal;-webkit-hyphens:none;hyphens:none;letter-spacing:normal;list-style:disc outside none;tab-size:8;text-align:left;text-align-last:auto;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;widows:2;word-spacing:normal;box-sizing:border-box;font-size:var(--font-size-body-m-jirw9u, 14px);line-height:var(--line-height-body-m-4ax85e, 22px);color:var(--color-text-body-default-rlujvh, #16191f);font-weight:400;font-family:var(--font-family-base-b4eaqi, \"Noto Sans\", \"Helvetica Neue\", Roboto, Arial, sans-serif);-webkit-font-smoothing:auto;-moz-osx-font-smoothing:auto;display:flex;flex-wrap:wrap;margin:calc(var(--space-grid-gutter-pfst95, 20px) / -2);pointer-events:none}.awsui_grid_14yj0_mvice_93.awsui_no-gutters_14yj0_mvice_109:not(#\\9){margin:0}.awsui_grid-column_14yj0_mvice_113:not(#\\9){box-sizing:border-box;position:relative;padding:calc(var(--space-grid-gutter-pfst95, 20px) / 2);display:flex}.awsui_grid_14yj0_mvice_93.awsui_no-gutters_14yj0_mvice_109>.awsui_grid-column_14yj0_mvice_113:not(#\\9){padding:0}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-1_14yj0_mvice_122:not(#\\9){flex:0 0 8.3333333333%;max-width:8.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_push-1_14yj0_mvice_126:not(#\\9){left:8.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-1_14yj0_mvice_129:not(#\\9){right:8.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-2_14yj0_mvice_132:not(#\\9){flex:0 0 16.6666666667%;max-width:16.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_push-2_14yj0_mvice_136:not(#\\9){left:16.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-2_14yj0_mvice_139:not(#\\9){right:16.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-3_14yj0_mvice_142:not(#\\9){flex:0 0 25%;max-width:25%}.awsui_grid-column_14yj0_mvice_113.awsui_push-3_14yj0_mvice_146:not(#\\9){left:25%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-3_14yj0_mvice_149:not(#\\9){right:25%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-4_14yj0_mvice_152:not(#\\9){flex:0 0 33.3333333333%;max-width:33.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_push-4_14yj0_mvice_156:not(#\\9){left:33.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-4_14yj0_mvice_159:not(#\\9){right:33.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-5_14yj0_mvice_162:not(#\\9){flex:0 0 41.6666666667%;max-width:41.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_push-5_14yj0_mvice_166:not(#\\9){left:41.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-5_14yj0_mvice_169:not(#\\9){right:41.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-6_14yj0_mvice_172:not(#\\9){flex:0 0 50%;max-width:50%}.awsui_grid-column_14yj0_mvice_113.awsui_push-6_14yj0_mvice_176:not(#\\9){left:50%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-6_14yj0_mvice_179:not(#\\9){right:50%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-7_14yj0_mvice_182:not(#\\9){flex:0 0 58.3333333333%;max-width:58.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_push-7_14yj0_mvice_186:not(#\\9){left:58.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-7_14yj0_mvice_189:not(#\\9){right:58.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-8_14yj0_mvice_192:not(#\\9){flex:0 0 66.6666666667%;max-width:66.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_push-8_14yj0_mvice_196:not(#\\9){left:66.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-8_14yj0_mvice_199:not(#\\9){right:66.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-9_14yj0_mvice_202:not(#\\9){flex:0 0 75%;max-width:75%}.awsui_grid-column_14yj0_mvice_113.awsui_push-9_14yj0_mvice_206:not(#\\9){left:75%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-9_14yj0_mvice_209:not(#\\9){right:75%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-10_14yj0_mvice_212:not(#\\9){flex:0 0 83.3333333333%;max-width:83.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_push-10_14yj0_mvice_216:not(#\\9){left:83.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-10_14yj0_mvice_219:not(#\\9){right:83.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-11_14yj0_mvice_222:not(#\\9){flex:0 0 91.6666666667%;max-width:91.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_push-11_14yj0_mvice_226:not(#\\9){left:91.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-11_14yj0_mvice_229:not(#\\9){right:91.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_colspan-12_14yj0_mvice_232:not(#\\9){flex:0 0 100%;max-width:100%}.awsui_grid-column_14yj0_mvice_113.awsui_push-12_14yj0_mvice_236:not(#\\9){left:100%}.awsui_grid-column_14yj0_mvice_113.awsui_pull-12_14yj0_mvice_239:not(#\\9){right:100%}.awsui_grid-column_14yj0_mvice_113.awsui_push-0_14yj0_mvice_242:not(#\\9){left:auto}.awsui_grid-column_14yj0_mvice_113.awsui_pull-0_14yj0_mvice_245:not(#\\9){right:auto}.awsui_grid-column_14yj0_mvice_113.awsui_offset-1_14yj0_mvice_248:not(#\\9){margin-left:8.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-2_14yj0_mvice_251:not(#\\9){margin-left:16.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-3_14yj0_mvice_254:not(#\\9){margin-left:25%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-4_14yj0_mvice_257:not(#\\9){margin-left:33.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-5_14yj0_mvice_260:not(#\\9){margin-left:41.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-6_14yj0_mvice_263:not(#\\9){margin-left:50%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-7_14yj0_mvice_266:not(#\\9){margin-left:58.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-8_14yj0_mvice_269:not(#\\9){margin-left:66.6666666667%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-9_14yj0_mvice_272:not(#\\9){margin-left:75%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-10_14yj0_mvice_275:not(#\\9){margin-left:83.3333333333%}.awsui_grid-column_14yj0_mvice_113.awsui_offset-11_14yj0_mvice_278:not(#\\9){margin-left:91.6666666667%}.awsui_restore-pointer-events_14yj0_mvice_282:not(#\\9){pointer-events:auto;width:100%}.awsui_root_12hwc_12ujv_5:not(#\\9){width:100%}.awsui_layout-strut_12hwc_12ujv_9:not(#\\9){width:100%;position:relative;transform:translate3d(0, 0, 0)}.awsui_list-bottom_12hwc_12ujv_15:not(#\\9){}";

const IotResourceExplorerDemo = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
  }
  componentWillLoad() {
    const { query } = initialize({
      awsCredentials: getEnvCredentials(),
      awsRegion: 'us-east-1',
    });
    this.query = query;
  }
  render() {
    return h$2("iot-resource-explorer", { query: this.query.assetTree.fromRoot() });
  }
};
IotResourceExplorerDemo.style = awsuiCss;

export { IotResourceExplorerDemo as iot_resource_explorer_demo };
