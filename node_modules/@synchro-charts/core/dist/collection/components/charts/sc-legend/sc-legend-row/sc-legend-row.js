import { Component, Prop, h, Host } from '@stencil/core';
import { STREAM_ICON_PATH_COMMAND, STREAM_ICON_STROKE_LINECAP, STREAM_ICON_STROKE_WIDTH, TREND_ICON_DASH_ARRAY, } from '../../../../utils/dataTypes';
import { Value } from '../../../value/Value';
import { DEFAULT_LEGEND_TEXT_COLOR } from '../constants';
// Styling to control the height of the gap between the stream-name and the unit
const EDIT_MODE_STYLE = {
    top: '-2px',
};
const VIEW_MODE_STYLE = {
    top: '-11px',
};
export class ScLegendRow {
    constructor() {
        this.valueColor = DEFAULT_LEGEND_TEXT_COLOR;
        this.updateName = (name) => {
            this.updateDataStreamName({
                streamId: this.streamId,
                name,
            });
        };
    }
    render() {
        const isTrendPoint = this.pointType && this.pointType === "trend" /* TREND */;
        return (h(Host, null,
            h("div", { class: "legend-row-container awsui" },
                this.showDataStreamColor && (h("div", { class: "color-container" }, this.isLoading ? (h("div", { class: "spinner-container" },
                    h("sc-loading-spinner", { dark: true, size: 12 }))) : (h("svg", { class: "bar", "data-testid": `legend-icon-${this.pointType}` },
                    h("path", { stroke: this.color, "stroke-dasharray": isTrendPoint ? TREND_ICON_DASH_ARRAY : '', "stroke-linecap": STREAM_ICON_STROKE_LINECAP, "stroke-width": STREAM_ICON_STROKE_WIDTH, d: STREAM_ICON_PATH_COMMAND }))))),
                h("div", { class: "info" },
                    h("sc-data-stream-name", { onNameChange: this.updateName, isEditing: this.isEditing, label: this.label, detailedLabel: this.detailedLabel, pointType: this.pointType, date: this.point && new Date(this.point.x) }),
                    h("div", { class: "legend-value", style: this.isEditing ? EDIT_MODE_STYLE : VIEW_MODE_STYLE },
                        this.icon && h("sc-chart-icon", { name: this.icon }),
                        h("h4", { class: "awsui-util-d-i", "data-testid": "current-value", style: { color: this.valueColor } },
                            h(Value, { value: this.point ? this.point.y : undefined })),
                        this.unit && h("small", null,
                            "\u00A0",
                            this.unit))))));
    }
    static get is() { return "sc-legend-row"; }
    static get originalStyleUrls() { return {
        "$": ["sc-legend-row.css"]
    }; }
    static get styleUrls() { return {
        "$": ["sc-legend-row.css"]
    }; }
    static get properties() { return {
        "streamId": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "stream-id",
            "reflect": false
        },
        "label": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "label",
            "reflect": false
        },
        "updateDataStreamName": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "({ streamId, name }: { streamId: string; name: string }) => void",
                "resolved": "({ streamId, name }: { streamId: string; name: string; }) => void",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "isEditing": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "is-editing",
            "reflect": false
        },
        "isLoading": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "is-loading",
            "reflect": false
        },
        "showDataStreamColor": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "show-data-stream-color",
            "reflect": false
        },
        "color": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "color",
            "reflect": false
        },
        "detailedLabel": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string | undefined",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "detailed-label",
            "reflect": false
        },
        "point": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "DataPoint<Primitive>",
                "resolved": "undefined | { x: number; y: Primitive; }",
                "references": {
                    "DataPoint": {
                        "location": "import",
                        "path": "../../../../utils/dataTypes"
                    },
                    "Primitive": {
                        "location": "import",
                        "path": "../../../../utils/dataTypes"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "unit": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string | undefined",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "unit",
            "reflect": false
        },
        "pointType": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "POINT_TYPE",
                "resolved": "POINT_TYPE.DATA | POINT_TYPE.TREND | undefined",
                "references": {
                    "POINT_TYPE": {
                        "location": "import",
                        "path": "../../sc-webgl-base-chart/activePoints"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "point-type",
            "reflect": false
        },
        "valueColor": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string | undefined",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "value-color",
            "reflect": false,
            "defaultValue": "DEFAULT_LEGEND_TEXT_COLOR"
        },
        "icon": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "StatusIcon",
                "resolved": "StatusIcon.ACKNOWLEDGED | StatusIcon.ACTIVE | StatusIcon.DISABLED | StatusIcon.ERROR | StatusIcon.LATCHED | StatusIcon.NORMAL | StatusIcon.SNOOZED | undefined",
                "references": {
                    "StatusIcon": {
                        "location": "import",
                        "path": "../../common/constants"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "icon",
            "reflect": false
        }
    }; }
}
