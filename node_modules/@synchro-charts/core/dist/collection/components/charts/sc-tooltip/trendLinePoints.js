import { getTrendLabel } from '../common/trends/trendConfig';
import { getTrendValue } from '../common/trends/trendAnalysis';
import { isDefined } from '../../../utils/predicates';
export const trendLinePoints = ({ trendResults, dataStreams, displayedDate, }) => {
    const timestamp = displayedDate.getTime();
    return trendResults
        .filter(({ dataStreamId }) => dataStreams.some(({ id }) => id === dataStreamId))
        .map(trendResult => {
        const dataStream = dataStreams.find(({ id }) => id === trendResult.dataStreamId);
        return dataStream == null
            ? null
            : {
                streamId: dataStream.id,
                label: getTrendLabel(dataStream.name, trendResult.type),
                point: {
                    x: timestamp,
                    y: getTrendValue(trendResult, timestamp),
                },
                type: "trend" /* TREND */,
                color: trendResult.color,
            };
    })
        .filter(isDefined);
};
