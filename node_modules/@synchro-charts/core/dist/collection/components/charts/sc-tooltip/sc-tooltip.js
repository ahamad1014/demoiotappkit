import { Component, h, Prop, State } from '@stencil/core';
/**
 * The parent tooltip container, listens for events to ensure tooltip renders at the correct position at the correct time.
 */
export class ScTooltip {
    constructor() {
        this.trendResults = [];
        this.showDataStreamColor = true;
        // If false, do not display a tooltip row if there is no associated point.
        this.showBlankTooltipRows = false;
        this.sortPoints = true;
        this.setSelectedDate = ({ offsetX, buttons }) => {
            const isMouseBeingPressed = buttons > 0;
            if (!isMouseBeingPressed && offsetX != null) {
                // Determine the date which corresponds with the mouses position.
                const { start, end } = this.viewport;
                const { width } = this.size;
                const ratio = offsetX / width;
                const viewportDuration = end.getTime() - start.getTime();
                const selectedDateMS = start.getTime() + viewportDuration * ratio;
                this.selectedDate = new Date(selectedDateMS);
            }
            else {
                this.selectedDate = undefined;
            }
        };
        this.hideTooltip = () => {
            this.selectedDate = undefined;
        };
    }
    componentDidLoad() {
        this.dataContainer.addEventListener('mousemove', this.setSelectedDate);
        this.dataContainer.addEventListener('mouseleave', this.hideTooltip);
        this.dataContainer.addEventListener('mousedown', this.hideTooltip, { capture: true });
    }
    disconnectedCallback() {
        this.dataContainer.removeEventListener('mousemove', this.setSelectedDate);
        this.dataContainer.removeEventListener('mouseleave', this.hideTooltip);
        this.dataContainer.removeEventListener('mousedown', this.hideTooltip);
    }
    render() {
        const resolution = this.dataStreams.length > 0 ? this.dataStreams[0].resolution : undefined;
        if (resolution == null || this.selectedDate == null) {
            return null;
        }
        return (h("sc-tooltip-rows", { trendResults: this.trendResults, size: this.size, dataStreams: this.dataStreams, viewport: this.viewport, selectedDate: this.selectedDate, thresholds: this.thresholds, maxDurationFromDate: this.maxDurationFromDate, showDataStreamColor: this.showDataStreamColor, dataAlignment: this.dataAlignment, supportString: this.supportString, visualizesAlarms: this.visualizesAlarms, showBlankTooltipRows: this.showBlankTooltipRows, sortPoints: this.sortPoints, top: this.top }));
    }
    static get is() { return "sc-tooltip"; }
    static get originalStyleUrls() { return {
        "$": ["sc-tooltip.css"]
    }; }
    static get styleUrls() { return {
        "$": ["sc-tooltip.css"]
    }; }
    static get properties() { return {
        "size": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "SizeConfig",
                "resolved": "SizeConfig",
                "references": {
                    "SizeConfig": {
                        "location": "import",
                        "path": "../../../utils/dataTypes"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "dataContainer": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "HTMLElement",
                "resolved": "HTMLElement",
                "references": {
                    "HTMLElement": {
                        "location": "global"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "dataStreams": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "DataStream[]",
                "resolved": "DataStream<Primitive>[]",
                "references": {
                    "DataStream": {
                        "location": "import",
                        "path": "../../../utils/dataTypes"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "viewport": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "ViewPort",
                "resolved": "MinimalLiveViewport & { start: Date; end: Date; yMin: number; yMax: number; duration?: number | undefined; } | MinimalStaticViewport & { start: Date; end: Date; yMin: number; yMax: number; duration?: number | undefined; }",
                "references": {
                    "ViewPort": {
                        "location": "import",
                        "path": "../../../utils/dataTypes"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "thresholds": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "Threshold[]",
                "resolved": "Threshold<Primitive>[]",
                "references": {
                    "Threshold": {
                        "location": "import",
                        "path": "../common/types"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "trendResults": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "TrendResult[]",
                "resolved": "LinearRegressionResult[]",
                "references": {
                    "TrendResult": {
                        "location": "import",
                        "path": "../common/trends/types"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "defaultValue": "[]"
        },
        "maxDurationFromDate": {
            "type": "number",
            "mutable": false,
            "complexType": {
                "original": "number",
                "resolved": "number | undefined",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "max-duration-from-date",
            "reflect": false
        },
        "showDataStreamColor": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "show-data-stream-color",
            "reflect": false,
            "defaultValue": "true"
        },
        "supportString": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "support-string",
            "reflect": false
        },
        "visualizesAlarms": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "visualizes-alarms",
            "reflect": false
        },
        "showBlankTooltipRows": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "show-blank-tooltip-rows",
            "reflect": false,
            "defaultValue": "false"
        },
        "dataAlignment": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "DATA_ALIGNMENT",
                "resolved": "DATA_ALIGNMENT.EITHER | DATA_ALIGNMENT.LEFT | DATA_ALIGNMENT.RIGHT",
                "references": {
                    "DATA_ALIGNMENT": {
                        "location": "import",
                        "path": "../common/constants"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "If we are drawing data from the data timestamp to timestamp + resolution\nwe want the tooltip to align on the left side\n\nOtherwise we are drawing the data from timestamp - resolution to timestamp\nthen we want the tooltip to align on the right side"
            },
            "attribute": "data-alignment",
            "reflect": false
        },
        "top": {
            "type": "number",
            "mutable": false,
            "complexType": {
                "original": "number",
                "resolved": "number",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": "CSS Top property for the tooltip container"
            },
            "attribute": "top",
            "reflect": false
        },
        "sortPoints": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "sort-points",
            "reflect": false,
            "defaultValue": "true"
        }
    }; }
    static get states() { return {
        "selectedDate": {}
    }; }
}
