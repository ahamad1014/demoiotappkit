import { Component, h, Prop } from '@stencil/core';
import { formatLiveModeOnlyMessage } from '../constructTableData';
import { ScTableRows } from '../sc-table-row/sc-table-row';
import { DEFAULT_MESSAGE_OVERRIDES } from '../../../utils/dataTypes';
export class ScTableBase {
    render() {
        var _a, _b;
        const { msgHeader, msgSubHeader } = formatLiveModeOnlyMessage((_b = (_a = this.messageOverrides) === null || _a === void 0 ? void 0 : _a.liveModeOnly) !== null && _b !== void 0 ? _b : DEFAULT_MESSAGE_OVERRIDES.liveModeOnly);
        return (h("div", { class: "awsui container" },
            h("table", { role: "table" },
                h("thead", null,
                    h("tr", null, this.columns.map(({ header }) => (h("th", { key: header },
                        h("span", { class: "column-header-content" }, header)))))),
                this.isEnabled ? (h(ScTableRows, { rows: this.rows, columns: this.columns, messageOverrides: this.messageOverrides })) : (h("div", { class: "disable-status-container" },
                    h("div", { class: "disable-status" },
                        h("h3", null, msgHeader),
                        msgSubHeader))))));
    }
    static get is() { return "sc-table-base"; }
    static get originalStyleUrls() { return {
        "$": ["sc-table-base.css"]
    }; }
    static get styleUrls() { return {
        "$": ["sc-table-base.css"]
    }; }
    static get properties() { return {
        "columns": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "TableColumn[]",
                "resolved": "TableColumn[]",
                "references": {
                    "TableColumn": {
                        "location": "import",
                        "path": "../../../utils/dataTypes"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "rows": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "Row[]",
                "resolved": "Row[]",
                "references": {
                    "Row": {
                        "location": "import",
                        "path": "../constructTableData"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "isEnabled": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "is-enabled",
            "reflect": false
        },
        "messageOverrides": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "MessageOverrides",
                "resolved": "{ liveTimeFrameValueLabel?: string | undefined; historicalTimeFrameValueLabel?: string | undefined; noDataStreamsPresentHeader?: string | undefined; noDataStreamsPresentSubHeader?: string | undefined; noDataPresentHeader?: string | undefined; noDataPresentSubHeader?: string | undefined; liveModeOnly?: string | undefined; unsupportedDataTypeHeader?: string | undefined; unsupportedDataTypeSubHeader?: string | undefined; supportedTypes?: string | undefined; }",
                "references": {
                    "MessageOverrides": {
                        "location": "import",
                        "path": "../../../utils/dataTypes"
                    }
                }
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
}
