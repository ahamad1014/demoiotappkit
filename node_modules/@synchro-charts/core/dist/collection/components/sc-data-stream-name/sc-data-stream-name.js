import { Component, Element, h, Prop } from '@stencil/core';
import tippy from 'tippy.js';
import { TIPPY_SETTINGS } from '../common/toolTipSettings';
export class ScDataStreamName {
    constructor() {
        this.displayTooltip = true;
        this.renderTooltip = () => {
            if (this.displayTooltip) {
                const container = this.el.querySelector('sc-expandable-input');
                const tooltip = this.el.querySelector('.data-stream-name-tooltip');
                if (tooltip != null && container != null) {
                    tooltip.style.display = 'block';
                    this.tooltip = tippy(container, Object.assign(Object.assign({}, TIPPY_SETTINGS), { content: tooltip }));
                }
            }
        };
    }
    disconnectedCallback() {
        if (this.tooltip) {
            this.tooltip.destroy();
        }
    }
    render() {
        return (h("div", { class: "awsui" },
            h("sc-expandable-input", { isDisabled: !this.isEditing, onValueChange: (value) => {
                    this.onNameChange(value);
                }, onMouseOver: this.renderTooltip, onFocus: this.renderTooltip, value: this.label }),
            h("div", { class: "data-stream-name-tooltip awsui-util-container awsui", style: { display: 'none' } },
                h("div", { class: "awsui-util-spacing-v-s" },
                    h("div", null,
                        h("div", { class: "awsui-util-label" }, this.detailedLabel || this.label),
                        this.pointType && this.pointType === "trend" /* TREND */ && (h("small", null, "This trend line is computed from only visible data."))),
                    this.date && (h("div", null,
                        h("div", { class: "awsui-util-label" }, "Latest value at"),
                        h("div", null, this.date.toLocaleString('en-US', {
                            hour12: true,
                            minute: 'numeric',
                            hour: 'numeric',
                            year: 'numeric',
                            month: 'numeric',
                            day: 'numeric',
                        }))))))));
    }
    static get is() { return "sc-data-stream-name"; }
    static get originalStyleUrls() { return {
        "$": ["sc-data-stream-name.css"]
    }; }
    static get styleUrls() { return {
        "$": ["sc-data-stream-name.css"]
    }; }
    static get properties() { return {
        "displayTooltip": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean | undefined",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "display-tooltip",
            "reflect": false,
            "defaultValue": "true"
        },
        "onNameChange": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(name: string) => void",
                "resolved": "(name: string) => void",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "isEditing": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "is-editing",
            "reflect": false
        },
        "label": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "label",
            "reflect": false
        },
        "detailedLabel": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string | undefined",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "detailed-label",
            "reflect": false
        },
        "pointType": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "POINT_TYPE",
                "resolved": "POINT_TYPE.DATA | POINT_TYPE.TREND | undefined",
                "references": {
                    "POINT_TYPE": {
                        "location": "import",
                        "path": "../charts/sc-webgl-base-chart/activePoints"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "point-type",
            "reflect": false
        },
        "date": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "Date",
                "resolved": "Date | undefined",
                "references": {
                    "Date": {
                        "location": "global"
                    }
                }
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            }
        }
    }; }
    static get elementRef() { return "el"; }
}
