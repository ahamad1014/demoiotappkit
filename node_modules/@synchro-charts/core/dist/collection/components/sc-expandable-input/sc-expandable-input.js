import { Component, h, Prop } from '@stencil/core';
/**
 * Expandable Input
 *
 * An stylized input which grows as you type into it.
 */
export class ScExpandableInput {
    constructor() {
        this.onChange = (e) => {
            const span = e.target;
            this.onValueChange(span.innerText);
        };
    }
    render() {
        const { value, isDisabled = false } = this;
        return (h("span", { "data-test-tag": "expandable-input", contentEditable: !isDisabled, class: `sc-expandable-input aws-util-font-size-1 ${isDisabled ? 'disabled' : ''}`, 
            // spellCheck={('false' as unknown) as boolean}
            onBlur: this.onChange }, value));
    }
    static get is() { return "sc-expandable-input"; }
    static get originalStyleUrls() { return {
        "$": ["sc-expandable-input.css"]
    }; }
    static get styleUrls() { return {
        "$": ["sc-expandable-input.css"]
    }; }
    static get properties() { return {
        "value": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "value",
            "reflect": false
        },
        "onValueChange": {
            "type": "unknown",
            "mutable": false,
            "complexType": {
                "original": "(value: string) => void",
                "resolved": "(value: string) => void",
                "references": {}
            },
            "required": true,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            }
        },
        "isDisabled": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean | undefined",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "is-disabled",
            "reflect": false
        }
    }; }
}
