'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-0b3ed36d.js');
require('./constants-d154fa06.js');
const dataConstants = require('./dataConstants-02642889.js');
require('./index-0fadf3ad.js');
require('./time-3c18516e.js');
require('./utils-43efeece.js');
require('./predicates-739d43b9.js');
require('./number-46ecc337.js');
require('./getDataPoints-726a614b.js');
require('./three.module-c70df973.js');
const webglContext = require('./webglContext-8b04e2f6.js');
require('./_commonjsHelpers-ac2d0785.js');
require('./v4-2c909cec.js');
require('./index-64084e90.js');
require('./clipSpaceConversion-1219a501.js');
const chartSize = require('./chartSize-ddb61505.js');
require('./pointMesh-6969f0d9.js');
const chartScene = require('./chartScene-3c345232.js');
require('./common-9c0591ff.js');

// viewport boundaries
const X_MIN = new Date(2000, 0, 0);
const X_MAX = new Date(2000, 0, 1);
const Y_MIN = 0;
const Y_MAX = 100;
// test data point dead center of the viewport
const TEST_DATA_POINT = {
    x: (X_MIN.getTime() + X_MAX.getTime()) / 2,
    y: (Y_MIN + Y_MAX) / 2,
};
const ScLineChartColoredPoint = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    componentDidLoad() {
        const container = this.el.querySelector('#test-container');
        const scene = chartScene.chartScene({
            viewport: {
                start: X_MIN,
                end: X_MAX,
                yMin: Y_MIN,
                yMax: Y_MAX,
            },
            dataStreams: [
                {
                    id: 'test-stream',
                    data: [TEST_DATA_POINT],
                    name: 'test-stream-name',
                    color: 'red',
                    resolution: 0,
                    dataType: dataConstants.DataType.NUMBER,
                },
            ],
            chartSize: chartSize.CHART_SIZE,
            container,
            minBufferSize: 100,
            bufferFactor: 2,
            thresholdOptions: {
                showColor: false,
            },
            thresholds: [],
        });
        webglContext.webGLRenderer.addChartScene({ manager: scene });
        const rect = container.getBoundingClientRect();
        webglContext.webGLRenderer.setChartRect(scene.id, Object.assign({ density: 1 }, rect.toJSON()));
    }
    render() {
        return (index.h("sc-webgl-context", null, index.h("div", { id: "test-container", style: { width: `${chartSize.CHART_SIZE.width}px`, height: `${chartSize.CHART_SIZE.height}px` } })));
    }
    get el() { return index.getElement(this); }
};

exports.sc_line_chart_colored_point = ScLineChartColoredPoint;
