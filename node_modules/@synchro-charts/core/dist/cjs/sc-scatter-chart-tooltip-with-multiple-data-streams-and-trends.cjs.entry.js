'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-0b3ed36d.js');
const dataConstants = require('./dataConstants-02642889.js');

// viewport boundaries
const X_MIN = new Date(1998, 0, 0);
const X_MAX = new Date(2000, 0, 1);
const Y_MIN = 0;
const Y_MAX = 5000;
const TEST_DATA_POINTS_1 = [
    {
        x: new Date((3 * X_MIN.getTime() + X_MAX.getTime()) / 4).getTime(),
        y: 2500,
    },
    {
        x: new Date((X_MIN.getTime() + X_MAX.getTime()) / 2).getTime(),
        y: 1000,
    },
    {
        x: new Date((X_MIN.getTime() + 3 * X_MAX.getTime()) / 4).getTime(),
        y: 4500,
    },
];
const TEST_DATA_POINTS_2 = [
    {
        x: new Date((3 * X_MIN.getTime() + X_MAX.getTime()) / 4).getTime(),
        y: 2000,
    },
    {
        x: new Date((X_MIN.getTime() + X_MAX.getTime()) / 2).getTime(),
        y: 2500,
    },
    {
        x: new Date((X_MIN.getTime() + 3 * X_MAX.getTime()) / 4).getTime(),
        y: 1500,
    },
];
const ScScatterChartTooltipWithMultipleDataStreamsAndTrends = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    render() {
        return (index.h("div", null, index.h("sc-scatter-chart", { dataStreams: [
                {
                    id: 'test',
                    color: 'black',
                    name: 'test stream 1',
                    data: TEST_DATA_POINTS_1,
                    resolution: 0,
                    dataType: dataConstants.DataType.NUMBER,
                },
                {
                    id: 'test2',
                    color: 'red',
                    name: 'test stream 2',
                    data: TEST_DATA_POINTS_2,
                    resolution: 0,
                    dataType: dataConstants.DataType.NUMBER,
                },
            ], widgetId: "widget-id", size: {
                height: 500,
                width: 500,
            }, viewport: { start: X_MIN, end: X_MAX, yMin: Y_MIN, yMax: Y_MAX }, trends: [
                {
                    type: dataConstants.TREND_TYPE.LINEAR,
                    dataStreamId: 'test',
                },
                {
                    type: dataConstants.TREND_TYPE.LINEAR,
                    dataStreamId: 'test2',
                },
            ] }), index.h("sc-webgl-context", null)));
    }
};

exports.sc_scatter_chart_tooltip_with_multiple_data_streams_and_trends = ScScatterChartTooltipWithMultipleDataStreamsAndTrends;
