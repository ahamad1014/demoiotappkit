'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-0b3ed36d.js');
require('./constants-d154fa06.js');
const dataConstants = require('./dataConstants-02642889.js');
require('./index-0fadf3ad.js');
const time = require('./time-3c18516e.js');
const constants$1 = require('./constants-aac4f7fd.js');

// viewport boundaries
const X_MIN = new Date(1998, 0, 0);
const X_MAX = new Date(2000, 0, 1);
const Y_MIN = 0;
const Y_MAX = 5000;
const WIDTH = X_MAX.getTime() - X_MIN.getTime();
const ScScatterChartDynamicData = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.data = [];
        // test data point dead center of the viewport
        this.addDataPoint = () => {
            const dataPoint = {
                x: X_MIN.getTime() + WIDTH / (2 + this.data.length),
                y: constants$1.Y_VALUE,
            };
            this.data = [dataPoint, ...this.data];
        };
        this.removeDataPoint = () => {
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            const [_firstPoint, ...rest] = this.data;
            this.data = rest;
        };
    }
    render() {
        return (index.h("div", { class: "synchro-chart-tests" }, index.h("button", { id: "add-data-point", onClick: this.addDataPoint }, "Add Data Point"), index.h("button", { id: "remove-data-point", onClick: this.removeDataPoint }, "Remove Data Point"), index.h("div", { id: "chart-container", style: { marginTop: '20px', width: '500px', height: '500px' } }, index.h("sc-scatter-chart", { widgetId: "widget-id", dataStreams: [
                {
                    id: 'test',
                    color: 'red',
                    name: 'test stream',
                    data: [],
                    aggregates: {
                        [time.MONTH_IN_MS]: this.data,
                    },
                    resolution: time.MONTH_IN_MS,
                    dataType: dataConstants.DataType.NUMBER,
                },
            ], size: {
                height: 500,
                width: 500,
            }, viewport: { start: X_MIN, end: X_MAX, yMin: Y_MIN, yMax: Y_MAX } }), index.h("sc-webgl-context", null))));
    }
};

exports.sc_scatter_chart_dynamic_data = ScScatterChartDynamicData;
