'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-0b3ed36d.js');
require('./constants-d154fa06.js');
const dataConstants = require('./dataConstants-02642889.js');
require('./index-0fadf3ad.js');
const time = require('./time-3c18516e.js');
require('./utils-43efeece.js');
require('./predicates-739d43b9.js');
require('./number-46ecc337.js');
require('./dataFilters-b9b845d5.js');
const constants$1 = require('./constants-aac4f7fd.js');

const StatusTimelineMultipleDataStreams = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    render() {
        return (index.h("div", null, index.h("sc-status-timeline", { alarms: { expires: time.MINUTE_IN_MS }, dataStreams: [
                {
                    id: 'test',
                    color: 'black',
                    name: 'test stream 1',
                    aggregates: { [time.MINUTE_IN_MS]: [Object.assign(Object.assign({}, constants$1.TEST_DATA_POINT_STANDARD), { y: 70 })] },
                    data: [],
                    resolution: time.MINUTE_IN_MS,
                    dataType: dataConstants.DataType.NUMBER,
                },
                {
                    id: 'test2',
                    color: 'blue',
                    name: 'test stream 2',
                    aggregates: { [time.MINUTE_IN_MS]: [Object.assign(Object.assign({}, constants$1.TEST_DATA_POINT_STANDARD), { y: 170 })] },
                    data: [],
                    resolution: time.MINUTE_IN_MS,
                    dataType: dataConstants.DataType.NUMBER,
                },
                {
                    id: 'test3',
                    color: 'red',
                    name: 'test stream 3',
                    aggregates: { [time.MINUTE_IN_MS]: [Object.assign(Object.assign({}, constants$1.TEST_DATA_POINT_STANDARD), { y: 60 })] },
                    data: [],
                    resolution: time.MINUTE_IN_MS,
                    dataType: dataConstants.DataType.NUMBER,
                },
            ], widgetId: "test-id", size: {
                width: 500,
                height: 500,
            }, viewport: { yMin: constants$1.Y_MIN, yMax: constants$1.Y_MAX, start: constants$1.X_MIN, end: constants$1.X_MAX } }), index.h("sc-webgl-context", null)));
    }
};

exports.status_timeline_multiple_data_streams = StatusTimelineMultipleDataStreams;
