'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-0b3ed36d.js');
const constants = require('./constants-d154fa06.js');
const dataConstants = require('./dataConstants-02642889.js');
require('./index-0fadf3ad.js');
const time = require('./time-3c18516e.js');

const Y_MIN = 0;
const Y_MAX = 5000;
const X_MIN = new Date(1998, 0, 0);
const X_MAX = new Date(2001, 0, 0);
const TEST_DATA_POINT = {
    x: new Date(1999, 0, 0).getTime(),
    y: 2000,
};
const TEST_DATA_POINT_2 = {
    x: new Date(2000, 0, 0).getTime(),
    y: 4000,
};
const TEST_2_DATA_POINT = {
    x: new Date(1999, 0, 0).getTime(),
    y: 4000,
};
const TEST_2_DATA_POINT_2 = {
    x: new Date(2000, 0, 0).getTime(),
    y: 3000,
};
const ScWebglBarChartThresholdMultipleDataStream = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
    }
    render() {
        return (index.h("div", null, index.h("sc-bar-chart", { dataStreams: [
                {
                    id: 'test',
                    aggregates: {
                        [time.YEAR_IN_MS]: [TEST_DATA_POINT, TEST_DATA_POINT_2],
                    },
                    data: [],
                    resolution: time.YEAR_IN_MS,
                    color: 'black',
                    name: 'test stream',
                    dataType: dataConstants.DataType.NUMBER,
                },
                {
                    id: 'test2',
                    aggregates: {
                        [time.YEAR_IN_MS]: [TEST_2_DATA_POINT, TEST_2_DATA_POINT_2],
                    },
                    data: [],
                    resolution: time.YEAR_IN_MS,
                    color: 'black',
                    name: 'test stream',
                    dataType: dataConstants.DataType.NUMBER,
                },
            ], annotations: {
                y: [
                    {
                        value: 2500,
                        label: {
                            text: 'y label',
                            show: true,
                        },
                        showValue: true,
                        color: 'blue',
                        comparisonOperator: constants.COMPARISON_OPERATOR.GREATER_THAN_EQUAL,
                    },
                ],
                thresholdOptions: {},
            }, widgetId: "test-id", size: {
                width: 500,
                height: 500,
            }, viewport: { yMin: Y_MIN, yMax: Y_MAX, start: X_MIN, end: X_MAX } }), index.h("sc-webgl-context", null)));
    }
};

exports.sc_webgl_bar_chart_threshold_coloration_multiple_data_stream = ScWebglBarChartThresholdMultipleDataStream;
