import{r as t,e as s,h as i}from"./p-b5389ff3.js";import"./p-063edcd0.js";import"./p-7e2c0687.js";import"./p-2e85d2ee.js";import{p as r}from"./p-fe9c1440.js";import{i as o}from"./p-aa8712f2.js";import{b as e}from"./p-45352c6b.js";import"./p-6b1d36dc.js";import"./p-e2758593.js";import"./p-d4ada2ef.js";import"./p-89fc07b9.js";import"./p-23766e60.js";import{w as a}from"./p-1b9cc93b.js";import"./p-b18ab5ec.js";import{l as h,D as p}from"./p-35c421c4.js";import{c}from"./p-8d9cde0c.js";import{v as m,a as d,i as n}from"./p-01ff3702.js";const j=class{constructor(i){t(this,i),this.dateRangeChange=s(this,"dateRangeChange",7),this.messageOverrides={},this.start=m(this.viewport),this.end=d(this.viewport),this.duration=e(this.viewport)?void 0:r(this.viewport.duration),this.onUpdate=({start:t,end:s,duration:i})=>{const r=m(this.viewport).getTime()!==t.getTime()||d(this.viewport).getTime()!==s.getTime(),o=n(this.viewport);r&&!o&&this.onDateRangeChange([t,s,this.viewport.group]),this.start=t,this.end=s,this.duration=i},this.onDateRangeChange=h(([t,s,i])=>{this.dateRangeChange.emit([t,s,i])},p,{leading:!0,trailing:!0}),this.getThresholds=()=>this.annotations&&this.annotations.y?this.annotations.y.filter(o):[]}onViewPortChange(t){this.onUpdate(Object.assign(Object.assign({},t),{duration:e(t)?void 0:r(t.duration),start:m(this.viewport),end:d(this.viewport)}))}componentDidLoad(){a.addChartScene({manager:{id:this.widgetId,viewportGroup:this.viewport.group,updateViewPort:this.onUpdate},duration:this.duration})}disconnectedCallback(){a.removeChartScene(this.widgetId)}render(){const t=c({tableColumns:this.tableColumns,dataStreams:this.dataStreams,thresholds:this.getThresholds(),date:this.end});return i("sc-table-base",{columns:this.tableColumns,rows:t,isEnabled:null!=this.duration,messageOverrides:this.messageOverrides})}static get watchers(){return{viewport:["onViewPortChange"]}}};export{j as sc_table}