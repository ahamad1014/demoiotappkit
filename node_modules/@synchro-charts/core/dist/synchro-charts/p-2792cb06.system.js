var __extends=this&&this.__extends||function(){var e=function(t,r){e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)if(t.hasOwnProperty(r))e[r]=t[r]};return e(t,r)};return function(t,r){e(t,r);function n(){this.constructor=t}t.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}}();var __awaiter=this&&this.__awaiter||function(e,t,r,n){function i(e){return e instanceof r?e:new r((function(t){t(e)}))}return new(r||(r=Promise))((function(r,a){function o(e){try{l(n.next(e))}catch(t){a(t)}}function s(e){try{l(n["throw"](e))}catch(t){a(t)}}function l(e){e.done?r(e.value):i(e.value).then(o,s)}l((n=n.apply(e,t||[])).next())}))};var __generator=this&&this.__generator||function(e,t){var r={label:0,sent:function(){if(a[0]&1)throw a[1];return a[1]},trys:[],ops:[]},n,i,a,o;return o={next:s(0),throw:s(1),return:s(2)},typeof Symbol==="function"&&(o[Symbol.iterator]=function(){return this}),o;function s(e){return function(t){return l([e,t])}}function l(o){if(n)throw new TypeError("Generator is already executing.");while(r)try{if(n=1,i&&(a=o[0]&2?i["return"]:o[0]?i["throw"]||((a=i["return"])&&a.call(i),0):i.next)&&!(a=a.call(i,o[1])).done)return a;if(i=0,a)o=[o[0]&2,a.value];switch(o[0]){case 0:case 1:a=o;break;case 4:r.label++;return{value:o[1],done:false};case 5:r.label++;i=o[1];o=[0];continue;case 7:o=r.ops.pop();r.trys.pop();continue;default:if(!(a=r.trys,a=a.length>0&&a[a.length-1])&&(o[0]===6||o[0]===2)){r=0;continue}if(o[0]===3&&(!a||o[1]>a[0]&&o[1]<a[3])){r.label=o[1];break}if(o[0]===6&&r.label<a[1]){r.label=a[1];a=o;break}if(a&&r.label<a[2]){r.label=a[2];r.ops.push(o);break}if(a[2])r.ops.pop();r.trys.pop();continue}o=t.call(e,r)}catch(s){o=[6,s];i=0}finally{n=a=0}if(o[0]&5)throw o[1];return{value:o[0]?o[1]:void 0,done:true}}};System.register([],(function(e){"use strict";return{execute:function(){e({B:Vn,I:pd,O:ad,P:Fc,R:Bh,W:Bu,a:wc,b:vd,c:ci,d:Bi});var t="125";var r=0;var n=1;var i=2;var a=1;var o=2;var s=3;var l=0;var u=1;var c=e("D",2);var h=1;var f=0;var d=1;var p=2;var v=3;var m=4;var g=5;var y=100;var x=101;var _=102;var b=103;var w=104;var M=200;var S=201;var E=202;var T=203;var L=204;var A=205;var R=206;var P=207;var C=208;var I=209;var O=210;var D=0;var N=1;var z=2;var B=3;var H=4;var F=5;var U=6;var G=7;var k=0;var V=1;var W=2;var j=0;var q=1;var X=2;var Y=3;var Z=4;var J=5;var Q=300;var K=301;var $=302;var ee=303;var te=304;var re=306;var ne=307;var ie=1e3;var ae=1001;var oe=1002;var se=1003;var le=1004;var ue=1005;var ce=1006;var he=1007;var fe=1008;var de=1009;var pe=1010;var ve=1011;var me=1012;var ge=1013;var ye=1014;var xe=1015;var _e=1016;var be=1017;var we=1018;var Me=1019;var Se=1020;var Ee=1021;var Te=1022;var Le=1023;var Ae=1024;var Re=1025;var Pe=1026;var Ce=1027;var Ie=1028;var Oe=1029;var De=1030;var Ne=1031;var ze=1032;var Be=1033;var He=33776;var Fe=33777;var Ue=33778;var Ge=33779;var ke=35840;var Ve=35841;var We=35842;var je=35843;var qe=36196;var Xe=37492;var Ye=37496;var Ze=37808;var Je=37809;var Qe=37810;var Ke=37811;var $e=37812;var et=37813;var tt=37814;var rt=37815;var nt=37816;var it=37817;var at=37818;var ot=37819;var st=37820;var lt=37821;var ut=36492;var ct=37840;var ht=37841;var ft=37842;var dt=37843;var pt=37844;var vt=37845;var mt=37846;var gt=37847;var yt=37848;var xt=37849;var _t=37850;var bt=37851;var wt=37852;var Mt=37853;var St=2200;var Et=2201;var Tt=2202;var Lt=2300;var At=2301;var Rt=2302;var Pt=2400;var Ct=2401;var It=2402;var Ot=2500;var Dt=2501;var Nt=0;var zt=3e3;var Bt=3001;var Ht=3007;var Ft=3002;var Ut=3003;var Gt=3004;var kt=3005;var Vt=3006;var Wt=3200;var jt=3201;var qt=0;var Xt=1;var Yt=7680;var Zt=519;var Jt=35044;var Qt=35048;var Kt="300 es";function $t(){}Object.assign($t.prototype,{addEventListener:function(e,t){if(this._listeners===undefined)this._listeners={};var r=this._listeners;if(r[e]===undefined){r[e]=[]}if(r[e].indexOf(t)===-1){r[e].push(t)}},hasEventListener:function(e,t){if(this._listeners===undefined)return false;var r=this._listeners;return r[e]!==undefined&&r[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners===undefined)return;var r=this._listeners;var n=r[e];if(n!==undefined){var i=n.indexOf(t);if(i!==-1){n.splice(i,1)}}},dispatchEvent:function(e){if(this._listeners===undefined)return;var t=this._listeners;var r=t[e.type];if(r!==undefined){e.target=this;var n=r.slice(0);for(var i=0,a=n.length;i<a;i++){n[i].call(this,e)}}}});var er=[];for(var tr=0;tr<256;tr++){er[tr]=(tr<16?"0":"")+tr.toString(16)}var rr=1234567;var nr={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e=Math.random()*4294967295|0;var t=Math.random()*4294967295|0;var r=Math.random()*4294967295|0;var n=Math.random()*4294967295|0;var i=er[e&255]+er[e>>8&255]+er[e>>16&255]+er[e>>24&255]+"-"+er[t&255]+er[t>>8&255]+"-"+er[t>>16&15|64]+er[t>>24&255]+"-"+er[r&63|128]+er[r>>8&255]+"-"+er[r>>16&255]+er[r>>24&255]+er[n&255]+er[n>>8&255]+er[n>>16&255]+er[n>>24&255];return i.toUpperCase()},clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},lerp:function(e,t,r){return(1-r)*e+r*t},damp:function(e,t,r,n){return nr.lerp(e,t,1-Math.exp(-r*n))},pingpong:function(e,t){if(t===void 0){t=1}return t-Math.abs(nr.euclideanModulo(e,t*2)-t)},smoothstep:function(e,t,r){if(e<=t)return 0;if(e>=r)return 1;e=(e-t)/(r-t);return e*e*(3-2*e)},smootherstep:function(e,t,r){if(e<=t)return 0;if(e>=r)return 1;e=(e-t)/(r-t);return e*e*e*(e*(e*6-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){if(e!==undefined)rr=e%2147483647;rr=rr*16807%2147483647;return(rr-1)/2147483646},degToRad:function(e){return e*nr.DEG2RAD},radToDeg:function(e){return e*nr.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,r,n,i){var a=Math.cos;var o=Math.sin;var s=a(r/2);var l=o(r/2);var u=a((t+n)/2);var c=o((t+n)/2);var h=a((t-n)/2);var f=o((t-n)/2);var d=a((n-t)/2);var p=o((n-t)/2);switch(i){case"XYX":e.set(s*c,l*h,l*f,s*u);break;case"YZY":e.set(l*f,s*c,l*h,s*u);break;case"ZXZ":e.set(l*h,l*f,s*c,s*u);break;case"XZX":e.set(s*c,l*p,l*d,s*u);break;case"YXY":e.set(l*d,s*c,l*p,s*u);break;case"ZYZ":e.set(l*p,l*d,s*c,s*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}};var ir=function(){function e(e,t){if(e===void 0){e=0}if(t===void 0){t=0}Object.defineProperty(this,"isVector2",{value:true});this.x=e;this.y=t}Object.defineProperty(e.prototype,"width",{get:function(){return this.x},set:function(e){this.x=e},enumerable:false,configurable:true});Object.defineProperty(e.prototype,"height",{get:function(){return this.y},set:function(e){this.y=e},enumerable:false,configurable:true});e.prototype.set=function(e,t){this.x=e;this.y=t;return this};e.prototype.setScalar=function(e){this.x=e;this.y=e;return this};e.prototype.setX=function(e){this.x=e;return this};e.prototype.setY=function(e){this.y=e;return this};e.prototype.setComponent=function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this};e.prototype.getComponent=function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}};e.prototype.clone=function(){return new this.constructor(this.x,this.y)};e.prototype.copy=function(e){this.x=e.x;this.y=e.y;return this};e.prototype.add=function(e,t){if(t!==undefined){console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;return this};e.prototype.addScalar=function(e){this.x+=e;this.y+=e;return this};e.prototype.addVectors=function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;return this};e.prototype.addScaledVector=function(e,t){this.x+=e.x*t;this.y+=e.y*t;return this};e.prototype.sub=function(e,t){if(t!==undefined){console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;return this};e.prototype.subScalar=function(e){this.x-=e;this.y-=e;return this};e.prototype.subVectors=function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;return this};e.prototype.multiply=function(e){this.x*=e.x;this.y*=e.y;return this};e.prototype.multiplyScalar=function(e){this.x*=e;this.y*=e;return this};e.prototype.divide=function(e){this.x/=e.x;this.y/=e.y;return this};e.prototype.divideScalar=function(e){return this.multiplyScalar(1/e)};e.prototype.applyMatrix3=function(e){var t=this.x,r=this.y;var n=e.elements;this.x=n[0]*t+n[3]*r+n[6];this.y=n[1]*t+n[4]*r+n[7];return this};e.prototype.min=function(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);return this};e.prototype.max=function(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);return this};e.prototype.clamp=function(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));return this};e.prototype.clampScalar=function(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));return this};e.prototype.clampLength=function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))};e.prototype.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this};e.prototype.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this};e.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this};e.prototype.roundToZero=function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this};e.prototype.negate=function(){this.x=-this.x;this.y=-this.y;return this};e.prototype.dot=function(e){return this.x*e.x+this.y*e.y};e.prototype.cross=function(e){return this.x*e.y-this.y*e.x};e.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y};e.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y)};e.prototype.manhattanLength=function(){return Math.abs(this.x)+Math.abs(this.y)};e.prototype.normalize=function(){return this.divideScalar(this.length()||1)};e.prototype.angle=function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e};e.prototype.distanceTo=function(e){return Math.sqrt(this.distanceToSquared(e))};e.prototype.distanceToSquared=function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r};e.prototype.manhattanDistanceTo=function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)};e.prototype.setLength=function(e){return this.normalize().multiplyScalar(e)};e.prototype.lerp=function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;return this};e.prototype.lerpVectors=function(e,t,r){this.x=e.x+(t.x-e.x)*r;this.y=e.y+(t.y-e.y)*r;return this};e.prototype.equals=function(e){return e.x===this.x&&e.y===this.y};e.prototype.fromArray=function(e,t){if(t===void 0){t=0}this.x=e[t];this.y=e[t+1];return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}e[t]=this.x;e[t+1]=this.y;return e};e.prototype.fromBufferAttribute=function(e,t,r){if(r!==undefined){console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute().")}this.x=e.getX(t);this.y=e.getY(t);return this};e.prototype.rotateAround=function(e,t){var r=Math.cos(t),n=Math.sin(t);var i=this.x-e.x;var a=this.y-e.y;this.x=i*r-a*n+e.x;this.y=i*n+a*r+e.y;return this};e.prototype.random=function(){this.x=Math.random();this.y=Math.random();return this};return e}();var ar=function(){function e(){Object.defineProperty(this,"isMatrix3",{value:true});this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}}e.prototype.set=function(e,t,r,n,i,a,o,s,l){var u=this.elements;u[0]=e;u[1]=n;u[2]=o;u[3]=t;u[4]=i;u[5]=s;u[6]=r;u[7]=a;u[8]=l;return this};e.prototype.identity=function(){this.set(1,0,0,0,1,0,0,0,1);return this};e.prototype.clone=function(){return(new this.constructor).fromArray(this.elements)};e.prototype.copy=function(e){var t=this.elements;var r=e.elements;t[0]=r[0];t[1]=r[1];t[2]=r[2];t[3]=r[3];t[4]=r[4];t[5]=r[5];t[6]=r[6];t[7]=r[7];t[8]=r[8];return this};e.prototype.extractBasis=function(e,t,r){e.setFromMatrix3Column(this,0);t.setFromMatrix3Column(this,1);r.setFromMatrix3Column(this,2);return this};e.prototype.setFromMatrix4=function(e){var t=e.elements;this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]);return this};e.prototype.multiply=function(e){return this.multiplyMatrices(this,e)};e.prototype.premultiply=function(e){return this.multiplyMatrices(e,this)};e.prototype.multiplyMatrices=function(e,t){var r=e.elements;var n=t.elements;var i=this.elements;var a=r[0],o=r[3],s=r[6];var l=r[1],u=r[4],c=r[7];var h=r[2],f=r[5],d=r[8];var p=n[0],v=n[3],m=n[6];var g=n[1],y=n[4],x=n[7];var _=n[2],b=n[5],w=n[8];i[0]=a*p+o*g+s*_;i[3]=a*v+o*y+s*b;i[6]=a*m+o*x+s*w;i[1]=l*p+u*g+c*_;i[4]=l*v+u*y+c*b;i[7]=l*m+u*x+c*w;i[2]=h*p+f*g+d*_;i[5]=h*v+f*y+d*b;i[8]=h*m+f*x+d*w;return this};e.prototype.multiplyScalar=function(e){var t=this.elements;t[0]*=e;t[3]*=e;t[6]*=e;t[1]*=e;t[4]*=e;t[7]*=e;t[2]*=e;t[5]*=e;t[8]*=e;return this};e.prototype.determinant=function(){var e=this.elements;var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8];return t*a*u-t*o*l-r*i*u+r*o*s+n*i*l-n*a*s};e.prototype.invert=function(){var e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c=u*a-o*l,h=o*s-u*i,f=l*i-a*s,d=t*c+r*h+n*f;if(d===0)return this.set(0,0,0,0,0,0,0,0,0);var p=1/d;e[0]=c*p;e[1]=(n*l-u*r)*p;e[2]=(o*r-n*a)*p;e[3]=h*p;e[4]=(u*t-n*s)*p;e[5]=(n*i-o*t)*p;e[6]=f*p;e[7]=(r*s-l*t)*p;e[8]=(a*t-r*i)*p;return this};e.prototype.transpose=function(){var e;var t=this.elements;e=t[1];t[1]=t[3];t[3]=e;e=t[2];t[2]=t[6];t[6]=e;e=t[5];t[5]=t[7];t[7]=e;return this};e.prototype.getNormalMatrix=function(e){return this.setFromMatrix4(e).copy(this).invert().transpose()};e.prototype.transposeIntoArray=function(e){var t=this.elements;e[0]=t[0];e[1]=t[3];e[2]=t[6];e[3]=t[1];e[4]=t[4];e[5]=t[7];e[6]=t[2];e[7]=t[5];e[8]=t[8];return this};e.prototype.setUvTransform=function(e,t,r,n,i,a,o){var s=Math.cos(i);var l=Math.sin(i);this.set(r*s,r*l,-r*(s*a+l*o)+a+e,-n*l,n*s,-n*(-l*a+s*o)+o+t,0,0,1);return this};e.prototype.scale=function(e,t){var r=this.elements;r[0]*=e;r[3]*=e;r[6]*=e;r[1]*=t;r[4]*=t;r[7]*=t;return this};e.prototype.rotate=function(e){var t=Math.cos(e);var r=Math.sin(e);var n=this.elements;var i=n[0],a=n[3],o=n[6];var s=n[1],l=n[4],u=n[7];n[0]=t*i+r*s;n[3]=t*a+r*l;n[6]=t*o+r*u;n[1]=-r*i+t*s;n[4]=-r*a+t*l;n[7]=-r*o+t*u;return this};e.prototype.translate=function(e,t){var r=this.elements;r[0]+=e*r[2];r[3]+=e*r[5];r[6]+=e*r[8];r[1]+=t*r[2];r[4]+=t*r[5];r[7]+=t*r[8];return this};e.prototype.equals=function(e){var t=this.elements;var r=e.elements;for(var n=0;n<9;n++){if(t[n]!==r[n])return false}return true};e.prototype.fromArray=function(e,t){if(t===void 0){t=0}for(var r=0;r<9;r++){this.elements[r]=e[r+t]}return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}var r=this.elements;e[t]=r[0];e[t+1]=r[1];e[t+2]=r[2];e[t+3]=r[3];e[t+4]=r[4];e[t+5]=r[5];e[t+6]=r[6];e[t+7]=r[7];e[t+8]=r[8];return e};return e}();var or;var sr={getDataURL:function(e){if(/^data:/i.test(e.src)){return e.src}if(typeof HTMLCanvasElement=="undefined"){return e.src}var t;if(e instanceof HTMLCanvasElement){t=e}else{if(or===undefined)or=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");or.width=e.width;or.height=e.height;var r=or.getContext("2d");if(e instanceof ImageData){r.putImageData(e,0,0)}else{r.drawImage(e,0,0,e.width,e.height)}t=or}if(t.width>2048||t.height>2048){return t.toDataURL("image/jpeg",.6)}else{return t.toDataURL("image/png")}}};var lr=0;function ur(e,t,r,n,i,a,o,s,l,u){if(e===void 0){e=ur.DEFAULT_IMAGE}if(t===void 0){t=ur.DEFAULT_MAPPING}if(r===void 0){r=ae}if(n===void 0){n=ae}if(i===void 0){i=ce}if(a===void 0){a=fe}if(o===void 0){o=Le}if(s===void 0){s=de}if(l===void 0){l=1}if(u===void 0){u=zt}Object.defineProperty(this,"id",{value:lr++});this.uuid=nr.generateUUID();this.name="";this.image=e;this.mipmaps=[];this.mapping=t;this.wrapS=r;this.wrapT=n;this.magFilter=i;this.minFilter=a;this.anisotropy=l;this.format=o;this.internalFormat=null;this.type=s;this.offset=new ir(0,0);this.repeat=new ir(1,1);this.center=new ir(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new ar;this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.encoding=u;this.version=0;this.onUpdate=null}ur.DEFAULT_IMAGE=undefined;ur.DEFAULT_MAPPING=Q;ur.prototype=Object.assign(Object.create($t.prototype),{constructor:ur,isTexture:true,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name;this.image=e.image;this.mipmaps=e.mipmaps.slice(0);this.mapping=e.mapping;this.wrapS=e.wrapS;this.wrapT=e.wrapT;this.magFilter=e.magFilter;this.minFilter=e.minFilter;this.anisotropy=e.anisotropy;this.format=e.format;this.internalFormat=e.internalFormat;this.type=e.type;this.offset.copy(e.offset);this.repeat.copy(e.repeat);this.center.copy(e.center);this.rotation=e.rotation;this.matrixAutoUpdate=e.matrixAutoUpdate;this.matrix.copy(e.matrix);this.generateMipmaps=e.generateMipmaps;this.premultiplyAlpha=e.premultiplyAlpha;this.flipY=e.flipY;this.unpackAlignment=e.unpackAlignment;this.encoding=e.encoding;return this},toJSON:function(e){var t=e===undefined||typeof e==="string";if(!t&&e.textures[this.uuid]!==undefined){return e.textures[this.uuid]}var r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){var n=this.image;if(n.uuid===undefined){n.uuid=nr.generateUUID()}if(!t&&e.images[n.uuid]===undefined){var i=void 0;if(Array.isArray(n)){i=[];for(var a=0,o=n.length;a<o;a++){if(n[a].isDataTexture){i.push(cr(n[a].image))}else{i.push(cr(n[a]))}}}else{i=cr(n)}e.images[n.uuid]={uuid:n.uuid,url:i}}r.image=n.uuid}if(!t){e.textures[this.uuid]=r}return r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==Q)return e;e.applyMatrix3(this.matrix);if(e.x<0||e.x>1){switch(this.wrapS){case ie:e.x=e.x-Math.floor(e.x);break;case ae:e.x=e.x<0?0:1;break;case oe:if(Math.abs(Math.floor(e.x)%2)===1){e.x=Math.ceil(e.x)-e.x}else{e.x=e.x-Math.floor(e.x)}break}}if(e.y<0||e.y>1){switch(this.wrapT){case ie:e.y=e.y-Math.floor(e.y);break;case ae:e.y=e.y<0?0:1;break;case oe:if(Math.abs(Math.floor(e.y)%2)===1){e.y=Math.ceil(e.y)-e.y}else{e.y=e.y-Math.floor(e.y)}break}}if(this.flipY){e.y=1-e.y}return e}});Object.defineProperty(ur.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});function cr(e){if(typeof HTMLImageElement!=="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!=="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!=="undefined"&&e instanceof ImageBitmap){return sr.getDataURL(e)}else{if(e.data){return{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}}else{console.warn("THREE.Texture: Unable to serialize Texture.");return{}}}}var hr=function(){function e(e,t,r,n){if(e===void 0){e=0}if(t===void 0){t=0}if(r===void 0){r=0}if(n===void 0){n=1}Object.defineProperty(this,"isVector4",{value:true});this.x=e;this.y=t;this.z=r;this.w=n}Object.defineProperty(e.prototype,"width",{get:function(){return this.z},set:function(e){this.z=e},enumerable:false,configurable:true});Object.defineProperty(e.prototype,"height",{get:function(){return this.w},set:function(e){this.w=e},enumerable:false,configurable:true});e.prototype.set=function(e,t,r,n){this.x=e;this.y=t;this.z=r;this.w=n;return this};e.prototype.setScalar=function(e){this.x=e;this.y=e;this.z=e;this.w=e;return this};e.prototype.setX=function(e){this.x=e;return this};e.prototype.setY=function(e){this.y=e;return this};e.prototype.setZ=function(e){this.z=e;return this};e.prototype.setW=function(e){this.w=e;return this};e.prototype.setComponent=function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this};e.prototype.getComponent=function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}};e.prototype.clone=function(){return new this.constructor(this.x,this.y,this.z,this.w)};e.prototype.copy=function(e){this.x=e.x;this.y=e.y;this.z=e.z;this.w=e.w!==undefined?e.w:1;return this};e.prototype.add=function(e,t){if(t!==undefined){console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;this.w+=e.w;return this};e.prototype.addScalar=function(e){this.x+=e;this.y+=e;this.z+=e;this.w+=e;return this};e.prototype.addVectors=function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;this.w=e.w+t.w;return this};e.prototype.addScaledVector=function(e,t){this.x+=e.x*t;this.y+=e.y*t;this.z+=e.z*t;this.w+=e.w*t;return this};e.prototype.sub=function(e,t){if(t!==undefined){console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;this.w-=e.w;return this};e.prototype.subScalar=function(e){this.x-=e;this.y-=e;this.z-=e;this.w-=e;return this};e.prototype.subVectors=function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;this.w=e.w-t.w;return this};e.prototype.multiply=function(e){this.x*=e.x;this.y*=e.y;this.z*=e.z;this.w*=e.w;return this};e.prototype.multiplyScalar=function(e){this.x*=e;this.y*=e;this.z*=e;this.w*=e;return this};e.prototype.applyMatrix4=function(e){var t=this.x,r=this.y,n=this.z,i=this.w;var a=e.elements;this.x=a[0]*t+a[4]*r+a[8]*n+a[12]*i;this.y=a[1]*t+a[5]*r+a[9]*n+a[13]*i;this.z=a[2]*t+a[6]*r+a[10]*n+a[14]*i;this.w=a[3]*t+a[7]*r+a[11]*n+a[15]*i;return this};e.prototype.divideScalar=function(e){return this.multiplyScalar(1/e)};e.prototype.setAxisAngleFromQuaternion=function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);if(t<1e-4){this.x=1;this.y=0;this.z=0}else{this.x=e.x/t;this.y=e.y/t;this.z=e.z/t}return this};e.prototype.setAxisAngleFromRotationMatrix=function(e){var t,r,n,i;var a=.01,o=.1,s=e.elements,l=s[0],u=s[4],c=s[8],h=s[1],f=s[5],d=s[9],p=s[2],v=s[6],m=s[10];if(Math.abs(u-h)<a&&Math.abs(c-p)<a&&Math.abs(d-v)<a){if(Math.abs(u+h)<o&&Math.abs(c+p)<o&&Math.abs(d+v)<o&&Math.abs(l+f+m-3)<o){this.set(1,0,0,0);return this}t=Math.PI;var g=(l+1)/2;var y=(f+1)/2;var x=(m+1)/2;var _=(u+h)/4;var b=(c+p)/4;var w=(d+v)/4;if(g>y&&g>x){if(g<a){r=0;n=.707106781;i=.707106781}else{r=Math.sqrt(g);n=_/r;i=b/r}}else if(y>x){if(y<a){r=.707106781;n=0;i=.707106781}else{n=Math.sqrt(y);r=_/n;i=w/n}}else{if(x<a){r=.707106781;n=.707106781;i=0}else{i=Math.sqrt(x);r=b/i;n=w/i}}this.set(r,n,i,t);return this}var M=Math.sqrt((v-d)*(v-d)+(c-p)*(c-p)+(h-u)*(h-u));if(Math.abs(M)<.001)M=1;this.x=(v-d)/M;this.y=(c-p)/M;this.z=(h-u)/M;this.w=Math.acos((l+f+m-1)/2);return this};e.prototype.min=function(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);this.z=Math.min(this.z,e.z);this.w=Math.min(this.w,e.w);return this};e.prototype.max=function(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);this.z=Math.max(this.z,e.z);this.w=Math.max(this.w,e.w);return this};e.prototype.clamp=function(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));this.z=Math.max(e.z,Math.min(t.z,this.z));this.w=Math.max(e.w,Math.min(t.w,this.w));return this};e.prototype.clampScalar=function(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));this.z=Math.max(e,Math.min(t,this.z));this.w=Math.max(e,Math.min(t,this.w));return this};e.prototype.clampLength=function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))};e.prototype.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this};e.prototype.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this};e.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this};e.prototype.roundToZero=function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this};e.prototype.negate=function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this};e.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w};e.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w};e.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)};e.prototype.manhattanLength=function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)};e.prototype.normalize=function(){return this.divideScalar(this.length()||1)};e.prototype.setLength=function(e){return this.normalize().multiplyScalar(e)};e.prototype.lerp=function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;this.w+=(e.w-this.w)*t;return this};e.prototype.lerpVectors=function(e,t,r){this.x=e.x+(t.x-e.x)*r;this.y=e.y+(t.y-e.y)*r;this.z=e.z+(t.z-e.z)*r;this.w=e.w+(t.w-e.w)*r;return this};e.prototype.equals=function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w};e.prototype.fromArray=function(e,t){if(t===void 0){t=0}this.x=e[t];this.y=e[t+1];this.z=e[t+2];this.w=e[t+3];return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}e[t]=this.x;e[t+1]=this.y;e[t+2]=this.z;e[t+3]=this.w;return e};e.prototype.fromBufferAttribute=function(e,t,r){if(r!==undefined){console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute().")}this.x=e.getX(t);this.y=e.getY(t);this.z=e.getZ(t);this.w=e.getW(t);return this};e.prototype.random=function(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this};return e}();var fr=function(e){__extends(t,e);function t(t,r,n){var i=e.call(this)||this;Object.defineProperty(i,"isWebGLRenderTarget",{value:true});i.width=t;i.height=r;i.scissor=new hr(0,0,t,r);i.scissorTest=false;i.viewport=new hr(0,0,t,r);n=n||{};i.texture=new ur(undefined,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding);i.texture.image={};i.texture.image.width=t;i.texture.image.height=r;i.texture.generateMipmaps=n.generateMipmaps!==undefined?n.generateMipmaps:false;i.texture.minFilter=n.minFilter!==undefined?n.minFilter:ce;i.depthBuffer=n.depthBuffer!==undefined?n.depthBuffer:true;i.stencilBuffer=n.stencilBuffer!==undefined?n.stencilBuffer:false;i.depthTexture=n.depthTexture!==undefined?n.depthTexture:null;return i}t.prototype.setSize=function(e,t){if(this.width!==e||this.height!==t){this.width=e;this.height=t;this.texture.image.width=e;this.texture.image.height=t;this.dispose()}this.viewport.set(0,0,e,t);this.scissor.set(0,0,e,t)};t.prototype.clone=function(){return(new this.constructor).copy(this)};t.prototype.copy=function(e){this.width=e.width;this.height=e.height;this.viewport.copy(e.viewport);this.texture=e.texture.clone();this.depthBuffer=e.depthBuffer;this.stencilBuffer=e.stencilBuffer;this.depthTexture=e.depthTexture;return this};t.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};return t}($t);var dr=function(){function e(e,t,r,n){if(e===void 0){e=0}if(t===void 0){t=0}if(r===void 0){r=0}if(n===void 0){n=1}Object.defineProperty(this,"isQuaternion",{value:true});this._x=e;this._y=t;this._z=r;this._w=n}e.slerp=function(e,t,r,n){return r.copy(e).slerp(t,n)};e.slerpFlat=function(e,t,r,n,i,a,o){var s=r[n+0],l=r[n+1],u=r[n+2],c=r[n+3];var h=i[a+0],f=i[a+1],d=i[a+2],p=i[a+3];if(c!==p||s!==h||l!==f||u!==d){var v=1-o;var m=s*h+l*f+u*d+c*p,g=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){var x=Math.sqrt(y),_=Math.atan2(x,m*g);v=Math.sin(v*_)/x;o=Math.sin(o*_)/x}var b=o*g;s=s*v+h*b;l=l*v+f*b;u=u*v+d*b;c=c*v+p*b;if(v===1-o){var w=1/Math.sqrt(s*s+l*l+u*u+c*c);s*=w;l*=w;u*=w;c*=w}}e[t]=s;e[t+1]=l;e[t+2]=u;e[t+3]=c};e.multiplyQuaternionsFlat=function(e,t,r,n,i,a){var o=r[n];var s=r[n+1];var l=r[n+2];var u=r[n+3];var c=i[a];var h=i[a+1];var f=i[a+2];var d=i[a+3];e[t]=o*d+u*c+s*f-l*h;e[t+1]=s*d+u*h+l*c-o*f;e[t+2]=l*d+u*f+o*h-s*c;e[t+3]=u*d-o*c-s*h-l*f;return e};Object.defineProperty(e.prototype,"x",{get:function(){return this._x},set:function(e){this._x=e;this._onChangeCallback()},enumerable:false,configurable:true});Object.defineProperty(e.prototype,"y",{get:function(){return this._y},set:function(e){this._y=e;this._onChangeCallback()},enumerable:false,configurable:true});Object.defineProperty(e.prototype,"z",{get:function(){return this._z},set:function(e){this._z=e;this._onChangeCallback()},enumerable:false,configurable:true});Object.defineProperty(e.prototype,"w",{get:function(){return this._w},set:function(e){this._w=e;this._onChangeCallback()},enumerable:false,configurable:true});e.prototype.set=function(e,t,r,n){this._x=e;this._y=t;this._z=r;this._w=n;this._onChangeCallback();return this};e.prototype.clone=function(){return new this.constructor(this._x,this._y,this._z,this._w)};e.prototype.copy=function(e){this._x=e.x;this._y=e.y;this._z=e.z;this._w=e.w;this._onChangeCallback();return this};e.prototype.setFromEuler=function(e,t){if(!(e&&e.isEuler)){throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.")}var r=e._x,n=e._y,i=e._z,a=e._order;var o=Math.cos;var s=Math.sin;var l=o(r/2);var u=o(n/2);var c=o(i/2);var h=s(r/2);var f=s(n/2);var d=s(i/2);switch(a){case"XYZ":this._x=h*u*c+l*f*d;this._y=l*f*c-h*u*d;this._z=l*u*d+h*f*c;this._w=l*u*c-h*f*d;break;case"YXZ":this._x=h*u*c+l*f*d;this._y=l*f*c-h*u*d;this._z=l*u*d-h*f*c;this._w=l*u*c+h*f*d;break;case"ZXY":this._x=h*u*c-l*f*d;this._y=l*f*c+h*u*d;this._z=l*u*d+h*f*c;this._w=l*u*c-h*f*d;break;case"ZYX":this._x=h*u*c-l*f*d;this._y=l*f*c+h*u*d;this._z=l*u*d-h*f*c;this._w=l*u*c+h*f*d;break;case"YZX":this._x=h*u*c+l*f*d;this._y=l*f*c+h*u*d;this._z=l*u*d-h*f*c;this._w=l*u*c-h*f*d;break;case"XZY":this._x=h*u*c-l*f*d;this._y=l*f*c-h*u*d;this._z=l*u*d+h*f*c;this._w=l*u*c+h*f*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}if(t!==false)this._onChangeCallback();return this};e.prototype.setFromAxisAngle=function(e,t){var r=t/2,n=Math.sin(r);this._x=e.x*n;this._y=e.y*n;this._z=e.z*n;this._w=Math.cos(r);this._onChangeCallback();return this};e.prototype.setFromRotationMatrix=function(e){var t=e.elements,r=t[0],n=t[4],i=t[8],a=t[1],o=t[5],s=t[9],l=t[2],u=t[6],c=t[10],h=r+o+c;if(h>0){var f=.5/Math.sqrt(h+1);this._w=.25/f;this._x=(u-s)*f;this._y=(i-l)*f;this._z=(a-n)*f}else if(r>o&&r>c){var f=2*Math.sqrt(1+r-o-c);this._w=(u-s)/f;this._x=.25*f;this._y=(n+a)/f;this._z=(i+l)/f}else if(o>c){var f=2*Math.sqrt(1+o-r-c);this._w=(i-l)/f;this._x=(n+a)/f;this._y=.25*f;this._z=(s+u)/f}else{var f=2*Math.sqrt(1+c-r-o);this._w=(a-n)/f;this._x=(i+l)/f;this._y=(s+u)/f;this._z=.25*f}this._onChangeCallback();return this};e.prototype.setFromUnitVectors=function(e,t){var r=1e-6;var n=e.dot(t)+1;if(n<r){n=0;if(Math.abs(e.x)>Math.abs(e.z)){this._x=-e.y;this._y=e.x;this._z=0;this._w=n}else{this._x=0;this._y=-e.z;this._z=e.y;this._w=n}}else{this._x=e.y*t.z-e.z*t.y;this._y=e.z*t.x-e.x*t.z;this._z=e.x*t.y-e.y*t.x;this._w=n}return this.normalize()};e.prototype.angleTo=function(e){return 2*Math.acos(Math.abs(nr.clamp(this.dot(e),-1,1)))};e.prototype.rotateTowards=function(e,t){var r=this.angleTo(e);if(r===0)return this;var n=Math.min(1,t/r);this.slerp(e,n);return this};e.prototype.identity=function(){return this.set(0,0,0,1)};e.prototype.invert=function(){return this.conjugate()};e.prototype.conjugate=function(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this};e.prototype.dot=function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w};e.prototype.lengthSq=function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w};e.prototype.length=function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)};e.prototype.normalize=function(){var e=this.length();if(e===0){this._x=0;this._y=0;this._z=0;this._w=1}else{e=1/e;this._x=this._x*e;this._y=this._y*e;this._z=this._z*e;this._w=this._w*e}this._onChangeCallback();return this};e.prototype.multiply=function(e,t){if(t!==undefined){console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(e,t)}return this.multiplyQuaternions(this,e)};e.prototype.premultiply=function(e){return this.multiplyQuaternions(e,this)};e.prototype.multiplyQuaternions=function(e,t){var r=e._x,n=e._y,i=e._z,a=e._w;var o=t._x,s=t._y,l=t._z,u=t._w;this._x=r*u+a*o+n*l-i*s;this._y=n*u+a*s+i*o-r*l;this._z=i*u+a*l+r*s-n*o;this._w=a*u-r*o-n*s-i*l;this._onChangeCallback();return this};e.prototype.slerp=function(e,t){if(t===0)return this;if(t===1)return this.copy(e);var r=this._x,n=this._y,i=this._z,a=this._w;var o=a*e._w+r*e._x+n*e._y+i*e._z;if(o<0){this._w=-e._w;this._x=-e._x;this._y=-e._y;this._z=-e._z;o=-o}else{this.copy(e)}if(o>=1){this._w=a;this._x=r;this._y=n;this._z=i;return this}var s=1-o*o;if(s<=Number.EPSILON){var l=1-t;this._w=l*a+t*this._w;this._x=l*r+t*this._x;this._y=l*n+t*this._y;this._z=l*i+t*this._z;this.normalize();this._onChangeCallback();return this}var u=Math.sqrt(s);var c=Math.atan2(u,o);var h=Math.sin((1-t)*c)/u,f=Math.sin(t*c)/u;this._w=a*h+this._w*f;this._x=r*h+this._x*f;this._y=n*h+this._y*f;this._z=i*h+this._z*f;this._onChangeCallback();return this};e.prototype.equals=function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w};e.prototype.fromArray=function(e,t){if(t===void 0){t=0}this._x=e[t];this._y=e[t+1];this._z=e[t+2];this._w=e[t+3];this._onChangeCallback();return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}e[t]=this._x;e[t+1]=this._y;e[t+2]=this._z;e[t+3]=this._w;return e};e.prototype.fromBufferAttribute=function(e,t){this._x=e.getX(t);this._y=e.getY(t);this._z=e.getZ(t);this._w=e.getW(t);return this};e.prototype._onChange=function(e){this._onChangeCallback=e;return this};e.prototype._onChangeCallback=function(){};return e}();var pr=function(){function e(e,t,r){if(e===void 0){e=0}if(t===void 0){t=0}if(r===void 0){r=0}Object.defineProperty(this,"isVector3",{value:true});this.x=e;this.y=t;this.z=r}e.prototype.set=function(e,t,r){if(r===undefined)r=this.z;this.x=e;this.y=t;this.z=r;return this};e.prototype.setScalar=function(e){this.x=e;this.y=e;this.z=e;return this};e.prototype.setX=function(e){this.x=e;return this};e.prototype.setY=function(e){this.y=e;return this};e.prototype.setZ=function(e){this.z=e;return this};e.prototype.setComponent=function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this};e.prototype.getComponent=function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}};e.prototype.clone=function(){return new this.constructor(this.x,this.y,this.z)};e.prototype.copy=function(e){this.x=e.x;this.y=e.y;this.z=e.z;return this};e.prototype.add=function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(e,t)}this.x+=e.x;this.y+=e.y;this.z+=e.z;return this};e.prototype.addScalar=function(e){this.x+=e;this.y+=e;this.z+=e;return this};e.prototype.addVectors=function(e,t){this.x=e.x+t.x;this.y=e.y+t.y;this.z=e.z+t.z;return this};e.prototype.addScaledVector=function(e,t){this.x+=e.x*t;this.y+=e.y*t;this.z+=e.z*t;return this};e.prototype.sub=function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(e,t)}this.x-=e.x;this.y-=e.y;this.z-=e.z;return this};e.prototype.subScalar=function(e){this.x-=e;this.y-=e;this.z-=e;return this};e.prototype.subVectors=function(e,t){this.x=e.x-t.x;this.y=e.y-t.y;this.z=e.z-t.z;return this};e.prototype.multiply=function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(e,t)}this.x*=e.x;this.y*=e.y;this.z*=e.z;return this};e.prototype.multiplyScalar=function(e){this.x*=e;this.y*=e;this.z*=e;return this};e.prototype.multiplyVectors=function(e,t){this.x=e.x*t.x;this.y=e.y*t.y;this.z=e.z*t.z;return this};e.prototype.applyEuler=function(e){if(!(e&&e.isEuler)){console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.")}return this.applyQuaternion(mr.setFromEuler(e))};e.prototype.applyAxisAngle=function(e,t){return this.applyQuaternion(mr.setFromAxisAngle(e,t))};e.prototype.applyMatrix3=function(e){var t=this.x,r=this.y,n=this.z;var i=e.elements;this.x=i[0]*t+i[3]*r+i[6]*n;this.y=i[1]*t+i[4]*r+i[7]*n;this.z=i[2]*t+i[5]*r+i[8]*n;return this};e.prototype.applyNormalMatrix=function(e){return this.applyMatrix3(e).normalize()};e.prototype.applyMatrix4=function(e){var t=this.x,r=this.y,n=this.z;var i=e.elements;var a=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*a;this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*a;this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*a;return this};e.prototype.applyQuaternion=function(e){var t=this.x,r=this.y,n=this.z;var i=e.x,a=e.y,o=e.z,s=e.w;var l=s*t+a*n-o*r;var u=s*r+o*t-i*n;var c=s*n+i*r-a*t;var h=-i*t-a*r-o*n;this.x=l*s+h*-i+u*-o-c*-a;this.y=u*s+h*-a+c*-i-l*-o;this.z=c*s+h*-o+l*-a-u*-i;return this};e.prototype.project=function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)};e.prototype.unproject=function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)};e.prototype.transformDirection=function(e){var t=this.x,r=this.y,n=this.z;var i=e.elements;this.x=i[0]*t+i[4]*r+i[8]*n;this.y=i[1]*t+i[5]*r+i[9]*n;this.z=i[2]*t+i[6]*r+i[10]*n;return this.normalize()};e.prototype.divide=function(e){this.x/=e.x;this.y/=e.y;this.z/=e.z;return this};e.prototype.divideScalar=function(e){return this.multiplyScalar(1/e)};e.prototype.min=function(e){this.x=Math.min(this.x,e.x);this.y=Math.min(this.y,e.y);this.z=Math.min(this.z,e.z);return this};e.prototype.max=function(e){this.x=Math.max(this.x,e.x);this.y=Math.max(this.y,e.y);this.z=Math.max(this.z,e.z);return this};e.prototype.clamp=function(e,t){this.x=Math.max(e.x,Math.min(t.x,this.x));this.y=Math.max(e.y,Math.min(t.y,this.y));this.z=Math.max(e.z,Math.min(t.z,this.z));return this};e.prototype.clampScalar=function(e,t){this.x=Math.max(e,Math.min(t,this.x));this.y=Math.max(e,Math.min(t,this.y));this.z=Math.max(e,Math.min(t,this.z));return this};e.prototype.clampLength=function(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))};e.prototype.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this};e.prototype.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this};e.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this};e.prototype.roundToZero=function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this};e.prototype.negate=function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this};e.prototype.dot=function(e){return this.x*e.x+this.y*e.y+this.z*e.z};e.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y+this.z*this.z};e.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)};e.prototype.manhattanLength=function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)};e.prototype.normalize=function(){return this.divideScalar(this.length()||1)};e.prototype.setLength=function(e){return this.normalize().multiplyScalar(e)};e.prototype.lerp=function(e,t){this.x+=(e.x-this.x)*t;this.y+=(e.y-this.y)*t;this.z+=(e.z-this.z)*t;return this};e.prototype.lerpVectors=function(e,t,r){this.x=e.x+(t.x-e.x)*r;this.y=e.y+(t.y-e.y)*r;this.z=e.z+(t.z-e.z)*r;return this};e.prototype.cross=function(e,t){if(t!==undefined){console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(e,t)}return this.crossVectors(this,e)};e.prototype.crossVectors=function(e,t){var r=e.x,n=e.y,i=e.z;var a=t.x,o=t.y,s=t.z;this.x=n*s-i*o;this.y=i*a-r*s;this.z=r*o-n*a;return this};e.prototype.projectOnVector=function(e){var t=e.lengthSq();if(t===0)return this.set(0,0,0);var r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)};e.prototype.projectOnPlane=function(e){vr.copy(this).projectOnVector(e);return this.sub(vr)};e.prototype.reflect=function(e){return this.sub(vr.copy(e).multiplyScalar(2*this.dot(e)))};e.prototype.angleTo=function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;var r=this.dot(e)/t;return Math.acos(nr.clamp(r,-1,1))};e.prototype.distanceTo=function(e){return Math.sqrt(this.distanceToSquared(e))};e.prototype.distanceToSquared=function(e){var t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n};e.prototype.manhattanDistanceTo=function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)};e.prototype.setFromSpherical=function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)};e.prototype.setFromSphericalCoords=function(e,t,r){var n=Math.sin(t)*e;this.x=n*Math.sin(r);this.y=Math.cos(t)*e;this.z=n*Math.cos(r);return this};e.prototype.setFromCylindrical=function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)};e.prototype.setFromCylindricalCoords=function(e,t,r){this.x=e*Math.sin(t);this.y=r;this.z=e*Math.cos(t);return this};e.prototype.setFromMatrixPosition=function(e){var t=e.elements;this.x=t[12];this.y=t[13];this.z=t[14];return this};e.prototype.setFromMatrixScale=function(e){var t=this.setFromMatrixColumn(e,0).length();var r=this.setFromMatrixColumn(e,1).length();var n=this.setFromMatrixColumn(e,2).length();this.x=t;this.y=r;this.z=n;return this};e.prototype.setFromMatrixColumn=function(e,t){return this.fromArray(e.elements,t*4)};e.prototype.setFromMatrix3Column=function(e,t){return this.fromArray(e.elements,t*3)};e.prototype.equals=function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z};e.prototype.fromArray=function(e,t){if(t===void 0){t=0}this.x=e[t];this.y=e[t+1];this.z=e[t+2];return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}e[t]=this.x;e[t+1]=this.y;e[t+2]=this.z;return e};e.prototype.fromBufferAttribute=function(e,t,r){if(r!==undefined){console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute().")}this.x=e.getX(t);this.y=e.getY(t);this.z=e.getZ(t);return this};e.prototype.random=function(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this};return e}();var vr=new pr;var mr=new dr;var gr=function(){function e(e,t){Object.defineProperty(this,"isBox3",{value:true});this.min=e!==undefined?e:new pr(+Infinity,+Infinity,+Infinity);this.max=t!==undefined?t:new pr(-Infinity,-Infinity,-Infinity)}e.prototype.set=function(e,t){this.min.copy(e);this.max.copy(t);return this};e.prototype.setFromArray=function(e){var t=+Infinity;var r=+Infinity;var n=+Infinity;var i=-Infinity;var a=-Infinity;var o=-Infinity;for(var s=0,l=e.length;s<l;s+=3){var u=e[s];var c=e[s+1];var h=e[s+2];if(u<t)t=u;if(c<r)r=c;if(h<n)n=h;if(u>i)i=u;if(c>a)a=c;if(h>o)o=h}this.min.set(t,r,n);this.max.set(i,a,o);return this};e.prototype.setFromBufferAttribute=function(e){var t=+Infinity;var r=+Infinity;var n=+Infinity;var i=-Infinity;var a=-Infinity;var o=-Infinity;for(var s=0,l=e.count;s<l;s++){var u=e.getX(s);var c=e.getY(s);var h=e.getZ(s);if(u<t)t=u;if(c<r)r=c;if(h<n)n=h;if(u>i)i=u;if(c>a)a=c;if(h>o)o=h}this.min.set(t,r,n);this.max.set(i,a,o);return this};e.prototype.setFromPoints=function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++){this.expandByPoint(e[t])}return this};e.prototype.setFromCenterAndSize=function(e,t){var r=_r.copy(t).multiplyScalar(.5);this.min.copy(e).sub(r);this.max.copy(e).add(r);return this};e.prototype.setFromObject=function(e){this.makeEmpty();return this.expandByObject(e)};e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.copy=function(e){this.min.copy(e.min);this.max.copy(e.max);return this};e.prototype.makeEmpty=function(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this};e.prototype.isEmpty=function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z};e.prototype.getCenter=function(e){if(e===undefined){console.warn("THREE.Box3: .getCenter() target is now required");e=new pr}return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)};e.prototype.getSize=function(e){if(e===undefined){console.warn("THREE.Box3: .getSize() target is now required");e=new pr}return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)};e.prototype.expandByPoint=function(e){this.min.min(e);this.max.max(e);return this};e.prototype.expandByVector=function(e){this.min.sub(e);this.max.add(e);return this};e.prototype.expandByScalar=function(e){this.min.addScalar(-e);this.max.addScalar(e);return this};e.prototype.expandByObject=function(e){e.updateWorldMatrix(false,false);var t=e.geometry;if(t!==undefined){if(t.boundingBox===null){t.computeBoundingBox()}br.copy(t.boundingBox);br.applyMatrix4(e.matrixWorld);this.union(br)}var r=e.children;for(var n=0,i=r.length;n<i;n++){this.expandByObject(r[n])}return this};e.prototype.containsPoint=function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?false:true};e.prototype.containsBox=function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z};e.prototype.getParameter=function(e,t){if(t===undefined){console.warn("THREE.Box3: .getParameter() target is now required");t=new pr}return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))};e.prototype.intersectsBox=function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?false:true};e.prototype.intersectsSphere=function(e){this.clampPoint(e.center,_r);return _r.distanceToSquared(e.center)<=e.radius*e.radius};e.prototype.intersectsPlane=function(e){var t,r;if(e.normal.x>0){t=e.normal.x*this.min.x;r=e.normal.x*this.max.x}else{t=e.normal.x*this.max.x;r=e.normal.x*this.min.x}if(e.normal.y>0){t+=e.normal.y*this.min.y;r+=e.normal.y*this.max.y}else{t+=e.normal.y*this.max.y;r+=e.normal.y*this.min.y}if(e.normal.z>0){t+=e.normal.z*this.min.z;r+=e.normal.z*this.max.z}else{t+=e.normal.z*this.max.z;r+=e.normal.z*this.min.z}return t<=-e.constant&&r>=-e.constant};e.prototype.intersectsTriangle=function(e){if(this.isEmpty()){return false}this.getCenter(Ar);Rr.subVectors(this.max,Ar);wr.subVectors(e.a,Ar);Mr.subVectors(e.b,Ar);Sr.subVectors(e.c,Ar);Er.subVectors(Mr,wr);Tr.subVectors(Sr,Mr);Lr.subVectors(wr,Sr);var t=[0,-Er.z,Er.y,0,-Tr.z,Tr.y,0,-Lr.z,Lr.y,Er.z,0,-Er.x,Tr.z,0,-Tr.x,Lr.z,0,-Lr.x,-Er.y,Er.x,0,-Tr.y,Tr.x,0,-Lr.y,Lr.x,0];if(!yr(t,wr,Mr,Sr,Rr)){return false}t=[1,0,0,0,1,0,0,0,1];if(!yr(t,wr,Mr,Sr,Rr)){return false}Pr.crossVectors(Er,Tr);t=[Pr.x,Pr.y,Pr.z];return yr(t,wr,Mr,Sr,Rr)};e.prototype.clampPoint=function(e,t){if(t===undefined){console.warn("THREE.Box3: .clampPoint() target is now required");t=new pr}return t.copy(e).clamp(this.min,this.max)};e.prototype.distanceToPoint=function(e){var t=_r.copy(e).clamp(this.min,this.max);return t.sub(e).length()};e.prototype.getBoundingSphere=function(e){if(e===undefined){console.error("THREE.Box3: .getBoundingSphere() target is now required")}this.getCenter(e.center);e.radius=this.getSize(_r).length()*.5;return e};e.prototype.intersect=function(e){this.min.max(e.min);this.max.min(e.max);if(this.isEmpty())this.makeEmpty();return this};e.prototype.union=function(e){this.min.min(e.min);this.max.max(e.max);return this};e.prototype.applyMatrix4=function(e){if(this.isEmpty())return this;xr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e);xr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e);xr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e);xr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e);xr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e);xr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e);xr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e);xr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e);this.setFromPoints(xr);return this};e.prototype.translate=function(e){this.min.add(e);this.max.add(e);return this};e.prototype.equals=function(e){return e.min.equals(this.min)&&e.max.equals(this.max)};return e}();function yr(e,t,r,n,i){for(var a=0,o=e.length-3;a<=o;a+=3){Cr.fromArray(e,a);var s=i.x*Math.abs(Cr.x)+i.y*Math.abs(Cr.y)+i.z*Math.abs(Cr.z);var l=t.dot(Cr);var u=r.dot(Cr);var c=n.dot(Cr);if(Math.max(-Math.max(l,u,c),Math.min(l,u,c))>s){return false}}return true}var xr=[new pr,new pr,new pr,new pr,new pr,new pr,new pr,new pr];var _r=new pr;var br=new gr;var wr=new pr;var Mr=new pr;var Sr=new pr;var Er=new pr;var Tr=new pr;var Lr=new pr;var Ar=new pr;var Rr=new pr;var Pr=new pr;var Cr=new pr;var Ir=new gr;var Or=function(){function e(e,t){this.center=e!==undefined?e:new pr;this.radius=t!==undefined?t:-1}e.prototype.set=function(e,t){this.center.copy(e);this.radius=t;return this};e.prototype.setFromPoints=function(e,t){var r=this.center;if(t!==undefined){r.copy(t)}else{Ir.setFromPoints(e).getCenter(r)}var n=0;for(var i=0,a=e.length;i<a;i++){n=Math.max(n,r.distanceToSquared(e[i]))}this.radius=Math.sqrt(n);return this};e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.copy=function(e){this.center.copy(e.center);this.radius=e.radius;return this};e.prototype.isEmpty=function(){return this.radius<0};e.prototype.makeEmpty=function(){this.center.set(0,0,0);this.radius=-1;return this};e.prototype.containsPoint=function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius};e.prototype.distanceToPoint=function(e){return e.distanceTo(this.center)-this.radius};e.prototype.intersectsSphere=function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t};e.prototype.intersectsBox=function(e){return e.intersectsSphere(this)};e.prototype.intersectsPlane=function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius};e.prototype.clampPoint=function(e,t){var r=this.center.distanceToSquared(e);if(t===undefined){console.warn("THREE.Sphere: .clampPoint() target is now required");t=new pr}t.copy(e);if(r>this.radius*this.radius){t.sub(this.center).normalize();t.multiplyScalar(this.radius).add(this.center)}return t};e.prototype.getBoundingBox=function(e){if(e===undefined){console.warn("THREE.Sphere: .getBoundingBox() target is now required");e=new gr}if(this.isEmpty()){e.makeEmpty();return e}e.set(this.center,this.center);e.expandByScalar(this.radius);return e};e.prototype.applyMatrix4=function(e){this.center.applyMatrix4(e);this.radius=this.radius*e.getMaxScaleOnAxis();return this};e.prototype.translate=function(e){this.center.add(e);return this};e.prototype.equals=function(e){return e.center.equals(this.center)&&e.radius===this.radius};return e}();var Dr=new pr;var Nr=new pr;var zr=new pr;var Br=new pr;var Hr=new pr;var Fr=new pr;var Ur=new pr;var Gr=function(){function e(e,t){this.origin=e!==undefined?e:new pr;this.direction=t!==undefined?t:new pr(0,0,-1)}e.prototype.set=function(e,t){this.origin.copy(e);this.direction.copy(t);return this};e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.copy=function(e){this.origin.copy(e.origin);this.direction.copy(e.direction);return this};e.prototype.at=function(e,t){if(t===undefined){console.warn("THREE.Ray: .at() target is now required");t=new pr}return t.copy(this.direction).multiplyScalar(e).add(this.origin)};e.prototype.lookAt=function(e){this.direction.copy(e).sub(this.origin).normalize();return this};e.prototype.recast=function(e){this.origin.copy(this.at(e,Dr));return this};e.prototype.closestPointToPoint=function(e,t){if(t===undefined){console.warn("THREE.Ray: .closestPointToPoint() target is now required");t=new pr}t.subVectors(e,this.origin);var r=t.dot(this.direction);if(r<0){return t.copy(this.origin)}return t.copy(this.direction).multiplyScalar(r).add(this.origin)};e.prototype.distanceToPoint=function(e){return Math.sqrt(this.distanceSqToPoint(e))};e.prototype.distanceSqToPoint=function(e){var t=Dr.subVectors(e,this.origin).dot(this.direction);if(t<0){return this.origin.distanceToSquared(e)}Dr.copy(this.direction).multiplyScalar(t).add(this.origin);return Dr.distanceToSquared(e)};e.prototype.distanceSqToSegment=function(e,t,r,n){Nr.copy(e).add(t).multiplyScalar(.5);zr.copy(t).sub(e).normalize();Br.copy(this.origin).sub(Nr);var i=e.distanceTo(t)*.5;var a=-this.direction.dot(zr);var o=Br.dot(this.direction);var s=-Br.dot(zr);var l=Br.lengthSq();var u=Math.abs(1-a*a);var c,h,f,d;if(u>0){c=a*s-o;h=a*o-s;d=i*u;if(c>=0){if(h>=-d){if(h<=d){var p=1/u;c*=p;h*=p;f=c*(c+a*h+2*o)+h*(a*c+h+2*s)+l}else{h=i;c=Math.max(0,-(a*h+o));f=-c*c+h*(h+2*s)+l}}else{h=-i;c=Math.max(0,-(a*h+o));f=-c*c+h*(h+2*s)+l}}else{if(h<=-d){c=Math.max(0,-(-a*i+o));h=c>0?-i:Math.min(Math.max(-i,-s),i);f=-c*c+h*(h+2*s)+l}else if(h<=d){c=0;h=Math.min(Math.max(-i,-s),i);f=h*(h+2*s)+l}else{c=Math.max(0,-(a*i+o));h=c>0?i:Math.min(Math.max(-i,-s),i);f=-c*c+h*(h+2*s)+l}}}else{h=a>0?-i:i;c=Math.max(0,-(a*h+o));f=-c*c+h*(h+2*s)+l}if(r){r.copy(this.direction).multiplyScalar(c).add(this.origin)}if(n){n.copy(zr).multiplyScalar(h).add(Nr)}return f};e.prototype.intersectSphere=function(e,t){Dr.subVectors(e.center,this.origin);var r=Dr.dot(this.direction);var n=Dr.dot(Dr)-r*r;var i=e.radius*e.radius;if(n>i)return null;var a=Math.sqrt(i-n);var o=r-a;var s=r+a;if(o<0&&s<0)return null;if(o<0)return this.at(s,t);return this.at(o,t)};e.prototype.intersectsSphere=function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius};e.prototype.distanceToPlane=function(e){var t=e.normal.dot(this.direction);if(t===0){if(e.distanceToPoint(this.origin)===0){return 0}return null}var r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null};e.prototype.intersectPlane=function(e,t){var r=this.distanceToPlane(e);if(r===null){return null}return this.at(r,t)};e.prototype.intersectsPlane=function(e){var t=e.distanceToPoint(this.origin);if(t===0){return true}var r=e.normal.dot(this.direction);if(r*t<0){return true}return false};e.prototype.intersectBox=function(e,t){var r,n,i,a,o,s;var l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z;var h=this.origin;if(l>=0){r=(e.min.x-h.x)*l;n=(e.max.x-h.x)*l}else{r=(e.max.x-h.x)*l;n=(e.min.x-h.x)*l}if(u>=0){i=(e.min.y-h.y)*u;a=(e.max.y-h.y)*u}else{i=(e.max.y-h.y)*u;a=(e.min.y-h.y)*u}if(r>a||i>n)return null;if(i>r||r!==r)r=i;if(a<n||n!==n)n=a;if(c>=0){o=(e.min.z-h.z)*c;s=(e.max.z-h.z)*c}else{o=(e.max.z-h.z)*c;s=(e.min.z-h.z)*c}if(r>s||o>n)return null;if(o>r||r!==r)r=o;if(s<n||n!==n)n=s;if(n<0)return null;return this.at(r>=0?r:n,t)};e.prototype.intersectsBox=function(e){return this.intersectBox(e,Dr)!==null};e.prototype.intersectTriangle=function(e,t,r,n,i){Hr.subVectors(t,e);Fr.subVectors(r,e);Ur.crossVectors(Hr,Fr);var a=this.direction.dot(Ur);var o;if(a>0){if(n)return null;o=1}else if(a<0){o=-1;a=-a}else{return null}Br.subVectors(this.origin,e);var s=o*this.direction.dot(Fr.crossVectors(Br,Fr));if(s<0){return null}var l=o*this.direction.dot(Hr.cross(Br));if(l<0){return null}if(s+l>a){return null}var u=-o*Br.dot(Ur);if(u<0){return null}return this.at(u/a,i)};e.prototype.applyMatrix4=function(e){this.origin.applyMatrix4(e);this.direction.transformDirection(e);return this};e.prototype.equals=function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)};return e}();var kr=function(){function e(){Object.defineProperty(this,"isMatrix4",{value:true});this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}}e.prototype.set=function(e,t,r,n,i,a,o,s,l,u,c,h,f,d,p,v){var m=this.elements;m[0]=e;m[4]=t;m[8]=r;m[12]=n;m[1]=i;m[5]=a;m[9]=o;m[13]=s;m[2]=l;m[6]=u;m[10]=c;m[14]=h;m[3]=f;m[7]=d;m[11]=p;m[15]=v;return this};e.prototype.identity=function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this};e.prototype.clone=function(){return(new e).fromArray(this.elements)};e.prototype.copy=function(e){var t=this.elements;var r=e.elements;t[0]=r[0];t[1]=r[1];t[2]=r[2];t[3]=r[3];t[4]=r[4];t[5]=r[5];t[6]=r[6];t[7]=r[7];t[8]=r[8];t[9]=r[9];t[10]=r[10];t[11]=r[11];t[12]=r[12];t[13]=r[13];t[14]=r[14];t[15]=r[15];return this};e.prototype.copyPosition=function(e){var t=this.elements,r=e.elements;t[12]=r[12];t[13]=r[13];t[14]=r[14];return this};e.prototype.setFromMatrix3=function(e){var t=e.elements;this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1);return this};e.prototype.extractBasis=function(e,t,r){e.setFromMatrixColumn(this,0);t.setFromMatrixColumn(this,1);r.setFromMatrixColumn(this,2);return this};e.prototype.makeBasis=function(e,t,r){this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1);return this};e.prototype.extractRotation=function(e){var t=this.elements;var r=e.elements;var n=1/Vr.setFromMatrixColumn(e,0).length();var i=1/Vr.setFromMatrixColumn(e,1).length();var a=1/Vr.setFromMatrixColumn(e,2).length();t[0]=r[0]*n;t[1]=r[1]*n;t[2]=r[2]*n;t[3]=0;t[4]=r[4]*i;t[5]=r[5]*i;t[6]=r[6]*i;t[7]=0;t[8]=r[8]*a;t[9]=r[9]*a;t[10]=r[10]*a;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this};e.prototype.makeRotationFromEuler=function(e){if(!(e&&e.isEuler)){console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var t=this.elements;var r=e.x,n=e.y,i=e.z;var a=Math.cos(r),o=Math.sin(r);var s=Math.cos(n),l=Math.sin(n);var u=Math.cos(i),c=Math.sin(i);if(e.order==="XYZ"){var h=a*u,f=a*c,d=o*u,p=o*c;t[0]=s*u;t[4]=-s*c;t[8]=l;t[1]=f+d*l;t[5]=h-p*l;t[9]=-o*s;t[2]=p-h*l;t[6]=d+f*l;t[10]=a*s}else if(e.order==="YXZ"){var v=s*u,m=s*c,g=l*u,y=l*c;t[0]=v+y*o;t[4]=g*o-m;t[8]=a*l;t[1]=a*c;t[5]=a*u;t[9]=-o;t[2]=m*o-g;t[6]=y+v*o;t[10]=a*s}else if(e.order==="ZXY"){var v=s*u,m=s*c,g=l*u,y=l*c;t[0]=v-y*o;t[4]=-a*c;t[8]=g+m*o;t[1]=m+g*o;t[5]=a*u;t[9]=y-v*o;t[2]=-a*l;t[6]=o;t[10]=a*s}else if(e.order==="ZYX"){var h=a*u,f=a*c,d=o*u,p=o*c;t[0]=s*u;t[4]=d*l-f;t[8]=h*l+p;t[1]=s*c;t[5]=p*l+h;t[9]=f*l-d;t[2]=-l;t[6]=o*s;t[10]=a*s}else if(e.order==="YZX"){var x=a*s,_=a*l,b=o*s,w=o*l;t[0]=s*u;t[4]=w-x*c;t[8]=b*c+_;t[1]=c;t[5]=a*u;t[9]=-o*u;t[2]=-l*u;t[6]=_*c+b;t[10]=x-w*c}else if(e.order==="XZY"){var x=a*s,_=a*l,b=o*s,w=o*l;t[0]=s*u;t[4]=-c;t[8]=l*u;t[1]=x*c+w;t[5]=a*u;t[9]=_*c-b;t[2]=b*c-_;t[6]=o*u;t[10]=w*c+x}t[3]=0;t[7]=0;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this};e.prototype.makeRotationFromQuaternion=function(e){return this.compose(jr,e,qr)};e.prototype.lookAt=function(e,t,r){var n=this.elements;Zr.subVectors(e,t);if(Zr.lengthSq()===0){Zr.z=1}Zr.normalize();Xr.crossVectors(r,Zr);if(Xr.lengthSq()===0){if(Math.abs(r.z)===1){Zr.x+=1e-4}else{Zr.z+=1e-4}Zr.normalize();Xr.crossVectors(r,Zr)}Xr.normalize();Yr.crossVectors(Zr,Xr);n[0]=Xr.x;n[4]=Yr.x;n[8]=Zr.x;n[1]=Xr.y;n[5]=Yr.y;n[9]=Zr.y;n[2]=Xr.z;n[6]=Yr.z;n[10]=Zr.z;return this};e.prototype.multiply=function(e,t){if(t!==undefined){console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(e,t)}return this.multiplyMatrices(this,e)};e.prototype.premultiply=function(e){return this.multiplyMatrices(e,this)};e.prototype.multiplyMatrices=function(e,t){var r=e.elements;var n=t.elements;var i=this.elements;var a=r[0],o=r[4],s=r[8],l=r[12];var u=r[1],c=r[5],h=r[9],f=r[13];var d=r[2],p=r[6],v=r[10],m=r[14];var g=r[3],y=r[7],x=r[11],_=r[15];var b=n[0],w=n[4],M=n[8],S=n[12];var E=n[1],T=n[5],L=n[9],A=n[13];var R=n[2],P=n[6],C=n[10],I=n[14];var O=n[3],D=n[7],N=n[11],z=n[15];i[0]=a*b+o*E+s*R+l*O;i[4]=a*w+o*T+s*P+l*D;i[8]=a*M+o*L+s*C+l*N;i[12]=a*S+o*A+s*I+l*z;i[1]=u*b+c*E+h*R+f*O;i[5]=u*w+c*T+h*P+f*D;i[9]=u*M+c*L+h*C+f*N;i[13]=u*S+c*A+h*I+f*z;i[2]=d*b+p*E+v*R+m*O;i[6]=d*w+p*T+v*P+m*D;i[10]=d*M+p*L+v*C+m*N;i[14]=d*S+p*A+v*I+m*z;i[3]=g*b+y*E+x*R+_*O;i[7]=g*w+y*T+x*P+_*D;i[11]=g*M+y*L+x*C+_*N;i[15]=g*S+y*A+x*I+_*z;return this};e.prototype.multiplyScalar=function(e){var t=this.elements;t[0]*=e;t[4]*=e;t[8]*=e;t[12]*=e;t[1]*=e;t[5]*=e;t[9]*=e;t[13]*=e;t[2]*=e;t[6]*=e;t[10]*=e;t[14]*=e;t[3]*=e;t[7]*=e;t[11]*=e;t[15]*=e;return this};e.prototype.determinant=function(){var e=this.elements;var t=e[0],r=e[4],n=e[8],i=e[12];var a=e[1],o=e[5],s=e[9],l=e[13];var u=e[2],c=e[6],h=e[10],f=e[14];var d=e[3],p=e[7],v=e[11],m=e[15];return d*(+i*s*c-n*l*c-i*o*h+r*l*h+n*o*f-r*s*f)+p*(+t*s*f-t*l*h+i*a*h-n*a*f+n*l*u-i*s*u)+v*(+t*l*c-t*o*f-i*a*c+r*a*f+i*o*u-r*l*u)+m*(-n*o*u-t*s*c+t*o*h+n*a*c-r*a*h+r*s*u)};e.prototype.transpose=function(){var e=this.elements;var t;t=e[1];e[1]=e[4];e[4]=t;t=e[2];e[2]=e[8];e[8]=t;t=e[6];e[6]=e[9];e[9]=t;t=e[3];e[3]=e[12];e[12]=t;t=e[7];e[7]=e[13];e[13]=t;t=e[11];e[11]=e[14];e[14]=t;return this};e.prototype.setPosition=function(e,t,r){var n=this.elements;if(e.isVector3){n[12]=e.x;n[13]=e.y;n[14]=e.z}else{n[12]=e;n[13]=t;n[14]=r}return this};e.prototype.invert=function(){var e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c=e[9],h=e[10],f=e[11],d=e[12],p=e[13],v=e[14],m=e[15],g=c*v*l-p*h*l+p*s*f-o*v*f-c*s*m+o*h*m,y=d*h*l-u*v*l-d*s*f+a*v*f+u*s*m-a*h*m,x=u*p*l-d*c*l+d*o*f-a*p*f-u*o*m+a*c*m,_=d*c*s-u*p*s-d*o*h+a*p*h+u*o*v-a*c*v;var b=t*g+r*y+n*x+i*_;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var w=1/b;e[0]=g*w;e[1]=(p*h*i-c*v*i-p*n*f+r*v*f+c*n*m-r*h*m)*w;e[2]=(o*v*i-p*s*i+p*n*l-r*v*l-o*n*m+r*s*m)*w;e[3]=(c*s*i-o*h*i-c*n*l+r*h*l+o*n*f-r*s*f)*w;e[4]=y*w;e[5]=(u*v*i-d*h*i+d*n*f-t*v*f-u*n*m+t*h*m)*w;e[6]=(d*s*i-a*v*i-d*n*l+t*v*l+a*n*m-t*s*m)*w;e[7]=(a*h*i-u*s*i+u*n*l-t*h*l-a*n*f+t*s*f)*w;e[8]=x*w;e[9]=(d*c*i-u*p*i-d*r*f+t*p*f+u*r*m-t*c*m)*w;e[10]=(a*p*i-d*o*i+d*r*l-t*p*l-a*r*m+t*o*m)*w;e[11]=(u*o*i-a*c*i-u*r*l+t*c*l+a*r*f-t*o*f)*w;e[12]=_*w;e[13]=(u*p*n-d*c*n+d*r*h-t*p*h-u*r*v+t*c*v)*w;e[14]=(d*o*n-a*p*n-d*r*s+t*p*s+a*r*v-t*o*v)*w;e[15]=(a*c*n-u*o*n+u*r*s-t*c*s-a*r*h+t*o*h)*w;return this};e.prototype.scale=function(e){var t=this.elements;var r=e.x,n=e.y,i=e.z;t[0]*=r;t[4]*=n;t[8]*=i;t[1]*=r;t[5]*=n;t[9]*=i;t[2]*=r;t[6]*=n;t[10]*=i;t[3]*=r;t[7]*=n;t[11]*=i;return this};e.prototype.getMaxScaleOnAxis=function(){var e=this.elements;var t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];var r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6];var n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))};e.prototype.makeTranslation=function(e,t,r){this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1);return this};e.prototype.makeRotationX=function(e){var t=Math.cos(e),r=Math.sin(e);this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1);return this};e.prototype.makeRotationY=function(e){var t=Math.cos(e),r=Math.sin(e);this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1);return this};e.prototype.makeRotationZ=function(e){var t=Math.cos(e),r=Math.sin(e);this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1);return this};e.prototype.makeRotationAxis=function(e,t){var r=Math.cos(t);var n=Math.sin(t);var i=1-r;var a=e.x,o=e.y,s=e.z;var l=i*a,u=i*o;this.set(l*a+r,l*o-n*s,l*s+n*o,0,l*o+n*s,u*o+r,u*s-n*a,0,l*s-n*o,u*s+n*a,i*s*s+r,0,0,0,0,1);return this};e.prototype.makeScale=function(e,t,r){this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1);return this};e.prototype.makeShear=function(e,t,r){this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1);return this};e.prototype.compose=function(e,t,r){var n=this.elements;var i=t._x,a=t._y,o=t._z,s=t._w;var l=i+i,u=a+a,c=o+o;var h=i*l,f=i*u,d=i*c;var p=a*u,v=a*c,m=o*c;var g=s*l,y=s*u,x=s*c;var _=r.x,b=r.y,w=r.z;n[0]=(1-(p+m))*_;n[1]=(f+x)*_;n[2]=(d-y)*_;n[3]=0;n[4]=(f-x)*b;n[5]=(1-(h+m))*b;n[6]=(v+g)*b;n[7]=0;n[8]=(d+y)*w;n[9]=(v-g)*w;n[10]=(1-(h+p))*w;n[11]=0;n[12]=e.x;n[13]=e.y;n[14]=e.z;n[15]=1;return this};e.prototype.decompose=function(e,t,r){var n=this.elements;var i=Vr.set(n[0],n[1],n[2]).length();var a=Vr.set(n[4],n[5],n[6]).length();var o=Vr.set(n[8],n[9],n[10]).length();var s=this.determinant();if(s<0)i=-i;e.x=n[12];e.y=n[13];e.z=n[14];Wr.copy(this);var l=1/i;var u=1/a;var c=1/o;Wr.elements[0]*=l;Wr.elements[1]*=l;Wr.elements[2]*=l;Wr.elements[4]*=u;Wr.elements[5]*=u;Wr.elements[6]*=u;Wr.elements[8]*=c;Wr.elements[9]*=c;Wr.elements[10]*=c;t.setFromRotationMatrix(Wr);r.x=i;r.y=a;r.z=o;return this};e.prototype.makePerspective=function(e,t,r,n,i,a){if(a===undefined){console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.")}var o=this.elements;var s=2*i/(t-e);var l=2*i/(r-n);var u=(t+e)/(t-e);var c=(r+n)/(r-n);var h=-(a+i)/(a-i);var f=-2*a*i/(a-i);o[0]=s;o[4]=0;o[8]=u;o[12]=0;o[1]=0;o[5]=l;o[9]=c;o[13]=0;o[2]=0;o[6]=0;o[10]=h;o[14]=f;o[3]=0;o[7]=0;o[11]=-1;o[15]=0;return this};e.prototype.makeOrthographic=function(e,t,r,n,i,a){var o=this.elements;var s=1/(t-e);var l=1/(r-n);var u=1/(a-i);var c=(t+e)*s;var h=(r+n)*l;var f=(a+i)*u;o[0]=2*s;o[4]=0;o[8]=0;o[12]=-c;o[1]=0;o[5]=2*l;o[9]=0;o[13]=-h;o[2]=0;o[6]=0;o[10]=-2*u;o[14]=-f;o[3]=0;o[7]=0;o[11]=0;o[15]=1;return this};e.prototype.equals=function(e){var t=this.elements;var r=e.elements;for(var n=0;n<16;n++){if(t[n]!==r[n])return false}return true};e.prototype.fromArray=function(e,t){if(t===void 0){t=0}for(var r=0;r<16;r++){this.elements[r]=e[r+t]}return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}var r=this.elements;e[t]=r[0];e[t+1]=r[1];e[t+2]=r[2];e[t+3]=r[3];e[t+4]=r[4];e[t+5]=r[5];e[t+6]=r[6];e[t+7]=r[7];e[t+8]=r[8];e[t+9]=r[9];e[t+10]=r[10];e[t+11]=r[11];e[t+12]=r[12];e[t+13]=r[13];e[t+14]=r[14];e[t+15]=r[15];return e};return e}();var Vr=new pr;var Wr=new kr;var jr=new pr(0,0,0);var qr=new pr(1,1,1);var Xr=new pr;var Yr=new pr;var Zr=new pr;var Jr=function(){function e(t,r,n,i){if(t===void 0){t=0}if(r===void 0){r=0}if(n===void 0){n=0}if(i===void 0){i=e.DefaultOrder}Object.defineProperty(this,"isEuler",{value:true});this._x=t;this._y=r;this._z=n;this._order=i}Object.defineProperty(e.prototype,"x",{get:function(){return this._x},set:function(e){this._x=e;this._onChangeCallback()},enumerable:false,configurable:true});Object.defineProperty(e.prototype,"y",{get:function(){return this._y},set:function(e){this._y=e;this._onChangeCallback()},enumerable:false,configurable:true});Object.defineProperty(e.prototype,"z",{get:function(){return this._z},set:function(e){this._z=e;this._onChangeCallback()},enumerable:false,configurable:true});Object.defineProperty(e.prototype,"order",{get:function(){return this._order},set:function(e){this._order=e;this._onChangeCallback()},enumerable:false,configurable:true});e.prototype.set=function(e,t,r,n){this._x=e;this._y=t;this._z=r;this._order=n||this._order;this._onChangeCallback();return this};e.prototype.clone=function(){return new this.constructor(this._x,this._y,this._z,this._order)};e.prototype.copy=function(e){this._x=e._x;this._y=e._y;this._z=e._z;this._order=e._order;this._onChangeCallback();return this};e.prototype.setFromRotationMatrix=function(e,t,r){var n=nr.clamp;var i=e.elements;var a=i[0],o=i[4],s=i[8];var l=i[1],u=i[5],c=i[9];var h=i[2],f=i[6],d=i[10];t=t||this._order;switch(t){case"XYZ":this._y=Math.asin(n(s,-1,1));if(Math.abs(s)<.9999999){this._x=Math.atan2(-c,d);this._z=Math.atan2(-o,a)}else{this._x=Math.atan2(f,u);this._z=0}break;case"YXZ":this._x=Math.asin(-n(c,-1,1));if(Math.abs(c)<.9999999){this._y=Math.atan2(s,d);this._z=Math.atan2(l,u)}else{this._y=Math.atan2(-h,a);this._z=0}break;case"ZXY":this._x=Math.asin(n(f,-1,1));if(Math.abs(f)<.9999999){this._y=Math.atan2(-h,d);this._z=Math.atan2(-o,u)}else{this._y=0;this._z=Math.atan2(l,a)}break;case"ZYX":this._y=Math.asin(-n(h,-1,1));if(Math.abs(h)<.9999999){this._x=Math.atan2(f,d);this._z=Math.atan2(l,a)}else{this._x=0;this._z=Math.atan2(-o,u)}break;case"YZX":this._z=Math.asin(n(l,-1,1));if(Math.abs(l)<.9999999){this._x=Math.atan2(-c,u);this._y=Math.atan2(-h,a)}else{this._x=0;this._y=Math.atan2(s,d)}break;case"XZY":this._z=Math.asin(-n(o,-1,1));if(Math.abs(o)<.9999999){this._x=Math.atan2(f,u);this._y=Math.atan2(s,a)}else{this._x=Math.atan2(-c,d);this._y=0}break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}this._order=t;if(r!==false)this._onChangeCallback();return this};e.prototype.setFromQuaternion=function(e,t,r){Qr.makeRotationFromQuaternion(e);return this.setFromRotationMatrix(Qr,t,r)};e.prototype.setFromVector3=function(e,t){return this.set(e.x,e.y,e.z,t||this._order)};e.prototype.reorder=function(e){Kr.setFromEuler(this);return this.setFromQuaternion(Kr,e)};e.prototype.equals=function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order};e.prototype.fromArray=function(e){this._x=e[0];this._y=e[1];this._z=e[2];if(e[3]!==undefined)this._order=e[3];this._onChangeCallback();return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}e[t]=this._x;e[t+1]=this._y;e[t+2]=this._z;e[t+3]=this._order;return e};e.prototype.toVector3=function(e){if(e){return e.set(this._x,this._y,this._z)}else{return new pr(this._x,this._y,this._z)}};e.prototype._onChange=function(e){this._onChangeCallback=e;return this};e.prototype._onChangeCallback=function(){};return e}();Jr.DefaultOrder="XYZ";Jr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var Qr=new kr;var Kr=new dr;var $r=function(){function e(){this.mask=1|0}e.prototype.set=function(e){this.mask=1<<e|0};e.prototype.enable=function(e){this.mask|=1<<e|0};e.prototype.enableAll=function(){this.mask=4294967295|0};e.prototype.toggle=function(e){this.mask^=1<<e|0};e.prototype.disable=function(e){this.mask&=~(1<<e|0)};e.prototype.disableAll=function(){this.mask=0};e.prototype.test=function(e){return(this.mask&e.mask)!==0};return e}();var en=0;var tn=new pr;var rn=new dr;var nn=new kr;var an=new pr;var on=new pr;var sn=new pr;var ln=new dr;var un=new pr(1,0,0);var cn=new pr(0,1,0);var hn=new pr(0,0,1);var fn={type:"added"};var dn={type:"removed"};function pn(){Object.defineProperty(this,"id",{value:en++});this.uuid=nr.generateUUID();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=pn.DefaultUp.clone();var e=new pr;var t=new Jr;var r=new dr;var n=new pr(1,1,1);function i(){r.setFromEuler(t,false)}function a(){t.setFromQuaternion(r,undefined,false)}t._onChange(i);r._onChange(a);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:e},rotation:{configurable:true,enumerable:true,value:t},quaternion:{configurable:true,enumerable:true,value:r},scale:{configurable:true,enumerable:true,value:n},modelViewMatrix:{value:new kr},normalMatrix:{value:new ar}});this.matrix=new kr;this.matrixWorld=new kr;this.matrixAutoUpdate=pn.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new $r;this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.animations=[];this.userData={}}pn.DefaultUp=new pr(0,1,0);pn.DefaultMatrixAutoUpdate=true;pn.prototype=Object.assign(Object.create($t.prototype),{constructor:pn,isObject3D:true,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(e);this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){this.quaternion.premultiply(e);return this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,true)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){rn.setFromAxisAngle(e,t);this.quaternion.multiply(rn);return this},rotateOnWorldAxis:function(e,t){rn.setFromAxisAngle(e,t);this.quaternion.premultiply(rn);return this},rotateX:function(e){return this.rotateOnAxis(un,e)},rotateY:function(e){return this.rotateOnAxis(cn,e)},rotateZ:function(e){return this.rotateOnAxis(hn,e)},translateOnAxis:function(e,t){tn.copy(e).applyQuaternion(this.quaternion);this.position.add(tn.multiplyScalar(t));return this},translateX:function(e){return this.translateOnAxis(un,e)},translateY:function(e){return this.translateOnAxis(cn,e)},translateZ:function(e){return this.translateOnAxis(hn,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(nn.copy(this.matrixWorld).invert())},lookAt:function(e,t,r){if(e.isVector3){an.copy(e)}else{an.set(e,t,r)}var n=this.parent;this.updateWorldMatrix(true,false);on.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){nn.lookAt(on,an,this.up)}else{nn.lookAt(an,on,this.up)}this.quaternion.setFromRotationMatrix(nn);if(n){nn.extractRotation(n.matrixWorld);rn.setFromRotationMatrix(nn);this.quaternion.premultiply(rn.invert())}},add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++){this.add(arguments[t])}return this}if(e===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",e);return this}if(e&&e.isObject3D){if(e.parent!==null){e.parent.remove(e)}e.parent=this;this.children.push(e);e.dispatchEvent(fn)}else{console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e)}return this},remove:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++){this.remove(arguments[t])}return this}var r=this.children.indexOf(e);if(r!==-1){e.parent=null;this.children.splice(r,1);e.dispatchEvent(dn)}return this},clear:function(){for(var e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null;t.dispatchEvent(dn)}this.children.length=0;return this},attach:function(e){this.updateWorldMatrix(true,false);nn.copy(this.matrixWorld).invert();if(e.parent!==null){e.parent.updateWorldMatrix(true,false);nn.multiply(e.parent.matrixWorld)}e.applyMatrix4(nn);e.updateWorldMatrix(false,false);this.add(e);return this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var r=0,n=this.children.length;r<n;r++){var i=this.children[r];var a=i.getObjectByProperty(e,t);if(a!==undefined){return a}}return undefined},getWorldPosition:function(e){if(e===undefined){console.warn("THREE.Object3D: .getWorldPosition() target is now required");e=new pr}this.updateWorldMatrix(true,false);return e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){if(e===undefined){console.warn("THREE.Object3D: .getWorldQuaternion() target is now required");e=new dr}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(on,e,sn);return e},getWorldScale:function(e){if(e===undefined){console.warn("THREE.Object3D: .getWorldScale() target is now required");e=new pr}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(on,ln,e);return e},getWorldDirection:function(e){if(e===undefined){console.warn("THREE.Object3D: .getWorldDirection() target is now required");e=new pr}this.updateWorldMatrix(true,false);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);var t=this.children;for(var r=0,n=t.length;r<n;r++){t[r].traverse(e)}},traverseVisible:function(e){if(this.visible===false)return;e(this);var t=this.children;for(var r=0,n=t.length;r<n;r++){t[r].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;if(t!==null){e(t);t.traverseAncestors(e)}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(e){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;e=true}var t=this.children;for(var r=0,n=t.length;r<n;r++){t[r].updateMatrixWorld(e)}},updateWorldMatrix:function(e,t){var r=this.parent;if(e===true&&r!==null){r.updateWorldMatrix(true,false)}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}if(t===true){var n=this.children;for(var i=0,a=n.length;i<a;i++){n[i].updateWorldMatrix(false,true)}}},toJSON:function(e){var t=e===undefined||typeof e==="string";var r={};if(t){e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}};r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}}var n={};n.uuid=this.uuid;n.type=this.type;if(this.name!=="")n.name=this.name;if(this.castShadow===true)n.castShadow=true;if(this.receiveShadow===true)n.receiveShadow=true;if(this.visible===false)n.visible=false;if(this.frustumCulled===false)n.frustumCulled=false;if(this.renderOrder!==0)n.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=="{}")n.userData=this.userData;n.layers=this.layers.mask;n.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)n.matrixAutoUpdate=false;if(this.isInstancedMesh){n.type="InstancedMesh";n.count=this.count;n.instanceMatrix=this.instanceMatrix.toJSON()}function i(t,r){if(t[r.uuid]===undefined){t[r.uuid]=r.toJSON(e)}return r.uuid}if(this.isMesh||this.isLine||this.isPoints){n.geometry=i(e.geometries,this.geometry);var a=this.geometry.parameters;if(a!==undefined&&a.shapes!==undefined){var o=a.shapes;if(Array.isArray(o)){for(var s=0,l=o.length;s<l;s++){var u=o[s];i(e.shapes,u)}}else{i(e.shapes,o)}}}if(this.isSkinnedMesh){n.bindMode=this.bindMode;n.bindMatrix=this.bindMatrix.toArray();if(this.skeleton!==undefined){i(e.skeletons,this.skeleton);n.skeleton=this.skeleton.uuid}}if(this.material!==undefined){if(Array.isArray(this.material)){var c=[];for(var s=0,l=this.material.length;s<l;s++){c.push(i(e.materials,this.material[s]))}n.material=c}else{n.material=i(e.materials,this.material)}}if(this.children.length>0){n.children=[];for(var s=0;s<this.children.length;s++){n.children.push(this.children[s].toJSON(e).object)}}if(this.animations.length>0){n.animations=[];for(var s=0;s<this.animations.length;s++){var h=this.animations[s];n.animations.push(i(e.animations,h))}}if(t){var f=y(e.geometries);var d=y(e.materials);var p=y(e.textures);var v=y(e.images);var o=y(e.shapes);var m=y(e.skeletons);var g=y(e.animations);if(f.length>0)r.geometries=f;if(d.length>0)r.materials=d;if(p.length>0)r.textures=p;if(v.length>0)r.images=v;if(o.length>0)r.shapes=o;if(m.length>0)r.skeletons=m;if(g.length>0)r.animations=g}r.object=n;return r;function y(e){var t=[];for(var r in e){var n=e[r];delete n.metadata;t.push(n)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(t===void 0){t=true}this.name=e.name;this.up.copy(e.up);this.position.copy(e.position);this.rotation.order=e.rotation.order;this.quaternion.copy(e.quaternion);this.scale.copy(e.scale);this.matrix.copy(e.matrix);this.matrixWorld.copy(e.matrixWorld);this.matrixAutoUpdate=e.matrixAutoUpdate;this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate;this.layers.mask=e.layers.mask;this.visible=e.visible;this.castShadow=e.castShadow;this.receiveShadow=e.receiveShadow;this.frustumCulled=e.frustumCulled;this.renderOrder=e.renderOrder;this.userData=JSON.parse(JSON.stringify(e.userData));if(t===true){for(var r=0;r<e.children.length;r++){var n=e.children[r];this.add(n.clone())}}return this}});var vn=new pr;var mn=new pr;var gn=new ar;var yn=function(){function e(e,t){Object.defineProperty(this,"isPlane",{value:true});this.normal=e!==undefined?e:new pr(1,0,0);this.constant=t!==undefined?t:0}e.prototype.set=function(e,t){this.normal.copy(e);this.constant=t;return this};e.prototype.setComponents=function(e,t,r,n){this.normal.set(e,t,r);this.constant=n;return this};e.prototype.setFromNormalAndCoplanarPoint=function(e,t){this.normal.copy(e);this.constant=-t.dot(this.normal);return this};e.prototype.setFromCoplanarPoints=function(e,t,r){var n=vn.subVectors(r,t).cross(mn.subVectors(e,t)).normalize();this.setFromNormalAndCoplanarPoint(n,e);return this};e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.copy=function(e){this.normal.copy(e.normal);this.constant=e.constant;return this};e.prototype.normalize=function(){var e=1/this.normal.length();this.normal.multiplyScalar(e);this.constant*=e;return this};e.prototype.negate=function(){this.constant*=-1;this.normal.negate();return this};e.prototype.distanceToPoint=function(e){return this.normal.dot(e)+this.constant};e.prototype.distanceToSphere=function(e){return this.distanceToPoint(e.center)-e.radius};e.prototype.projectPoint=function(e,t){if(t===undefined){console.warn("THREE.Plane: .projectPoint() target is now required");t=new pr}return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)};e.prototype.intersectLine=function(e,t){if(t===undefined){console.warn("THREE.Plane: .intersectLine() target is now required");t=new pr}var r=e.delta(vn);var n=this.normal.dot(r);if(n===0){if(this.distanceToPoint(e.start)===0){return t.copy(e.start)}return undefined}var i=-(e.start.dot(this.normal)+this.constant)/n;if(i<0||i>1){return undefined}return t.copy(r).multiplyScalar(i).add(e.start)};e.prototype.intersectsLine=function(e){var t=this.distanceToPoint(e.start);var r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0};e.prototype.intersectsBox=function(e){return e.intersectsPlane(this)};e.prototype.intersectsSphere=function(e){return e.intersectsPlane(this)};e.prototype.coplanarPoint=function(e){if(e===undefined){console.warn("THREE.Plane: .coplanarPoint() target is now required");e=new pr}return e.copy(this.normal).multiplyScalar(-this.constant)};e.prototype.applyMatrix4=function(e,t){var r=t||gn.getNormalMatrix(e);var n=this.coplanarPoint(vn).applyMatrix4(e);var i=this.normal.applyMatrix3(r).normalize();this.constant=-n.dot(i);return this};e.prototype.translate=function(e){this.constant-=e.dot(this.normal);return this};e.prototype.equals=function(e){return e.normal.equals(this.normal)&&e.constant===this.constant};return e}();var xn=new pr;var _n=new pr;var bn=new pr;var wn=new pr;var Mn=new pr;var Sn=new pr;var En=new pr;var Tn=new pr;var Ln=new pr;var An=new pr;var Rn=function(){function e(e,t,r){this.a=e!==undefined?e:new pr;this.b=t!==undefined?t:new pr;this.c=r!==undefined?r:new pr}e.getNormal=function(e,t,r,n){if(n===undefined){console.warn("THREE.Triangle: .getNormal() target is now required");n=new pr}n.subVectors(r,t);xn.subVectors(e,t);n.cross(xn);var i=n.lengthSq();if(i>0){return n.multiplyScalar(1/Math.sqrt(i))}return n.set(0,0,0)};e.getBarycoord=function(e,t,r,n,i){xn.subVectors(n,t);_n.subVectors(r,t);bn.subVectors(e,t);var a=xn.dot(xn);var o=xn.dot(_n);var s=xn.dot(bn);var l=_n.dot(_n);var u=_n.dot(bn);var c=a*l-o*o;if(i===undefined){console.warn("THREE.Triangle: .getBarycoord() target is now required");i=new pr}if(c===0){return i.set(-2,-1,-1)}var h=1/c;var f=(l*s-o*u)*h;var d=(a*u-o*s)*h;return i.set(1-f-d,d,f)};e.containsPoint=function(e,t,r,n){this.getBarycoord(e,t,r,n,wn);return wn.x>=0&&wn.y>=0&&wn.x+wn.y<=1};e.getUV=function(e,t,r,n,i,a,o,s){this.getBarycoord(e,t,r,n,wn);s.set(0,0);s.addScaledVector(i,wn.x);s.addScaledVector(a,wn.y);s.addScaledVector(o,wn.z);return s};e.isFrontFacing=function(e,t,r,n){xn.subVectors(r,t);_n.subVectors(e,t);return xn.cross(_n).dot(n)<0?true:false};e.prototype.set=function(e,t,r){this.a.copy(e);this.b.copy(t);this.c.copy(r);return this};e.prototype.setFromPointsAndIndices=function(e,t,r,n){this.a.copy(e[t]);this.b.copy(e[r]);this.c.copy(e[n]);return this};e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.copy=function(e){this.a.copy(e.a);this.b.copy(e.b);this.c.copy(e.c);return this};e.prototype.getArea=function(){xn.subVectors(this.c,this.b);_n.subVectors(this.a,this.b);return xn.cross(_n).length()*.5};e.prototype.getMidpoint=function(e){if(e===undefined){console.warn("THREE.Triangle: .getMidpoint() target is now required");e=new pr}return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)};e.prototype.getNormal=function(t){return e.getNormal(this.a,this.b,this.c,t)};e.prototype.getPlane=function(e){if(e===undefined){console.warn("THREE.Triangle: .getPlane() target is now required");e=new yn}return e.setFromCoplanarPoints(this.a,this.b,this.c)};e.prototype.getBarycoord=function(t,r){return e.getBarycoord(t,this.a,this.b,this.c,r)};e.prototype.getUV=function(t,r,n,i,a){return e.getUV(t,this.a,this.b,this.c,r,n,i,a)};e.prototype.containsPoint=function(t){return e.containsPoint(t,this.a,this.b,this.c)};e.prototype.isFrontFacing=function(t){return e.isFrontFacing(this.a,this.b,this.c,t)};e.prototype.intersectsBox=function(e){return e.intersectsTriangle(this)};e.prototype.closestPointToPoint=function(e,t){if(t===undefined){console.warn("THREE.Triangle: .closestPointToPoint() target is now required");t=new pr}var r=this.a,n=this.b,i=this.c;var a,o;Mn.subVectors(n,r);Sn.subVectors(i,r);Tn.subVectors(e,r);var s=Mn.dot(Tn);var l=Sn.dot(Tn);if(s<=0&&l<=0){return t.copy(r)}Ln.subVectors(e,n);var u=Mn.dot(Ln);var c=Sn.dot(Ln);if(u>=0&&c<=u){return t.copy(n)}var h=s*c-u*l;if(h<=0&&s>=0&&u<=0){a=s/(s-u);return t.copy(r).addScaledVector(Mn,a)}An.subVectors(e,i);var f=Mn.dot(An);var d=Sn.dot(An);if(d>=0&&f<=d){return t.copy(i)}var p=f*l-s*d;if(p<=0&&l>=0&&d<=0){o=l/(l-d);return t.copy(r).addScaledVector(Sn,o)}var v=u*d-f*c;if(v<=0&&c-u>=0&&f-d>=0){En.subVectors(i,n);o=(c-u)/(c-u+(f-d));return t.copy(n).addScaledVector(En,o)}var m=1/(v+p+h);a=p*m;o=h*m;return t.copy(r).addScaledVector(Mn,a).addScaledVector(Sn,o)};e.prototype.equals=function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)};return e}();var Pn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};var Cn={h:0,s:0,l:0};var In={h:0,s:0,l:0};function On(e,t,r){if(r<0)r+=1;if(r>1)r-=1;if(r<1/6)return e+(t-e)*6*r;if(r<1/2)return t;if(r<2/3)return e+(t-e)*6*(2/3-r);return e}function Dn(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function Nn(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}var zn=function(){function e(e,t,r){Object.defineProperty(this,"isColor",{value:true});if(t===undefined&&r===undefined){return this.set(e)}return this.setRGB(e,t,r)}e.prototype.set=function(e){if(e&&e.isColor){this.copy(e)}else if(typeof e==="number"){this.setHex(e)}else if(typeof e==="string"){this.setStyle(e)}return this};e.prototype.setScalar=function(e){this.r=e;this.g=e;this.b=e;return this};e.prototype.setHex=function(e){e=Math.floor(e);this.r=(e>>16&255)/255;this.g=(e>>8&255)/255;this.b=(e&255)/255;return this};e.prototype.setRGB=function(e,t,r){this.r=e;this.g=t;this.b=r;return this};e.prototype.setHSL=function(e,t,r){e=nr.euclideanModulo(e,1);t=nr.clamp(t,0,1);r=nr.clamp(r,0,1);if(t===0){this.r=this.g=this.b=r}else{var n=r<=.5?r*(1+t):r+t-r*t;var i=2*r-n;this.r=On(i,n,e+1/3);this.g=On(i,n,e);this.b=On(i,n,e-1/3)}return this};e.prototype.setStyle=function(e){function t(t){if(t===undefined)return;if(parseFloat(t)<1){console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}}var r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){var n=void 0;var i=r[1];var a=r[2];switch(i){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){this.r=Math.min(255,parseInt(n[1],10))/255;this.g=Math.min(255,parseInt(n[2],10))/255;this.b=Math.min(255,parseInt(n[3],10))/255;t(n[4]);return this}if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){this.r=Math.min(100,parseInt(n[1],10))/100;this.g=Math.min(100,parseInt(n[2],10))/100;this.b=Math.min(100,parseInt(n[3],10))/100;t(n[4]);return this}break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){var o=parseFloat(n[1])/360;var s=parseInt(n[2],10)/100;var l=parseInt(n[3],10)/100;t(n[4]);return this.setHSL(o,s,l)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){var u=r[1];var c=u.length;if(c===3){this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255;this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255;this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255;return this}else if(c===6){this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255;this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255;this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255;return this}}if(e&&e.length>0){return this.setColorName(e)}return this};e.prototype.setColorName=function(e){var t=Pn[e];if(t!==undefined){this.setHex(t)}else{console.warn("THREE.Color: Unknown color "+e)}return this};e.prototype.clone=function(){return new this.constructor(this.r,this.g,this.b)};e.prototype.copy=function(e){this.r=e.r;this.g=e.g;this.b=e.b;return this};e.prototype.copyGammaToLinear=function(e,t){if(t===void 0){t=2}this.r=Math.pow(e.r,t);this.g=Math.pow(e.g,t);this.b=Math.pow(e.b,t);return this};e.prototype.copyLinearToGamma=function(e,t){if(t===void 0){t=2}var r=t>0?1/t:1;this.r=Math.pow(e.r,r);this.g=Math.pow(e.g,r);this.b=Math.pow(e.b,r);return this};e.prototype.convertGammaToLinear=function(e){this.copyGammaToLinear(this,e);return this};e.prototype.convertLinearToGamma=function(e){this.copyLinearToGamma(this,e);return this};e.prototype.copySRGBToLinear=function(e){this.r=Dn(e.r);this.g=Dn(e.g);this.b=Dn(e.b);return this};e.prototype.copyLinearToSRGB=function(e){this.r=Nn(e.r);this.g=Nn(e.g);this.b=Nn(e.b);return this};e.prototype.convertSRGBToLinear=function(){this.copySRGBToLinear(this);return this};e.prototype.convertLinearToSRGB=function(){this.copyLinearToSRGB(this);return this};e.prototype.getHex=function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0};e.prototype.getHexString=function(){return("000000"+this.getHex().toString(16)).slice(-6)};e.prototype.getHSL=function(e){if(e===undefined){console.warn("THREE.Color: .getHSL() target is now required");e={h:0,s:0,l:0}}var t=this.r,r=this.g,n=this.b;var i=Math.max(t,r,n);var a=Math.min(t,r,n);var o,s;var l=(a+i)/2;if(a===i){o=0;s=0}else{var u=i-a;s=l<=.5?u/(i+a):u/(2-i-a);switch(i){case t:o=(r-n)/u+(r<n?6:0);break;case r:o=(n-t)/u+2;break;case n:o=(t-r)/u+4;break}o/=6}e.h=o;e.s=s;e.l=l;return e};e.prototype.getStyle=function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"};e.prototype.offsetHSL=function(e,t,r){this.getHSL(Cn);Cn.h+=e;Cn.s+=t;Cn.l+=r;this.setHSL(Cn.h,Cn.s,Cn.l);return this};e.prototype.add=function(e){this.r+=e.r;this.g+=e.g;this.b+=e.b;return this};e.prototype.addColors=function(e,t){this.r=e.r+t.r;this.g=e.g+t.g;this.b=e.b+t.b;return this};e.prototype.addScalar=function(e){this.r+=e;this.g+=e;this.b+=e;return this};e.prototype.sub=function(e){this.r=Math.max(0,this.r-e.r);this.g=Math.max(0,this.g-e.g);this.b=Math.max(0,this.b-e.b);return this};e.prototype.multiply=function(e){this.r*=e.r;this.g*=e.g;this.b*=e.b;return this};e.prototype.multiplyScalar=function(e){this.r*=e;this.g*=e;this.b*=e;return this};e.prototype.lerp=function(e,t){this.r+=(e.r-this.r)*t;this.g+=(e.g-this.g)*t;this.b+=(e.b-this.b)*t;return this};e.prototype.lerpColors=function(e,t,r){this.r=e.r+(t.r-e.r)*r;this.g=e.g+(t.g-e.g)*r;this.b=e.b+(t.b-e.b)*r;return this};e.prototype.lerpHSL=function(e,t){this.getHSL(Cn);e.getHSL(In);var r=nr.lerp(Cn.h,In.h,t);var n=nr.lerp(Cn.s,In.s,t);var i=nr.lerp(Cn.l,In.l,t);this.setHSL(r,n,i);return this};e.prototype.equals=function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b};e.prototype.fromArray=function(e,t){if(t===void 0){t=0}this.r=e[t];this.g=e[t+1];this.b=e[t+2];return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}e[t]=this.r;e[t+1]=this.g;e[t+2]=this.b;return e};e.prototype.fromBufferAttribute=function(e,t){this.r=e.getX(t);this.g=e.getY(t);this.b=e.getZ(t);if(e.normalized===true){this.r/=255;this.g/=255;this.b/=255}return this};e.prototype.toJSON=function(){return this.getHex()};return e}();zn.NAMES=Pn;zn.prototype.r=1;zn.prototype.g=1;zn.prototype.b=1;var Bn=function(){function e(e,t,r,n,i,a){if(a===void 0){a=0}this.a=e;this.b=t;this.c=r;this.normal=n&&n.isVector3?n:new pr;this.vertexNormals=Array.isArray(n)?n:[];this.color=i&&i.isColor?i:new zn;this.vertexColors=Array.isArray(i)?i:[];this.materialIndex=a}e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.copy=function(e){this.a=e.a;this.b=e.b;this.c=e.c;this.normal.copy(e.normal);this.color.copy(e.color);this.materialIndex=e.materialIndex;for(var t=0,r=e.vertexNormals.length;t<r;t++){this.vertexNormals[t]=e.vertexNormals[t].clone()}for(var t=0,r=e.vertexColors.length;t<r;t++){this.vertexColors[t]=e.vertexColors[t].clone()}return this};return e}();var Hn=0;function Fn(){Object.defineProperty(this,"id",{value:Hn++});this.uuid=nr.generateUUID();this.name="";this.type="Material";this.fog=true;this.blending=d;this.side=l;this.flatShading=false;this.vertexColors=false;this.opacity=1;this.transparent=false;this.blendSrc=L;this.blendDst=A;this.blendEquation=y;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=B;this.depthTest=true;this.depthWrite=true;this.stencilWriteMask=255;this.stencilFunc=Zt;this.stencilRef=0;this.stencilFuncMask=255;this.stencilFail=Yt;this.stencilZFail=Yt;this.stencilZPass=Yt;this.stencilWrite=false;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.premultipliedAlpha=false;this.visible=true;this.toneMapped=true;this.userData={};this.version=0}Fn.prototype=Object.assign(Object.create($t.prototype),{constructor:Fn,isMaterial:true,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(e===undefined)return;for(var t in e){var r=e[t];if(r===undefined){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=r===h?true:false;continue}var n=this[t];if(n===undefined){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}if(n&&n.isColor){n.set(r)}else if(n&&n.isVector3&&(r&&r.isVector3)){n.copy(r)}else{this[t]=r}}},toJSON:function(e){var t=e===undefined||typeof e==="string";if(t){e={textures:{},images:{}}}var r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};r.uuid=this.uuid;r.type=this.type;if(this.name!=="")r.name=this.name;if(this.color&&this.color.isColor)r.color=this.color.getHex();if(this.roughness!==undefined)r.roughness=this.roughness;if(this.metalness!==undefined)r.metalness=this.metalness;if(this.sheen&&this.sheen.isColor)r.sheen=this.sheen.getHex();if(this.emissive&&this.emissive.isColor)r.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)r.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)r.specular=this.specular.getHex();if(this.shininess!==undefined)r.shininess=this.shininess;if(this.clearcoat!==undefined)r.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)r.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid;r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()}if(this.map&&this.map.isTexture)r.map=this.map.toJSON(e).uuid;if(this.matcap&&this.matcap.isTexture)r.matcap=this.matcap.toJSON(e).uuid;if(this.alphaMap&&this.alphaMap.isTexture)r.alphaMap=this.alphaMap.toJSON(e).uuid;if(this.lightMap&&this.lightMap.isTexture)r.lightMap=this.lightMap.toJSON(e).uuid;if(this.aoMap&&this.aoMap.isTexture){r.aoMap=this.aoMap.toJSON(e).uuid;r.aoMapIntensity=this.aoMapIntensity}if(this.bumpMap&&this.bumpMap.isTexture){r.bumpMap=this.bumpMap.toJSON(e).uuid;r.bumpScale=this.bumpScale}if(this.normalMap&&this.normalMap.isTexture){r.normalMap=this.normalMap.toJSON(e).uuid;r.normalMapType=this.normalMapType;r.normalScale=this.normalScale.toArray()}if(this.displacementMap&&this.displacementMap.isTexture){r.displacementMap=this.displacementMap.toJSON(e).uuid;r.displacementScale=this.displacementScale;r.displacementBias=this.displacementBias}if(this.roughnessMap&&this.roughnessMap.isTexture)r.roughnessMap=this.roughnessMap.toJSON(e).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)r.metalnessMap=this.metalnessMap.toJSON(e).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)r.emissiveMap=this.emissiveMap.toJSON(e).uuid;if(this.specularMap&&this.specularMap.isTexture)r.specularMap=this.specularMap.toJSON(e).uuid;if(this.envMap&&this.envMap.isTexture){r.envMap=this.envMap.toJSON(e).uuid;r.reflectivity=this.reflectivity;r.refractionRatio=this.refractionRatio;if(this.combine!==undefined)r.combine=this.combine;if(this.envMapIntensity!==undefined)r.envMapIntensity=this.envMapIntensity}if(this.gradientMap&&this.gradientMap.isTexture){r.gradientMap=this.gradientMap.toJSON(e).uuid}if(this.size!==undefined)r.size=this.size;if(this.sizeAttenuation!==undefined)r.sizeAttenuation=this.sizeAttenuation;if(this.blending!==d)r.blending=this.blending;if(this.flatShading===true)r.flatShading=this.flatShading;if(this.side!==l)r.side=this.side;if(this.vertexColors)r.vertexColors=true;if(this.opacity<1)r.opacity=this.opacity;if(this.transparent===true)r.transparent=this.transparent;r.depthFunc=this.depthFunc;r.depthTest=this.depthTest;r.depthWrite=this.depthWrite;r.stencilWrite=this.stencilWrite;r.stencilWriteMask=this.stencilWriteMask;r.stencilFunc=this.stencilFunc;r.stencilRef=this.stencilRef;r.stencilFuncMask=this.stencilFuncMask;r.stencilFail=this.stencilFail;r.stencilZFail=this.stencilZFail;r.stencilZPass=this.stencilZPass;if(this.rotation&&this.rotation!==0)r.rotation=this.rotation;if(this.polygonOffset===true)r.polygonOffset=true;if(this.polygonOffsetFactor!==0)r.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)r.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth&&this.linewidth!==1)r.linewidth=this.linewidth;if(this.dashSize!==undefined)r.dashSize=this.dashSize;if(this.gapSize!==undefined)r.gapSize=this.gapSize;if(this.scale!==undefined)r.scale=this.scale;if(this.dithering===true)r.dithering=true;if(this.alphaTest>0)r.alphaTest=this.alphaTest;if(this.premultipliedAlpha===true)r.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)r.wireframe=this.wireframe;if(this.wireframeLinewidth>1)r.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=="round")r.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=="round")r.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)r.morphTargets=true;if(this.morphNormals===true)r.morphNormals=true;if(this.skinning===true)r.skinning=true;if(this.visible===false)r.visible=false;if(this.toneMapped===false)r.toneMapped=false;if(JSON.stringify(this.userData)!=="{}")r.userData=this.userData;function n(e){var t=[];for(var r in e){var n=e[r];delete n.metadata;t.push(n)}return t}if(t){var i=n(e.textures);var a=n(e.images);if(i.length>0)r.textures=i;if(a.length>0)r.images=a}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name;this.fog=e.fog;this.blending=e.blending;this.side=e.side;this.flatShading=e.flatShading;this.vertexColors=e.vertexColors;this.opacity=e.opacity;this.transparent=e.transparent;this.blendSrc=e.blendSrc;this.blendDst=e.blendDst;this.blendEquation=e.blendEquation;this.blendSrcAlpha=e.blendSrcAlpha;this.blendDstAlpha=e.blendDstAlpha;this.blendEquationAlpha=e.blendEquationAlpha;this.depthFunc=e.depthFunc;this.depthTest=e.depthTest;this.depthWrite=e.depthWrite;this.stencilWriteMask=e.stencilWriteMask;this.stencilFunc=e.stencilFunc;this.stencilRef=e.stencilRef;this.stencilFuncMask=e.stencilFuncMask;this.stencilFail=e.stencilFail;this.stencilZFail=e.stencilZFail;this.stencilZPass=e.stencilZPass;this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes;var r=null;if(t!==null){var n=t.length;r=new Array(n);for(var i=0;i!==n;++i){r[i]=t[i].clone()}}this.clippingPlanes=r;this.clipIntersection=e.clipIntersection;this.clipShadows=e.clipShadows;this.shadowSide=e.shadowSide;this.colorWrite=e.colorWrite;this.precision=e.precision;this.polygonOffset=e.polygonOffset;this.polygonOffsetFactor=e.polygonOffsetFactor;this.polygonOffsetUnits=e.polygonOffsetUnits;this.dithering=e.dithering;this.alphaTest=e.alphaTest;this.premultipliedAlpha=e.premultipliedAlpha;this.visible=e.visible;this.toneMapped=e.toneMapped;this.userData=JSON.parse(JSON.stringify(e.userData));return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Fn.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});function Un(e){Fn.call(this);this.type="MeshBasicMaterial";this.color=new zn(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=k;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.setValues(e)}Un.prototype=Object.create(Fn.prototype);Un.prototype.constructor=Un;Un.prototype.isMeshBasicMaterial=true;Un.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;return this};var Gn=new pr;var kn=new ir;function Vn(e,t,r){if(Array.isArray(e)){throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.")}this.name="";this.array=e;this.itemSize=t;this.count=e!==undefined?e.length/t:0;this.normalized=r===true;this.usage=Jt;this.updateRange={offset:0,count:-1};this.version=0}Object.defineProperty(Vn.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});Object.assign(Vn.prototype,{isBufferAttribute:true,onUploadCallback:function(){},setUsage:function(e){this.usage=e;return this},copy:function(e){this.name=e.name;this.array=new e.array.constructor(e.array);this.itemSize=e.itemSize;this.count=e.count;this.normalized=e.normalized;this.usage=e.usage;return this},copyAt:function(e,t,r){e*=this.itemSize;r*=t.itemSize;for(var n=0,i=this.itemSize;n<i;n++){this.array[e+n]=t.array[r+n]}return this},copyArray:function(e){this.array.set(e);return this},copyColorsArray:function(e){var t=this.array;var r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];if(a===undefined){console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n);a=new zn}t[r++]=a.r;t[r++]=a.g;t[r++]=a.b}return this},copyVector2sArray:function(e){var t=this.array;var r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n);a=new ir}t[r++]=a.x;t[r++]=a.y}return this},copyVector3sArray:function(e){var t=this.array;var r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n);a=new pr}t[r++]=a.x;t[r++]=a.y;t[r++]=a.z}return this},copyVector4sArray:function(e){var t=this.array;var r=0;for(var n=0,i=e.length;n<i;n++){var a=e[n];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n);a=new hr}t[r++]=a.x;t[r++]=a.y;t[r++]=a.z;t[r++]=a.w}return this},applyMatrix3:function(e){if(this.itemSize===2){for(var t=0,r=this.count;t<r;t++){kn.fromBufferAttribute(this,t);kn.applyMatrix3(e);this.setXY(t,kn.x,kn.y)}}else if(this.itemSize===3){for(var t=0,r=this.count;t<r;t++){Gn.fromBufferAttribute(this,t);Gn.applyMatrix3(e);this.setXYZ(t,Gn.x,Gn.y,Gn.z)}}return this},applyMatrix4:function(e){for(var t=0,r=this.count;t<r;t++){Gn.x=this.getX(t);Gn.y=this.getY(t);Gn.z=this.getZ(t);Gn.applyMatrix4(e);this.setXYZ(t,Gn.x,Gn.y,Gn.z)}return this},applyNormalMatrix:function(e){for(var t=0,r=this.count;t<r;t++){Gn.x=this.getX(t);Gn.y=this.getY(t);Gn.z=this.getZ(t);Gn.applyNormalMatrix(e);this.setXYZ(t,Gn.x,Gn.y,Gn.z)}return this},transformDirection:function(e){for(var t=0,r=this.count;t<r;t++){Gn.x=this.getX(t);Gn.y=this.getY(t);Gn.z=this.getZ(t);Gn.transformDirection(e);this.setXYZ(t,Gn.x,Gn.y,Gn.z)}return this},set:function(e,t){if(t===void 0){t=0}this.array.set(e,t);return this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){this.array[e*this.itemSize]=t;return this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){this.array[e*this.itemSize+1]=t;return this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){this.array[e*this.itemSize+2]=t;return this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){this.array[e*this.itemSize+3]=t;return this},setXY:function(e,t,r){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=r;return this},setXYZ:function(e,t,r,n){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=r;this.array[e+2]=n;return this},setXYZW:function(e,t,r,n,i){e*=this.itemSize;this.array[e+0]=t;this.array[e+1]=r;this.array[e+2]=n;this.array[e+3]=i;return this},onUpload:function(e){this.onUploadCallback=e;return this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Wn(e,t,r){Vn.call(this,new Int8Array(e),t,r)}Wn.prototype=Object.create(Vn.prototype);Wn.prototype.constructor=Wn;function jn(e,t,r){Vn.call(this,new Uint8Array(e),t,r)}jn.prototype=Object.create(Vn.prototype);jn.prototype.constructor=jn;function qn(e,t,r){Vn.call(this,new Uint8ClampedArray(e),t,r)}qn.prototype=Object.create(Vn.prototype);qn.prototype.constructor=qn;function Xn(e,t,r){Vn.call(this,new Int16Array(e),t,r)}Xn.prototype=Object.create(Vn.prototype);Xn.prototype.constructor=Xn;function Yn(e,t,r){Vn.call(this,new Uint16Array(e),t,r)}Yn.prototype=Object.create(Vn.prototype);Yn.prototype.constructor=Yn;function Zn(e,t,r){Vn.call(this,new Int32Array(e),t,r)}Zn.prototype=Object.create(Vn.prototype);Zn.prototype.constructor=Zn;function Jn(e,t,r){Vn.call(this,new Uint32Array(e),t,r)}Jn.prototype=Object.create(Vn.prototype);Jn.prototype.constructor=Jn;function Qn(e,t,r){Vn.call(this,new Uint16Array(e),t,r)}Qn.prototype=Object.create(Vn.prototype);Qn.prototype.constructor=Qn;Qn.prototype.isFloat16BufferAttribute=true;function Kn(e,t,r){Vn.call(this,new Float32Array(e),t,r)}Kn.prototype=Object.create(Vn.prototype);Kn.prototype.constructor=Kn;function $n(e,t,r){Vn.call(this,new Float64Array(e),t,r)}$n.prototype=Object.create(Vn.prototype);$n.prototype.constructor=$n;function ei(e){if(e.length===0)return-Infinity;var t=e[0];for(var r=1,n=e.length;r<n;++r){if(e[r]>t)t=e[r]}return t}var ti={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!=="undefined"?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ri(e,t){return new ti[e](t)}var ni=0;var ii=new kr;var ai=new pn;var oi=new pr;var si=new gr;var li=new gr;var ui=new pr;function ci(){Object.defineProperty(this,"id",{value:ni++});this.uuid=nr.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=false;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={}}ci.prototype=Object.assign(Object.create($t.prototype),{constructor:ci,isBufferGeometry:true,getIndex:function(){return this.index},setIndex:function(e){if(Array.isArray(e)){this.index=new(ei(e)>65535?Jn:Yn)(e,1)}else{this.index=e}return this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){this.attributes[e]=t;return this},deleteAttribute:function(e){delete this.attributes[e];return this},hasAttribute:function(e){return this.attributes[e]!==undefined},addGroup:function(e,t,r){if(r===void 0){r=0}this.groups.push({start:e,count:t,materialIndex:r})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e;this.drawRange.count=t},applyMatrix4:function(e){var t=this.attributes.position;if(t!==undefined){t.applyMatrix4(e);t.needsUpdate=true}var r=this.attributes.normal;if(r!==undefined){var n=(new ar).getNormalMatrix(e);r.applyNormalMatrix(n);r.needsUpdate=true}var i=this.attributes.tangent;if(i!==undefined){i.transformDirection(e);i.needsUpdate=true}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}return this},rotateX:function(e){ii.makeRotationX(e);this.applyMatrix4(ii);return this},rotateY:function(e){ii.makeRotationY(e);this.applyMatrix4(ii);return this},rotateZ:function(e){ii.makeRotationZ(e);this.applyMatrix4(ii);return this},translate:function(e,t,r){ii.makeTranslation(e,t,r);this.applyMatrix4(ii);return this},scale:function(e,t,r){ii.makeScale(e,t,r);this.applyMatrix4(ii);return this},lookAt:function(e){ai.lookAt(e);ai.updateMatrix();this.applyMatrix4(ai.matrix);return this},center:function(){this.computeBoundingBox();this.boundingBox.getCenter(oi).negate();this.translate(oi.x,oi.y,oi.z);return this},setFromPoints:function(e){var t=[];for(var r=0,n=e.length;r<n;r++){var i=e[r];t.push(i.x,i.y,i.z||0)}this.setAttribute("position",new Kn(t,3));return this},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new gr}var e=this.attributes.position;var t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this);this.boundingBox.set(new pr(-Infinity,-Infinity,-Infinity),new pr(+Infinity,+Infinity,+Infinity));return}if(e!==undefined){this.boundingBox.setFromBufferAttribute(e);if(t){for(var r=0,n=t.length;r<n;r++){var i=t[r];si.setFromBufferAttribute(i);if(this.morphTargetsRelative){ui.addVectors(this.boundingBox.min,si.min);this.boundingBox.expandByPoint(ui);ui.addVectors(this.boundingBox.max,si.max);this.boundingBox.expandByPoint(ui)}else{this.boundingBox.expandByPoint(si.min);this.boundingBox.expandByPoint(si.max)}}}}else{this.boundingBox.makeEmpty()}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new Or}var e=this.attributes.position;var t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this);this.boundingSphere.set(new pr,Infinity);return}if(e){var r=this.boundingSphere.center;si.setFromBufferAttribute(e);if(t){for(var n=0,i=t.length;n<i;n++){var a=t[n];li.setFromBufferAttribute(a);if(this.morphTargetsRelative){ui.addVectors(si.min,li.min);si.expandByPoint(ui);ui.addVectors(si.max,li.max);si.expandByPoint(ui)}else{si.expandByPoint(li.min);si.expandByPoint(li.max)}}}si.getCenter(r);var o=0;for(var n=0,i=e.count;n<i;n++){ui.fromBufferAttribute(e,n);o=Math.max(o,r.distanceToSquared(ui))}if(t){for(var n=0,i=t.length;n<i;n++){var a=t[n];var s=this.morphTargetsRelative;for(var l=0,u=a.count;l<u;l++){ui.fromBufferAttribute(a,l);if(s){oi.fromBufferAttribute(e,l);ui.add(oi)}o=Math.max(o,r.distanceToSquared(ui))}}}this.boundingSphere.radius=Math.sqrt(o);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}},computeFaceNormals:function(){},computeTangents:function(){var e=this.index;var t=this.attributes;if(e===null||t.position===undefined||t.normal===undefined||t.uv===undefined){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}var r=e.array;var n=t.position.array;var i=t.normal.array;var a=t.uv.array;var o=n.length/3;if(t.tangent===undefined){this.setAttribute("tangent",new Vn(new Float32Array(4*o),4))}var s=t.tangent.array;var l=[],u=[];for(var c=0;c<o;c++){l[c]=new pr;u[c]=new pr}var h=new pr,f=new pr,d=new pr,p=new ir,v=new ir,m=new ir,g=new pr,y=new pr;function x(e,t,r){h.fromArray(n,e*3);f.fromArray(n,t*3);d.fromArray(n,r*3);p.fromArray(a,e*2);v.fromArray(a,t*2);m.fromArray(a,r*2);f.sub(h);d.sub(h);v.sub(p);m.sub(p);var i=1/(v.x*m.y-m.x*v.y);if(!isFinite(i))return;g.copy(f).multiplyScalar(m.y).addScaledVector(d,-v.y).multiplyScalar(i);y.copy(d).multiplyScalar(v.x).addScaledVector(f,-m.x).multiplyScalar(i);l[e].add(g);l[t].add(g);l[r].add(g);u[e].add(y);u[t].add(y);u[r].add(y)}var _=this.groups;if(_.length===0){_=[{start:0,count:r.length}]}for(var c=0,b=_.length;c<b;++c){var w=_[c];var M=w.start;var S=w.count;for(var E=M,T=M+S;E<T;E+=3){x(r[E+0],r[E+1],r[E+2])}}var L=new pr,A=new pr;var R=new pr,P=new pr;function C(e){R.fromArray(i,e*3);P.copy(R);var t=l[e];L.copy(t);L.sub(R.multiplyScalar(R.dot(t))).normalize();A.crossVectors(P,t);var r=A.dot(u[e]);var n=r<0?-1:1;s[e*4]=L.x;s[e*4+1]=L.y;s[e*4+2]=L.z;s[e*4+3]=n}for(var c=0,b=_.length;c<b;++c){var w=_[c];var M=w.start;var S=w.count;for(var E=M,T=M+S;E<T;E+=3){C(r[E+0]);C(r[E+1]);C(r[E+2])}}},computeVertexNormals:function(){var e=this.index;var t=this.getAttribute("position");if(t!==undefined){var r=this.getAttribute("normal");if(r===undefined){r=new Vn(new Float32Array(t.count*3),3);this.setAttribute("normal",r)}else{for(var n=0,i=r.count;n<i;n++){r.setXYZ(n,0,0,0)}}var a=new pr,o=new pr,s=new pr;var l=new pr,u=new pr,c=new pr;var h=new pr,f=new pr;if(e){for(var n=0,i=e.count;n<i;n+=3){var d=e.getX(n+0);var p=e.getX(n+1);var v=e.getX(n+2);a.fromBufferAttribute(t,d);o.fromBufferAttribute(t,p);s.fromBufferAttribute(t,v);h.subVectors(s,o);f.subVectors(a,o);h.cross(f);l.fromBufferAttribute(r,d);u.fromBufferAttribute(r,p);c.fromBufferAttribute(r,v);l.add(h);u.add(h);c.add(h);r.setXYZ(d,l.x,l.y,l.z);r.setXYZ(p,u.x,u.y,u.z);r.setXYZ(v,c.x,c.y,c.z)}}else{for(var n=0,i=t.count;n<i;n+=3){a.fromBufferAttribute(t,n+0);o.fromBufferAttribute(t,n+1);s.fromBufferAttribute(t,n+2);h.subVectors(s,o);f.subVectors(a,o);h.cross(f);r.setXYZ(n+0,h.x,h.y,h.z);r.setXYZ(n+1,h.x,h.y,h.z);r.setXYZ(n+2,h.x,h.y,h.z)}}this.normalizeNormals();r.needsUpdate=true}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}if(t===undefined){t=0;console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. "+"Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.")}var r=this.attributes;for(var n in r){if(e.attributes[n]===undefined)continue;var i=r[n];var a=i.array;var o=e.attributes[n];var s=o.array;var l=o.itemSize*t;var u=Math.min(s.length,a.length-l);for(var c=0,h=l;c<u;c++,h++){a[h]=s[c]}}return this},normalizeNormals:function(){var e=this.attributes.normal;for(var t=0,r=e.count;t<r;t++){ui.fromBufferAttribute(e,t);ui.normalize();e.setXYZ(t,ui.x,ui.y,ui.z)}},toNonIndexed:function(){function e(e,t){var r=e.array;var n=e.itemSize;var i=e.normalized;var a=new r.constructor(t.length*n);var o=0,s=0;for(var l=0,u=t.length;l<u;l++){o=t[l]*n;for(var c=0;c<n;c++){a[s++]=r[o++]}}return new Vn(a,n,i)}if(this.index===null){console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.");return this}var t=new ci;var r=this.index.array;var n=this.attributes;for(var i in n){var a=n[i];var o=e(a,r);t.setAttribute(i,o)}var s=this.morphAttributes;for(var i in s){var l=[];var u=s[i];for(var c=0,h=u.length;c<h;c++){var a=u[c];var o=e(a,r);l.push(o)}t.morphAttributes[i]=l}t.morphTargetsRelative=this.morphTargetsRelative;var f=this.groups;for(var c=0,d=f.length;c<d;c++){var p=f[c];t.addGroup(p.start,p.count,p.materialIndex)}return t},toJSON:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};e.uuid=this.uuid;e.type=this.type;if(this.name!=="")e.name=this.name;if(Object.keys(this.userData).length>0)e.userData=this.userData;if(this.parameters!==undefined){var t=this.parameters;for(var r in t){if(t[r]!==undefined)e[r]=t[r]}return e}e.data={attributes:{}};var n=this.index;if(n!==null){e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)}}var i=this.attributes;for(var r in i){var a=i[r];var o=a.toJSON(e.data);if(a.name!=="")o.name=a.name;e.data.attributes[r]=o}var s={};var l=false;for(var r in this.morphAttributes){var u=this.morphAttributes[r];var c=[];for(var h=0,f=u.length;h<f;h++){var a=u[h];var o=a.toJSON(e.data);if(a.name!=="")o.name=a.name;c.push(o)}if(c.length>0){s[r]=c;l=true}}if(l){e.data.morphAttributes=s;e.data.morphTargetsRelative=this.morphTargetsRelative}var d=this.groups;if(d.length>0){e.data.groups=JSON.parse(JSON.stringify(d))}var p=this.boundingSphere;if(p!==null){e.data.boundingSphere={center:p.center.toArray(),radius:p.radius}}return e},clone:function(){return(new ci).copy(this)},copy:function(e){this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;var t={};this.name=e.name;var r=e.index;if(r!==null){this.setIndex(r.clone(t))}var n=e.attributes;for(var i in n){var a=n[i];this.setAttribute(i,a.clone(t))}var o=e.morphAttributes;for(var i in o){var s=[];var l=o[i];for(var u=0,c=l.length;u<c;u++){s.push(l[u].clone(t))}this.morphAttributes[i]=s}this.morphTargetsRelative=e.morphTargetsRelative;var h=e.groups;for(var u=0,c=h.length;u<c;u++){var f=h[u];this.addGroup(f.start,f.count,f.materialIndex)}var d=e.boundingBox;if(d!==null){this.boundingBox=d.clone()}var p=e.boundingSphere;if(p!==null){this.boundingSphere=p.clone()}this.drawRange.start=e.drawRange.start;this.drawRange.count=e.drawRange.count;this.userData=e.userData;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var hi=new kr;var fi=new Gr;var di=new Or;var pi=new pr;var vi=new pr;var mi=new pr;var gi=new pr;var yi=new pr;var xi=new pr;var _i=new pr;var bi=new pr;var wi=new pr;var Mi=new ir;var Si=new ir;var Ei=new ir;var Ti=new pr;var Li=new pr;function Ai(e,t){if(e===void 0){e=new ci}if(t===void 0){t=new Un}pn.call(this);this.type="Mesh";this.geometry=e;this.material=t;this.updateMorphTargets()}Ai.prototype=Object.assign(Object.create(pn.prototype),{constructor:Ai,isMesh:true,copy:function(e){pn.prototype.copy.call(this,e);if(e.morphTargetInfluences!==undefined){this.morphTargetInfluences=e.morphTargetInfluences.slice()}if(e.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)}this.material=e.material;this.geometry=e.geometry;return this},updateMorphTargets:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes;var r=Object.keys(t);if(r.length>0){var n=t[r[0]];if(n!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var i=0,a=n.length;i<a;i++){var o=n[i].name||String(i);this.morphTargetInfluences.push(0);this.morphTargetDictionary[o]=i}}}}else{var s=e.morphTargets;if(s!==undefined&&s.length>0){console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}},raycast:function(e,t){var r=this.geometry;var n=this.material;var i=this.matrixWorld;if(n===undefined)return;if(r.boundingSphere===null)r.computeBoundingSphere();di.copy(r.boundingSphere);di.applyMatrix4(i);if(e.ray.intersectsSphere(di)===false)return;hi.copy(i).invert();fi.copy(e.ray).applyMatrix4(hi);if(r.boundingBox!==null){if(fi.intersectsBox(r.boundingBox)===false)return}var a;if(r.isBufferGeometry){var o=r.index;var s=r.attributes.position;var l=r.morphAttributes.position;var u=r.morphTargetsRelative;var c=r.attributes.uv;var h=r.attributes.uv2;var f=r.groups;var d=r.drawRange;if(o!==null){if(Array.isArray(n)){for(var p=0,v=f.length;p<v;p++){var m=f[p];var g=n[m.materialIndex];var y=Math.max(m.start,d.start);var x=Math.min(m.start+m.count,d.start+d.count);for(var _=y,b=x;_<b;_+=3){var w=o.getX(_);var M=o.getX(_+1);var S=o.getX(_+2);a=Pi(this,g,e,fi,s,l,u,c,h,w,M,S);if(a){a.faceIndex=Math.floor(_/3);a.face.materialIndex=m.materialIndex;t.push(a)}}}}else{var y=Math.max(0,d.start);var x=Math.min(o.count,d.start+d.count);for(var p=y,v=x;p<v;p+=3){var w=o.getX(p);var M=o.getX(p+1);var S=o.getX(p+2);a=Pi(this,n,e,fi,s,l,u,c,h,w,M,S);if(a){a.faceIndex=Math.floor(p/3);t.push(a)}}}}else if(s!==undefined){if(Array.isArray(n)){for(var p=0,v=f.length;p<v;p++){var m=f[p];var g=n[m.materialIndex];var y=Math.max(m.start,d.start);var x=Math.min(m.start+m.count,d.start+d.count);for(var _=y,b=x;_<b;_+=3){var w=_;var M=_+1;var S=_+2;a=Pi(this,g,e,fi,s,l,u,c,h,w,M,S);if(a){a.faceIndex=Math.floor(_/3);a.face.materialIndex=m.materialIndex;t.push(a)}}}}else{var y=Math.max(0,d.start);var x=Math.min(s.count,d.start+d.count);for(var p=y,v=x;p<v;p+=3){var w=p;var M=p+1;var S=p+2;a=Pi(this,n,e,fi,s,l,u,c,h,w,M,S);if(a){a.faceIndex=Math.floor(p/3);t.push(a)}}}}}else if(r.isGeometry){console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function Ri(e,t,r,n,i,a,o,s){var l;if(t.side===u){l=n.intersectTriangle(o,a,i,true,s)}else{l=n.intersectTriangle(i,a,o,t.side!==c,s)}if(l===null)return null;Li.copy(s);Li.applyMatrix4(e.matrixWorld);var h=r.ray.origin.distanceTo(Li);if(h<r.near||h>r.far)return null;return{distance:h,point:Li.clone(),object:e}}function Pi(e,t,r,n,i,a,o,s,l,u,c,h){pi.fromBufferAttribute(i,u);vi.fromBufferAttribute(i,c);mi.fromBufferAttribute(i,h);var f=e.morphTargetInfluences;if(t.morphTargets&&a&&f){_i.set(0,0,0);bi.set(0,0,0);wi.set(0,0,0);for(var d=0,p=a.length;d<p;d++){var v=f[d];var m=a[d];if(v===0)continue;gi.fromBufferAttribute(m,u);yi.fromBufferAttribute(m,c);xi.fromBufferAttribute(m,h);if(o){_i.addScaledVector(gi,v);bi.addScaledVector(yi,v);wi.addScaledVector(xi,v)}else{_i.addScaledVector(gi.sub(pi),v);bi.addScaledVector(yi.sub(vi),v);wi.addScaledVector(xi.sub(mi),v)}}pi.add(_i);vi.add(bi);mi.add(wi)}if(e.isSkinnedMesh){e.boneTransform(u,pi);e.boneTransform(c,vi);e.boneTransform(h,mi)}var g=Ri(e,t,r,n,pi,vi,mi,Ti);if(g){if(s){Mi.fromBufferAttribute(s,u);Si.fromBufferAttribute(s,c);Ei.fromBufferAttribute(s,h);g.uv=Rn.getUV(Ti,pi,vi,mi,Mi,Si,Ei,new ir)}if(l){Mi.fromBufferAttribute(l,u);Si.fromBufferAttribute(l,c);Ei.fromBufferAttribute(l,h);g.uv2=Rn.getUV(Ti,pi,vi,mi,Mi,Si,Ei,new ir)}var y=new Bn(u,c,h);Rn.getNormal(pi,vi,mi,y.normal);g.face=y}return g}var Ci=function(e){__extends(t,e);function t(t,r,n,i,a,o){if(t===void 0){t=1}if(r===void 0){r=1}if(n===void 0){n=1}if(i===void 0){i=1}if(a===void 0){a=1}if(o===void 0){o=1}var s=e.call(this)||this;s.type="BoxGeometry";s.parameters={width:t,height:r,depth:n,widthSegments:i,heightSegments:a,depthSegments:o};var l=s;i=Math.floor(i);a=Math.floor(a);o=Math.floor(o);var u=[];var c=[];var h=[];var f=[];var d=0;var p=0;v("z","y","x",-1,-1,n,r,t,o,a,0);v("z","y","x",1,-1,n,r,-t,o,a,1);v("x","z","y",1,1,t,n,r,i,o,2);v("x","z","y",1,-1,t,n,-r,i,o,3);v("x","y","z",1,-1,t,r,n,i,a,4);v("x","y","z",-1,-1,t,r,-n,i,a,5);s.setIndex(u);s.setAttribute("position",new Kn(c,3));s.setAttribute("normal",new Kn(h,3));s.setAttribute("uv",new Kn(f,2));function v(e,t,r,n,i,a,o,s,v,m,g){var y=a/v;var x=o/m;var _=a/2;var b=o/2;var w=s/2;var M=v+1;var S=m+1;var E=0;var T=0;var L=new pr;for(var A=0;A<S;A++){var R=A*x-b;for(var P=0;P<M;P++){var C=P*y-_;L[e]=C*n;L[t]=R*i;L[r]=w;c.push(L.x,L.y,L.z);L[e]=0;L[t]=0;L[r]=s>0?1:-1;h.push(L.x,L.y,L.z);f.push(P/v);f.push(1-A/m);E+=1}}for(var A=0;A<m;A++){for(var P=0;P<v;P++){var I=d+P+M*A;var O=d+P+M*(A+1);var D=d+(P+1)+M*(A+1);var N=d+(P+1)+M*A;u.push(I,O,N);u.push(O,D,N);T+=6}}l.addGroup(p,T,g);p+=T;d+=E}return s}return t}(ci);function Ii(e){var t={};for(var r in e){t[r]={};for(var n in e[r]){var i=e[r][n];if(i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)){t[r][n]=i.clone()}else if(Array.isArray(i)){t[r][n]=i.slice()}else{t[r][n]=i}}}return t}function Oi(e){var t={};for(var r=0;r<e.length;r++){var n=Ii(e[r]);for(var i in n){t[i]=n[i]}}return t}var Di={clone:Ii,merge:Oi};var Ni="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";var zi="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function Bi(e){Fn.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader=Ni;this.fragmentShader=zi;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.clipping=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.extensions={derivatives:false,fragDepth:false,drawBuffers:false,shaderTextureLOD:false};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;this.glslVersion=null;if(e!==undefined){if(e.attributes!==undefined){console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.")}this.setValues(e)}}Bi.prototype=Object.create(Fn.prototype);Bi.prototype.constructor=Bi;Bi.prototype.isShaderMaterial=true;Bi.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.fragmentShader=e.fragmentShader;this.vertexShader=e.vertexShader;this.uniforms=Ii(e.uniforms);this.defines=Object.assign({},e.defines);this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.lights=e.lights;this.clipping=e.clipping;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;this.extensions=Object.assign({},e.extensions);this.glslVersion=e.glslVersion;return this};Bi.prototype.toJSON=function(e){var t=Fn.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion;t.uniforms={};for(var r in this.uniforms){var n=this.uniforms[r];var i=n.value;if(i&&i.isTexture){t.uniforms[r]={type:"t",value:i.toJSON(e).uuid}}else if(i&&i.isColor){t.uniforms[r]={type:"c",value:i.getHex()}}else if(i&&i.isVector2){t.uniforms[r]={type:"v2",value:i.toArray()}}else if(i&&i.isVector3){t.uniforms[r]={type:"v3",value:i.toArray()}}else if(i&&i.isVector4){t.uniforms[r]={type:"v4",value:i.toArray()}}else if(i&&i.isMatrix3){t.uniforms[r]={type:"m3",value:i.toArray()}}else if(i&&i.isMatrix4){t.uniforms[r]={type:"m4",value:i.toArray()}}else{t.uniforms[r]={value:i}}}if(Object.keys(this.defines).length>0)t.defines=this.defines;t.vertexShader=this.vertexShader;t.fragmentShader=this.fragmentShader;var a={};for(var o in this.extensions){if(this.extensions[o]===true)a[o]=true}if(Object.keys(a).length>0)t.extensions=a;return t};function Hi(){pn.call(this);this.type="Camera";this.matrixWorldInverse=new kr;this.projectionMatrix=new kr;this.projectionMatrixInverse=new kr}Hi.prototype=Object.assign(Object.create(pn.prototype),{constructor:Hi,isCamera:true,copy:function(e,t){pn.prototype.copy.call(this,e,t);this.matrixWorldInverse.copy(e.matrixWorldInverse);this.projectionMatrix.copy(e.projectionMatrix);this.projectionMatrixInverse.copy(e.projectionMatrixInverse);return this},getWorldDirection:function(e){if(e===undefined){console.warn("THREE.Camera: .getWorldDirection() target is now required");e=new pr}this.updateWorldMatrix(true,false);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){pn.prototype.updateMatrixWorld.call(this,e);this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(e,t){pn.prototype.updateWorldMatrix.call(this,e,t);this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}});function Fi(e,t,r,n){if(e===void 0){e=50}if(t===void 0){t=1}if(r===void 0){r=.1}if(n===void 0){n=2e3}Hi.call(this);this.type="PerspectiveCamera";this.fov=e;this.zoom=1;this.near=r;this.far=n;this.focus=10;this.aspect=t;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}Fi.prototype=Object.assign(Object.create(Hi.prototype),{constructor:Fi,isPerspectiveCamera:true,copy:function(e,t){Hi.prototype.copy.call(this,e,t);this.fov=e.fov;this.zoom=e.zoom;this.near=e.near;this.far=e.far;this.focus=e.focus;this.aspect=e.aspect;this.view=e.view===null?null:Object.assign({},e.view);this.filmGauge=e.filmGauge;this.filmOffset=e.filmOffset;return this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=nr.RAD2DEG*2*Math.atan(t);this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(nr.DEG2RAD*.5*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return nr.RAD2DEG*2*Math.atan(Math.tan(nr.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,r,n,i,a){this.aspect=e/t;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}}this.view.enabled=true;this.view.fullWidth=e;this.view.fullHeight=t;this.view.offsetX=r;this.view.offsetY=n;this.view.width=i;this.view.height=a;this.updateProjectionMatrix()},clearViewOffset:function(){if(this.view!==null){this.view.enabled=false}this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near;var t=e*Math.tan(nr.DEG2RAD*.5*this.fov)/this.zoom;var r=2*t;var n=this.aspect*r;var i=-.5*n;var a=this.view;if(this.view!==null&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*n/o;t-=a.offsetY*r/s;n*=a.width/o;r*=a.height/s}var l=this.filmOffset;if(l!==0)i+=e*l/this.getFilmWidth();this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){var t=pn.prototype.toJSON.call(this,e);t.object.fov=this.fov;t.object.zoom=this.zoom;t.object.near=this.near;t.object.far=this.far;t.object.focus=this.focus;t.object.aspect=this.aspect;if(this.view!==null)t.object.view=Object.assign({},this.view);t.object.filmGauge=this.filmGauge;t.object.filmOffset=this.filmOffset;return t}});var Ui=90,Gi=1;function ki(e,t,r){pn.call(this);this.type="CubeCamera";if(r.isWebGLCubeRenderTarget!==true){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=r;var n=new Fi(Ui,Gi,e,t);n.layers=this.layers;n.up.set(0,-1,0);n.lookAt(new pr(1,0,0));this.add(n);var i=new Fi(Ui,Gi,e,t);i.layers=this.layers;i.up.set(0,-1,0);i.lookAt(new pr(-1,0,0));this.add(i);var a=new Fi(Ui,Gi,e,t);a.layers=this.layers;a.up.set(0,0,1);a.lookAt(new pr(0,1,0));this.add(a);var o=new Fi(Ui,Gi,e,t);o.layers=this.layers;o.up.set(0,0,-1);o.lookAt(new pr(0,-1,0));this.add(o);var s=new Fi(Ui,Gi,e,t);s.layers=this.layers;s.up.set(0,-1,0);s.lookAt(new pr(0,0,1));this.add(s);var l=new Fi(Ui,Gi,e,t);l.layers=this.layers;l.up.set(0,-1,0);l.lookAt(new pr(0,0,-1));this.add(l);this.update=function(e,t){if(this.parent===null)this.updateMatrixWorld();var u=e.xr.enabled;var c=e.getRenderTarget();e.xr.enabled=false;var h=r.texture.generateMipmaps;r.texture.generateMipmaps=false;e.setRenderTarget(r,0);e.render(t,n);e.setRenderTarget(r,1);e.render(t,i);e.setRenderTarget(r,2);e.render(t,a);e.setRenderTarget(r,3);e.render(t,o);e.setRenderTarget(r,4);e.render(t,s);r.texture.generateMipmaps=h;e.setRenderTarget(r,5);e.render(t,l);e.setRenderTarget(c);e.xr.enabled=u}}ki.prototype=Object.create(pn.prototype);ki.prototype.constructor=ki;function Vi(e,t,r,n,i,a,o,s,l,u){e=e!==undefined?e:[];t=t!==undefined?t:K;o=o!==undefined?o:Te;ur.call(this,e,t,r,n,i,a,o,s,l,u);this.flipY=false;this._needsFlipEnvMap=true}Vi.prototype=Object.create(ur.prototype);Vi.prototype.constructor=Vi;Vi.prototype.isCubeTexture=true;Object.defineProperty(Vi.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});var Wi=function(e){__extends(t,e);function t(t,r,n){var i=this;if(Number.isInteger(r)){console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )");r=n}i=e.call(this,t,t,r)||this;Object.defineProperty(i,"isWebGLCubeRenderTarget",{value:true});r=r||{};i.texture=new Vi(undefined,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding);i.texture._needsFlipEnvMap=false;return i}t.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type;this.texture.format=Le;this.texture.encoding=t.encoding;this.texture.generateMipmaps=t.generateMipmaps;this.texture.minFilter=t.minFilter;this.texture.magFilter=t.magFilter;var r={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"};var n=new Ci(5,5,5);var i=new Bi({name:"CubemapFromEquirect",uniforms:Ii(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:u,blending:f});i.uniforms.tEquirect.value=t;var a=new Ai(n,i);var o=t.minFilter;if(t.minFilter===fe)t.minFilter=ce;var s=new ki(1,10,this);s.update(e,a);t.minFilter=o;a.geometry.dispose();a.material.dispose();return this};t.prototype.clear=function(e,t,r,n){var i=e.getRenderTarget();for(var a=0;a<6;a++){e.setRenderTarget(this,a);e.clear(t,r,n)}e.setRenderTarget(i)};return t}(fr);function ji(e,t,r,n,i,a,o,s,l,u,c,h){ur.call(this,null,a,o,s,l,u,n,i,c,h);this.image={data:e||null,width:t||1,height:r||1};this.magFilter=l!==undefined?l:se;this.minFilter=u!==undefined?u:se;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true}ji.prototype=Object.create(ur.prototype);ji.prototype.constructor=ji;ji.prototype.isDataTexture=true;var qi=new Or;var Xi=new pr;var Yi=function(){function e(e,t,r,n,i,a){this.planes=[e!==undefined?e:new yn,t!==undefined?t:new yn,r!==undefined?r:new yn,n!==undefined?n:new yn,i!==undefined?i:new yn,a!==undefined?a:new yn]}e.prototype.set=function(e,t,r,n,i,a){var o=this.planes;o[0].copy(e);o[1].copy(t);o[2].copy(r);o[3].copy(n);o[4].copy(i);o[5].copy(a);return this};e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.copy=function(e){var t=this.planes;for(var r=0;r<6;r++){t[r].copy(e.planes[r])}return this};e.prototype.setFromProjectionMatrix=function(e){var t=this.planes;var r=e.elements;var n=r[0],i=r[1],a=r[2],o=r[3];var s=r[4],l=r[5],u=r[6],c=r[7];var h=r[8],f=r[9],d=r[10],p=r[11];var v=r[12],m=r[13],g=r[14],y=r[15];t[0].setComponents(o-n,c-s,p-h,y-v).normalize();t[1].setComponents(o+n,c+s,p+h,y+v).normalize();t[2].setComponents(o+i,c+l,p+f,y+m).normalize();t[3].setComponents(o-i,c-l,p-f,y-m).normalize();t[4].setComponents(o-a,c-u,p-d,y-g).normalize();t[5].setComponents(o+a,c+u,p+d,y+g).normalize();return this};e.prototype.intersectsObject=function(e){var t=e.geometry;if(t.boundingSphere===null)t.computeBoundingSphere();qi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);return this.intersectsSphere(qi)};e.prototype.intersectsSprite=function(e){qi.center.set(0,0,0);qi.radius=.7071067811865476;qi.applyMatrix4(e.matrixWorld);return this.intersectsSphere(qi)};e.prototype.intersectsSphere=function(e){var t=this.planes;var r=e.center;var n=-e.radius;for(var i=0;i<6;i++){var a=t[i].distanceToPoint(r);if(a<n){return false}}return true};e.prototype.intersectsBox=function(e){var t=this.planes;for(var r=0;r<6;r++){var n=t[r];Xi.x=n.normal.x>0?e.max.x:e.min.x;Xi.y=n.normal.y>0?e.max.y:e.min.y;Xi.z=n.normal.z>0?e.max.z:e.min.z;if(n.distanceToPoint(Xi)<0){return false}}return true};e.prototype.containsPoint=function(e){var t=this.planes;for(var r=0;r<6;r++){if(t[r].distanceToPoint(e)<0){return false}}return true};return e}();function Zi(){var e=null;var t=false;var r=null;var n=null;function i(t,a){r(t,a);n=e.requestAnimationFrame(i)}return{start:function(){if(t===true)return;if(r===null)return;n=e.requestAnimationFrame(i);t=true},stop:function(){e.cancelAnimationFrame(n);t=false},setAnimationLoop:function(e){r=e},setContext:function(t){e=t}}}function Ji(e,t){var r=t.isWebGL2;var n=new WeakMap;function i(t,n){var i=t.array;var a=t.usage;var o=e.createBuffer();e.bindBuffer(n,o);e.bufferData(n,i,a);t.onUploadCallback();var s=5126;if(i instanceof Float32Array){s=5126}else if(i instanceof Float64Array){console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.")}else if(i instanceof Uint16Array){if(t.isFloat16BufferAttribute){if(r){s=5131}else{console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}}else{s=5123}}else if(i instanceof Int16Array){s=5122}else if(i instanceof Uint32Array){s=5125}else if(i instanceof Int32Array){s=5124}else if(i instanceof Int8Array){s=5120}else if(i instanceof Uint8Array){s=5121}return{buffer:o,type:s,bytesPerElement:i.BYTES_PER_ELEMENT,version:t.version}}function a(t,n,i){var a=n.array;var o=n.updateRange;e.bindBuffer(i,t);if(o.count===-1){e.bufferSubData(i,0,a)}else{if(r){e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count)}else{e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count))}o.count=-1}}function o(e){if(e.isInterleavedBufferAttribute)e=e.data;return n.get(e)}function s(t){if(t.isInterleavedBufferAttribute)t=t.data;var r=n.get(t);if(r){e.deleteBuffer(r.buffer);n.delete(t)}}function l(e,t){if(e.isGLBufferAttribute){var r=n.get(e);if(!r||r.version<e.version){n.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version})}return}if(e.isInterleavedBufferAttribute)e=e.data;var o=n.get(e);if(o===undefined){n.set(e,i(e,t))}else if(o.version<e.version){a(o.buffer,e,t);o.version=e.version}}return{get:o,remove:s,update:l}}var Qi=function(e){__extends(t,e);function t(t,r,n,i){if(t===void 0){t=1}if(r===void 0){r=1}if(n===void 0){n=1}if(i===void 0){i=1}var a=e.call(this)||this;a.type="PlaneGeometry";a.parameters={width:t,height:r,widthSegments:n,heightSegments:i};var o=t/2;var s=r/2;var l=Math.floor(n);var u=Math.floor(i);var c=l+1;var h=u+1;var f=t/l;var d=r/u;var p=[];var v=[];var m=[];var g=[];for(var y=0;y<h;y++){var x=y*d-s;for(var _=0;_<c;_++){var b=_*f-o;v.push(b,-x,0);m.push(0,0,1);g.push(_/l);g.push(1-y/u)}}for(var y=0;y<u;y++){for(var _=0;_<l;_++){var w=_+c*y;var M=_+c*(y+1);var S=_+1+c*(y+1);var E=_+1+c*y;p.push(w,M,E);p.push(M,S,E)}}a.setIndex(p);a.setAttribute("position",new Kn(v,3));a.setAttribute("normal",new Kn(m,3));a.setAttribute("uv",new Kn(g,2));return a}return t}(ci);var Ki="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif";var $i="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";var ea="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif";var ta="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif";var ra="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";var na="vec3 transformed = vec3( position );";var ia="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif";var aa="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif";var oa="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif";var sa="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif";var la="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif";var ua="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif";var ca="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif";var ha="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif";var fa="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";var da="#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif";var pa="#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif";var va="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}";var ma="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif";var ga="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif";var ya="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif";var xa="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif";var _a="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif";var ba="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif";var wa="gl_FragColor = linearToOutputTexel( gl_FragColor );";var Ma="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}";var Sa="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif";var Ea="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif";var Ta="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif";var La="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif";var Aa="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif";var Ra="#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif";var Pa="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif";var Ca="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif";var Ia="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";var Oa="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}";var Da="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif";var Na="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";var za="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif";var Ba="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif";var Ha="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif";var Fa="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;";var Ua="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)";var Ga="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";var ka="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)";var Va="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif";var Wa="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}";var ja="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif";var qa="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif";var Xa="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif";var Ya="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif";var Za="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif";var Ja="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif";var Qa="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif";var Ka="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif";var $a="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif";var eo="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif";var to="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";var ro="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif";var no="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";var io="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif";var ao="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";var oo="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif";var so="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;";var lo="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif";var uo="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif";var co="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif";var ho="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif";var fo="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif";var po="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}";var vo="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif";var mo="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;";var go="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif";var yo="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif";var xo="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif";var _o="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";var bo="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif";var wo="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif";var Mo="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif";var So="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}";var Eo="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";var To="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif";var Lo="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif";var Ao="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif";var Ro="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";var Po="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";var Co="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif";var Io="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }";var Oo="#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif";var Do="#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif";var No="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif";var zo="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif";var Bo="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif";var Ho="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";var Fo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif";var Uo="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif";var Go="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";var ko="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var Vo="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}";var Wo="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var jo="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}";var qo="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}";var Xo="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}";var Yo="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}";var Zo="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}";var Jo="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";var Qo="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}";var Ko="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";var $o="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";var es="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var ts="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}";var rs="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var ns="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var is="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var as="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}";var os="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var ss="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var ls="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var us="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var cs="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";var hs="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var fs="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}";var ds="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}";var ps="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";var vs="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}";var ms="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";var gs="#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";var ys="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";var xs="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";var _s={alphamap_fragment:Ki,alphamap_pars_fragment:$i,alphatest_fragment:ea,aomap_fragment:ta,aomap_pars_fragment:ra,begin_vertex:na,beginnormal_vertex:ia,bsdfs:aa,bumpmap_pars_fragment:oa,clipping_planes_fragment:sa,clipping_planes_pars_fragment:la,clipping_planes_pars_vertex:ua,clipping_planes_vertex:ca,color_fragment:ha,color_pars_fragment:fa,color_pars_vertex:da,color_vertex:pa,common:va,cube_uv_reflection_fragment:ma,defaultnormal_vertex:ga,displacementmap_pars_vertex:ya,displacementmap_vertex:xa,emissivemap_fragment:_a,emissivemap_pars_fragment:ba,encodings_fragment:wa,encodings_pars_fragment:Ma,envmap_fragment:Sa,envmap_common_pars_fragment:Ea,envmap_pars_fragment:Ta,envmap_pars_vertex:La,envmap_physical_pars_fragment:Ha,envmap_vertex:Aa,fog_vertex:Ra,fog_pars_vertex:Pa,fog_fragment:Ca,fog_pars_fragment:Ia,gradientmap_pars_fragment:Oa,lightmap_fragment:Da,lightmap_pars_fragment:Na,lights_lambert_vertex:za,lights_pars_begin:Ba,lights_toon_fragment:Fa,lights_toon_pars_fragment:Ua,lights_phong_fragment:Ga,lights_phong_pars_fragment:ka,lights_physical_fragment:Va,lights_physical_pars_fragment:Wa,lights_fragment_begin:ja,lights_fragment_maps:qa,lights_fragment_end:Xa,logdepthbuf_fragment:Ya,logdepthbuf_pars_fragment:Za,logdepthbuf_pars_vertex:Ja,logdepthbuf_vertex:Qa,map_fragment:Ka,map_pars_fragment:$a,map_particle_fragment:eo,map_particle_pars_fragment:to,metalnessmap_fragment:ro,metalnessmap_pars_fragment:no,morphnormal_vertex:io,morphtarget_pars_vertex:ao,morphtarget_vertex:oo,normal_fragment_begin:so,normal_fragment_maps:lo,normalmap_pars_fragment:uo,clearcoat_normal_fragment_begin:co,clearcoat_normal_fragment_maps:ho,clearcoat_pars_fragment:fo,packing:po,premultiplied_alpha_fragment:vo,project_vertex:mo,dithering_fragment:go,dithering_pars_fragment:yo,roughnessmap_fragment:xo,roughnessmap_pars_fragment:_o,shadowmap_pars_fragment:bo,shadowmap_pars_vertex:wo,shadowmap_vertex:Mo,shadowmask_pars_fragment:So,skinbase_vertex:Eo,skinning_pars_vertex:To,skinning_vertex:Lo,skinnormal_vertex:Ao,specularmap_fragment:Ro,specularmap_pars_fragment:Po,tonemapping_fragment:Co,tonemapping_pars_fragment:Io,transmissionmap_fragment:Oo,transmissionmap_pars_fragment:Do,uv_pars_fragment:No,uv_pars_vertex:zo,uv_vertex:Bo,uv2_pars_fragment:Ho,uv2_pars_vertex:Fo,uv2_vertex:Uo,worldpos_vertex:Go,background_frag:ko,background_vert:Vo,cube_frag:Wo,cube_vert:jo,depth_frag:qo,depth_vert:Xo,distanceRGBA_frag:Yo,distanceRGBA_vert:Zo,equirect_frag:Jo,equirect_vert:Qo,linedashed_frag:Ko,linedashed_vert:$o,meshbasic_frag:es,meshbasic_vert:ts,meshlambert_frag:rs,meshlambert_vert:ns,meshmatcap_frag:is,meshmatcap_vert:as,meshtoon_frag:os,meshtoon_vert:ss,meshphong_frag:ls,meshphong_vert:us,meshphysical_frag:cs,meshphysical_vert:hs,normal_frag:fs,normal_vert:ds,points_frag:ps,points_vert:vs,shadow_frag:ms,shadow_vert:gs,sprite_frag:ys,sprite_vert:xs};var bs={common:{diffuse:{value:new zn(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ar},uv2Transform:{value:new ar},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ir(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new zn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new zn(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ar}},sprite:{diffuse:{value:new zn(15658734)},opacity:{value:1},center:{value:new ir(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ar}}};var ws={basic:{uniforms:Oi([bs.common,bs.specularmap,bs.envmap,bs.aomap,bs.lightmap,bs.fog]),vertexShader:_s.meshbasic_vert,fragmentShader:_s.meshbasic_frag},lambert:{uniforms:Oi([bs.common,bs.specularmap,bs.envmap,bs.aomap,bs.lightmap,bs.emissivemap,bs.fog,bs.lights,{emissive:{value:new zn(0)}}]),vertexShader:_s.meshlambert_vert,fragmentShader:_s.meshlambert_frag},phong:{uniforms:Oi([bs.common,bs.specularmap,bs.envmap,bs.aomap,bs.lightmap,bs.emissivemap,bs.bumpmap,bs.normalmap,bs.displacementmap,bs.fog,bs.lights,{emissive:{value:new zn(0)},specular:{value:new zn(1118481)},shininess:{value:30}}]),vertexShader:_s.meshphong_vert,fragmentShader:_s.meshphong_frag},standard:{uniforms:Oi([bs.common,bs.envmap,bs.aomap,bs.lightmap,bs.emissivemap,bs.bumpmap,bs.normalmap,bs.displacementmap,bs.roughnessmap,bs.metalnessmap,bs.fog,bs.lights,{emissive:{value:new zn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:_s.meshphysical_vert,fragmentShader:_s.meshphysical_frag},toon:{uniforms:Oi([bs.common,bs.aomap,bs.lightmap,bs.emissivemap,bs.bumpmap,bs.normalmap,bs.displacementmap,bs.gradientmap,bs.fog,bs.lights,{emissive:{value:new zn(0)}}]),vertexShader:_s.meshtoon_vert,fragmentShader:_s.meshtoon_frag},matcap:{uniforms:Oi([bs.common,bs.bumpmap,bs.normalmap,bs.displacementmap,bs.fog,{matcap:{value:null}}]),vertexShader:_s.meshmatcap_vert,fragmentShader:_s.meshmatcap_frag},points:{uniforms:Oi([bs.points,bs.fog]),vertexShader:_s.points_vert,fragmentShader:_s.points_frag},dashed:{uniforms:Oi([bs.common,bs.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:_s.linedashed_vert,fragmentShader:_s.linedashed_frag},depth:{uniforms:Oi([bs.common,bs.displacementmap]),vertexShader:_s.depth_vert,fragmentShader:_s.depth_frag},normal:{uniforms:Oi([bs.common,bs.bumpmap,bs.normalmap,bs.displacementmap,{opacity:{value:1}}]),vertexShader:_s.normal_vert,fragmentShader:_s.normal_frag},sprite:{uniforms:Oi([bs.sprite,bs.fog]),vertexShader:_s.sprite_vert,fragmentShader:_s.sprite_frag},background:{uniforms:{uvTransform:{value:new ar},t2D:{value:null}},vertexShader:_s.background_vert,fragmentShader:_s.background_frag},cube:{uniforms:Oi([bs.envmap,{opacity:{value:1}}]),vertexShader:_s.cube_vert,fragmentShader:_s.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:_s.equirect_vert,fragmentShader:_s.equirect_frag},distanceRGBA:{uniforms:Oi([bs.common,bs.displacementmap,{referencePosition:{value:new pr},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:_s.distanceRGBA_vert,fragmentShader:_s.distanceRGBA_frag},shadow:{uniforms:Oi([bs.lights,bs.fog,{color:{value:new zn(0)},opacity:{value:1}}]),vertexShader:_s.shadow_vert,fragmentShader:_s.shadow_frag}};ws.physical={uniforms:Oi([ws.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ir(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new zn(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:_s.meshphysical_vert,fragmentShader:_s.meshphysical_frag};function Ms(e,t,r,n,i){var a=new zn(0);var o=0;var s;var c;var h=null;var f=0;var d=null;function p(r,i,p,m){var g=i.isScene===true?i.background:null;if(g&&g.isTexture){g=t.get(g)}var y=e.xr;var x=y.getSession&&y.getSession();if(x&&x.environmentBlendMode==="additive"){g=null}if(g===null){v(a,o)}else if(g&&g.isColor){v(g,1);m=true}if(e.autoClear||m){e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil)}if(g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||g.mapping===re)){if(c===undefined){c=new Ai(new Ci(1,1,1),new Bi({name:"BackgroundCubeMaterial",uniforms:Ii(ws.cube.uniforms),vertexShader:ws.cube.vertexShader,fragmentShader:ws.cube.fragmentShader,side:u,depthTest:false,depthWrite:false,fog:false}));c.geometry.deleteAttribute("normal");c.geometry.deleteAttribute("uv");c.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)};Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}});n.update(c)}if(g.isWebGLCubeRenderTarget){g=g.texture}c.material.uniforms.envMap.value=g;c.material.uniforms.flipEnvMap.value=g.isCubeTexture&&g._needsFlipEnvMap?-1:1;if(h!==g||f!==g.version||d!==e.toneMapping){c.material.needsUpdate=true;h=g;f=g.version;d=e.toneMapping}r.unshift(c,c.geometry,c.material,0,0,null)}else if(g&&g.isTexture){if(s===undefined){s=new Ai(new Qi(2,2),new Bi({name:"BackgroundMaterial",uniforms:Ii(ws.background.uniforms),vertexShader:ws.background.vertexShader,fragmentShader:ws.background.fragmentShader,side:l,depthTest:false,depthWrite:false,fog:false}));s.geometry.deleteAttribute("normal");Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}});n.update(s)}s.material.uniforms.t2D.value=g;if(g.matrixAutoUpdate===true){g.updateMatrix()}s.material.uniforms.uvTransform.value.copy(g.matrix);if(h!==g||f!==g.version||d!==e.toneMapping){s.material.needsUpdate=true;h=g;f=g.version;d=e.toneMapping}r.unshift(s,s.geometry,s.material,0,0,null)}}function v(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,i)}return{getClearColor:function(){return a},setClearColor:function(e,t){if(t===void 0){t=1}a.set(e);o=t;v(a,o)},getClearAlpha:function(){return o},setClearAlpha:function(e){o=e;v(a,o)},render:p}}function Ss(e,t,r,n){var i=e.getParameter(34921);var a=n.isWebGL2?null:t.get("OES_vertex_array_object");var o=n.isWebGL2||a!==null;var s={};var l=v(null);var u=l;function c(t,n,i,a,s){var l=false;if(o){var c=p(a,i,n);if(u!==c){u=c;f(u.object)}l=m(a,s);if(l)g(a,s)}else{var h=n.wireframe===true;if(u.geometry!==a.id||u.program!==i.id||u.wireframe!==h){u.geometry=a.id;u.program=i.id;u.wireframe=h;l=true}}if(t.isInstancedMesh===true){l=true}if(s!==null){r.update(s,34963)}if(l){M(t,n,i,a);if(s!==null){e.bindBuffer(34963,r.get(s).buffer)}}}function h(){if(n.isWebGL2)return e.createVertexArray();return a.createVertexArrayOES()}function f(t){if(n.isWebGL2)return e.bindVertexArray(t);return a.bindVertexArrayOES(t)}function d(t){if(n.isWebGL2)return e.deleteVertexArray(t);return a.deleteVertexArrayOES(t)}function p(e,t,r){var n=r.wireframe===true;var i=s[e.id];if(i===undefined){i={};s[e.id]=i}var a=i[t.id];if(a===undefined){a={};i[t.id]=a}var o=a[n];if(o===undefined){o=v(h());a[n]=o}return o}function v(e){var t=[];var r=[];var n=[];for(var a=0;a<i;a++){t[a]=0;r[a]=0;n[a]=0}return{geometry:null,program:null,wireframe:false,newAttributes:t,enabledAttributes:r,attributeDivisors:n,object:e,attributes:{},index:null}}function m(e,t){var r=u.attributes;var n=e.attributes;var i=0;for(var a in n){var o=r[a];var s=n[a];if(o===undefined)return true;if(o.attribute!==s)return true;if(o.data!==s.data)return true;i++}if(u.attributesNum!==i)return true;if(u.index!==t)return true;return false}function g(e,t){var r={};var n=e.attributes;var i=0;for(var a in n){var o=n[a];var s={};s.attribute=o;if(o.data){s.data=o.data}r[a]=s;i++}u.attributes=r;u.attributesNum=i;u.index=t}function y(){var e=u.newAttributes;for(var t=0,r=e.length;t<r;t++){e[t]=0}}function x(e){_(e,0)}function _(r,i){var a=u.newAttributes;var o=u.enabledAttributes;var s=u.attributeDivisors;a[r]=1;if(o[r]===0){e.enableVertexAttribArray(r);o[r]=1}if(s[r]!==i){var l=n.isWebGL2?e:t.get("ANGLE_instanced_arrays");l[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,i);s[r]=i}}function b(){var t=u.newAttributes;var r=u.enabledAttributes;for(var n=0,i=r.length;n<i;n++){if(r[n]!==t[n]){e.disableVertexAttribArray(n);r[n]=0}}}function w(t,r,i,a,o,s){if(n.isWebGL2===true&&(i===5124||i===5125)){e.vertexAttribIPointer(t,r,i,o,s)}else{e.vertexAttribPointer(t,r,i,a,o,s)}}function M(i,a,o,s){if(n.isWebGL2===false&&(i.isInstancedMesh||s.isInstancedBufferGeometry)){if(t.get("ANGLE_instanced_arrays")===null)return}y();var l=s.attributes;var u=o.getAttributes();var c=a.defaultAttributeValues;for(var h in u){var f=u[h];if(f>=0){var d=l[h];if(d!==undefined){var p=d.normalized;var v=d.itemSize;var m=r.get(d);if(m===undefined)continue;var g=m.buffer;var M=m.type;var S=m.bytesPerElement;if(d.isInterleavedBufferAttribute){var E=d.data;var T=E.stride;var L=d.offset;if(E&&E.isInstancedInterleavedBuffer){_(f,E.meshPerAttribute);if(s._maxInstanceCount===undefined){s._maxInstanceCount=E.meshPerAttribute*E.count}}else{x(f)}e.bindBuffer(34962,g);w(f,v,M,p,T*S,L*S)}else{if(d.isInstancedBufferAttribute){_(f,d.meshPerAttribute);if(s._maxInstanceCount===undefined){s._maxInstanceCount=d.meshPerAttribute*d.count}}else{x(f)}e.bindBuffer(34962,g);w(f,v,M,p,0,0)}}else if(h==="instanceMatrix"){var m=r.get(i.instanceMatrix);if(m===undefined)continue;var g=m.buffer;var M=m.type;_(f+0,1);_(f+1,1);_(f+2,1);_(f+3,1);e.bindBuffer(34962,g);e.vertexAttribPointer(f+0,4,M,false,64,0);e.vertexAttribPointer(f+1,4,M,false,64,16);e.vertexAttribPointer(f+2,4,M,false,64,32);e.vertexAttribPointer(f+3,4,M,false,64,48)}else if(h==="instanceColor"){var m=r.get(i.instanceColor);if(m===undefined)continue;var g=m.buffer;var M=m.type;_(f,1);e.bindBuffer(34962,g);e.vertexAttribPointer(f,3,M,false,12,0)}else if(c!==undefined){var A=c[h];if(A!==undefined){switch(A.length){case 2:e.vertexAttrib2fv(f,A);break;case 3:e.vertexAttrib3fv(f,A);break;case 4:e.vertexAttrib4fv(f,A);break;default:e.vertexAttrib1fv(f,A)}}}}}b()}function S(){L();for(var e in s){var t=s[e];for(var r in t){var n=t[r];for(var i in n){d(n[i].object);delete n[i]}delete t[r]}delete s[e]}}function E(e){if(s[e.id]===undefined)return;var t=s[e.id];for(var r in t){var n=t[r];for(var i in n){d(n[i].object);delete n[i]}delete t[r]}delete s[e.id]}function T(e){for(var t in s){var r=s[t];if(r[e.id]===undefined)continue;var n=r[e.id];for(var i in n){d(n[i].object);delete n[i]}delete r[e.id]}}function L(){A();if(u===l)return;u=l;f(u.object)}function A(){l.geometry=null;l.program=null;l.wireframe=false}return{setup:c,reset:L,resetDefaultState:A,dispose:S,releaseStatesOfGeometry:E,releaseStatesOfProgram:T,initAttributes:y,enableAttribute:x,disableUnusedAttributes:b}}function Es(e,t,r,n){var i=n.isWebGL2;var a;function o(e){a=e}function s(t,n){e.drawArrays(a,t,n);r.update(n,a,1)}function l(n,o,s){if(s===0)return;var l,u;if(i){l=e;u="drawArraysInstanced"}else{l=t.get("ANGLE_instanced_arrays");u="drawArraysInstancedANGLE";if(l===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}l[u](a,n,o,s);r.update(o,a,s)}this.setMode=o;this.render=s;this.renderInstances=l}function Ts(e,t,r){var n;function i(){if(n!==undefined)return n;var r=t.get("EXT_texture_filter_anisotropic");if(r!==null){n=e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else{n=0}return n}function a(t){if(t==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0){return"highp"}t="mediump"}if(t==="mediump"){if(e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0){return"mediump"}}return"lowp"}var o=typeof WebGL2RenderingContext!=="undefined"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!=="undefined"&&e instanceof WebGL2ComputeRenderingContext;var s=r.precision!==undefined?r.precision:"highp";var l=a(s);if(l!==s){console.warn("THREE.WebGLRenderer:",s,"not supported, using",l,"instead.");s=l}var u=r.logarithmicDepthBuffer===true;var c=e.getParameter(34930);var h=e.getParameter(35660);var f=e.getParameter(3379);var d=e.getParameter(34076);var p=e.getParameter(34921);var v=e.getParameter(36347);var m=e.getParameter(36348);var g=e.getParameter(36349);var y=h>0;var x=o||!!t.get("OES_texture_float");var _=y&&x;var b=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:i,getMaxPrecision:a,precision:s,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:f,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:v,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:y,floatFragmentTextures:x,floatVertexTextures:_,maxSamples:b}}function Ls(e){var t=this;var r=null,n=0,i=false,a=false;var o=new yn,s=new ar,l={value:null,needsUpdate:false};this.uniform=l;this.numPlanes=0;this.numIntersection=0;this.init=function(e,t,a){var o=e.length!==0||t||n!==0||i;i=t;r=c(e,a,0);n=e.length;return o};this.beginShadows=function(){a=true;c(null)};this.endShadows=function(){a=false;u()};this.setState=function(t,o,s){var h=t.clippingPlanes,f=t.clipIntersection,d=t.clipShadows;var p=e.get(t);if(!i||h===null||h.length===0||a&&!d){if(a){c(null)}else{u()}}else{var v=a?0:n,m=v*4;var g=p.clippingState||null;l.value=g;g=c(h,o,m,s);for(var y=0;y!==m;++y){g[y]=r[y]}p.clippingState=g;this.numIntersection=f?this.numPlanes:0;this.numPlanes+=v}};function u(){if(l.value!==r){l.value=r;l.needsUpdate=n>0}t.numPlanes=n;t.numIntersection=0}function c(e,r,n,i){var a=e!==null?e.length:0;var u=null;if(a!==0){u=l.value;if(i!==true||u===null){var c=n+a*4,h=r.matrixWorldInverse;s.getNormalMatrix(h);if(u===null||u.length<c){u=new Float32Array(c)}for(var f=0,d=n;f!==a;++f,d+=4){o.copy(e[f]).applyMatrix4(h,s);o.normal.toArray(u,d);u[d+3]=o.constant}}l.value=u;l.needsUpdate=true}t.numPlanes=a;t.numIntersection=0;return u}}function As(e){var t=new WeakMap;function r(e,t){if(t===ee){e.mapping=K}else if(t===te){e.mapping=$}return e}function n(n){if(n&&n.isTexture){var a=n.mapping;if(a===ee||a===te){if(t.has(n)){var o=t.get(n).texture;return r(o,n.mapping)}else{var s=n.image;if(s&&s.height>0){var l=e.getRenderList();var u=e.getRenderTarget();var c=new Wi(s.height/2);c.fromEquirectangularTexture(e,n);t.set(n,c);e.setRenderTarget(u);e.setRenderList(l);n.addEventListener("dispose",i);return r(c.texture,n.mapping)}else{return null}}}}return n}function i(e){var r=e.target;r.removeEventListener("dispose",i);var n=t.get(r);if(n!==undefined){t.delete(r);n.dispose()}}function a(){t=new WeakMap}return{get:n,dispose:a}}function Rs(e){var t={};function r(r){if(t[r]!==undefined){return t[r]}var n;switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(r)}t[r]=n;return n}return{has:function(e){return r(e)!==null},init:function(e){if(e.isWebGL2){r("EXT_color_buffer_float")}else{r("WEBGL_depth_texture");r("OES_texture_float");r("OES_texture_half_float");r("OES_texture_half_float_linear");r("OES_standard_derivatives");r("OES_element_index_uint");r("OES_vertex_array_object");r("ANGLE_instanced_arrays")}r("OES_texture_float_linear");r("EXT_color_buffer_half_float")},get:function(e){var t=r(e);if(t===null){console.warn("THREE.WebGLRenderer: "+e+" extension not supported.")}return t}}}function Ps(e,t,r,n){var i={};var a=new WeakMap;function o(e){var s=e.target;if(s.index!==null){t.remove(s.index)}for(var l in s.attributes){t.remove(s.attributes[l])}s.removeEventListener("dispose",o);delete i[s.id];var u=a.get(s);if(u){t.remove(u);a.delete(s)}n.releaseStatesOfGeometry(s);if(s.isInstancedBufferGeometry===true){delete s._maxInstanceCount}r.memory.geometries--}function s(e,t){if(i[t.id]===true)return t;t.addEventListener("dispose",o);i[t.id]=true;r.memory.geometries++;return t}function l(e){var r=e.attributes;for(var n in r){t.update(r[n],34962)}var i=e.morphAttributes;for(var n in i){var a=i[n];for(var o=0,s=a.length;o<s;o++){t.update(a[o],34962)}}}function u(e){var r=[];var n=e.index;var i=e.attributes.position;var o=0;if(n!==null){var s=n.array;o=n.version;for(var l=0,u=s.length;l<u;l+=3){var c=s[l+0];var h=s[l+1];var f=s[l+2];r.push(c,h,h,f,f,c)}}else{var s=i.array;o=i.version;for(var l=0,u=s.length/3-1;l<u;l+=3){var c=l+0;var h=l+1;var f=l+2;r.push(c,h,h,f,f,c)}}var d=new(ei(r)>65535?Jn:Yn)(r,1);d.version=o;var p=a.get(e);if(p)t.remove(p);a.set(e,d)}function c(e){var t=a.get(e);if(t){var r=e.index;if(r!==null){if(t.version<r.version){u(e)}}}else{u(e)}return a.get(e)}return{get:s,update:l,getWireframeAttribute:c}}function Cs(e,t,r,n){var i=n.isWebGL2;var a;function o(e){a=e}var s,l;function u(e){s=e.type;l=e.bytesPerElement}function c(t,n){e.drawElements(a,n,s,t*l);r.update(n,a,1)}function h(n,o,u){if(u===0)return;var c,h;if(i){c=e;h="drawElementsInstanced"}else{c=t.get("ANGLE_instanced_arrays");h="drawElementsInstancedANGLE";if(c===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}c[h](a,o,s,n*l,u);r.update(o,a,u)}this.setMode=o;this.setIndex=u;this.render=c;this.renderInstances=h}function Is(e){var t={geometries:0,textures:0};var r={frame:0,calls:0,triangles:0,points:0,lines:0};function n(e,t,n){r.calls++;switch(t){case 4:r.triangles+=n*(e/3);break;case 1:r.lines+=n*(e/2);break;case 3:r.lines+=n*(e-1);break;case 2:r.lines+=n*e;break;case 0:r.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t);break}}function i(){r.frame++;r.calls=0;r.triangles=0;r.points=0;r.lines=0}return{memory:t,render:r,programs:null,autoReset:true,reset:i,update:n}}function Os(e,t){return e[0]-t[0]}function Ds(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Ns(e){var t={};var r=new Float32Array(8);var n=[];for(var i=0;i<8;i++){n[i]=[i,0]}function a(i,a,o,s){var l=i.morphTargetInfluences;var u=l===undefined?0:l.length;var c=t[a.id];if(c===undefined){c=[];for(var h=0;h<u;h++){c[h]=[h,0]}t[a.id]=c}for(var h=0;h<u;h++){var f=c[h];f[0]=h;f[1]=l[h]}c.sort(Ds);for(var h=0;h<8;h++){if(h<u&&c[h][1]){n[h][0]=c[h][0];n[h][1]=c[h][1]}else{n[h][0]=Number.MAX_SAFE_INTEGER;n[h][1]=0}}n.sort(Os);var d=o.morphTargets&&a.morphAttributes.position;var p=o.morphNormals&&a.morphAttributes.normal;var v=0;for(var h=0;h<8;h++){var f=n[h];var m=f[0];var g=f[1];if(m!==Number.MAX_SAFE_INTEGER&&g){if(d&&a.getAttribute("morphTarget"+h)!==d[m]){a.setAttribute("morphTarget"+h,d[m])}if(p&&a.getAttribute("morphNormal"+h)!==p[m]){a.setAttribute("morphNormal"+h,p[m])}r[h]=g;v+=g}else{if(d&&a.hasAttribute("morphTarget"+h)===true){a.deleteAttribute("morphTarget"+h)}if(p&&a.hasAttribute("morphNormal"+h)===true){a.deleteAttribute("morphNormal"+h)}r[h]=0}}var y=a.morphTargetsRelative?1:1-v;s.getUniforms().setValue(e,"morphTargetBaseInfluence",y);s.getUniforms().setValue(e,"morphTargetInfluences",r)}return{update:a}}function zs(e,t,r,n){var i=new WeakMap;function a(e){var a=n.render.frame;var o=e.geometry;var l=t.get(e,o);if(i.get(l)!==a){t.update(l);i.set(l,a)}if(e.isInstancedMesh){if(e.hasEventListener("dispose",s)===false){e.addEventListener("dispose",s)}r.update(e.instanceMatrix,34962);if(e.instanceColor!==null){r.update(e.instanceColor,34962)}}return l}function o(){i=new WeakMap}function s(e){var t=e.target;t.removeEventListener("dispose",s);r.remove(t.instanceMatrix);if(t.instanceColor!==null)r.remove(t.instanceColor)}return{update:a,dispose:o}}function Bs(e,t,r,n){if(e===void 0){e=null}if(t===void 0){t=1}if(r===void 0){r=1}if(n===void 0){n=1}ur.call(this,null);this.image={data:e,width:t,height:r,depth:n};this.magFilter=se;this.minFilter=se;this.wrapR=ae;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true}Bs.prototype=Object.create(ur.prototype);Bs.prototype.constructor=Bs;Bs.prototype.isDataTexture2DArray=true;function Hs(e,t,r,n){if(e===void 0){e=null}if(t===void 0){t=1}if(r===void 0){r=1}if(n===void 0){n=1}ur.call(this,null);this.image={data:e,width:t,height:r,depth:n};this.magFilter=se;this.minFilter=se;this.wrapR=ae;this.generateMipmaps=false;this.flipY=false;this.needsUpdate=true}Hs.prototype=Object.create(ur.prototype);Hs.prototype.constructor=Hs;Hs.prototype.isDataTexture3D=true;var Fs=new ur;var Us=new Bs;var Gs=new Hs;var ks=new Vi;var Vs=[];var Ws=[];var js=new Float32Array(16);var qs=new Float32Array(9);var Xs=new Float32Array(4);function Ys(e,t,r){var n=e[0];if(n<=0||n>0)return e;var i=t*r;var a=Vs[i];if(a===undefined){a=new Float32Array(i);Vs[i]=a}if(t!==0){n.toArray(a,0);for(var o=1,s=0;o!==t;++o){s+=r;e[o].toArray(a,s)}}return a}function Zs(e,t){if(e.length!==t.length)return false;for(var r=0,n=e.length;r<n;r++){if(e[r]!==t[r])return false}return true}function Js(e,t){for(var r=0,n=t.length;r<n;r++){e[r]=t[r]}}function Qs(e,t){var r=Ws[t];if(r===undefined){r=new Int32Array(t);Ws[t]=r}for(var n=0;n!==t;++n){r[n]=e.allocateTextureUnit()}return r}function Ks(e,t){var r=this.cache;if(r[0]===t)return;e.uniform1f(this.addr,t);r[0]=t}function $s(e,t){var r=this.cache;if(t.x!==undefined){if(r[0]!==t.x||r[1]!==t.y){e.uniform2f(this.addr,t.x,t.y);r[0]=t.x;r[1]=t.y}}else{if(Zs(r,t))return;e.uniform2fv(this.addr,t);Js(r,t)}}function el(e,t){var r=this.cache;if(t.x!==undefined){if(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z){e.uniform3f(this.addr,t.x,t.y,t.z);r[0]=t.x;r[1]=t.y;r[2]=t.z}}else if(t.r!==undefined){if(r[0]!==t.r||r[1]!==t.g||r[2]!==t.b){e.uniform3f(this.addr,t.r,t.g,t.b);r[0]=t.r;r[1]=t.g;r[2]=t.b}}else{if(Zs(r,t))return;e.uniform3fv(this.addr,t);Js(r,t)}}function tl(e,t){var r=this.cache;if(t.x!==undefined){if(r[0]!==t.x||r[1]!==t.y||r[2]!==t.z||r[3]!==t.w){e.uniform4f(this.addr,t.x,t.y,t.z,t.w);r[0]=t.x;r[1]=t.y;r[2]=t.z;r[3]=t.w}}else{if(Zs(r,t))return;e.uniform4fv(this.addr,t);Js(r,t)}}function rl(e,t){var r=this.cache;var n=t.elements;if(n===undefined){if(Zs(r,t))return;e.uniformMatrix2fv(this.addr,false,t);Js(r,t)}else{if(Zs(r,n))return;Xs.set(n);e.uniformMatrix2fv(this.addr,false,Xs);Js(r,n)}}function nl(e,t){var r=this.cache;var n=t.elements;if(n===undefined){if(Zs(r,t))return;e.uniformMatrix3fv(this.addr,false,t);Js(r,t)}else{if(Zs(r,n))return;qs.set(n);e.uniformMatrix3fv(this.addr,false,qs);Js(r,n)}}function il(e,t){var r=this.cache;var n=t.elements;if(n===undefined){if(Zs(r,t))return;e.uniformMatrix4fv(this.addr,false,t);Js(r,t)}else{if(Zs(r,n))return;js.set(n);e.uniformMatrix4fv(this.addr,false,js);Js(r,n)}}function al(e,t,r){var n=this.cache;var i=r.allocateTextureUnit();if(n[0]!==i){e.uniform1i(this.addr,i);n[0]=i}r.safeSetTexture2D(t||Fs,i)}function ol(e,t,r){var n=this.cache;var i=r.allocateTextureUnit();if(n[0]!==i){e.uniform1i(this.addr,i);n[0]=i}r.setTexture2DArray(t||Us,i)}function sl(e,t,r){var n=this.cache;var i=r.allocateTextureUnit();if(n[0]!==i){e.uniform1i(this.addr,i);n[0]=i}r.setTexture3D(t||Gs,i)}function ll(e,t,r){var n=this.cache;var i=r.allocateTextureUnit();if(n[0]!==i){e.uniform1i(this.addr,i);n[0]=i}r.safeSetTextureCube(t||ks,i)}function ul(e,t){var r=this.cache;if(r[0]===t)return;e.uniform1i(this.addr,t);r[0]=t}function cl(e,t){var r=this.cache;if(Zs(r,t))return;e.uniform2iv(this.addr,t);Js(r,t)}function hl(e,t){var r=this.cache;if(Zs(r,t))return;e.uniform3iv(this.addr,t);Js(r,t)}function fl(e,t){var r=this.cache;if(Zs(r,t))return;e.uniform4iv(this.addr,t);Js(r,t)}function dl(e,t){var r=this.cache;if(r[0]===t)return;e.uniform1ui(this.addr,t);r[0]=t}function pl(e){switch(e){case 5126:return Ks;case 35664:return $s;case 35665:return el;case 35666:return tl;case 35674:return rl;case 35675:return nl;case 35676:return il;case 5124:case 35670:return ul;case 35667:case 35671:return cl;case 35668:case 35672:return hl;case 35669:case 35673:return fl;case 5125:return dl;case 35678:case 36198:case 36298:case 36306:case 35682:return al;case 35679:case 36299:case 36307:return sl;case 35680:case 36300:case 36308:case 36293:return ll;case 36289:case 36303:case 36311:case 36292:return ol}}function vl(e,t){e.uniform1fv(this.addr,t)}function ml(e,t){e.uniform1iv(this.addr,t)}function gl(e,t){e.uniform2iv(this.addr,t)}function yl(e,t){e.uniform3iv(this.addr,t)}function xl(e,t){e.uniform4iv(this.addr,t)}function _l(e,t){var r=Ys(t,this.size,2);e.uniform2fv(this.addr,r)}function bl(e,t){var r=Ys(t,this.size,3);e.uniform3fv(this.addr,r)}function wl(e,t){var r=Ys(t,this.size,4);e.uniform4fv(this.addr,r)}function Ml(e,t){var r=Ys(t,this.size,4);e.uniformMatrix2fv(this.addr,false,r)}function Sl(e,t){var r=Ys(t,this.size,9);e.uniformMatrix3fv(this.addr,false,r)}function El(e,t){var r=Ys(t,this.size,16);e.uniformMatrix4fv(this.addr,false,r)}function Tl(e,t,r){var n=t.length;var i=Qs(r,n);e.uniform1iv(this.addr,i);for(var a=0;a!==n;++a){r.safeSetTexture2D(t[a]||Fs,i[a])}}function Ll(e,t,r){var n=t.length;var i=Qs(r,n);e.uniform1iv(this.addr,i);for(var a=0;a!==n;++a){r.safeSetTextureCube(t[a]||ks,i[a])}}function Al(e){switch(e){case 5126:return vl;case 35664:return _l;case 35665:return bl;case 35666:return wl;case 35674:return Ml;case 35675:return Sl;case 35676:return El;case 5124:case 35670:return ml;case 35667:case 35671:return gl;case 35668:case 35672:return yl;case 35669:case 35673:return xl;case 35678:case 36198:case 36298:case 36306:case 35682:return Tl;case 35680:case 36300:case 36308:case 36293:return Ll}}function Rl(e,t,r){this.id=e;this.addr=r;this.cache=[];this.setValue=pl(t.type)}function Pl(e,t,r){this.id=e;this.addr=r;this.cache=[];this.size=t.size;this.setValue=Al(t.type)}Pl.prototype.updateCache=function(e){var t=this.cache;if(e instanceof Float32Array&&t.length!==e.length){this.cache=new Float32Array(e.length)}Js(t,e)};function Cl(e){this.id=e;this.seq=[];this.map={}}Cl.prototype.setValue=function(e,t,r){var n=this.seq;for(var i=0,a=n.length;i!==a;++i){var o=n[i];o.setValue(e,t[o.id],r)}};var Il=/(\w+)(\])?(\[|\.)?/g;function Ol(e,t){e.seq.push(t);e.map[t.id]=t}function Dl(e,t,r){var n=e.name,i=n.length;Il.lastIndex=0;while(true){var a=Il.exec(n),o=Il.lastIndex;var s=a[1];var l=a[2]==="]",u=a[3];if(l)s=s|0;if(u===undefined||u==="["&&o+2===i){Ol(r,u===undefined?new Rl(s,e,t):new Pl(s,e,t));break}else{var c=r.map;var h=c[s];if(h===undefined){h=new Cl(s);Ol(r,h)}r=h}}}function Nl(e,t){this.seq=[];this.map={};var r=e.getProgramParameter(t,35718);for(var n=0;n<r;++n){var i=e.getActiveUniform(t,n),a=e.getUniformLocation(t,i.name);Dl(i,a,this)}}Nl.prototype.setValue=function(e,t,r,n){var i=this.map[t];if(i!==undefined)i.setValue(e,r,n)};Nl.prototype.setOptional=function(e,t,r){var n=t[r];if(n!==undefined)this.setValue(e,r,n)};Nl.upload=function(e,t,r,n){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=r[o.id];if(s.needsUpdate!==false){o.setValue(e,s.value,n)}}};Nl.seqWithValue=function(e,t){var r=[];for(var n=0,i=e.length;n!==i;++n){var a=e[n];if(a.id in t)r.push(a)}return r};function zl(e,t,r){var n=e.createShader(t);e.shaderSource(n,r);e.compileShader(n);return n}var Bl=0;function Hl(e){var t=e.split("\n");for(var r=0;r<t.length;r++){t[r]=r+1+": "+t[r]}return t.join("\n")}function Fl(e){switch(e){case zt:return["Linear","( value )"];case Bt:return["sRGB","( value )"];case Ft:return["RGBE","( value )"];case Gt:return["RGBM","( value, 7.0 )"];case kt:return["RGBM","( value, 16.0 )"];case Vt:return["RGBD","( value, 256.0 )"];case Ht:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Ut:return["LogLuv","( value )"];default:console.warn("THREE.WebGLProgram: Unsupported encoding:",e);return["Linear","( value )"]}}function Ul(e,t,r){var n=e.getShaderParameter(t,35713);var i=e.getShaderInfoLog(t).trim();if(n&&i==="")return"";var a=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+Hl(a)}function Gl(e,t){var r=Fl(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function kl(e,t){var r=Fl(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function Vl(e,t){var r;switch(t){case q:r="Linear";break;case X:r="Reinhard";break;case Y:r="OptimizedCineon";break;case Z:r="ACESFilmic";break;case J:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t);r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function Wl(e){var t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(Xl).join("\n")}function jl(e){var t=[];for(var r in e){var n=e[r];if(n===false)continue;t.push("#define "+r+" "+n)}return t.join("\n")}function ql(e,t){var r={};var n=e.getProgramParameter(t,35721);for(var i=0;i<n;i++){var a=e.getActiveAttrib(t,i);var o=a.name;r[o]=e.getAttribLocation(t,o)}return r}function Xl(e){return e!==""}function Yl(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Zl(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var Jl=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ql(e){return e.replace(Jl,Kl)}function Kl(e,t){var r=_s[t];if(r===undefined){throw new Error("Can not resolve #include <"+t+">")}return Ql(r)}var $l=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;var eu=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function tu(e){return e.replace(eu,nu).replace($l,ru)}function ru(e,t,r,n){console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.");return nu(e,t,r,n)}function nu(e,t,r,n){var i="";for(var a=parseInt(t);a<parseInt(r);a++){i+=n.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a)}return i}function iu(e){var t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";if(e.precision==="highp"){t+="\n#define HIGH_PRECISION"}else if(e.precision==="mediump"){t+="\n#define MEDIUM_PRECISION"}else if(e.precision==="lowp"){t+="\n#define LOW_PRECISION"}return t}function au(e){var t="SHADOWMAP_TYPE_BASIC";if(e.shadowMapType===a){t="SHADOWMAP_TYPE_PCF"}else if(e.shadowMapType===o){t="SHADOWMAP_TYPE_PCF_SOFT"}else if(e.shadowMapType===s){t="SHADOWMAP_TYPE_VSM"}return t}function ou(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap){switch(e.envMapMode){case K:case $:t="ENVMAP_TYPE_CUBE";break;case re:case ne:t="ENVMAP_TYPE_CUBE_UV";break}}return t}function su(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap){switch(e.envMapMode){case $:case ne:t="ENVMAP_MODE_REFRACTION";break}}return t}function lu(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap){switch(e.combine){case k:t="ENVMAP_BLENDING_MULTIPLY";break;case V:t="ENVMAP_BLENDING_MIX";break;case W:t="ENVMAP_BLENDING_ADD";break}}return t}function uu(e,t,r,n){var i=e.getContext();var a=r.defines;var o=r.vertexShader;var s=r.fragmentShader;var l=au(r);var u=ou(r);var c=su(r);var h=lu(r);var f=e.gammaFactor>0?e.gammaFactor:1;var d=r.isWebGL2?"":Wl(r);var p=jl(a);var v=i.createProgram();var m,g;var y=r.glslVersion?"#version "+r.glslVersion+"\n":"";if(r.isRawShaderMaterial){m=[p].filter(Xl).join("\n");if(m.length>0){m+="\n"}g=[d,p].filter(Xl).join("\n");if(g.length>0){g+="\n"}}else{m=[iu(r),"#define SHADER_NAME "+r.shaderName,p,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+c:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&r.flatShading===false?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Xl).join("\n");g=[d,iu(r),"#define SHADER_NAME "+r.shaderName,p,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+u:"",r.envMap?"#define "+c:"",r.envMap?"#define "+h:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",r.toneMapping!==j?"#define TONE_MAPPING":"",r.toneMapping!==j?_s["tonemapping_pars_fragment"]:"",r.toneMapping!==j?Vl("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",_s["encodings_pars_fragment"],r.map?Gl("mapTexelToLinear",r.mapEncoding):"",r.matcap?Gl("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?Gl("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?Gl("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMap?Gl("lightMapTexelToLinear",r.lightMapEncoding):"",kl("linearToOutputTexel",r.outputEncoding),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(Xl).join("\n")}o=Ql(o);o=Yl(o,r);o=Zl(o,r);s=Ql(s);s=Yl(s,r);s=Zl(s,r);o=tu(o);s=tu(s);if(r.isWebGL2&&r.isRawShaderMaterial!==true){y="#version 300 es\n";m=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m;g=["#define varying in",r.glslVersion===Kt?"":"out highp vec4 pc_fragColor;",r.glslVersion===Kt?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g}var x=y+m+o;var _=y+g+s;var b=zl(i,35633,x);var w=zl(i,35632,_);i.attachShader(v,b);i.attachShader(v,w);if(r.index0AttributeName!==undefined){i.bindAttribLocation(v,0,r.index0AttributeName)}else if(r.morphTargets===true){i.bindAttribLocation(v,0,"position")}i.linkProgram(v);if(e.debug.checkShaderErrors){var M=i.getProgramInfoLog(v).trim();var S=i.getShaderInfoLog(b).trim();var E=i.getShaderInfoLog(w).trim();var T=true;var L=true;if(i.getProgramParameter(v,35714)===false){T=false;var A=Ul(i,b,"vertex");var R=Ul(i,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(v,35715),"gl.getProgramInfoLog",M,A,R)}else if(M!==""){console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",M)}else if(S===""||E===""){L=false}if(L){this.diagnostics={runnable:T,programLog:M,vertexShader:{log:S,prefix:m},fragmentShader:{log:E,prefix:g}}}}i.deleteShader(b);i.deleteShader(w);var P;this.getUniforms=function(){if(P===undefined){P=new Nl(i,v)}return P};var C;this.getAttributes=function(){if(C===undefined){C=ql(i,v)}return C};this.destroy=function(){n.releaseStatesOfProgram(this);i.deleteProgram(v);this.program=undefined};this.name=r.shaderName;this.id=Bl++;this.cacheKey=t;this.usedTimes=1;this.program=v;this.vertexShader=b;this.fragmentShader=w;return this}function cu(e,t,r,n,i,a){var o=[];var s=n.isWebGL2;var l=n.logarithmicDepthBuffer;var h=n.floatVertexTextures;var f=n.maxVertexUniforms;var d=n.vertexTextures;var p=n.precision;var v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};var m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function g(e){var t=e.skeleton;var r=t.bones;if(h){return 1024}else{var n=f;var i=Math.floor((n-20)/4);var a=Math.min(i,r.length);if(a<r.length){console.warn("THREE.WebGLRenderer: Skeleton has "+r.length+" bones. This GPU supports "+a+".");return 0}return a}}function y(e){var t;if(e&&e.isTexture){t=e.encoding}else if(e&&e.isWebGLRenderTarget){console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.");t=e.texture.encoding}else{t=zt}return t}function x(i,o,f,m,x){var _=m.fog;var b=i.isMeshStandardMaterial?m.environment:null;var w=t.get(i.envMap||b);var M=v[i.type];var S=x.isSkinnedMesh?g(x):0;if(i.precision!==null){p=n.getMaxPrecision(i.precision);if(p!==i.precision){console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",p,"instead.")}}var E,T;if(M){var L=ws[M];E=L.vertexShader;T=L.fragmentShader}else{E=i.vertexShader;T=i.fragmentShader}var A=e.getRenderTarget();var R={isWebGL2:s,shaderID:M,shaderName:i.type,vertexShader:E,fragmentShader:T,defines:i.defines,isRawShaderMaterial:i.isRawShaderMaterial===true,glslVersion:i.glslVersion,precision:p,instancing:x.isInstancedMesh===true,instancingColor:x.isInstancedMesh===true&&x.instanceColor!==null,supportsVertexTextures:d,outputEncoding:A!==null?y(A.texture):e.outputEncoding,map:!!i.map,mapEncoding:y(i.map),matcap:!!i.matcap,matcapEncoding:y(i.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:y(w),envMapCubeUV:!!w&&(w.mapping===re||w.mapping===ne),lightMap:!!i.lightMap,lightMapEncoding:y(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:y(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:i.normalMapType===Xt,tangentSpaceNormalMap:i.normalMapType===qt,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,transmissionMap:!!i.transmissionMap,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexUvs:!!i.map||!!i.bumpMap||!!i.normalMap||!!i.specularMap||!!i.alphaMap||!!i.emissiveMap||!!i.roughnessMap||!!i.metalnessMap||!!i.clearcoatMap||!!i.clearcoatRoughnessMap||!!i.clearcoatNormalMap||!!i.displacementMap||!!i.transmissionMap,uvsVertexOnly:!(!!i.map||!!i.bumpMap||!!i.normalMap||!!i.specularMap||!!i.alphaMap||!!i.emissiveMap||!!i.roughnessMap||!!i.metalnessMap||!!i.clearcoatNormalMap||!!i.transmissionMap)&&!!i.displacementMap,fog:!!_,useFog:i.fog,fogExp2:_&&_.isFogExp2,flatShading:i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:l,skinning:i.skinning&&S>0,maxBones:S,useVertexTexture:h,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:i.dithering,shadowMapEnabled:e.shadowMap.enabled&&f.length>0,shadowMapType:e.shadowMap.type,toneMapping:i.toneMapped?e.toneMapping:j,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:i.side===c,flipSided:i.side===u,depthPacking:i.depthPacking!==undefined?i.depthPacking:false,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:s||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||r.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()};return R}function _(t){var r=[];if(t.shaderID){r.push(t.shaderID)}else{r.push(t.fragmentShader);r.push(t.vertexShader)}if(t.defines!==undefined){for(var n in t.defines){r.push(n);r.push(t.defines[n])}}if(t.isRawShaderMaterial===false){for(var i=0;i<m.length;i++){r.push(t[m[i]])}r.push(e.outputEncoding);r.push(e.gammaFactor)}r.push(t.customProgramCacheKey);return r.join()}function b(e){var t=v[e.type];var r;if(t){var n=ws[t];r=Di.clone(n.uniforms)}else{r=e.uniforms}return r}function w(t,r){var n;for(var a=0,s=o.length;a<s;a++){var l=o[a];if(l.cacheKey===r){n=l;++n.usedTimes;break}}if(n===undefined){n=new uu(e,r,t,i);o.push(n)}return n}function M(e){if(--e.usedTimes===0){var t=o.indexOf(e);o[t]=o[o.length-1];o.pop();e.destroy()}}return{getParameters:x,getProgramCacheKey:_,getUniforms:b,acquireProgram:w,releaseProgram:M,programs:o}}function hu(){var e=new WeakMap;function t(t){var r=e.get(t);if(r===undefined){r={};e.set(t,r)}return r}function r(t){e.delete(t)}function n(t,r,n){e.get(t)[r]=n}function i(){e=new WeakMap}return{get:t,remove:r,update:n,dispose:i}}function fu(e,t){if(e.groupOrder!==t.groupOrder){return e.groupOrder-t.groupOrder}else if(e.renderOrder!==t.renderOrder){return e.renderOrder-t.renderOrder}else if(e.program!==t.program){return e.program.id-t.program.id}else if(e.material.id!==t.material.id){return e.material.id-t.material.id}else if(e.z!==t.z){return e.z-t.z}else{return e.id-t.id}}function du(e,t){if(e.groupOrder!==t.groupOrder){return e.groupOrder-t.groupOrder}else if(e.renderOrder!==t.renderOrder){return e.renderOrder-t.renderOrder}else if(e.z!==t.z){return t.z-e.z}else{return e.id-t.id}}function pu(e){var t=[];var r=0;var n=[];var i=[];var a={id:-1};function o(){r=0;n.length=0;i.length=0}function s(n,i,o,s,l,u){var c=t[r];var h=e.get(o);if(c===undefined){c={id:n.id,object:n,geometry:i,material:o,program:h.program||a,groupOrder:s,renderOrder:n.renderOrder,z:l,group:u};t[r]=c}else{c.id=n.id;c.object=n;c.geometry=i;c.material=o;c.program=h.program||a;c.groupOrder=s;c.renderOrder=n.renderOrder;c.z=l;c.group=u}r++;return c}function l(e,t,r,a,o,l){var u=s(e,t,r,a,o,l);(r.transparent===true?i:n).push(u)}function u(e,t,r,a,o,l){var u=s(e,t,r,a,o,l);(r.transparent===true?i:n).unshift(u)}function c(e,t){if(n.length>1)n.sort(e||fu);if(i.length>1)i.sort(t||du)}function h(){for(var e=r,n=t.length;e<n;e++){var i=t[e];if(i.id===null)break;i.id=null;i.object=null;i.geometry=null;i.material=null;i.program=null;i.group=null}}return{opaque:n,transparent:i,init:o,push:l,unshift:u,finish:h,sort:c}}function vu(e){var t=new WeakMap;function r(r,n){var i=t.get(r);var a;if(i===undefined){a=new pu(e);t.set(r,new WeakMap);t.get(r).set(n,a)}else{a=i.get(n);if(a===undefined){a=new pu(e);i.set(n,a)}}return a}function n(){t=new WeakMap}return{get:r,dispose:n}}function mu(){var e={};return{get:function(t){if(e[t.id]!==undefined){return e[t.id]}var r;switch(t.type){case"DirectionalLight":r={direction:new pr,color:new zn};break;case"SpotLight":r={position:new pr,direction:new pr,color:new zn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new pr,color:new zn,distance:0,decay:0};break;case"HemisphereLight":r={direction:new pr,skyColor:new zn,groundColor:new zn};break;case"RectAreaLight":r={color:new zn,position:new pr,halfWidth:new pr,halfHeight:new pr};break}e[t.id]=r;return r}}}function gu(){var e={};return{get:function(t){if(e[t.id]!==undefined){return e[t.id]}var r;switch(t.type){case"DirectionalLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ir};break;case"SpotLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ir};break;case"PointLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ir,shadowCameraNear:1,shadowCameraFar:1e3};break}e[t.id]=r;return r}}}var yu=0;function xu(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function _u(e,t){var r=new mu;var n=gu();var i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(var a=0;a<9;a++)i.probe.push(new pr);var o=new pr;var s=new kr;var l=new kr;function u(a){var o=0,s=0,l=0;for(var u=0;u<9;u++)i.probe[u].set(0,0,0);var c=0;var h=0;var f=0;var d=0;var p=0;var v=0;var m=0;var g=0;a.sort(xu);for(var u=0,y=a.length;u<y;u++){var x=a[u];var _=x.color;var b=x.intensity;var w=x.distance;var M=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight){o+=_.r*b;s+=_.g*b;l+=_.b*b}else if(x.isLightProbe){for(var S=0;S<9;S++){i.probe[S].addScaledVector(x.sh.coefficients[S],b)}}else if(x.isDirectionalLight){var E=r.get(x);E.color.copy(x.color).multiplyScalar(x.intensity);if(x.castShadow){var T=x.shadow;var L=n.get(x);L.shadowBias=T.bias;L.shadowNormalBias=T.normalBias;L.shadowRadius=T.radius;L.shadowMapSize=T.mapSize;i.directionalShadow[c]=L;i.directionalShadowMap[c]=M;i.directionalShadowMatrix[c]=x.shadow.matrix;v++}i.directional[c]=E;c++}else if(x.isSpotLight){var E=r.get(x);E.position.setFromMatrixPosition(x.matrixWorld);E.color.copy(_).multiplyScalar(b);E.distance=w;E.coneCos=Math.cos(x.angle);E.penumbraCos=Math.cos(x.angle*(1-x.penumbra));E.decay=x.decay;if(x.castShadow){var T=x.shadow;var L=n.get(x);L.shadowBias=T.bias;L.shadowNormalBias=T.normalBias;L.shadowRadius=T.radius;L.shadowMapSize=T.mapSize;i.spotShadow[f]=L;i.spotShadowMap[f]=M;i.spotShadowMatrix[f]=x.shadow.matrix;g++}i.spot[f]=E;f++}else if(x.isRectAreaLight){var E=r.get(x);E.color.copy(_).multiplyScalar(b);E.halfWidth.set(x.width*.5,0,0);E.halfHeight.set(0,x.height*.5,0);i.rectArea[d]=E;d++}else if(x.isPointLight){var E=r.get(x);E.color.copy(x.color).multiplyScalar(x.intensity);E.distance=x.distance;E.decay=x.decay;if(x.castShadow){var T=x.shadow;var L=n.get(x);L.shadowBias=T.bias;L.shadowNormalBias=T.normalBias;L.shadowRadius=T.radius;L.shadowMapSize=T.mapSize;L.shadowCameraNear=T.camera.near;L.shadowCameraFar=T.camera.far;i.pointShadow[h]=L;i.pointShadowMap[h]=M;i.pointShadowMatrix[h]=x.shadow.matrix;m++}i.point[h]=E;h++}else if(x.isHemisphereLight){var E=r.get(x);E.skyColor.copy(x.color).multiplyScalar(b);E.groundColor.copy(x.groundColor).multiplyScalar(b);i.hemi[p]=E;p++}}if(d>0){if(t.isWebGL2){i.rectAreaLTC1=bs.LTC_FLOAT_1;i.rectAreaLTC2=bs.LTC_FLOAT_2}else{if(e.has("OES_texture_float_linear")===true){i.rectAreaLTC1=bs.LTC_FLOAT_1;i.rectAreaLTC2=bs.LTC_FLOAT_2}else if(e.has("OES_texture_half_float_linear")===true){i.rectAreaLTC1=bs.LTC_HALF_1;i.rectAreaLTC2=bs.LTC_HALF_2}else{console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")}}}i.ambient[0]=o;i.ambient[1]=s;i.ambient[2]=l;var A=i.hash;if(A.directionalLength!==c||A.pointLength!==h||A.spotLength!==f||A.rectAreaLength!==d||A.hemiLength!==p||A.numDirectionalShadows!==v||A.numPointShadows!==m||A.numSpotShadows!==g){i.directional.length=c;i.spot.length=f;i.rectArea.length=d;i.point.length=h;i.hemi.length=p;i.directionalShadow.length=v;i.directionalShadowMap.length=v;i.pointShadow.length=m;i.pointShadowMap.length=m;i.spotShadow.length=g;i.spotShadowMap.length=g;i.directionalShadowMatrix.length=v;i.pointShadowMatrix.length=m;i.spotShadowMatrix.length=g;A.directionalLength=c;A.pointLength=h;A.spotLength=f;A.rectAreaLength=d;A.hemiLength=p;A.numDirectionalShadows=v;A.numPointShadows=m;A.numSpotShadows=g;i.version=yu++}}function c(e,t){var r=0;var n=0;var a=0;var u=0;var c=0;var h=t.matrixWorldInverse;for(var f=0,d=e.length;f<d;f++){var p=e[f];if(p.isDirectionalLight){var v=i.directional[r];v.direction.setFromMatrixPosition(p.matrixWorld);o.setFromMatrixPosition(p.target.matrixWorld);v.direction.sub(o);v.direction.transformDirection(h);r++}else if(p.isSpotLight){var v=i.spot[a];v.position.setFromMatrixPosition(p.matrixWorld);v.position.applyMatrix4(h);v.direction.setFromMatrixPosition(p.matrixWorld);o.setFromMatrixPosition(p.target.matrixWorld);v.direction.sub(o);v.direction.transformDirection(h);a++}else if(p.isRectAreaLight){var v=i.rectArea[u];v.position.setFromMatrixPosition(p.matrixWorld);v.position.applyMatrix4(h);l.identity();s.copy(p.matrixWorld);s.premultiply(h);l.extractRotation(s);v.halfWidth.set(p.width*.5,0,0);v.halfHeight.set(0,p.height*.5,0);v.halfWidth.applyMatrix4(l);v.halfHeight.applyMatrix4(l);u++}else if(p.isPointLight){var v=i.point[n];v.position.setFromMatrixPosition(p.matrixWorld);v.position.applyMatrix4(h);n++}else if(p.isHemisphereLight){var v=i.hemi[c];v.direction.setFromMatrixPosition(p.matrixWorld);v.direction.transformDirection(h);v.direction.normalize();c++}}}return{setup:u,setupView:c,state:i}}function bu(e,t){var r=new _u(e,t);var n=[];var i=[];function a(){n.length=0;i.length=0}function o(e){n.push(e)}function s(e){i.push(e)}function l(){r.setup(n)}function u(e){r.setupView(n,e)}var c={lightsArray:n,shadowsArray:i,lights:r};return{init:a,state:c,setupLights:l,setupLightsView:u,pushLight:o,pushShadow:s}}function wu(e,t){var r=new WeakMap;function n(n,i){if(i===void 0){i=0}var a;if(r.has(n)===false){a=new bu(e,t);r.set(n,[]);r.get(n).push(a)}else{if(i>=r.get(n).length){a=new bu(e,t);r.get(n).push(a)}else{a=r.get(n)[i]}}return a}function i(){r=new WeakMap}return{get:n,dispose:i}}function Mu(e){Fn.call(this);this.type="MeshDepthMaterial";this.depthPacking=Wt;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.setValues(e)}Mu.prototype=Object.create(Fn.prototype);Mu.prototype.constructor=Mu;Mu.prototype.isMeshDepthMaterial=true;Mu.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.depthPacking=e.depthPacking;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.map=e.map;this.alphaMap=e.alphaMap;this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;return this};function Su(e){Fn.call(this);this.type="MeshDistanceMaterial";this.referencePosition=new pr;this.nearDistance=1;this.farDistance=1e3;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.setValues(e)}Su.prototype=Object.create(Fn.prototype);Su.prototype.constructor=Su;Su.prototype.isMeshDistanceMaterial=true;Su.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.referencePosition.copy(e.referencePosition);this.nearDistance=e.nearDistance;this.farDistance=e.farDistance;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.map=e.map;this.alphaMap=e.alphaMap;this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;return this};var Eu="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";var Tu="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function Lu(e,t,r){var n=new Yi;var i=new ir,o=new ir,h=new hr,d=[],p=[],v={};var m={0:u,1:l,2:c};var g=new Bi({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new ir},radius:{value:4}},vertexShader:Tu,fragmentShader:Eu});var y=g.clone();y.defines.HORIZONTAL_PASS=1;var x=new ci;x.setAttribute("position",new Vn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var _=new Ai(x,g);var b=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=a;this.render=function(t,a,l){if(b.enabled===false)return;if(b.autoUpdate===false&&b.needsUpdate===false)return;if(t.length===0)return;var u=e.getRenderTarget();var c=e.getActiveCubeFace();var d=e.getActiveMipmapLevel();var p=e.state;p.setBlending(f);p.buffers.color.setClear(1,1,1,1);p.buffers.depth.setTest(true);p.setScissorTest(false);for(var v=0,m=t.length;v<m;v++){var g=t[v];var y=g.shadow;if(y===undefined){console.warn("THREE.WebGLShadowMap:",g,"has no shadow.");continue}if(y.autoUpdate===false&&y.needsUpdate===false)continue;i.copy(y.mapSize);var x=y.getFrameExtents();i.multiply(x);o.copy(y.mapSize);if(i.x>r||i.y>r){if(i.x>r){o.x=Math.floor(r/x.x);i.x=o.x*x.x;y.mapSize.x=o.x}if(i.y>r){o.y=Math.floor(r/x.y);i.y=o.y*x.y;y.mapSize.y=o.y}}if(y.map===null&&!y.isPointLightShadow&&this.type===s){var _={minFilter:ce,magFilter:ce,format:Le};y.map=new fr(i.x,i.y,_);y.map.texture.name=g.name+".shadowMap";y.mapPass=new fr(i.x,i.y,_);y.camera.updateProjectionMatrix()}if(y.map===null){var _={minFilter:se,magFilter:se,format:Le};y.map=new fr(i.x,i.y,_);y.map.texture.name=g.name+".shadowMap";y.camera.updateProjectionMatrix()}e.setRenderTarget(y.map);e.clear();var M=y.getViewportCount();for(var S=0;S<M;S++){var E=y.getViewport(S);h.set(o.x*E.x,o.y*E.y,o.x*E.z,o.y*E.w);p.viewport(h);y.updateMatrices(g,S);n=y.getFrustum();T(a,l,y.camera,g,this.type)}if(!y.isPointLightShadow&&this.type===s){w(y,l)}y.needsUpdate=false}b.needsUpdate=false;e.setRenderTarget(u,c,d)};function w(r,n){var i=t.update(_);g.uniforms.shadow_pass.value=r.map.texture;g.uniforms.resolution.value=r.mapSize;g.uniforms.radius.value=r.radius;e.setRenderTarget(r.mapPass);e.clear();e.renderBufferDirect(n,null,i,g,_,null);y.uniforms.shadow_pass.value=r.mapPass.texture;y.uniforms.resolution.value=r.mapSize;y.uniforms.radius.value=r.radius;e.setRenderTarget(r.map);e.clear();e.renderBufferDirect(n,null,i,y,_,null)}function M(e,t,r){var n=e<<0|t<<1|r<<2;var i=d[n];if(i===undefined){i=new Mu({depthPacking:jt,morphTargets:e,skinning:t});d[n]=i}return i}function S(e,t,r){var n=e<<0|t<<1|r<<2;var i=p[n];if(i===undefined){i=new Su({morphTargets:e,skinning:t});p[n]=i}return i}function E(t,r,n,i,a,o,l){var u=null;var c=M;var h=t.customDepthMaterial;if(i.isPointLight===true){c=S;h=t.customDistanceMaterial}if(h===undefined){var f=false;if(n.morphTargets===true){f=r.morphAttributes&&r.morphAttributes.position&&r.morphAttributes.position.length>0}var d=false;if(t.isSkinnedMesh===true){if(n.skinning===true){d=true}else{console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t)}}var p=t.isInstancedMesh===true;u=c(f,d,p)}else{u=h}if(e.localClippingEnabled&&n.clipShadows===true&&n.clippingPlanes.length!==0){var g=u.uuid,y=n.uuid;var x=v[g];if(x===undefined){x={};v[g]=x}var _=x[y];if(_===undefined){_=u.clone();x[y]=_}u=_}u.visible=n.visible;u.wireframe=n.wireframe;if(l===s){u.side=n.shadowSide!==null?n.shadowSide:n.side}else{u.side=n.shadowSide!==null?n.shadowSide:m[n.side]}u.clipShadows=n.clipShadows;u.clippingPlanes=n.clippingPlanes;u.clipIntersection=n.clipIntersection;u.wireframeLinewidth=n.wireframeLinewidth;u.linewidth=n.linewidth;if(i.isPointLight===true&&u.isMeshDistanceMaterial===true){u.referencePosition.setFromMatrixPosition(i.matrixWorld);u.nearDistance=a;u.farDistance=o}return u}function T(r,i,a,o,l){if(r.visible===false)return;var u=r.layers.test(i.layers);if(u&&(r.isMesh||r.isLine||r.isPoints)){if((r.castShadow||r.receiveShadow&&l===s)&&(!r.frustumCulled||n.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,r.matrixWorld);var c=t.update(r);var h=r.material;if(Array.isArray(h)){var f=c.groups;for(var d=0,p=f.length;d<p;d++){var v=f[d];var m=h[v.materialIndex];if(m&&m.visible){var g=E(r,c,m,o,a.near,a.far,l);e.renderBufferDirect(a,null,c,g,r,v)}}}else if(h.visible){var g=E(r,c,h,o,a.near,a.far,l);e.renderBufferDirect(a,null,c,g,r,null)}}}var y=r.children;for(var x=0,_=y.length;x<_;x++){T(y[x],i,a,o,l)}}}function Au(e,t,a){var o,s;var l=a.isWebGL2;function h(){var t=false;var r=new hr;var n=null;var i=new hr(0,0,0,0);return{setMask:function(r){if(n!==r&&!t){e.colorMask(r,r,r,r);n=r}},setLocked:function(e){t=e},setClear:function(t,n,a,o,s){if(s===true){t*=o;n*=o;a*=o}r.set(t,n,a,o);if(i.equals(r)===false){e.clearColor(t,n,a,o);i.copy(r)}},reset:function(){t=false;n=null;i.set(-1,0,0,0)}}}function k(){var t=false;var r=null;var n=null;var i=null;return{setTest:function(e){if(e){xe(2929)}else{_e(2929)}},setMask:function(n){if(r!==n&&!t){e.depthMask(n);r=n}},setFunc:function(t){if(n!==t){if(t){switch(t){case D:e.depthFunc(512);break;case N:e.depthFunc(519);break;case z:e.depthFunc(513);break;case B:e.depthFunc(515);break;case H:e.depthFunc(514);break;case F:e.depthFunc(518);break;case U:e.depthFunc(516);break;case G:e.depthFunc(517);break;default:e.depthFunc(515)}}else{e.depthFunc(515)}n=t}},setLocked:function(e){t=e},setClear:function(t){if(i!==t){e.clearDepth(t);i=t}},reset:function(){t=false;r=null;n=null;i=null}}}function V(){var t=false;var r=null;var n=null;var i=null;var a=null;var o=null;var s=null;var l=null;var u=null;return{setTest:function(e){if(!t){if(e){xe(2960)}else{_e(2960)}}},setMask:function(n){if(r!==n&&!t){e.stencilMask(n);r=n}},setFunc:function(t,r,o){if(n!==t||i!==r||a!==o){e.stencilFunc(t,r,o);n=t;i=r;a=o}},setOp:function(t,r,n){if(o!==t||s!==r||l!==n){e.stencilOp(t,r,n);o=t;s=r;l=n}},setLocked:function(e){t=e},setClear:function(t){if(u!==t){e.clearStencil(t);u=t}},reset:function(){t=false;r=null;n=null;i=null;a=null;o=null;s=null;l=null;u=null}}}var W=new h;var j=new k;var q=new V;var X={};var Y=null;var Z=null;var J=null;var Q=null;var K=null;var $=null;var ee=null;var te=null;var re=null;var ne=false;var ie=null;var ae=null;var oe=null;var se=null;var le=null;var ue=e.getParameter(35661);var ce=false;var he=0;var fe=e.getParameter(7938);if(fe.indexOf("WebGL")!==-1){he=parseFloat(/^WebGL (\d)/.exec(fe)[1]);ce=he>=1}else if(fe.indexOf("OpenGL ES")!==-1){he=parseFloat(/^OpenGL ES (\d)/.exec(fe)[1]);ce=he>=2}var de=null;var pe={};var ve=new hr;var me=new hr;function ge(t,r,n){var i=new Uint8Array(4);var a=e.createTexture();e.bindTexture(t,a);e.texParameteri(t,10241,9728);e.texParameteri(t,10240,9728);for(var o=0;o<n;o++){e.texImage2D(r+o,0,6408,1,1,0,6408,5121,i)}return a}var ye={};ye[3553]=ge(3553,3553,1);ye[34067]=ge(34067,34069,6);W.setClear(0,0,0,1);j.setClear(1);q.setClear(0);xe(2929);j.setFunc(B);Le(false);Ae(n);xe(2884);Ee(f);function xe(t){if(X[t]!==true){e.enable(t);X[t]=true}}function _e(t){if(X[t]!==false){e.disable(t);X[t]=false}}function be(t){if(Y!==t){e.useProgram(t);Y=t;return true}return false}var we=(o={},o[y]=32774,o[x]=32778,o[_]=32779,o);if(l){we[b]=32775;we[w]=32776}else{var Me=t.get("EXT_blend_minmax");if(Me!==null){we[b]=Me.MIN_EXT;we[w]=Me.MAX_EXT}}var Se=(s={},s[M]=0,s[S]=1,s[E]=768,s[L]=770,s[O]=776,s[C]=774,s[R]=772,s[T]=769,s[A]=771,s[I]=775,s[P]=773,s);function Ee(t,r,n,i,a,o,s,l){if(t===f){if(Z){_e(3042);Z=false}return}if(!Z){xe(3042);Z=true}if(t!==g){if(t!==J||l!==ne){if(Q!==y||ee!==y){e.blendEquation(32774);Q=y;ee=y}if(l){switch(t){case d:e.blendFuncSeparate(1,771,1,771);break;case p:e.blendFunc(1,1);break;case v:e.blendFuncSeparate(0,0,769,771);break;case m:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);break}}else{switch(t){case d:e.blendFuncSeparate(770,771,1,771);break;case p:e.blendFunc(770,1);break;case v:e.blendFunc(0,769);break;case m:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);break}}K=null;$=null;te=null;re=null;J=t;ne=l}return}a=a||r;o=o||n;s=s||i;if(r!==Q||a!==ee){e.blendEquationSeparate(we[r],we[a]);Q=r;ee=a}if(n!==K||i!==$||o!==te||s!==re){e.blendFuncSeparate(Se[n],Se[i],Se[o],Se[s]);K=n;$=i;te=o;re=s}J=t;ne=null}function Te(e,t){e.side===c?_e(2884):xe(2884);var r=e.side===u;if(t)r=!r;Le(r);e.blending===d&&e.transparent===false?Ee(f):Ee(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha);j.setFunc(e.depthFunc);j.setTest(e.depthTest);j.setMask(e.depthWrite);W.setMask(e.colorWrite);var n=e.stencilWrite;q.setTest(n);if(n){q.setMask(e.stencilWriteMask);q.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask);q.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)}Pe(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function Le(t){if(ie!==t){if(t){e.frontFace(2304)}else{e.frontFace(2305)}ie=t}}function Ae(t){if(t!==r){xe(2884);if(t!==ae){if(t===n){e.cullFace(1029)}else if(t===i){e.cullFace(1028)}else{e.cullFace(1032)}}}else{_e(2884)}ae=t}function Re(t){if(t!==oe){if(ce)e.lineWidth(t);oe=t}}function Pe(t,r,n){if(t){xe(32823);if(se!==r||le!==n){e.polygonOffset(r,n);se=r;le=n}}else{_e(32823)}}function Ce(e){if(e){xe(3089)}else{_e(3089)}}function Ie(t){if(t===undefined)t=33984+ue-1;if(de!==t){e.activeTexture(t);de=t}}function Oe(t,r){if(de===null){Ie()}var n=pe[de];if(n===undefined){n={type:undefined,texture:undefined};pe[de]=n}if(n.type!==t||n.texture!==r){e.bindTexture(t,r||ye[t]);n.type=t;n.texture=r}}function De(){var t=pe[de];if(t!==undefined&&t.type!==undefined){e.bindTexture(t.type,null);t.type=undefined;t.texture=undefined}}function Ne(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function ze(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function Be(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function He(t){if(ve.equals(t)===false){e.scissor(t.x,t.y,t.z,t.w);ve.copy(t)}}function Fe(t){if(me.equals(t)===false){e.viewport(t.x,t.y,t.z,t.w);me.copy(t)}}function Ue(){X={};de=null;pe={};Y=null;Z=null;J=null;Q=null;K=null;$=null;ee=null;te=null;re=null;ne=false;ie=null;ae=null;oe=null;se=null;le=null;W.reset();j.reset();q.reset()}return{buffers:{color:W,depth:j,stencil:q},enable:xe,disable:_e,useProgram:be,setBlending:Ee,setMaterial:Te,setFlipSided:Le,setCullFace:Ae,setLineWidth:Re,setPolygonOffset:Pe,setScissorTest:Ce,activeTexture:Ie,bindTexture:Oe,unbindTexture:De,compressedTexImage2D:Ne,texImage2D:ze,texImage3D:Be,scissor:He,viewport:Fe,reset:Ue}}function Ru(e,t,r,n,i,a,o){var s,l;var u=i.isWebGL2;var c=i.maxTextures;var h=i.maxCubemapSize;var f=i.maxTextureSize;var d=i.maxSamples;var p=new WeakMap;var v;var m=false;try{m=typeof OffscreenCanvas!=="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(te){}function g(e,t){return m?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(e,t,r,n){var i=1;if(e.width>n||e.height>n){i=n/Math.max(e.width,e.height)}if(i<1||t===true){if(typeof HTMLImageElement!=="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!=="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!=="undefined"&&e instanceof ImageBitmap){var a=t?nr.floorPowerOfTwo:Math.floor;var o=a(i*e.width);var s=a(i*e.height);if(v===undefined)v=g(o,s);var l=r?g(o,s):v;l.width=o;l.height=s;var u=l.getContext("2d");u.drawImage(e,0,0,o,s);console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+s+").");return l}else{if("data"in e){console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}}return e}function x(e){return nr.isPowerOfTwo(e.width)&&nr.isPowerOfTwo(e.height)}function _(e){if(u)return false;return e.wrapS!==ae||e.wrapT!==ae||e.minFilter!==se&&e.minFilter!==ce}function b(e,t){return e.generateMipmaps&&t&&e.minFilter!==se&&e.minFilter!==ce}function w(t,r,i,a){e.generateMipmap(t);var o=n.get(r);o.__maxMipLevel=Math.log(Math.max(i,a))*Math.LOG2E}function M(r,n,i){if(u===false)return n;if(r!==null){if(e[r]!==undefined)return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}var a=n;if(n===6403){if(i===5126)a=33326;if(i===5131)a=33325;if(i===5121)a=33321}if(n===6407){if(i===5126)a=34837;if(i===5131)a=34843;if(i===5121)a=32849}if(n===6408){if(i===5126)a=34836;if(i===5131)a=34842;if(i===5121)a=32856}if(a===33325||a===33326||a===34842||a===34836){t.get("EXT_color_buffer_float")}return a}function S(e){if(e===se||e===le||e===ue){return 9728}return 9729}function E(e){var t=e.target;t.removeEventListener("dispose",E);L(t);if(t.isVideoTexture){p.delete(t)}o.memory.textures--}function T(e){var t=e.target;t.removeEventListener("dispose",T);A(t);o.memory.textures--}function L(t){var r=n.get(t);if(r.__webglInit===undefined)return;e.deleteTexture(r.__webglTexture);n.remove(t)}function A(t){var r=n.get(t);var i=n.get(t.texture);if(!t)return;if(i.__webglTexture!==undefined){e.deleteTexture(i.__webglTexture)}if(t.depthTexture){t.depthTexture.dispose()}if(t.isWebGLCubeRenderTarget){for(var a=0;a<6;a++){e.deleteFramebuffer(r.__webglFramebuffer[a]);if(r.__webglDepthbuffer)e.deleteRenderbuffer(r.__webglDepthbuffer[a])}}else{e.deleteFramebuffer(r.__webglFramebuffer);if(r.__webglDepthbuffer)e.deleteRenderbuffer(r.__webglDepthbuffer);if(r.__webglMultisampledFramebuffer)e.deleteFramebuffer(r.__webglMultisampledFramebuffer);if(r.__webglColorRenderbuffer)e.deleteRenderbuffer(r.__webglColorRenderbuffer);if(r.__webglDepthRenderbuffer)e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}n.remove(t.texture);n.remove(t)}var R=0;function P(){R=0}function C(){var e=R;if(e>=c){console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+c)}R+=1;return e}function I(e,t){var i=n.get(e);if(e.isVideoTexture)J(e);if(e.version>0&&i.__version!==e.version){var a=e.image;if(a===undefined){console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined")}else if(a.complete===false){console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}else{U(i,e,t);return}}r.activeTexture(33984+t);r.bindTexture(3553,i.__webglTexture)}function O(e,t){var i=n.get(e);if(e.version>0&&i.__version!==e.version){U(i,e,t);return}r.activeTexture(33984+t);r.bindTexture(35866,i.__webglTexture)}function D(e,t){var i=n.get(e);if(e.version>0&&i.__version!==e.version){U(i,e,t);return}r.activeTexture(33984+t);r.bindTexture(32879,i.__webglTexture)}function N(e,t){var i=n.get(e);if(e.version>0&&i.__version!==e.version){G(i,e,t);return}r.activeTexture(33984+t);r.bindTexture(34067,i.__webglTexture)}var z=(s={},s[ie]=10497,s[ae]=33071,s[oe]=33648,s);var B=(l={},l[se]=9728,l[le]=9984,l[ue]=9986,l[ce]=9729,l[he]=9985,l[fe]=9987,l);function H(r,a,o){if(o){e.texParameteri(r,10242,z[a.wrapS]);e.texParameteri(r,10243,z[a.wrapT]);if(r===32879||r===35866){e.texParameteri(r,32882,z[a.wrapR])}e.texParameteri(r,10240,B[a.magFilter]);e.texParameteri(r,10241,B[a.minFilter])}else{e.texParameteri(r,10242,33071);e.texParameteri(r,10243,33071);if(r===32879||r===35866){e.texParameteri(r,32882,33071)}if(a.wrapS!==ae||a.wrapT!==ae){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.")}e.texParameteri(r,10240,S(a.magFilter));e.texParameteri(r,10241,S(a.minFilter));if(a.minFilter!==se&&a.minFilter!==ce){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")}}var s=t.get("EXT_texture_filter_anisotropic");if(s){if(a.type===xe&&t.get("OES_texture_float_linear")===null)return;if(a.type===_e&&(u||t.get("OES_texture_half_float_linear"))===null)return;if(a.anisotropy>1||n.get(a).__currentAnisotropy){e.texParameterf(r,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy()));n.get(a).__currentAnisotropy=a.anisotropy}}}function F(t,r){if(t.__webglInit===undefined){t.__webglInit=true;r.addEventListener("dispose",E);t.__webglTexture=e.createTexture();o.memory.textures++}}function U(t,n,i){var o=3553;if(n.isDataTexture2DArray)o=35866;if(n.isDataTexture3D)o=32879;F(t,n);r.activeTexture(33984+i);r.bindTexture(o,t.__webglTexture);e.pixelStorei(37440,n.flipY);e.pixelStorei(37441,n.premultiplyAlpha);e.pixelStorei(3317,n.unpackAlignment);var s=_(n)&&x(n.image)===false;var l=y(n.image,s,false,f);var c=x(l)||u,h=a.convert(n.format);var d=a.convert(n.type),p=M(n.internalFormat,h,d);H(o,n,c);var v;var m=n.mipmaps;if(n.isDepthTexture){p=6402;if(u){if(n.type===xe){p=36012}else if(n.type===ye){p=33190}else if(n.type===Se){p=35056}else{p=33189}}else{if(n.type===xe){console.error("WebGLRenderer: Floating point depth texture requires WebGL2.")}}if(n.format===Pe&&p===6402){if(n.type!==me&&n.type!==ye){console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.");n.type=me;d=a.convert(n.type)}}if(n.format===Ce&&p===6402){p=34041;if(n.type!==Se){console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.");n.type=Se;d=a.convert(n.type)}}r.texImage2D(3553,0,p,l.width,l.height,0,h,d,null)}else if(n.isDataTexture){if(m.length>0&&c){for(var g=0,S=m.length;g<S;g++){v=m[g];r.texImage2D(3553,g,p,v.width,v.height,0,h,d,v.data)}n.generateMipmaps=false;t.__maxMipLevel=m.length-1}else{r.texImage2D(3553,0,p,l.width,l.height,0,h,d,l.data);t.__maxMipLevel=0}}else if(n.isCompressedTexture){for(var g=0,S=m.length;g<S;g++){v=m[g];if(n.format!==Le&&n.format!==Te){if(h!==null){r.compressedTexImage2D(3553,g,p,v.width,v.height,0,v.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")}}else{r.texImage2D(3553,g,p,v.width,v.height,0,h,d,v.data)}}t.__maxMipLevel=m.length-1}else if(n.isDataTexture2DArray){r.texImage3D(35866,0,p,l.width,l.height,l.depth,0,h,d,l.data);t.__maxMipLevel=0}else if(n.isDataTexture3D){r.texImage3D(32879,0,p,l.width,l.height,l.depth,0,h,d,l.data);t.__maxMipLevel=0}else{if(m.length>0&&c){for(var g=0,S=m.length;g<S;g++){v=m[g];r.texImage2D(3553,g,p,h,d,v)}n.generateMipmaps=false;t.__maxMipLevel=m.length-1}else{r.texImage2D(3553,0,p,h,d,l);t.__maxMipLevel=0}}if(b(n,c)){w(o,n,l.width,l.height)}t.__version=n.version;if(n.onUpdate)n.onUpdate(n)}function G(t,n,i){if(n.image.length!==6)return;F(t,n);r.activeTexture(33984+i);r.bindTexture(34067,t.__webglTexture);e.pixelStorei(37440,n.flipY);e.pixelStorei(37441,n.premultiplyAlpha);e.pixelStorei(3317,n.unpackAlignment);var o=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture);var s=n.image[0]&&n.image[0].isDataTexture;var l=[];for(var c=0;c<6;c++){if(!o&&!s){l[c]=y(n.image[c],false,true,h)}else{l[c]=s?n.image[c].image:n.image[c]}}var f=l[0],d=x(f)||u,p=a.convert(n.format),v=a.convert(n.type),m=M(n.internalFormat,p,v);H(34067,n,d);var g;if(o){for(var c=0;c<6;c++){g=l[c].mipmaps;for(var _=0;_<g.length;_++){var S=g[_];if(n.format!==Le&&n.format!==Te){if(p!==null){r.compressedTexImage2D(34069+c,_,m,S.width,S.height,0,S.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()")}}else{r.texImage2D(34069+c,_,m,S.width,S.height,0,p,v,S.data)}}}t.__maxMipLevel=g.length-1}else{g=n.mipmaps;for(var c=0;c<6;c++){if(s){r.texImage2D(34069+c,0,m,l[c].width,l[c].height,0,p,v,l[c].data);for(var _=0;_<g.length;_++){var S=g[_];var E=S.image[c].image;r.texImage2D(34069+c,_+1,m,E.width,E.height,0,p,v,E.data)}}else{r.texImage2D(34069+c,0,m,p,v,l[c]);for(var _=0;_<g.length;_++){var S=g[_];r.texImage2D(34069+c,_+1,m,p,v,S.image[c])}}}t.__maxMipLevel=g.length}if(b(n,d)){w(34067,n,f.width,f.height)}t.__version=n.version;if(n.onUpdate)n.onUpdate(n)}function k(t,i,o,s){var l=a.convert(i.texture.format);var u=a.convert(i.texture.type);var c=M(i.texture.internalFormat,l,u);r.texImage2D(s,0,c,i.width,i.height,0,l,u,null);e.bindFramebuffer(36160,t);e.framebufferTexture2D(36160,o,s,n.get(i.texture).__webglTexture,0);e.bindFramebuffer(36160,null)}function V(t,r,n){e.bindRenderbuffer(36161,t);if(r.depthBuffer&&!r.stencilBuffer){var i=33189;if(n){var o=r.depthTexture;if(o&&o.isDepthTexture){if(o.type===xe){i=36012}else if(o.type===ye){i=33190}}var s=Z(r);e.renderbufferStorageMultisample(36161,s,i,r.width,r.height)}else{e.renderbufferStorage(36161,i,r.width,r.height)}e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(n){var s=Z(r);e.renderbufferStorageMultisample(36161,s,35056,r.width,r.height)}else{e.renderbufferStorage(36161,34041,r.width,r.height)}e.framebufferRenderbuffer(36160,33306,36161,t)}else{var l=a.convert(r.texture.format);var u=a.convert(r.texture.type);var i=M(r.texture.internalFormat,l,u);if(n){var s=Z(r);e.renderbufferStorageMultisample(36161,s,i,r.width,r.height)}else{e.renderbufferStorage(36161,i,r.width,r.height)}}e.bindRenderbuffer(36161,null)}function W(t,r){var i=r&&r.isWebGLCubeRenderTarget;if(i)throw new Error("Depth Texture with cube render targets is not supported");e.bindFramebuffer(36160,t);if(!(r.depthTexture&&r.depthTexture.isDepthTexture)){throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture")}if(!n.get(r.depthTexture).__webglTexture||r.depthTexture.image.width!==r.width||r.depthTexture.image.height!==r.height){r.depthTexture.image.width=r.width;r.depthTexture.image.height=r.height;r.depthTexture.needsUpdate=true}I(r.depthTexture,0);var a=n.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===Pe){e.framebufferTexture2D(36160,36096,3553,a,0)}else if(r.depthTexture.format===Ce){e.framebufferTexture2D(36160,33306,3553,a,0)}else{throw new Error("Unknown depthTexture format")}}function j(t){var r=n.get(t);var i=t.isWebGLCubeRenderTarget===true;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");W(r.__webglFramebuffer,t)}else{if(i){r.__webglDepthbuffer=[];for(var a=0;a<6;a++){e.bindFramebuffer(36160,r.__webglFramebuffer[a]);r.__webglDepthbuffer[a]=e.createRenderbuffer();V(r.__webglDepthbuffer[a],t,false)}}else{e.bindFramebuffer(36160,r.__webglFramebuffer);r.__webglDepthbuffer=e.createRenderbuffer();V(r.__webglDepthbuffer,t,false)}}e.bindFramebuffer(36160,null)}function q(t){var i=n.get(t);var s=n.get(t.texture);t.addEventListener("dispose",T);s.__webglTexture=e.createTexture();o.memory.textures++;var l=t.isWebGLCubeRenderTarget===true;var c=t.isWebGLMultisampleRenderTarget===true;var h=x(t)||u;if(u&&t.texture.format===Te&&(t.texture.type===xe||t.texture.type===_e)){t.texture.format=Le;console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")}if(l){i.__webglFramebuffer=[];for(var f=0;f<6;f++){i.__webglFramebuffer[f]=e.createFramebuffer()}}else{i.__webglFramebuffer=e.createFramebuffer();if(c){if(u){i.__webglMultisampledFramebuffer=e.createFramebuffer();i.__webglColorRenderbuffer=e.createRenderbuffer();e.bindRenderbuffer(36161,i.__webglColorRenderbuffer);var d=a.convert(t.texture.format);var p=a.convert(t.texture.type);var v=M(t.texture.internalFormat,d,p);var m=Z(t);e.renderbufferStorageMultisample(36161,m,v,t.width,t.height);e.bindFramebuffer(36160,i.__webglMultisampledFramebuffer);e.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer);e.bindRenderbuffer(36161,null);if(t.depthBuffer){i.__webglDepthRenderbuffer=e.createRenderbuffer();V(i.__webglDepthRenderbuffer,t,true)}e.bindFramebuffer(36160,null)}else{console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}}}if(l){r.bindTexture(34067,s.__webglTexture);H(34067,t.texture,h);for(var f=0;f<6;f++){k(i.__webglFramebuffer[f],t,36064,34069+f)}if(b(t.texture,h)){w(34067,t.texture,t.width,t.height)}r.bindTexture(34067,null)}else{r.bindTexture(3553,s.__webglTexture);H(3553,t.texture,h);k(i.__webglFramebuffer,t,36064,3553);if(b(t.texture,h)){w(3553,t.texture,t.width,t.height)}r.bindTexture(3553,null)}if(t.depthBuffer){j(t)}}function X(e){var t=e.texture;var i=x(e)||u;if(b(t,i)){var a=e.isWebGLCubeRenderTarget?34067:3553;var o=n.get(t).__webglTexture;r.bindTexture(a,o);w(a,t,e.width,e.height);r.bindTexture(a,null)}}function Y(t){if(t.isWebGLMultisampleRenderTarget){if(u){var r=n.get(t);e.bindFramebuffer(36008,r.__webglMultisampledFramebuffer);e.bindFramebuffer(36009,r.__webglFramebuffer);var i=t.width;var a=t.height;var o=16384;if(t.depthBuffer)o|=256;if(t.stencilBuffer)o|=1024;e.blitFramebuffer(0,0,i,a,0,0,i,a,o,9728);e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer)}else{console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}}}function Z(e){return u&&e.isWebGLMultisampleRenderTarget?Math.min(d,e.samples):0}function J(e){var t=o.render.frame;if(p.get(e)!==t){p.set(e,t);e.update()}}var Q=false;var K=false;function $(e,t){if(e&&e.isWebGLRenderTarget){if(Q===false){console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.");Q=true}e=e.texture}I(e,t)}function ee(e,t){if(e&&e.isWebGLCubeRenderTarget){if(K===false){console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.");K=true}e=e.texture}N(e,t)}this.allocateTextureUnit=C;this.resetTextureUnits=P;this.setTexture2D=I;this.setTexture2DArray=O;this.setTexture3D=D;this.setTextureCube=N;this.setupRenderTarget=q;this.updateRenderTargetMipmap=X;this.updateMultisampleRenderTarget=Y;this.safeSetTexture2D=$;this.safeSetTextureCube=ee}function Pu(e,t,r){var n=r.isWebGL2;function i(e){var r;if(e===de)return 5121;if(e===be)return 32819;if(e===we)return 32820;if(e===Me)return 33635;if(e===pe)return 5120;if(e===ve)return 5122;if(e===me)return 5123;if(e===ge)return 5124;if(e===ye)return 5125;if(e===xe)return 5126;if(e===_e){if(n)return 5131;r=t.get("OES_texture_half_float");if(r!==null){return r.HALF_FLOAT_OES}else{return null}}if(e===Ee)return 6406;if(e===Te)return 6407;if(e===Le)return 6408;if(e===Ae)return 6409;if(e===Re)return 6410;if(e===Pe)return 6402;if(e===Ce)return 34041;if(e===Ie)return 6403;if(e===Oe)return 36244;if(e===De)return 33319;if(e===Ne)return 33320;if(e===ze)return 36248;if(e===Be)return 36249;if(e===He||e===Fe||e===Ue||e===Ge){r=t.get("WEBGL_compressed_texture_s3tc");if(r!==null){if(e===He)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Fe)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ue)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Ge)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else{return null}}if(e===ke||e===Ve||e===We||e===je){r=t.get("WEBGL_compressed_texture_pvrtc");if(r!==null){if(e===ke)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Ve)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===We)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===je)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else{return null}}if(e===qe){r=t.get("WEBGL_compressed_texture_etc1");if(r!==null){return r.COMPRESSED_RGB_ETC1_WEBGL}else{return null}}if(e===Xe||e===Ye){r=t.get("WEBGL_compressed_texture_etc");if(r!==null){if(e===Xe)return r.COMPRESSED_RGB8_ETC2;if(e===Ye)return r.COMPRESSED_RGBA8_ETC2_EAC}}if(e===Ze||e===Je||e===Qe||e===Ke||e===$e||e===et||e===tt||e===rt||e===nt||e===it||e===at||e===ot||e===st||e===lt||e===ct||e===ht||e===ft||e===dt||e===pt||e===vt||e===mt||e===gt||e===yt||e===xt||e===_t||e===bt||e===wt||e===Mt){r=t.get("WEBGL_compressed_texture_astc");if(r!==null){return e}else{return null}}if(e===ut){r=t.get("EXT_texture_compression_bptc");if(r!==null){return e}else{return null}}if(e===Se){if(n)return 34042;r=t.get("WEBGL_depth_texture");if(r!==null){return r.UNSIGNED_INT_24_8_WEBGL}else{return null}}}return{convert:i}}function Cu(e){if(e===void 0){e=[]}Fi.call(this);this.cameras=e}Cu.prototype=Object.assign(Object.create(Fi.prototype),{constructor:Cu,isArrayCamera:true});function Iu(){pn.call(this);this.type="Group"}Iu.prototype=Object.assign(Object.create(pn.prototype),{constructor:Iu,isGroup:true});function Ou(){this._targetRay=null;this._grip=null;this._hand=null}Object.assign(Ou.prototype,{constructor:Ou,getHandSpace:function(){if(this._hand===null){this._hand=new Iu;this._hand.matrixAutoUpdate=false;this._hand.visible=false;this._hand.joints={};this._hand.inputState={pinching:false}}return this._hand},getTargetRaySpace:function(){if(this._targetRay===null){this._targetRay=new Iu;this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false}return this._targetRay},getGripSpace:function(){if(this._grip===null){this._grip=new Iu;this._grip.matrixAutoUpdate=false;this._grip.visible=false}return this._grip},dispatchEvent:function(e){if(this._targetRay!==null){this._targetRay.dispatchEvent(e)}if(this._grip!==null){this._grip.dispatchEvent(e)}if(this._hand!==null){this._hand.dispatchEvent(e)}return this},disconnect:function(e){this.dispatchEvent({type:"disconnected",data:e});if(this._targetRay!==null){this._targetRay.visible=false}if(this._grip!==null){this._grip.visible=false}if(this._hand!==null){this._hand.visible=false}return this},update:function(e,t,r){var n=null;var i=null;var a=null;var o=this._targetRay;var s=this._grip;var l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){a=true;for(var u=0,c=e.hand.values();u<c.length;u++){var h=c[u];var f=t.getJointPose(h,r);if(l.joints[h.jointName]===undefined){var d=new Iu;d.matrixAutoUpdate=false;d.visible=false;l.joints[h.jointName]=d;l.add(d)}var p=l.joints[h.jointName];if(f!==null){p.matrix.fromArray(f.transform.matrix);p.matrix.decompose(p.position,p.rotation,p.scale);p.jointRadius=f.radius}p.visible=f!==null}var v=l.joints["index-finger-tip"];var m=l.joints["thumb-tip"];var g=v.position.distanceTo(m.position);var y=.02;var x=.005;if(l.inputState.pinching&&g>y+x){l.inputState.pinching=false;this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})}else if(!l.inputState.pinching&&g<=y-x){l.inputState.pinching=true;this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this})}}else{if(o!==null){n=t.getPose(e.targetRaySpace,r);if(n!==null){o.matrix.fromArray(n.transform.matrix);o.matrix.decompose(o.position,o.rotation,o.scale)}}if(s!==null&&e.gripSpace){i=t.getPose(e.gripSpace,r);if(i!==null){s.matrix.fromArray(i.transform.matrix);s.matrix.decompose(s.position,s.rotation,s.scale)}}}}if(o!==null){o.visible=n!==null}if(s!==null){s.visible=i!==null}if(l!==null){l.visible=a!==null}return this}});function Du(e,t){var r=this;var n=null;var i=1;var a=null;var o="local-floor";var s=null;var l=[];var u=new Map;var c=new Fi;c.layers.enable(1);c.viewport=new hr;var h=new Fi;h.layers.enable(2);h.viewport=new hr;var f=[c,h];var d=new Cu;d.layers.enable(1);d.layers.enable(2);var p=null;var v=null;this.enabled=false;this.isPresenting=false;this.getController=function(e){var t=l[e];if(t===undefined){t=new Ou;l[e]=t}return t.getTargetRaySpace()};this.getControllerGrip=function(e){var t=l[e];if(t===undefined){t=new Ou;l[e]=t}return t.getGripSpace()};this.getHand=function(e){var t=l[e];if(t===undefined){t=new Ou;l[e]=t}return t.getHandSpace()};function m(e){var t=u.get(e.inputSource);if(t){t.dispatchEvent({type:e.type,data:e.inputSource})}}function g(){u.forEach((function(e,t){e.disconnect(t)}));u.clear();p=null;v=null;e.setFramebuffer(null);e.setRenderTarget(e.getRenderTarget());E.stop();r.isPresenting=false;r.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(e){i=e;if(r.isPresenting===true){console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")}};this.setReferenceSpaceType=function(e){o=e;if(r.isPresenting===true){console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")}};this.getReferenceSpace=function(){return a};this.getSession=function(){return n};this.setSession=function(e){return __awaiter(this,void 0,void 0,(function(){var s,l,u;return __generator(this,(function(c){switch(c.label){case 0:n=e;if(!(n!==null))return[3,4];n.addEventListener("select",m);n.addEventListener("selectstart",m);n.addEventListener("selectend",m);n.addEventListener("squeeze",m);n.addEventListener("squeezestart",m);n.addEventListener("squeezeend",m);n.addEventListener("end",g);n.addEventListener("inputsourceschange",y);s=t.getContextAttributes();if(!(s.xrCompatible!==true))return[3,2];return[4,t.makeXRCompatible()];case 1:c.sent();c.label=2;case 2:l={antialias:s.antialias,alpha:s.alpha,depth:s.depth,stencil:s.stencil,framebufferScaleFactor:i};u=new XRWebGLLayer(n,t,l);n.updateRenderState({baseLayer:u});return[4,n.requestReferenceSpace(o)];case 3:a=c.sent();E.setContext(n);E.start();r.isPresenting=true;r.dispatchEvent({type:"sessionstart"});c.label=4;case 4:return[2]}}))}))};function y(e){var t=n.inputSources;for(var r=0;r<l.length;r++){u.set(t[r],l[r])}for(var r=0;r<e.removed.length;r++){var i=e.removed[r];var a=u.get(i);if(a){a.dispatchEvent({type:"disconnected",data:i});u.delete(i)}}for(var r=0;r<e.added.length;r++){var i=e.added[r];var a=u.get(i);if(a){a.dispatchEvent({type:"connected",data:i})}}}var x=new pr;var _=new pr;function b(e,t,r){x.setFromMatrixPosition(t.matrixWorld);_.setFromMatrixPosition(r.matrixWorld);var n=x.distanceTo(_);var i=t.projectionMatrix.elements;var a=r.projectionMatrix.elements;var o=i[14]/(i[10]-1);var s=i[14]/(i[10]+1);var l=(i[9]+1)/i[5];var u=(i[9]-1)/i[5];var c=(i[8]-1)/i[0];var h=(a[8]+1)/a[0];var f=o*c;var d=o*h;var p=n/(-c+h);var v=p*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale);e.translateX(v);e.translateZ(p);e.matrixWorld.compose(e.position,e.quaternion,e.scale);e.matrixWorldInverse.copy(e.matrixWorld).invert();var m=o+p;var g=s+p;var y=f-v;var b=d+(n-v);var w=l*s/g*m;var M=u*s/g*m;e.projectionMatrix.makePerspective(y,b,w,M,m,g)}function w(e,t){if(t===null){e.matrixWorld.copy(e.matrix)}else{e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix)}e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){d.near=h.near=c.near=e.near;d.far=h.far=c.far=e.far;if(p!==d.near||v!==d.far){n.updateRenderState({depthNear:d.near,depthFar:d.far});p=d.near;v=d.far}var t=e.parent;var r=d.cameras;w(d,t);for(var i=0;i<r.length;i++){w(r[i],t)}e.matrixWorld.copy(d.matrixWorld);e.matrix.copy(d.matrix);e.matrix.decompose(e.position,e.quaternion,e.scale);var a=e.children;for(var i=0,o=a.length;i<o;i++){a[i].updateMatrixWorld(true)}if(r.length===2){b(d,c,h)}else{d.projectionMatrix.copy(c.projectionMatrix)}return d};var M=null;function S(t,r){s=r.getViewerPose(a);if(s!==null){var i=s.views;var o=n.renderState.baseLayer;e.setFramebuffer(o.framebuffer);var u=false;if(i.length!==d.cameras.length){d.cameras.length=0;u=true}for(var c=0;c<i.length;c++){var h=i[c];var p=o.getViewport(h);var v=f[c];v.matrix.fromArray(h.transform.matrix);v.projectionMatrix.fromArray(h.projectionMatrix);v.viewport.set(p.x,p.y,p.width,p.height);if(c===0){d.matrix.copy(v.matrix)}if(u===true){d.cameras.push(v)}}}var m=n.inputSources;for(var c=0;c<l.length;c++){var g=l[c];var y=m[c];g.update(y,r,a)}if(M)M(t,r)}var E=new Zi;E.setAnimationLoop(S);this.setAnimationLoop=function(e){M=e};this.dispose=function(){}}Object.assign(Du.prototype,$t.prototype);function Nu(e){function t(e,t){e.fogColor.value.copy(t.color);if(t.isFog){e.fogNear.value=t.near;e.fogFar.value=t.far}else if(t.isFogExp2){e.fogDensity.value=t.density}}function r(e,t,r,u){if(t.isMeshBasicMaterial){n(e,t)}else if(t.isMeshLambertMaterial){n(e,t);l(e,t)}else if(t.isMeshToonMaterial){n(e,t);h(e,t)}else if(t.isMeshPhongMaterial){n(e,t);c(e,t)}else if(t.isMeshStandardMaterial){n(e,t);if(t.isMeshPhysicalMaterial){d(e,t)}else{f(e,t)}}else if(t.isMeshMatcapMaterial){n(e,t);p(e,t)}else if(t.isMeshDepthMaterial){n(e,t);v(e,t)}else if(t.isMeshDistanceMaterial){n(e,t);m(e,t)}else if(t.isMeshNormalMaterial){n(e,t);g(e,t)}else if(t.isLineBasicMaterial){i(e,t);if(t.isLineDashedMaterial){a(e,t)}}else if(t.isPointsMaterial){o(e,t,r,u)}else if(t.isSpriteMaterial){s(e,t)}else if(t.isShadowMaterial){e.color.value.copy(t.color);e.opacity.value=t.opacity}else if(t.isShaderMaterial){t.uniformsNeedUpdate=false}}function n(t,r){t.opacity.value=r.opacity;if(r.color){t.diffuse.value.copy(r.color)}if(r.emissive){t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity)}if(r.map){t.map.value=r.map}if(r.alphaMap){t.alphaMap.value=r.alphaMap}if(r.specularMap){t.specularMap.value=r.specularMap}var n=e.get(r).envMap;if(n){t.envMap.value=n;t.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1;t.reflectivity.value=r.reflectivity;t.refractionRatio.value=r.refractionRatio;var i=e.get(n).__maxMipLevel;if(i!==undefined){t.maxMipLevel.value=i}}if(r.lightMap){t.lightMap.value=r.lightMap;t.lightMapIntensity.value=r.lightMapIntensity}if(r.aoMap){t.aoMap.value=r.aoMap;t.aoMapIntensity.value=r.aoMapIntensity}var a;if(r.map){a=r.map}else if(r.specularMap){a=r.specularMap}else if(r.displacementMap){a=r.displacementMap}else if(r.normalMap){a=r.normalMap}else if(r.bumpMap){a=r.bumpMap}else if(r.roughnessMap){a=r.roughnessMap}else if(r.metalnessMap){a=r.metalnessMap}else if(r.alphaMap){a=r.alphaMap}else if(r.emissiveMap){a=r.emissiveMap}else if(r.clearcoatMap){a=r.clearcoatMap}else if(r.clearcoatNormalMap){a=r.clearcoatNormalMap}else if(r.clearcoatRoughnessMap){a=r.clearcoatRoughnessMap}if(a!==undefined){if(a.isWebGLRenderTarget){a=a.texture}if(a.matrixAutoUpdate===true){a.updateMatrix()}t.uvTransform.value.copy(a.matrix)}var o;if(r.aoMap){o=r.aoMap}else if(r.lightMap){o=r.lightMap}if(o!==undefined){if(o.isWebGLRenderTarget){o=o.texture}if(o.matrixAutoUpdate===true){o.updateMatrix()}t.uv2Transform.value.copy(o.matrix)}}function i(e,t){e.diffuse.value.copy(t.color);e.opacity.value=t.opacity}function a(e,t){e.dashSize.value=t.dashSize;e.totalSize.value=t.dashSize+t.gapSize;e.scale.value=t.scale}function o(e,t,r,n){e.diffuse.value.copy(t.color);e.opacity.value=t.opacity;e.size.value=t.size*r;e.scale.value=n*.5;if(t.map){e.map.value=t.map}if(t.alphaMap){e.alphaMap.value=t.alphaMap}var i;if(t.map){i=t.map}else if(t.alphaMap){i=t.alphaMap}if(i!==undefined){if(i.matrixAutoUpdate===true){i.updateMatrix()}e.uvTransform.value.copy(i.matrix)}}function s(e,t){e.diffuse.value.copy(t.color);e.opacity.value=t.opacity;e.rotation.value=t.rotation;if(t.map){e.map.value=t.map}if(t.alphaMap){e.alphaMap.value=t.alphaMap}var r;if(t.map){r=t.map}else if(t.alphaMap){r=t.alphaMap}if(r!==undefined){if(r.matrixAutoUpdate===true){r.updateMatrix()}e.uvTransform.value.copy(r.matrix)}}function l(e,t){if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}}function c(e,t){e.specular.value.copy(t.specular);e.shininess.value=Math.max(t.shininess,1e-4);if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===u)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===u)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function h(e,t){if(t.gradientMap){e.gradientMap.value=t.gradientMap}if(t.emissiveMap){e.emissiveMap.value=t.emissiveMap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===u)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===u)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function f(t,r){t.roughness.value=r.roughness;t.metalness.value=r.metalness;if(r.roughnessMap){t.roughnessMap.value=r.roughnessMap}if(r.metalnessMap){t.metalnessMap.value=r.metalnessMap}if(r.emissiveMap){t.emissiveMap.value=r.emissiveMap}if(r.bumpMap){t.bumpMap.value=r.bumpMap;t.bumpScale.value=r.bumpScale;if(r.side===u)t.bumpScale.value*=-1}if(r.normalMap){t.normalMap.value=r.normalMap;t.normalScale.value.copy(r.normalScale);if(r.side===u)t.normalScale.value.negate()}if(r.displacementMap){t.displacementMap.value=r.displacementMap;t.displacementScale.value=r.displacementScale;t.displacementBias.value=r.displacementBias}var n=e.get(r).envMap;if(n){t.envMapIntensity.value=r.envMapIntensity}}function d(e,t){f(e,t);e.reflectivity.value=t.reflectivity;e.clearcoat.value=t.clearcoat;e.clearcoatRoughness.value=t.clearcoatRoughness;if(t.sheen)e.sheen.value.copy(t.sheen);if(t.clearcoatMap){e.clearcoatMap.value=t.clearcoatMap}if(t.clearcoatRoughnessMap){e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap}if(t.clearcoatNormalMap){e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale);e.clearcoatNormalMap.value=t.clearcoatNormalMap;if(t.side===u){e.clearcoatNormalScale.value.negate()}}e.transmission.value=t.transmission;if(t.transmissionMap){e.transmissionMap.value=t.transmissionMap}}function p(e,t){if(t.matcap){e.matcap.value=t.matcap}if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===u)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===u)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function v(e,t){if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}function m(e,t){if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}e.referencePosition.value.copy(t.referencePosition);e.nearDistance.value=t.nearDistance;e.farDistance.value=t.farDistance}function g(e,t){if(t.bumpMap){e.bumpMap.value=t.bumpMap;e.bumpScale.value=t.bumpScale;if(t.side===u)e.bumpScale.value*=-1}if(t.normalMap){e.normalMap.value=t.normalMap;e.normalScale.value.copy(t.normalScale);if(t.side===u)e.normalScale.value.negate()}if(t.displacementMap){e.displacementMap.value=t.displacementMap;e.displacementScale.value=t.displacementScale;e.displacementBias.value=t.displacementBias}}return{refreshFogUniforms:t,refreshMaterialUniforms:r}}function zu(){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");e.style.display="block";return e}function Bu(e){e=e||{};var t=e.canvas!==undefined?e.canvas:zu(),r=e.context!==undefined?e.context:null,n=e.alpha!==undefined?e.alpha:false,i=e.depth!==undefined?e.depth:true,a=e.stencil!==undefined?e.stencil:true,o=e.antialias!==undefined?e.antialias:false,s=e.premultipliedAlpha!==undefined?e.premultipliedAlpha:true,l=e.preserveDrawingBuffer!==undefined?e.preserveDrawingBuffer:false,u=e.powerPreference!==undefined?e.powerPreference:"default",c=e.failIfMajorPerformanceCaveat!==undefined?e.failIfMajorPerformanceCaveat:false;var h=null;var f=null;var d=[];this.domElement=t;this.debug={checkShaderErrors:true};this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.clippingPlanes=[];this.localClippingEnabled=false;this.gammaFactor=2;this.outputEncoding=zt;this.physicallyCorrectLights=false;this.toneMapping=j;this.toneMappingExposure=1;this.maxMorphTargets=8;this.maxMorphNormals=4;var p=this;var v=false;var m=null;var g=0;var y=0;var x=null;var _=null;var b=-1;var w=null;var M=new hr;var S=new hr;var E=null;var T=t.width;var L=t.height;var A=1;var R=null;var P=null;var C=new hr(0,0,T,L);var I=new hr(0,0,T,L);var O=false;var D=new Yi;var N=false;var z=false;var B=new kr;var H=new pr;var F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:true};function U(){return x===null?A:1}var G=r;function k(e,r){for(var n=0;n<e.length;n++){var i=e[n];var a=t.getContext(i,r);if(a!==null)return a}return null}try{var V={alpha:n,depth:i,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:c};t.addEventListener("webglcontextlost",ge,false);t.addEventListener("webglcontextrestored",ye,false);if(G===null){var W=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===true){W.shift()}G=k(W,V);if(G===null){if(k(W)){throw new Error("Error creating WebGL context with your selected attributes.")}else{throw new Error("Error creating WebGL context.")}}}if(G.getShaderPrecisionFormat===undefined){G.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}}}catch(ze){console.error("THREE.WebGLRenderer: "+ze.message);throw ze}var q,X,Y,Z;var J,Q,K,$,ee,te;var re,ne,ie,ae,oe;var se,le,ue,ce;var he,fe;function pe(){q=new Rs(G);X=new Ts(G,q,e);q.init(X);he=new Pu(G,q,X);Y=new Au(G,q,X);Y.scissor(S.copy(I).multiplyScalar(A).floor());Y.viewport(M.copy(C).multiplyScalar(A).floor());Z=new Is(G);J=new hu;Q=new Ru(G,q,Y,J,X,he,Z);K=new As(p);$=new Ji(G,X);fe=new Ss(G,q,$,X);ee=new Ps(G,$,Z,fe);te=new zs(G,ee,$,Z);le=new Ns(G);oe=new Ls(J);re=new cu(p,K,q,X,fe,oe);ne=new Nu(J);ie=new vu(J);ae=new wu(q,X);se=new Ms(p,K,Y,te,s);ue=new Es(G,q,Z,X);ce=new Cs(G,q,Z,X);Z.programs=re.programs;p.capabilities=X;p.extensions=q;p.properties=J;p.renderLists=ie;p.state=Y;p.info=Z}pe();var ve=new Du(p,G);this.xr=ve;var me=new Lu(p,te,X.maxTextureSize);this.shadowMap=me;this.getContext=function(){return G};this.getContextAttributes=function(){return G.getContextAttributes()};this.forceContextLoss=function(){var e=q.get("WEBGL_lose_context");if(e)e.loseContext()};this.forceContextRestore=function(){var e=q.get("WEBGL_lose_context");if(e)e.restoreContext()};this.getPixelRatio=function(){return A};this.setPixelRatio=function(e){if(e===undefined)return;A=e;this.setSize(T,L,false)};this.getSize=function(e){if(e===undefined){console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument");e=new ir}return e.set(T,L)};this.setSize=function(e,r,n){if(ve.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}T=e;L=r;t.width=Math.floor(e*A);t.height=Math.floor(r*A);if(n!==false){t.style.width=e+"px";t.style.height=r+"px"}this.setViewport(0,0,e,r)};this.getDrawingBufferSize=function(e){if(e===undefined){console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument");e=new ir}return e.set(T*A,L*A).floor()};this.setDrawingBufferSize=function(e,r,n){T=e;L=r;A=n;t.width=Math.floor(e*n);t.height=Math.floor(r*n);this.setViewport(0,0,e,r)};this.getCurrentViewport=function(e){if(e===undefined){console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument");e=new hr}return e.copy(M)};this.getViewport=function(e){return e.copy(C)};this.setViewport=function(e,t,r,n){if(e.isVector4){C.set(e.x,e.y,e.z,e.w)}else{C.set(e,t,r,n)}Y.viewport(M.copy(C).multiplyScalar(A).floor())};this.getScissor=function(e){return e.copy(I)};this.setScissor=function(e,t,r,n){if(e.isVector4){I.set(e.x,e.y,e.z,e.w)}else{I.set(e,t,r,n)}Y.scissor(S.copy(I).multiplyScalar(A).floor())};this.getScissorTest=function(){return O};this.setScissorTest=function(e){Y.setScissorTest(O=e)};this.setOpaqueSort=function(e){R=e};this.setTransparentSort=function(e){P=e};this.getClearColor=function(e){if(e===undefined){console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument");e=new zn}return e.copy(se.getClearColor())};this.setClearColor=function(){se.setClearColor.apply(se,arguments)};this.getClearAlpha=function(){return se.getClearAlpha()};this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)};this.clear=function(e,t,r){var n=0;if(e===undefined||e)n|=16384;if(t===undefined||t)n|=256;if(r===undefined||r)n|=1024;G.clear(n)};this.clearColor=function(){this.clear(true,false,false)};this.clearDepth=function(){this.clear(false,true,false)};this.clearStencil=function(){this.clear(false,false,true)};this.dispose=function(){t.removeEventListener("webglcontextlost",ge,false);t.removeEventListener("webglcontextrestored",ye,false);ie.dispose();ae.dispose();J.dispose();K.dispose();te.dispose();fe.dispose();ve.dispose();Ae.stop()};function ge(e){e.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");v=true}function ye(){console.log("THREE.WebGLRenderer: Context Restored.");v=false;pe()}function be(e){var t=e.target;t.removeEventListener("dispose",be);we(t)}function we(e){Me(e);J.remove(e)}function Me(e){var t=J.get(e).program;if(t!==undefined){re.releaseProgram(t)}}function Se(e,t){e.render((function(e){p.renderBufferImmediate(e,t)}))}this.renderBufferImmediate=function(e,t){fe.initAttributes();var r=J.get(e);if(e.hasPositions&&!r.position)r.position=G.createBuffer();if(e.hasNormals&&!r.normal)r.normal=G.createBuffer();if(e.hasUvs&&!r.uv)r.uv=G.createBuffer();if(e.hasColors&&!r.color)r.color=G.createBuffer();var n=t.getAttributes();if(e.hasPositions){G.bindBuffer(34962,r.position);G.bufferData(34962,e.positionArray,35048);fe.enableAttribute(n.position);G.vertexAttribPointer(n.position,3,5126,false,0,0)}if(e.hasNormals){G.bindBuffer(34962,r.normal);G.bufferData(34962,e.normalArray,35048);fe.enableAttribute(n.normal);G.vertexAttribPointer(n.normal,3,5126,false,0,0)}if(e.hasUvs){G.bindBuffer(34962,r.uv);G.bufferData(34962,e.uvArray,35048);fe.enableAttribute(n.uv);G.vertexAttribPointer(n.uv,2,5126,false,0,0)}if(e.hasColors){G.bindBuffer(34962,r.color);G.bufferData(34962,e.colorArray,35048);fe.enableAttribute(n.color);G.vertexAttribPointer(n.color,3,5126,false,0,0)}fe.disableUnusedAttributes();G.drawArrays(4,0,e.count);e.count=0};this.renderBufferDirect=function(e,t,r,n,i,a){if(t===null)t=F;var o=i.isMesh&&i.matrixWorld.determinant()<0;var s=Oe(e,t,n,i);Y.setMaterial(n,o);var l=r.index;var u=r.attributes.position;if(l===null){if(u===undefined||u.count===0)return}else if(l.count===0){return}var c=1;if(n.wireframe===true){l=ee.getWireframeAttribute(r);c=2}if(n.morphTargets||n.morphNormals){le.update(i,r,n,s)}fe.setup(i,n,s,r,l);var h;var f=ue;if(l!==null){h=$.get(l);f=ce;f.setIndex(h)}var d=l!==null?l.count:u.count;var p=r.drawRange.start*c;var v=r.drawRange.count*c;var m=a!==null?a.start*c:0;var g=a!==null?a.count*c:Infinity;var y=Math.max(p,m);var x=Math.min(d,p+v,m+g)-1;var _=Math.max(0,x-y+1);if(_===0)return;if(i.isMesh){if(n.wireframe===true){Y.setLineWidth(n.wireframeLinewidth*U());f.setMode(1)}else{f.setMode(4)}}else if(i.isLine){var b=n.linewidth;if(b===undefined)b=1;Y.setLineWidth(b*U());if(i.isLineSegments){f.setMode(1)}else if(i.isLineLoop){f.setMode(2)}else{f.setMode(3)}}else if(i.isPoints){f.setMode(0)}else if(i.isSprite){f.setMode(4)}if(i.isInstancedMesh){f.renderInstances(y,_,i.count)}else if(r.isInstancedBufferGeometry){var w=Math.min(r.instanceCount,r._maxInstanceCount);f.renderInstances(y,_,w)}else{f.render(y,_)}};this.compile=function(e,t){f=ae.get(e);f.init();e.traverseVisible((function(e){if(e.isLight&&e.layers.test(t.layers)){f.pushLight(e);if(e.castShadow){f.pushShadow(e)}}}));f.setupLights();var r=new WeakMap;e.traverse((function(t){var n=t.material;if(n){if(Array.isArray(n)){for(var i=0;i<n.length;i++){var a=n[i];if(r.has(a)===false){Ie(a,e,t);r.set(a)}}}else if(r.has(n)===false){Ie(n,e,t);r.set(n)}}}))};var Ee=null;function Te(e){if(ve.isPresenting)return;if(Ee)Ee(e)}var Ae=new Zi;Ae.setAnimationLoop(Te);if(typeof window!=="undefined")Ae.setContext(window);this.setAnimationLoop=function(e){Ee=e;ve.setAnimationLoop(e);e===null?Ae.stop():Ae.start()};this.render=function(e,t){var r,n;if(arguments[2]!==undefined){console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.");r=arguments[2]}if(arguments[3]!==undefined){console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.");n=arguments[3]}if(t!==undefined&&t.isCamera!==true){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===true)return;fe.resetDefaultState();b=-1;w=null;if(e.autoUpdate===true)e.updateMatrixWorld();if(t.parent===null)t.updateMatrixWorld();if(ve.enabled===true&&ve.isPresenting===true){t=ve.getCamera(t)}if(e.isScene===true)e.onBeforeRender(p,e,t,r||x);f=ae.get(e,d.length);f.init();d.push(f);B.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);D.setFromProjectionMatrix(B);z=this.localClippingEnabled;N=oe.init(this.clippingPlanes,z,t);h=ie.get(e,t);h.init();Re(e,t,0,p.sortObjects);h.finish();if(p.sortObjects===true){h.sort(R,P)}if(N===true)oe.beginShadows();var i=f.state.shadowsArray;me.render(i,e,t);f.setupLights();f.setupLightsView(t);if(N===true)oe.endShadows();if(this.info.autoReset===true)this.info.reset();if(r!==undefined){this.setRenderTarget(r)}se.render(h,e,t,n);var a=h.opaque;var o=h.transparent;if(a.length>0)Pe(a,e,t);if(o.length>0)Pe(o,e,t);if(e.isScene===true)e.onAfterRender(p,e,t);if(x!==null){Q.updateRenderTargetMipmap(x);Q.updateMultisampleRenderTarget(x)}Y.buffers.depth.setTest(true);Y.buffers.depth.setMask(true);Y.buffers.color.setMask(true);Y.setPolygonOffset(false);d.pop();if(d.length>0){f=d[d.length-1]}else{f=null}h=null};function Re(e,t,r,n){if(e.visible===false)return;var i=e.layers.test(t.layers);if(i){if(e.isGroup){r=e.renderOrder}else if(e.isLOD){if(e.autoUpdate===true)e.update(t)}else if(e.isLight){f.pushLight(e);if(e.castShadow){f.pushShadow(e)}}else if(e.isSprite){if(!e.frustumCulled||D.intersectsSprite(e)){if(n){H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B)}var a=te.update(e);var o=e.material;if(o.visible){h.push(e,a,o,r,H.z,null)}}}else if(e.isImmediateRenderObject){if(n){H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B)}h.push(e,null,e.material,r,H.z,null)}else if(e.isMesh||e.isLine||e.isPoints){if(e.isSkinnedMesh){if(e.skeleton.frame!==Z.render.frame){e.skeleton.update();e.skeleton.frame=Z.render.frame}}if(!e.frustumCulled||D.intersectsObject(e)){if(n){H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B)}var a=te.update(e);var o=e.material;if(Array.isArray(o)){var s=a.groups;for(var l=0,u=s.length;l<u;l++){var c=s[l];var d=o[c.materialIndex];if(d&&d.visible){h.push(e,a,d,r,H.z,c)}}}else if(o.visible){h.push(e,a,o,r,H.z,null)}}}}var p=e.children;for(var l=0,u=p.length;l<u;l++){Re(p[l],t,r,n)}}function Pe(e,t,r){var n=t.isScene===true?t.overrideMaterial:null;for(var i=0,a=e.length;i<a;i++){var o=e[i];var s=o.object;var l=o.geometry;var u=n===null?o.material:n;var c=o.group;if(r.isArrayCamera){var h=r.cameras;for(var d=0,p=h.length;d<p;d++){var v=h[d];if(s.layers.test(v.layers)){Y.viewport(M.copy(v.viewport));f.setupLightsView(v);Ce(s,t,v,l,u,c)}}}else{Ce(s,t,r,l,u,c)}}}function Ce(e,t,r,n,i,a){e.onBeforeRender(p,t,r,n,i,a);e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld);e.normalMatrix.getNormalMatrix(e.modelViewMatrix);if(e.isImmediateRenderObject){var o=Oe(r,t,i,e);Y.setMaterial(i);fe.reset();Se(e,o)}else{p.renderBufferDirect(r,t,n,i,e,a)}e.onAfterRender(p,t,r,n,i,a)}function Ie(e,t,r){if(t.isScene!==true)t=F;var n=J.get(e);var i=f.state.lights;var a=f.state.shadowsArray;var o=i.state.version;var s=re.getParameters(e,i.state,a,t,r);var l=re.getProgramCacheKey(s);var u=n.program;var c=true;n.environment=e.isMeshStandardMaterial?t.environment:null;n.fog=t.fog;n.envMap=K.get(e.envMap||n.environment);if(u===undefined){e.addEventListener("dispose",be)}else if(u.cacheKey!==l){Me(e)}else if(n.lightsStateVersion!==o){c=false}else if(s.shaderID!==undefined){return}else{c=false}if(c){s.uniforms=re.getUniforms(e);e.onBeforeCompile(s,p);u=re.acquireProgram(s,l);n.program=u;n.uniforms=s.uniforms;n.outputEncoding=s.outputEncoding}var h=n.uniforms;if(!e.isShaderMaterial&&!e.isRawShaderMaterial||e.clipping===true){n.numClippingPlanes=oe.numPlanes;n.numIntersection=oe.numIntersection;h.clippingPlanes=oe.uniform}n.needsLights=Ne(e);n.lightsStateVersion=o;if(n.needsLights){h.ambientLightColor.value=i.state.ambient;h.lightProbe.value=i.state.probe;h.directionalLights.value=i.state.directional;h.directionalLightShadows.value=i.state.directionalShadow;h.spotLights.value=i.state.spot;h.spotLightShadows.value=i.state.spotShadow;h.rectAreaLights.value=i.state.rectArea;h.ltc_1.value=i.state.rectAreaLTC1;h.ltc_2.value=i.state.rectAreaLTC2;h.pointLights.value=i.state.point;h.pointLightShadows.value=i.state.pointShadow;h.hemisphereLights.value=i.state.hemi;h.directionalShadowMap.value=i.state.directionalShadowMap;h.directionalShadowMatrix.value=i.state.directionalShadowMatrix;h.spotShadowMap.value=i.state.spotShadowMap;h.spotShadowMatrix.value=i.state.spotShadowMatrix;h.pointShadowMap.value=i.state.pointShadowMap;h.pointShadowMatrix.value=i.state.pointShadowMatrix}var d=n.program.getUniforms();var v=Nl.seqWithValue(d.seq,h);n.uniformsList=v}function Oe(e,t,r,n){if(t.isScene!==true)t=F;Q.resetTextureUnits();var i=t.fog;var a=r.isMeshStandardMaterial?t.environment:null;var o=x===null?p.outputEncoding:x.texture.encoding;var s=K.get(r.envMap||a);var l=J.get(r);var u=f.state.lights;if(N===true){if(z===true||e!==w){var c=e===w&&r.id===b;oe.setState(r,e,c)}}if(r.version===l.__version){if(r.fog&&l.fog!==i){Ie(r,t,n)}else if(l.environment!==a){Ie(r,t,n)}else if(l.needsLights&&l.lightsStateVersion!==u.state.version){Ie(r,t,n)}else if(l.numClippingPlanes!==undefined&&(l.numClippingPlanes!==oe.numPlanes||l.numIntersection!==oe.numIntersection)){Ie(r,t,n)}else if(l.outputEncoding!==o){Ie(r,t,n)}else if(l.envMap!==s){Ie(r,t,n)}}else{Ie(r,t,n);l.__version=r.version}var h=false;var d=false;var v=false;var m=l.program,g=m.getUniforms(),y=l.uniforms;if(Y.useProgram(m.program)){h=true;d=true;v=true}if(r.id!==b){b=r.id;d=true}if(h||w!==e){g.setValue(G,"projectionMatrix",e.projectionMatrix);if(X.logarithmicDepthBuffer){g.setValue(G,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2))}if(w!==e){w=e;d=true;v=true}if(r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){var _=g.map.cameraPosition;if(_!==undefined){_.setValue(G,H.setFromMatrixPosition(e.matrixWorld))}}if(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial){g.setValue(G,"isOrthographic",e.isOrthographicCamera===true)}if(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||r.skinning){g.setValue(G,"viewMatrix",e.matrixWorldInverse)}}if(r.skinning){g.setOptional(G,n,"bindMatrix");g.setOptional(G,n,"bindMatrixInverse");var M=n.skeleton;if(M){var S=M.bones;if(X.floatVertexTextures){if(M.boneTexture===null){var E=Math.sqrt(S.length*4);E=nr.ceilPowerOfTwo(E);E=Math.max(E,4);var T=new Float32Array(E*E*4);T.set(M.boneMatrices);var R=new ji(T,E,E,Le,xe);M.boneMatrices=T;M.boneTexture=R;M.boneTextureSize=E}g.setValue(G,"boneTexture",M.boneTexture,Q);g.setValue(G,"boneTextureSize",M.boneTextureSize)}else{g.setOptional(G,M,"boneMatrices")}}}if(d||l.receiveShadow!==n.receiveShadow){l.receiveShadow=n.receiveShadow;g.setValue(G,"receiveShadow",n.receiveShadow)}if(d){g.setValue(G,"toneMappingExposure",p.toneMappingExposure);if(l.needsLights){De(y,v)}if(i&&r.fog){ne.refreshFogUniforms(y,i)}ne.refreshMaterialUniforms(y,r,A,L);Nl.upload(G,l.uniformsList,y,Q)}if(r.isShaderMaterial&&r.uniformsNeedUpdate===true){Nl.upload(G,l.uniformsList,y,Q);r.uniformsNeedUpdate=false}if(r.isSpriteMaterial){g.setValue(G,"center",n.center)}g.setValue(G,"modelViewMatrix",n.modelViewMatrix);g.setValue(G,"normalMatrix",n.normalMatrix);g.setValue(G,"modelMatrix",n.matrixWorld);return m}function De(e,t){e.ambientLightColor.needsUpdate=t;e.lightProbe.needsUpdate=t;e.directionalLights.needsUpdate=t;e.directionalLightShadows.needsUpdate=t;e.pointLights.needsUpdate=t;e.pointLightShadows.needsUpdate=t;e.spotLights.needsUpdate=t;e.spotLightShadows.needsUpdate=t;e.rectAreaLights.needsUpdate=t;e.hemisphereLights.needsUpdate=t}function Ne(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&e.lights===true}this.setFramebuffer=function(e){if(m!==e&&x===null)G.bindFramebuffer(36160,e);m=e};this.getActiveCubeFace=function(){return g};this.getActiveMipmapLevel=function(){return y};this.getRenderList=function(){return h};this.setRenderList=function(e){h=e};this.getRenderTarget=function(){return x};this.setRenderTarget=function(e,t,r){if(t===void 0){t=0}if(r===void 0){r=0}x=e;g=t;y=r;if(e&&J.get(e).__webglFramebuffer===undefined){Q.setupRenderTarget(e)}var n=m;var i=false;if(e){var a=J.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget){n=a[t];i=true}else if(e.isWebGLMultisampleRenderTarget){n=J.get(e).__webglMultisampledFramebuffer}else{n=a}M.copy(e.viewport);S.copy(e.scissor);E=e.scissorTest}else{M.copy(C).multiplyScalar(A).floor();S.copy(I).multiplyScalar(A).floor();E=O}if(_!==n){G.bindFramebuffer(36160,n);_=n}Y.viewport(M);Y.scissor(S);Y.setScissorTest(E);if(i){var o=J.get(e.texture);G.framebufferTexture2D(36160,36064,34069+t,o.__webglTexture,r)}};this.readRenderTargetPixels=function(e,t,r,n,i,a,o){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var s=J.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&o!==undefined){s=s[o]}if(s){var l=false;if(s!==_){G.bindFramebuffer(36160,s);l=true}try{var u=e.texture;var c=u.format;var h=u.type;if(c!==Le&&he.convert(c)!==G.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}var f=h===_e&&(q.has("EXT_color_buffer_half_float")||X.isWebGL2&&q.has("EXT_color_buffer_float"));if(h!==de&&he.convert(h)!==G.getParameter(35738)&&!(h===xe&&(X.isWebGL2||q.has("OES_texture_float")||q.has("WEBGL_color_buffer_float")))&&!f){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}if(G.checkFramebufferStatus(36160)===36053){if(t>=0&&t<=e.width-n&&(r>=0&&r<=e.height-i)){G.readPixels(t,r,n,i,he.convert(c),he.convert(h),a)}}else{console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}}finally{if(l){G.bindFramebuffer(36160,_)}}}};this.copyFramebufferToTexture=function(e,t,r){if(r===void 0){r=0}var n=Math.pow(2,-r);var i=Math.floor(t.image.width*n);var a=Math.floor(t.image.height*n);var o=he.convert(t.format);Q.setTexture2D(t,0);G.copyTexImage2D(3553,r,o,e.x,e.y,i,a,0);Y.unbindTexture()};this.copyTextureToTexture=function(e,t,r,n){if(n===void 0){n=0}var i=t.image.width;var a=t.image.height;var o=he.convert(r.format);var s=he.convert(r.type);Q.setTexture2D(r,0);G.pixelStorei(37440,r.flipY);G.pixelStorei(37441,r.premultiplyAlpha);G.pixelStorei(3317,r.unpackAlignment);if(t.isDataTexture){G.texSubImage2D(3553,n,e.x,e.y,i,a,o,s,t.image.data)}else{if(t.isCompressedTexture){G.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data)}else{G.texSubImage2D(3553,n,e.x,e.y,o,s,t.image)}}if(n===0&&r.generateMipmaps)G.generateMipmap(3553);Y.unbindTexture()};this.initTexture=function(e){Q.setTexture2D(e,0);Y.unbindTexture()};this.resetState=function(){Y.reset();fe.reset()};if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}function Hu(e){Bu.call(this,e)}Hu.prototype=Object.assign(Object.create(Bu.prototype),{constructor:Hu,isWebGL1Renderer:true});var Fu=function(e){__extends(t,e);function t(){var t=e.call(this)||this;Object.defineProperty(t,"isScene",{value:true});t.type="Scene";t.background=null;t.environment=null;t.fog=null;t.overrideMaterial=null;t.autoUpdate=true;if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:t}))}return t}t.prototype.copy=function(t,r){e.prototype.copy.call(this,t,r);if(t.background!==null)this.background=t.background.clone();if(t.environment!==null)this.environment=t.environment.clone();if(t.fog!==null)this.fog=t.fog.clone();if(t.overrideMaterial!==null)this.overrideMaterial=t.overrideMaterial.clone();this.autoUpdate=t.autoUpdate;this.matrixAutoUpdate=t.matrixAutoUpdate;return this};t.prototype.toJSON=function(t){var r=e.prototype.toJSON.call(this,t);if(this.background!==null)r.object.background=this.background.toJSON(t);if(this.environment!==null)r.object.environment=this.environment.toJSON(t);if(this.fog!==null)r.object.fog=this.fog.toJSON();return r};return t}(pn);e("S",Fu);function Uu(e,t){this.array=e;this.stride=t;this.count=e!==undefined?e.length/t:0;this.usage=Jt;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=nr.generateUUID()}Object.defineProperty(Uu.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});Object.assign(Uu.prototype,{isInterleavedBuffer:true,onUploadCallback:function(){},setUsage:function(e){this.usage=e;return this},copy:function(e){this.array=new e.array.constructor(e.array);this.count=e.count;this.stride=e.stride;this.usage=e.usage;return this},copyAt:function(e,t,r){e*=this.stride;r*=t.stride;for(var n=0,i=this.stride;n<i;n++){this.array[e+n]=t.array[r+n]}return this},set:function(e,t){if(t===void 0){t=0}this.array.set(e,t);return this},clone:function(e){if(e.arrayBuffers===undefined){e.arrayBuffers={}}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=nr.generateUUID()}if(e.arrayBuffers[this.array.buffer._uuid]===undefined){e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer}var t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]);var r=new Uu(t,this.stride);r.setUsage(this.usage);return r},onUpload:function(e){this.onUploadCallback=e;return this},toJSON:function(e){if(e.arrayBuffers===undefined){e.arrayBuffers={}}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=nr.generateUUID()}if(e.arrayBuffers[this.array.buffer._uuid]===undefined){e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))}return{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});var Gu=new pr;function ku(e,t,r,n){this.name="";this.data=e;this.itemSize=t;this.offset=r;this.normalized=n===true}Object.defineProperties(ku.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}});Object.assign(ku.prototype,{isInterleavedBufferAttribute:true,applyMatrix4:function(e){for(var t=0,r=this.data.count;t<r;t++){Gu.x=this.getX(t);Gu.y=this.getY(t);Gu.z=this.getZ(t);Gu.applyMatrix4(e);this.setXYZ(t,Gu.x,Gu.y,Gu.z)}return this},setX:function(e,t){this.data.array[e*this.data.stride+this.offset]=t;return this},setY:function(e,t){this.data.array[e*this.data.stride+this.offset+1]=t;return this},setZ:function(e,t){this.data.array[e*this.data.stride+this.offset+2]=t;return this},setW:function(e,t){this.data.array[e*this.data.stride+this.offset+3]=t;return this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=r;return this},setXYZ:function(e,t,r,n){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=r;this.data.array[e+2]=n;return this},setXYZW:function(e,t,r,n,i){e=e*this.data.stride+this.offset;this.data.array[e+0]=t;this.data.array[e+1]=r;this.data.array[e+2]=n;this.data.array[e+3]=i;return this},clone:function(e){if(e===undefined){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");var t=[];for(var r=0;r<this.count;r++){var n=r*this.data.stride+this.offset;for(var i=0;i<this.itemSize;i++){t.push(this.data.array[n+i])}}return new Vn(new this.array.constructor(t),this.itemSize,this.normalized)}else{if(e.interleavedBuffers===undefined){e.interleavedBuffers={}}if(e.interleavedBuffers[this.data.uuid]===undefined){e.interleavedBuffers[this.data.uuid]=this.data.clone(e)}return new ku(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}},toJSON:function(e){if(e===undefined){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");var t=[];for(var r=0;r<this.count;r++){var n=r*this.data.stride+this.offset;for(var i=0;i<this.itemSize;i++){t.push(this.data.array[n+i])}}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else{if(e.interleavedBuffers===undefined){e.interleavedBuffers={}}if(e.interleavedBuffers[this.data.uuid]===undefined){e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)}return{isInterleavedBufferAttribute:true,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}});function Vu(e){Fn.call(this);this.type="SpriteMaterial";this.color=new zn(16777215);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=true;this.transparent=true;this.setValues(e)}Vu.prototype=Object.create(Fn.prototype);Vu.prototype.constructor=Vu;Vu.prototype.isSpriteMaterial=true;Vu.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.alphaMap=e.alphaMap;this.rotation=e.rotation;this.sizeAttenuation=e.sizeAttenuation;return this};var Wu;var ju=new pr;var qu=new pr;var Xu=new pr;var Yu=new ir;var Zu=new ir;var Ju=new kr;var Qu=new pr;var Ku=new pr;var $u=new pr;var ec=new ir;var tc=new ir;var rc=new ir;function nc(e){pn.call(this);this.type="Sprite";if(Wu===undefined){Wu=new ci;var t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]);var r=new Uu(t,5);Wu.setIndex([0,1,2,0,2,3]);Wu.setAttribute("position",new ku(r,3,0,false));Wu.setAttribute("uv",new ku(r,2,3,false))}this.geometry=Wu;this.material=e!==undefined?e:new Vu;this.center=new ir(.5,.5)}nc.prototype=Object.assign(Object.create(pn.prototype),{constructor:nc,isSprite:true,raycast:function(e,t){if(e.camera===null){console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.')}qu.setFromMatrixScale(this.matrixWorld);Ju.copy(e.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld);Xu.setFromMatrixPosition(this.modelViewMatrix);if(e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){qu.multiplyScalar(-Xu.z)}var r=this.material.rotation;var n,i;if(r!==0){i=Math.cos(r);n=Math.sin(r)}var a=this.center;ic(Qu.set(-.5,-.5,0),Xu,a,qu,n,i);ic(Ku.set(.5,-.5,0),Xu,a,qu,n,i);ic($u.set(.5,.5,0),Xu,a,qu,n,i);ec.set(0,0);tc.set(1,0);rc.set(1,1);var o=e.ray.intersectTriangle(Qu,Ku,$u,false,ju);if(o===null){ic(Ku.set(-.5,.5,0),Xu,a,qu,n,i);tc.set(0,1);o=e.ray.intersectTriangle(Qu,$u,Ku,false,ju);if(o===null){return}}var s=e.ray.origin.distanceTo(ju);if(s<e.near||s>e.far)return;t.push({distance:s,point:ju.clone(),uv:Rn.getUV(ju,Qu,Ku,$u,ec,tc,rc,new ir),face:null,object:this})},copy:function(e){pn.prototype.copy.call(this,e);if(e.center!==undefined)this.center.copy(e.center);this.material=e.material;return this}});function ic(e,t,r,n,i,a){Yu.subVectors(e,r).addScalar(.5).multiply(n);if(i!==undefined){Zu.x=a*Yu.x-i*Yu.y;Zu.y=i*Yu.x+a*Yu.y}else{Zu.copy(Yu)}e.copy(t);e.x+=Zu.x;e.y+=Zu.y;e.applyMatrix4(Ju)}var ac=new pr;var oc=new pr;function sc(){pn.call(this);this._currentLevel=0;this.type="LOD";Object.defineProperties(this,{levels:{enumerable:true,value:[]}});this.autoUpdate=true}sc.prototype=Object.assign(Object.create(pn.prototype),{constructor:sc,isLOD:true,copy:function(e){pn.prototype.copy.call(this,e,false);var t=e.levels;for(var r=0,n=t.length;r<n;r++){var i=t[r];this.addLevel(i.object.clone(),i.distance)}this.autoUpdate=e.autoUpdate;return this},addLevel:function(e,t){if(t===void 0){t=0}t=Math.abs(t);var r=this.levels;var n;for(n=0;n<r.length;n++){if(t<r[n].distance){break}}r.splice(n,0,{distance:t,object:e});this.add(e);return this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){var t=this.levels;if(t.length>0){var r=void 0,n=void 0;for(r=1,n=t.length;r<n;r++){if(e<t[r].distance){break}}return t[r-1].object}return null},raycast:function(e,t){var r=this.levels;if(r.length>0){ac.setFromMatrixPosition(this.matrixWorld);var n=e.ray.origin.distanceTo(ac);this.getObjectForDistance(n).raycast(e,t)}},update:function(e){var t=this.levels;if(t.length>1){ac.setFromMatrixPosition(e.matrixWorld);oc.setFromMatrixPosition(this.matrixWorld);var r=ac.distanceTo(oc)/e.zoom;t[0].object.visible=true;var n=void 0,i=void 0;for(n=1,i=t.length;n<i;n++){if(r>=t[n].distance){t[n-1].object.visible=false;t[n].object.visible=true}else{break}}this._currentLevel=n-1;for(;n<i;n++){t[n].object.visible=false}}},toJSON:function(e){var t=pn.prototype.toJSON.call(this,e);if(this.autoUpdate===false)t.object.autoUpdate=false;t.object.levels=[];var r=this.levels;for(var n=0,i=r.length;n<i;n++){var a=r[n];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}});var lc=new pr;var uc=new hr;var cc=new hr;var hc=new pr;var fc=new kr;function dc(e,t){if(e&&e.isGeometry){console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}Ai.call(this,e,t);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new kr;this.bindMatrixInverse=new kr}dc.prototype=Object.assign(Object.create(Ai.prototype),{constructor:dc,isSkinnedMesh:true,copy:function(e){Ai.prototype.copy.call(this,e);this.bindMode=e.bindMode;this.bindMatrix.copy(e.bindMatrix);this.bindMatrixInverse.copy(e.bindMatrixInverse);this.skeleton=e.skeleton;return this},bind:function(e,t){this.skeleton=e;if(t===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();t=this.matrixWorld}this.bindMatrix.copy(t);this.bindMatrixInverse.copy(t).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var e=new hr;var t=this.geometry.attributes.skinWeight;for(var r=0,n=t.count;r<n;r++){e.x=t.getX(r);e.y=t.getY(r);e.z=t.getZ(r);e.w=t.getW(r);var i=1/e.manhattanLength();if(i!==Infinity){e.multiplyScalar(i)}else{e.set(1,0,0,0)}t.setXYZW(r,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){Ai.prototype.updateMatrixWorld.call(this,e);if(this.bindMode==="attached"){this.bindMatrixInverse.copy(this.matrixWorld).invert()}else if(this.bindMode==="detached"){this.bindMatrixInverse.copy(this.bindMatrix).invert()}else{console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}},boneTransform:function(e,t){var r=this.skeleton;var n=this.geometry;uc.fromBufferAttribute(n.attributes.skinIndex,e);cc.fromBufferAttribute(n.attributes.skinWeight,e);lc.fromBufferAttribute(n.attributes.position,e).applyMatrix4(this.bindMatrix);t.set(0,0,0);for(var i=0;i<4;i++){var a=cc.getComponent(i);if(a!==0){var o=uc.getComponent(i);fc.multiplyMatrices(r.bones[o].matrixWorld,r.boneInverses[o]);t.addScaledVector(hc.copy(lc).applyMatrix4(fc),a)}}return t.applyMatrix4(this.bindMatrixInverse)}});function pc(){pn.call(this);this.type="Bone"}pc.prototype=Object.assign(Object.create(pn.prototype),{constructor:pc,isBone:true});var vc=new kr;var mc=new kr;function gc(e,t){if(e===void 0){e=[]}if(t===void 0){t=[]}this.uuid=nr.generateUUID();this.bones=e.slice(0);this.boneInverses=t;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init()}Object.assign(gc.prototype,{init:function(){var e=this.bones;var t=this.boneInverses;this.boneMatrices=new Float32Array(e.length*16);if(t.length===0){this.calculateInverses()}else{if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.");this.boneInverses=[];for(var r=0,n=this.bones.length;r<n;r++){this.boneInverses.push(new kr)}}}},calculateInverses:function(){this.boneInverses.length=0;for(var e=0,t=this.bones.length;e<t;e++){var r=new kr;if(this.bones[e]){r.copy(this.bones[e].matrixWorld).invert()}this.boneInverses.push(r)}},pose:function(){for(var e=0,t=this.bones.length;e<t;e++){var r=this.bones[e];if(r){r.matrixWorld.copy(this.boneInverses[e]).invert()}}for(var e=0,t=this.bones.length;e<t;e++){var r=this.bones[e];if(r){if(r.parent&&r.parent.isBone){r.matrix.copy(r.parent.matrixWorld).invert();r.matrix.multiply(r.matrixWorld)}else{r.matrix.copy(r.matrixWorld)}r.matrix.decompose(r.position,r.quaternion,r.scale)}}},update:function(){var e=this.bones;var t=this.boneInverses;var r=this.boneMatrices;var n=this.boneTexture;for(var i=0,a=e.length;i<a;i++){var o=e[i]?e[i].matrixWorld:mc;vc.multiplyMatrices(o,t[i]);vc.toArray(r,i*16)}if(n!==null){n.needsUpdate=true}},clone:function(){return new gc(this.bones,this.boneInverses)},getBoneByName:function(e){for(var t=0,r=this.bones.length;t<r;t++){var n=this.bones[t];if(n.name===e){return n}}return undefined},dispose:function(){if(this.boneTexture!==null){this.boneTexture.dispose();this.boneTexture=null}},fromJSON:function(e,t){this.uuid=e.uuid;for(var r=0,n=e.bones.length;r<n;r++){var i=e.bones[r];var a=t[i];if(a===undefined){console.warn("THREE.Skeleton: No bone found with UUID:",i);a=new pc}this.bones.push(a);this.boneInverses.push((new kr).fromArray(e.boneInverses[r]))}this.init();return this},toJSON:function(){var e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;var t=this.bones;var r=this.boneInverses;for(var n=0,i=t.length;n<i;n++){var a=t[n];e.bones.push(a.uuid);var o=r[n];e.boneInverses.push(o.toArray())}return e}});var yc=new kr;var xc=new kr;var _c=[];var bc=new Ai;function wc(e,t,r){Ai.call(this,e,t);this.instanceMatrix=new Vn(new Float32Array(r*16),16);this.instanceColor=null;this.count=r;this.frustumCulled=false}wc.prototype=Object.assign(Object.create(Ai.prototype),{constructor:wc,isInstancedMesh:true,copy:function(e){Ai.prototype.copy.call(this,e);this.instanceMatrix.copy(e.instanceMatrix);if(e.instanceColor!==null)this.instanceColor=e.instanceColor.clone();this.count=e.count;return this},getColorAt:function(e,t){t.fromArray(this.instanceColor.array,e*3)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,t){var r=this.matrixWorld;var n=this.count;bc.geometry=this.geometry;bc.material=this.material;if(bc.material===undefined)return;for(var i=0;i<n;i++){this.getMatrixAt(i,yc);xc.multiplyMatrices(r,yc);bc.matrixWorld=xc;bc.raycast(e,_c);for(var a=0,o=_c.length;a<o;a++){var s=_c[a];s.instanceId=i;s.object=this;t.push(s)}_c.length=0}},setColorAt:function(e,t){if(this.instanceColor===null){this.instanceColor=new Vn(new Float32Array(this.count*3),3)}t.toArray(this.instanceColor.array,e*3)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Mc(e){Fn.call(this);this.type="LineBasicMaterial";this.color=new zn(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.morphTargets=false;this.setValues(e)}Mc.prototype=Object.create(Fn.prototype);Mc.prototype.constructor=Mc;Mc.prototype.isLineBasicMaterial=true;Mc.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.color.copy(e.color);this.linewidth=e.linewidth;this.linecap=e.linecap;this.linejoin=e.linejoin;this.morphTargets=e.morphTargets;return this};var Sc=new pr;var Ec=new pr;var Tc=new kr;var Lc=new Gr;var Ac=new Or;function Rc(e,t){if(e===void 0){e=new ci}if(t===void 0){t=new Mc}pn.call(this);this.type="Line";this.geometry=e;this.material=t;this.updateMorphTargets()}Rc.prototype=Object.assign(Object.create(pn.prototype),{constructor:Rc,isLine:true,copy:function(e){pn.prototype.copy.call(this,e);this.material=e.material;this.geometry=e.geometry;return this},computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry){if(e.index===null){var t=e.attributes.position;var r=[0];for(var n=1,i=t.count;n<i;n++){Sc.fromBufferAttribute(t,n-1);Ec.fromBufferAttribute(t,n);r[n]=r[n-1];r[n]+=Sc.distanceTo(Ec)}e.setAttribute("lineDistance",new Kn(r,1))}else{console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}}else if(e.isGeometry){console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}return this},raycast:function(e,t){var r=this.geometry;var n=this.matrixWorld;var i=e.params.Line.threshold;if(r.boundingSphere===null)r.computeBoundingSphere();Ac.copy(r.boundingSphere);Ac.applyMatrix4(n);Ac.radius+=i;if(e.ray.intersectsSphere(Ac)===false)return;Tc.copy(n).invert();Lc.copy(e.ray).applyMatrix4(Tc);var a=i/((this.scale.x+this.scale.y+this.scale.z)/3);var o=a*a;var s=new pr;var l=new pr;var u=new pr;var c=new pr;var h=this.isLineSegments?2:1;if(r.isBufferGeometry){var f=r.index;var d=r.attributes;var p=d.position;if(f!==null){var v=f.array;for(var m=0,g=v.length-1;m<g;m+=h){var y=v[m];var x=v[m+1];s.fromBufferAttribute(p,y);l.fromBufferAttribute(p,x);var _=Lc.distanceSqToSegment(s,l,c,u);if(_>o)continue;c.applyMatrix4(this.matrixWorld);var b=e.ray.origin.distanceTo(c);if(b<e.near||b>e.far)continue;t.push({distance:b,point:u.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}else{for(var m=0,g=p.count-1;m<g;m+=h){s.fromBufferAttribute(p,m);l.fromBufferAttribute(p,m+1);var _=Lc.distanceSqToSegment(s,l,c,u);if(_>o)continue;c.applyMatrix4(this.matrixWorld);var b=e.ray.origin.distanceTo(c);if(b<e.near||b>e.far)continue;t.push({distance:b,point:u.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}}else if(r.isGeometry){console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},updateMorphTargets:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes;var r=Object.keys(t);if(r.length>0){var n=t[r[0]];if(n!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var i=0,a=n.length;i<a;i++){var o=n[i].name||String(i);this.morphTargetInfluences.push(0);this.morphTargetDictionary[o]=i}}}}else{var s=e.morphTargets;if(s!==undefined&&s.length>0){console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}});var Pc=new pr;var Cc=new pr;function Ic(e,t){Rc.call(this,e,t);this.type="LineSegments"}Ic.prototype=Object.assign(Object.create(Rc.prototype),{constructor:Ic,isLineSegments:true,computeLineDistances:function(){var e=this.geometry;if(e.isBufferGeometry){if(e.index===null){var t=e.attributes.position;var r=[];for(var n=0,i=t.count;n<i;n+=2){Pc.fromBufferAttribute(t,n);Cc.fromBufferAttribute(t,n+1);r[n]=n===0?0:r[n-1];r[n+1]=r[n]+Pc.distanceTo(Cc)}e.setAttribute("lineDistance",new Kn(r,1))}else{console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}}else if(e.isGeometry){console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}return this}});function Oc(e,t){Rc.call(this,e,t);this.type="LineLoop"}Oc.prototype=Object.assign(Object.create(Rc.prototype),{constructor:Oc,isLineLoop:true});function Dc(e){Fn.call(this);this.type="PointsMaterial";this.color=new zn(16777215);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=true;this.morphTargets=false;this.setValues(e)}Dc.prototype=Object.create(Fn.prototype);Dc.prototype.constructor=Dc;Dc.prototype.isPointsMaterial=true;Dc.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.alphaMap=e.alphaMap;this.size=e.size;this.sizeAttenuation=e.sizeAttenuation;this.morphTargets=e.morphTargets;return this};var Nc=new kr;var zc=new Gr;var Bc=new Or;var Hc=new pr;function Fc(e,t){if(e===void 0){e=new ci}if(t===void 0){t=new Dc}pn.call(this);this.type="Points";this.geometry=e;this.material=t;this.updateMorphTargets()}Fc.prototype=Object.assign(Object.create(pn.prototype),{constructor:Fc,isPoints:true,copy:function(e){pn.prototype.copy.call(this,e);this.material=e.material;this.geometry=e.geometry;return this},raycast:function(e,t){var r=this.geometry;var n=this.matrixWorld;var i=e.params.Points.threshold;if(r.boundingSphere===null)r.computeBoundingSphere();Bc.copy(r.boundingSphere);Bc.applyMatrix4(n);Bc.radius+=i;if(e.ray.intersectsSphere(Bc)===false)return;Nc.copy(n).invert();zc.copy(e.ray).applyMatrix4(Nc);var a=i/((this.scale.x+this.scale.y+this.scale.z)/3);var o=a*a;if(r.isBufferGeometry){var s=r.index;var l=r.attributes;var u=l.position;if(s!==null){var c=s.array;for(var h=0,f=c.length;h<f;h++){var d=c[h];Hc.fromBufferAttribute(u,d);Uc(Hc,d,o,n,e,t,this)}}else{for(var h=0,p=u.count;h<p;h++){Hc.fromBufferAttribute(u,h);Uc(Hc,h,o,n,e,t,this)}}}else{console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},updateMorphTargets:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes;var r=Object.keys(t);if(r.length>0){var n=t[r[0]];if(n!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var i=0,a=n.length;i<a;i++){var o=n[i].name||String(i);this.morphTargetInfluences.push(0);this.morphTargetDictionary[o]=i}}}}else{var s=e.morphTargets;if(s!==undefined&&s.length>0){console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}});function Uc(e,t,r,n,i,a,o){var s=zc.distanceSqToPoint(e);if(s<r){var l=new pr;zc.closestPointToPoint(e,l);l.applyMatrix4(n);var u=i.ray.origin.distanceTo(l);if(u<i.near||u>i.far)return;a.push({distance:u,distanceToRay:Math.sqrt(s),point:l,index:t,face:null,object:o})}}function Gc(e,t,r,n,i,a,o,s,l){ur.call(this,e,t,r,n,i,a,o,s,l);this.format=o!==undefined?o:Te;this.minFilter=a!==undefined?a:ce;this.magFilter=i!==undefined?i:ce;this.generateMipmaps=false;var u=this;function c(){u.needsUpdate=true;e.requestVideoFrameCallback(c)}if("requestVideoFrameCallback"in e){e.requestVideoFrameCallback(c)}}Gc.prototype=Object.assign(Object.create(ur.prototype),{constructor:Gc,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:true,update:function(){var e=this.image;var t="requestVideoFrameCallback"in e;if(t===false&&e.readyState>=e.HAVE_CURRENT_DATA){this.needsUpdate=true}}});function kc(e,t,r,n,i,a,o,s,l,u,c,h){ur.call(this,null,a,o,s,l,u,n,i,c,h);this.image={width:t,height:r};this.mipmaps=e;this.flipY=false;this.generateMipmaps=false}kc.prototype=Object.create(ur.prototype);kc.prototype.constructor=kc;kc.prototype.isCompressedTexture=true;function Vc(e,t,r,n,i,a,o,s,l){ur.call(this,e,t,r,n,i,a,o,s,l);this.needsUpdate=true}Vc.prototype=Object.create(ur.prototype);Vc.prototype.constructor=Vc;Vc.prototype.isCanvasTexture=true;function Wc(e,t,r,n,i,a,o,s,l,u){u=u!==undefined?u:Pe;if(u!==Pe&&u!==Ce){throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat")}if(r===undefined&&u===Pe)r=me;if(r===undefined&&u===Ce)r=Se;ur.call(this,null,n,i,a,o,s,u,r,l);this.image={width:e,height:t};this.magFilter=o!==undefined?o:se;this.minFilter=s!==undefined?s:se;this.flipY=false;this.generateMipmaps=false}Wc.prototype=Object.create(ur.prototype);Wc.prototype.constructor=Wc;Wc.prototype.isDepthTexture=true;var jc=new pr;var qc=new pr;var Xc=new pr;var Yc=new Rn;var Zc={triangulate:function(e,t,r){r=r||2;var n=t&&t.length;var i=n?t[0]*r:e.length;var a=Jc(e,0,i,r,true);var o=[];if(!a||a.next===a.prev)return o;var s,l,u,c,h,f,d;if(n)a=nh(e,t,a,r);if(e.length>80*r){s=u=e[0];l=c=e[1];for(var p=r;p<i;p+=r){h=e[p];f=e[p+1];if(h<s)s=h;if(f<l)l=f;if(h>u)u=h;if(f>c)c=f}d=Math.max(u-s,c-l);d=d!==0?1/d:0}Kc(a,o,r,s,l,d);return o}};function Jc(e,t,r,n,i){var a,o;if(i===Th(e,t,r,n)>0){for(a=t;a<r;a+=n)o=Mh(a,e[a],e[a+1],o)}else{for(a=r-n;a>=t;a-=n)o=Mh(a,e[a],e[a+1],o)}if(o&&vh(o,o.next)){Sh(o);o=o.next}return o}function Qc(e,t){if(!e)return e;if(!t)t=e;var r=e,n;do{n=false;if(!r.steiner&&(vh(r,r.next)||ph(r.prev,r,r.next)===0)){Sh(r);r=t=r.prev;if(r===r.next)break;n=true}else{r=r.next}}while(n||r!==t);return t}function Kc(e,t,r,n,i,a,o){if(!e)return;if(!o&&a)lh(e,n,i,a);var s=e,l,u;while(e.prev!==e.next){l=e.prev;u=e.next;if(a?eh(e,n,i,a):$c(e)){t.push(l.i/r);t.push(e.i/r);t.push(u.i/r);Sh(e);e=u.next;s=u.next;continue}e=u;if(e===s){if(!o){Kc(Qc(e),t,r,n,i,a,1)}else if(o===1){e=th(Qc(e),t,r);Kc(e,t,r,n,i,a,2)}else if(o===2){rh(e,t,r,n,i,a)}break}}}function $c(e){var t=e.prev,r=e,n=e.next;if(ph(t,r,n)>=0)return false;var i=e.next.next;while(i!==e.prev){if(fh(t.x,t.y,r.x,r.y,n.x,n.y,i.x,i.y)&&ph(i.prev,i,i.next)>=0)return false;i=i.next}return true}function eh(e,t,r,n){var i=e.prev,a=e,o=e.next;if(ph(i,a,o)>=0)return false;var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,l=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,u=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,c=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y;var h=ch(s,l,t,r,n),f=ch(u,c,t,r,n);var d=e.prevZ,p=e.nextZ;while(d&&d.z>=h&&p&&p.z<=f){if(d!==e.prev&&d!==e.next&&fh(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&ph(d.prev,d,d.next)>=0)return false;d=d.prevZ;if(p!==e.prev&&p!==e.next&&fh(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&ph(p.prev,p,p.next)>=0)return false;p=p.nextZ}while(d&&d.z>=h){if(d!==e.prev&&d!==e.next&&fh(i.x,i.y,a.x,a.y,o.x,o.y,d.x,d.y)&&ph(d.prev,d,d.next)>=0)return false;d=d.prevZ}while(p&&p.z<=f){if(p!==e.prev&&p!==e.next&&fh(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&ph(p.prev,p,p.next)>=0)return false;p=p.nextZ}return true}function th(e,t,r){var n=e;do{var i=n.prev,a=n.next.next;if(!vh(i,a)&&mh(i,n,n.next,a)&&_h(i,a)&&_h(a,i)){t.push(i.i/r);t.push(n.i/r);t.push(a.i/r);Sh(n);Sh(n.next);n=e=a}n=n.next}while(n!==e);return Qc(n)}function rh(e,t,r,n,i,a){var o=e;do{var s=o.next.next;while(s!==o.prev){if(o.i!==s.i&&dh(o,s)){var l=wh(o,s);o=Qc(o,o.next);l=Qc(l,l.next);Kc(o,t,r,n,i,a);Kc(l,t,r,n,i,a);return}s=s.next}o=o.next}while(o!==e)}function nh(e,t,r,n){var i=[];var a,o,s,l,u;for(a=0,o=t.length;a<o;a++){s=t[a]*n;l=a<o-1?t[a+1]*n:e.length;u=Jc(e,s,l,n,false);if(u===u.next)u.steiner=true;i.push(hh(u))}i.sort(ih);for(a=0;a<i.length;a++){ah(i[a],r);r=Qc(r,r.next)}return r}function ih(e,t){return e.x-t.x}function ah(e,t){t=oh(e,t);if(t){var r=wh(t,e);Qc(t,t.next);Qc(r,r.next)}}function oh(e,t){var r=t;var n=e.x;var i=e.y;var a=-Infinity,o;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=n&&s>a){a=s;if(s===n){if(i===r.y)return r;if(i===r.next.y)return r.next}o=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!o)return null;if(n===a)return o;var l=o,u=o.x,c=o.y;var h=Infinity,f;r=o;do{if(n>=r.x&&r.x>=u&&n!==r.x&&fh(i<c?n:a,i,u,c,i<c?a:n,i,r.x,r.y)){f=Math.abs(i-r.y)/(n-r.x);if(_h(r,e)&&(f<h||f===h&&(r.x>o.x||r.x===o.x&&sh(o,r)))){o=r;h=f}}r=r.next}while(r!==l);return o}function sh(e,t){return ph(e.prev,e,t.prev)<0&&ph(t.next,e,e.next)<0}function lh(e,t,r,n){var i=e;do{if(i.z===null)i.z=ch(i.x,i.y,t,r,n);i.prevZ=i.prev;i.nextZ=i.next;i=i.next}while(i!==e);i.prevZ.nextZ=null;i.prevZ=null;uh(i)}function uh(e){var t,r,n,i,a,o,s,l,u=1;do{r=e;e=null;a=null;o=0;while(r){o++;n=r;s=0;for(t=0;t<u;t++){s++;n=n.nextZ;if(!n)break}l=u;while(s>0||l>0&&n){if(s!==0&&(l===0||!n||r.z<=n.z)){i=r;r=r.nextZ;s--}else{i=n;n=n.nextZ;l--}if(a)a.nextZ=i;else e=i;i.prevZ=a;a=i}r=n}a.nextZ=null;u*=2}while(o>1);return e}function ch(e,t,r,n,i){e=32767*(e-r)*i;t=32767*(t-n)*i;e=(e|e<<8)&16711935;e=(e|e<<4)&252645135;e=(e|e<<2)&858993459;e=(e|e<<1)&1431655765;t=(t|t<<8)&16711935;t=(t|t<<4)&252645135;t=(t|t<<2)&858993459;t=(t|t<<1)&1431655765;return e|t<<1}function hh(e){var t=e,r=e;do{if(t.x<r.x||t.x===r.x&&t.y<r.y)r=t;t=t.next}while(t!==e);return r}function fh(e,t,r,n,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(n-s)-(r-o)*(t-s)>=0&&(r-o)*(a-s)-(i-o)*(n-s)>=0}function dh(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!xh(e,t)&&(_h(e,t)&&_h(t,e)&&bh(e,t)&&(ph(e.prev,e,t.prev)||ph(e,t.prev,t))||vh(e,t)&&ph(e.prev,e,e.next)>0&&ph(t.prev,t,t.next)>0)}function ph(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function vh(e,t){return e.x===t.x&&e.y===t.y}function mh(e,t,r,n){var i=yh(ph(e,t,r));var a=yh(ph(e,t,n));var o=yh(ph(r,n,e));var s=yh(ph(r,n,t));if(i!==a&&o!==s)return true;if(i===0&&gh(e,r,t))return true;if(a===0&&gh(e,n,t))return true;if(o===0&&gh(r,e,n))return true;if(s===0&&gh(r,t,n))return true;return false}function gh(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function yh(e){return e>0?1:e<0?-1:0}function xh(e,t){var r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&mh(r,r.next,e,t))return true;r=r.next}while(r!==e);return false}function _h(e,t){return ph(e.prev,e,e.next)<0?ph(e,t,e.next)>=0&&ph(e,e.prev,t)>=0:ph(e,t,e.prev)<0||ph(e,e.next,t)<0}function bh(e,t){var r=e,n=false;var i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{if(r.y>a!==r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x)n=!n;r=r.next}while(r!==e);return n}function wh(e,t){var r=new Eh(e.i,e.x,e.y),n=new Eh(t.i,t.x,t.y),i=e.next,a=t.prev;e.next=t;t.prev=e;r.next=i;i.prev=r;n.next=r;r.prev=n;a.next=n;n.prev=a;return n}function Mh(e,t,r,n){var i=new Eh(e,t,r);if(!n){i.prev=i;i.next=i}else{i.next=n.next;i.prev=n;n.next.prev=i;n.next=i}return i}function Sh(e){e.next.prev=e.prev;e.prev.next=e.next;if(e.prevZ)e.prevZ.nextZ=e.nextZ;if(e.nextZ)e.nextZ.prevZ=e.prevZ}function Eh(e,t,r){this.i=e;this.x=t;this.y=r;this.prev=null;this.next=null;this.z=null;this.prevZ=null;this.nextZ=null;this.steiner=false}function Th(e,t,r,n){var i=0;for(var a=t,o=r-n;a<r;a+=n){i+=(e[o]-e[a])*(e[a+1]+e[o+1]);o=a}return i}var Lh={area:function(e){var t=e.length;var r=0;for(var n=t-1,i=0;i<t;n=i++){r+=e[n].x*e[i].y-e[i].x*e[n].y}return r*.5},isClockWise:function(e){return Lh.area(e)<0},triangulateShape:function(e,t){var r=[];var n=[];var i=[];Ah(e);Rh(r,e);var a=e.length;t.forEach(Ah);for(var o=0;o<t.length;o++){n.push(a);a+=t[o].length;Rh(r,t[o])}var s=Zc.triangulate(r,n);for(var o=0;o<s.length;o+=3){i.push(s.slice(o,o+3))}return i}};function Ah(e){var t=e.length;if(t>2&&e[t-1].equals(e[0])){e.pop()}}function Rh(e,t){for(var r=0;r<t.length;r++){e.push(t[r].x);e.push(t[r].y)}}var Ph=function(e){__extends(t,e);function t(t,r){var n=e.call(this)||this;n.type="ExtrudeGeometry";n.parameters={shapes:t,options:r};t=Array.isArray(t)?t:[t];var i=n;var a=[];var o=[];for(var s=0,l=t.length;s<l;s++){var u=t[s];c(u)}n.setAttribute("position",new Kn(a,3));n.setAttribute("uv",new Kn(o,2));n.computeVertexNormals();function c(e){var t=[];var n=r.curveSegments!==undefined?r.curveSegments:12;var s=r.steps!==undefined?r.steps:1;var l=r.depth!==undefined?r.depth:100;var u=r.bevelEnabled!==undefined?r.bevelEnabled:true;var c=r.bevelThickness!==undefined?r.bevelThickness:6;var h=r.bevelSize!==undefined?r.bevelSize:c-2;var f=r.bevelOffset!==undefined?r.bevelOffset:0;var d=r.bevelSegments!==undefined?r.bevelSegments:3;var p=r.extrudePath;var v=r.UVGenerator!==undefined?r.UVGenerator:Ch;if(r.amount!==undefined){console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth.");l=r.amount}var m,g=false;var y,x,_,b;if(p){m=p.getSpacedPoints(s);g=true;u=false;y=p.computeFrenetFrames(s,false);x=new pr;_=new pr;b=new pr}if(!u){d=0;c=0;h=0;f=0}var w=e.extractPoints(n);var M=w.shape;var S=w.holes;var E=!Lh.isClockWise(M);if(E){M=M.reverse();for(var T=0,L=S.length;T<L;T++){var A=S[T];if(Lh.isClockWise(A)){S[T]=A.reverse()}}}var R=Lh.triangulateShape(M,S);var P=M;for(var T=0,L=S.length;T<L;T++){var A=S[T];M=M.concat(A)}function C(e,t,r){if(!t)console.error("THREE.ExtrudeGeometry: vec does not exist");return t.clone().multiplyScalar(r).add(e)}var I=M.length,O=R.length;function D(e,t,r){var n,i,a;var o=e.x-t.x,s=e.y-t.y;var l=r.x-e.x,u=r.y-e.y;var c=o*o+s*s;var h=o*u-s*l;if(Math.abs(h)>Number.EPSILON){var f=Math.sqrt(c);var d=Math.sqrt(l*l+u*u);var p=t.x-s/f;var v=t.y+o/f;var m=r.x-u/d;var g=r.y+l/d;var y=((m-p)*u-(g-v)*l)/(o*u-s*l);n=p+o*y-e.x;i=v+s*y-e.y;var x=n*n+i*i;if(x<=2){return new ir(n,i)}else{a=Math.sqrt(x/2)}}else{var _=false;if(o>Number.EPSILON){if(l>Number.EPSILON){_=true}}else{if(o<-Number.EPSILON){if(l<-Number.EPSILON){_=true}}else{if(Math.sign(s)===Math.sign(u)){_=true}}}if(_){n=-s;i=o;a=Math.sqrt(c)}else{n=o;i=s;a=Math.sqrt(c/2)}}return new ir(n/a,i/a)}var N=[];for(var z=0,B=P.length,H=B-1,F=z+1;z<B;z++,H++,F++){if(H===B)H=0;if(F===B)F=0;N[z]=D(P[z],P[H],P[F])}var U=[];var G,k=N.concat();for(var T=0,L=S.length;T<L;T++){var A=S[T];G=[];for(var z=0,B=A.length,H=B-1,F=z+1;z<B;z++,H++,F++){if(H===B)H=0;if(F===B)F=0;G[z]=D(A[z],A[H],A[F])}U.push(G);k=k.concat(G)}for(var V=0;V<d;V++){var W=V/d;var j=c*Math.cos(W*Math.PI/2);var q=h*Math.sin(W*Math.PI/2)+f;for(var z=0,B=P.length;z<B;z++){var X=C(P[z],N[z],q);ee(X.x,X.y,-j)}for(var T=0,L=S.length;T<L;T++){var A=S[T];G=U[T];for(var z=0,B=A.length;z<B;z++){var X=C(A[z],G[z],q);ee(X.x,X.y,-j)}}}var Y=h+f;for(var z=0;z<I;z++){var X=u?C(M[z],k[z],Y):M[z];if(!g){ee(X.x,X.y,0)}else{_.copy(y.normals[0]).multiplyScalar(X.x);x.copy(y.binormals[0]).multiplyScalar(X.y);b.copy(m[0]).add(_).add(x);ee(b.x,b.y,b.z)}}for(var Z=1;Z<=s;Z++){for(var z=0;z<I;z++){var X=u?C(M[z],k[z],Y):M[z];if(!g){ee(X.x,X.y,l/s*Z)}else{_.copy(y.normals[Z]).multiplyScalar(X.x);x.copy(y.binormals[Z]).multiplyScalar(X.y);b.copy(m[Z]).add(_).add(x);ee(b.x,b.y,b.z)}}}for(var V=d-1;V>=0;V--){var W=V/d;var j=c*Math.cos(W*Math.PI/2);var J=h*Math.sin(W*Math.PI/2)+f;for(var z=0,B=P.length;z<B;z++){var X=C(P[z],N[z],J);ee(X.x,X.y,l+j)}for(var T=0,L=S.length;T<L;T++){var A=S[T];G=U[T];for(var z=0,B=A.length;z<B;z++){var X=C(A[z],G[z],J);if(!g){ee(X.x,X.y,l+j)}else{ee(X.x,X.y+m[s-1].y,m[s-1].x+j)}}}}Q();K();function Q(){var e=a.length/3;if(u){var t=0;var r=I*t;for(var n=0;n<O;n++){var o=R[n];te(o[2]+r,o[1]+r,o[0]+r)}t=s+d*2;r=I*t;for(var n=0;n<O;n++){var o=R[n];te(o[0]+r,o[1]+r,o[2]+r)}}else{for(var n=0;n<O;n++){var o=R[n];te(o[2],o[1],o[0])}for(var n=0;n<O;n++){var o=R[n];te(o[0]+I*s,o[1]+I*s,o[2]+I*s)}}i.addGroup(e,a.length/3-e,0)}function K(){var e=a.length/3;var t=0;$(P,t);t+=P.length;for(var r=0,n=S.length;r<n;r++){var o=S[r];$(o,t);t+=o.length}i.addGroup(e,a.length/3-e,1)}function $(e,t){var r=e.length;while(--r>=0){var n=r;var i=r-1;if(i<0)i=e.length-1;for(var a=0,o=s+d*2;a<o;a++){var l=I*a;var u=I*(a+1);var c=t+n+l,h=t+i+l,f=t+i+u,p=t+n+u;re(c,h,f,p)}}}function ee(e,r,n){t.push(e);t.push(r);t.push(n)}function te(e,t,r){ne(e);ne(t);ne(r);var n=a.length/3;var o=v.generateTopUV(i,a,n-3,n-2,n-1);ie(o[0]);ie(o[1]);ie(o[2])}function re(e,t,r,n){ne(e);ne(t);ne(n);ne(t);ne(r);ne(n);var o=a.length/3;var s=v.generateSideWallUV(i,a,o-6,o-3,o-2,o-1);ie(s[0]);ie(s[1]);ie(s[3]);ie(s[1]);ie(s[2]);ie(s[3])}function ne(e){a.push(t[e*3+0]);a.push(t[e*3+1]);a.push(t[e*3+2])}function ie(e){o.push(e.x);o.push(e.y)}}return n}t.prototype.toJSON=function(){var e=ci.prototype.toJSON.call(this);var t=this.parameters.shapes;var r=this.parameters.options;return Ih(t,r,e)};return t}(ci);var Ch={generateTopUV:function(e,t,r,n,i){var a=t[r*3];var o=t[r*3+1];var s=t[n*3];var l=t[n*3+1];var u=t[i*3];var c=t[i*3+1];return[new ir(a,o),new ir(s,l),new ir(u,c)]},generateSideWallUV:function(e,t,r,n,i,a){var o=t[r*3];var s=t[r*3+1];var l=t[r*3+2];var u=t[n*3];var c=t[n*3+1];var h=t[n*3+2];var f=t[i*3];var d=t[i*3+1];var p=t[i*3+2];var v=t[a*3];var m=t[a*3+1];var g=t[a*3+2];if(Math.abs(s-c)<.01){return[new ir(o,1-l),new ir(u,1-h),new ir(f,1-p),new ir(v,1-g)]}else{return[new ir(s,1-l),new ir(c,1-h),new ir(d,1-p),new ir(m,1-g)]}}};function Ih(e,t,r){r.shapes=[];if(Array.isArray(e)){for(var n=0,i=e.length;n<i;n++){var a=e[n];r.shapes.push(a.uuid)}}else{r.shapes.push(e.uuid)}if(t.extrudePath!==undefined)r.options.extrudePath=t.extrudePath.toJSON();return r}function Oh(e,t,r){ci.call(this);this.type="ParametricGeometry";this.parameters={func:e,slices:t,stacks:r};var n=[];var i=[];var a=[];var o=[];var s=1e-5;var l=new pr;var u=new pr,c=new pr;var h=new pr,f=new pr;if(e.length<3){console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.")}var d=t+1;for(var p=0;p<=r;p++){var v=p/r;for(var m=0;m<=t;m++){var g=m/t;e(g,v,u);i.push(u.x,u.y,u.z);if(g-s>=0){e(g-s,v,c);h.subVectors(u,c)}else{e(g+s,v,c);h.subVectors(c,u)}if(v-s>=0){e(g,v-s,c);f.subVectors(u,c)}else{e(g,v+s,c);f.subVectors(c,u)}l.crossVectors(h,f).normalize();a.push(l.x,l.y,l.z);o.push(g,v)}}for(var p=0;p<r;p++){for(var m=0;m<t;m++){var y=p*d+m;var x=p*d+m+1;var _=(p+1)*d+m+1;var b=(p+1)*d+m;n.push(y,x,b);n.push(x,_,b)}}this.setIndex(n);this.setAttribute("position",new Kn(i,3));this.setAttribute("normal",new Kn(a,3));this.setAttribute("uv",new Kn(o,2))}Oh.prototype=Object.create(ci.prototype);Oh.prototype.constructor=Oh;var Dh=function(e){__extends(t,e);function t(t,r){if(r===void 0){r=12}var n=e.call(this)||this;n.type="ShapeGeometry";n.parameters={shapes:t,curveSegments:r};var i=[];var a=[];var o=[];var s=[];var l=0;var u=0;if(Array.isArray(t)===false){h(t)}else{for(var c=0;c<t.length;c++){h(t[c]);n.addGroup(l,u,c);l+=u;u=0}}n.setIndex(i);n.setAttribute("position",new Kn(a,3));n.setAttribute("normal",new Kn(o,3));n.setAttribute("uv",new Kn(s,2));function h(e){var t=a.length/3;var n=e.extractPoints(r);var l=n.shape;var c=n.holes;if(Lh.isClockWise(l)===false){l=l.reverse()}for(var h=0,f=c.length;h<f;h++){var d=c[h];if(Lh.isClockWise(d)===true){c[h]=d.reverse()}}var p=Lh.triangulateShape(l,c);for(var h=0,f=c.length;h<f;h++){var d=c[h];l=l.concat(d)}for(var h=0,f=l.length;h<f;h++){var v=l[h];a.push(v.x,v.y,0);o.push(0,0,1);s.push(v.x,v.y)}for(var h=0,f=p.length;h<f;h++){var m=p[h];var g=m[0]+t;var y=m[1]+t;var x=m[2]+t;i.push(g,y,x);u+=3}}return n}t.prototype.toJSON=function(){var e=ci.prototype.toJSON.call(this);var t=this.parameters.shapes;return Nh(t,e)};return t}(ci);function Nh(e,t){t.shapes=[];if(Array.isArray(e)){for(var r=0,n=e.length;r<n;r++){var i=e[r];t.shapes.push(i.uuid)}}else{t.shapes.push(e.uuid)}return t}function zh(e){Fn.call(this);this.type="ShadowMaterial";this.color=new zn(0);this.transparent=true;this.setValues(e)}zh.prototype=Object.create(Fn.prototype);zh.prototype.constructor=zh;zh.prototype.isShadowMaterial=true;zh.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.color.copy(e.color);return this};function Bh(e){Bi.call(this,e);this.type="RawShaderMaterial"}Bh.prototype=Object.create(Bi.prototype);Bh.prototype.constructor=Bh;Bh.prototype.isRawShaderMaterial=true;function Hh(e){Fn.call(this);this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new zn(16777215);this.roughness=1;this.metalness=0;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new zn(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=qt;this.normalScale=new ir(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.vertexTangents=false;this.setValues(e)}Hh.prototype=Object.create(Fn.prototype);Hh.prototype.constructor=Hh;Hh.prototype.isMeshStandardMaterial=true;Hh.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.defines={STANDARD:""};this.color.copy(e.color);this.roughness=e.roughness;this.metalness=e.metalness;this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.roughnessMap=e.roughnessMap;this.metalnessMap=e.metalnessMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.envMapIntensity=e.envMapIntensity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;this.vertexTangents=e.vertexTangents;return this};function Fh(e){Hh.call(this);this.defines={STANDARD:"",PHYSICAL:""};this.type="MeshPhysicalMaterial";this.clearcoat=0;this.clearcoatMap=null;this.clearcoatRoughness=0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new ir(1,1);this.clearcoatNormalMap=null;this.reflectivity=.5;Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=nr.clamp(2.5*(e-1)/(e+1),0,1)}});this.sheen=null;this.transmission=0;this.transmissionMap=null;this.setValues(e)}Fh.prototype=Object.create(Hh.prototype);Fh.prototype.constructor=Fh;Fh.prototype.isMeshPhysicalMaterial=true;Fh.prototype.copy=function(e){Hh.prototype.copy.call(this,e);this.defines={STANDARD:"",PHYSICAL:""};this.clearcoat=e.clearcoat;this.clearcoatMap=e.clearcoatMap;this.clearcoatRoughness=e.clearcoatRoughness;this.clearcoatRoughnessMap=e.clearcoatRoughnessMap;this.clearcoatNormalMap=e.clearcoatNormalMap;this.clearcoatNormalScale.copy(e.clearcoatNormalScale);this.reflectivity=e.reflectivity;if(e.sheen){this.sheen=(this.sheen||new zn).copy(e.sheen)}else{this.sheen=null}this.transmission=e.transmission;this.transmissionMap=e.transmissionMap;return this};function Uh(e){Fn.call(this);this.type="MeshPhongMaterial";this.color=new zn(16777215);this.specular=new zn(1118481);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new zn(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=qt;this.normalScale=new ir(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=k;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)}Uh.prototype=Object.create(Fn.prototype);Uh.prototype.constructor=Uh;Uh.prototype.isMeshPhongMaterial=true;Uh.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.color.copy(e.color);this.specular.copy(e.specular);this.shininess=e.shininess;this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this};function Gh(e){Fn.call(this);this.defines={TOON:""};this.type="MeshToonMaterial";this.color=new zn(16777215);this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new zn(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=qt;this.normalScale=new ir(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)}Gh.prototype=Object.create(Fn.prototype);Gh.prototype.constructor=Gh;Gh.prototype.isMeshToonMaterial=true;Gh.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.gradientMap=e.gradientMap;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.alphaMap=e.alphaMap;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this};function kh(e){Fn.call(this);this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=qt;this.normalScale=new ir(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)}kh.prototype=Object.create(Fn.prototype);kh.prototype.constructor=kh;kh.prototype.isMeshNormalMaterial=true;kh.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this};function Vh(e){Fn.call(this);this.type="MeshLambertMaterial";this.color=new zn(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new zn(0);this.emissiveIntensity=1;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=k;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)}Vh.prototype=Object.create(Fn.prototype);Vh.prototype.constructor=Vh;Vh.prototype.isMeshLambertMaterial=true;Vh.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.color.copy(e.color);this.map=e.map;this.lightMap=e.lightMap;this.lightMapIntensity=e.lightMapIntensity;this.aoMap=e.aoMap;this.aoMapIntensity=e.aoMapIntensity;this.emissive.copy(e.emissive);this.emissiveMap=e.emissiveMap;this.emissiveIntensity=e.emissiveIntensity;this.specularMap=e.specularMap;this.alphaMap=e.alphaMap;this.envMap=e.envMap;this.combine=e.combine;this.reflectivity=e.reflectivity;this.refractionRatio=e.refractionRatio;this.wireframe=e.wireframe;this.wireframeLinewidth=e.wireframeLinewidth;this.wireframeLinecap=e.wireframeLinecap;this.wireframeLinejoin=e.wireframeLinejoin;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this};function Wh(e){Fn.call(this);this.defines={MATCAP:""};this.type="MeshMatcapMaterial";this.color=new zn(16777215);this.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=qt;this.normalScale=new ir(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(e)}Wh.prototype=Object.create(Fn.prototype);Wh.prototype.constructor=Wh;Wh.prototype.isMeshMatcapMaterial=true;Wh.prototype.copy=function(e){Fn.prototype.copy.call(this,e);this.defines={MATCAP:""};this.color.copy(e.color);this.matcap=e.matcap;this.map=e.map;this.bumpMap=e.bumpMap;this.bumpScale=e.bumpScale;this.normalMap=e.normalMap;this.normalMapType=e.normalMapType;this.normalScale.copy(e.normalScale);this.displacementMap=e.displacementMap;this.displacementScale=e.displacementScale;this.displacementBias=e.displacementBias;this.alphaMap=e.alphaMap;this.skinning=e.skinning;this.morphTargets=e.morphTargets;this.morphNormals=e.morphNormals;return this};function jh(e){Mc.call(this);this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(e)}jh.prototype=Object.create(Mc.prototype);jh.prototype.constructor=jh;jh.prototype.isLineDashedMaterial=true;jh.prototype.copy=function(e){Mc.prototype.copy.call(this,e);this.scale=e.scale;this.dashSize=e.dashSize;this.gapSize=e.gapSize;return this};var qh=Object.freeze({__proto__:null,ShadowMaterial:zh,SpriteMaterial:Vu,RawShaderMaterial:Bh,ShaderMaterial:Bi,PointsMaterial:Dc,MeshPhysicalMaterial:Fh,MeshStandardMaterial:Hh,MeshPhongMaterial:Uh,MeshToonMaterial:Gh,MeshNormalMaterial:kh,MeshLambertMaterial:Vh,MeshDepthMaterial:Mu,MeshDistanceMaterial:Su,MeshBasicMaterial:Un,MeshMatcapMaterial:Wh,LineDashedMaterial:jh,LineBasicMaterial:Mc,Material:Fn});var Xh={arraySlice:function(e,t,r){if(Xh.isTypedArray(e)){return new e.constructor(e.subarray(t,r!==undefined?r:e.length))}return e.slice(t,r)},convertArray:function(e,t,r){if(!e||!r&&e.constructor===t)return e;if(typeof t.BYTES_PER_ELEMENT==="number"){return new t(e)}return Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(t,r){return e[t]-e[r]}var r=e.length;var n=new Array(r);for(var i=0;i!==r;++i)n[i]=i;n.sort(t);return n},sortedArray:function(e,t,r){var n=e.length;var i=new e.constructor(n);for(var a=0,o=0;o!==n;++a){var s=r[a]*t;for(var l=0;l!==t;++l){i[o++]=e[s+l]}}return i},flattenJSON:function(e,t,r,n){var i=1,a=e[0];while(a!==undefined&&a[n]===undefined){a=e[i++]}if(a===undefined)return;var o=a[n];if(o===undefined)return;if(Array.isArray(o)){do{o=a[n];if(o!==undefined){t.push(a.time);r.push.apply(r,o)}a=e[i++]}while(a!==undefined)}else if(o.toArray!==undefined){do{o=a[n];if(o!==undefined){t.push(a.time);o.toArray(r,r.length)}a=e[i++]}while(a!==undefined)}else{do{o=a[n];if(o!==undefined){t.push(a.time);r.push(o)}a=e[i++]}while(a!==undefined)}},subclip:function(e,t,r,n,i){if(i===void 0){i=30}var a=e.clone();a.name=t;var o=[];for(var s=0;s<a.tracks.length;++s){var l=a.tracks[s];var u=l.getValueSize();var c=[];var h=[];for(var f=0;f<l.times.length;++f){var d=l.times[f]*i;if(d<r||d>=n)continue;c.push(l.times[f]);for(var p=0;p<u;++p){h.push(l.values[f*u+p])}}if(c.length===0)continue;l.times=Xh.convertArray(c,l.times.constructor);l.values=Xh.convertArray(h,l.values.constructor);o.push(l)}a.tracks=o;var v=Infinity;for(var s=0;s<a.tracks.length;++s){if(v>a.tracks[s].times[0]){v=a.tracks[s].times[0]}}for(var s=0;s<a.tracks.length;++s){a.tracks[s].shift(-1*v)}a.resetDuration();return a},makeClipAdditive:function(e,t,r,n){if(t===void 0){t=0}if(r===void 0){r=e}if(n===void 0){n=30}if(n<=0)n=30;var i=r.tracks.length;var a=t/n;var o=function(t){var n=r.tracks[t];var i=n.ValueTypeName;if(i==="bool"||i==="string")return"continue";var o=e.tracks.find((function(e){return e.name===n.name&&e.ValueTypeName===i}));if(o===undefined)return"continue";var s=0;var l=n.getValueSize();if(n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){s=l/3}var u=0;var c=o.getValueSize();if(o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){u=c/3}var h=n.times.length-1;var f=void 0;if(a<=n.times[0]){var d=s;var p=l-s;f=Xh.arraySlice(n.values,d,p)}else if(a>=n.times[h]){var d=h*l+s;var p=d+l-s;f=Xh.arraySlice(n.values,d,p)}else{var v=n.createInterpolant();var d=s;var p=l-s;v.evaluate(a);f=Xh.arraySlice(v.resultBuffer,d,p)}if(i==="quaternion"){var m=(new dr).fromArray(f).normalize().conjugate();m.toArray(f)}var g=o.times.length;for(var y=0;y<g;++y){var x=y*c+u;if(i==="quaternion"){dr.multiplyQuaternionsFlat(o.values,x,f,0,o.values,x)}else{var _=c-u*2;for(var b=0;b<_;++b){o.values[x+b]-=f[b]}}}};for(var s=0;s<i;++s){o(s)}e.blendMode=Dt;return e}};function Yh(e,t,r,n){this.parameterPositions=e;this._cachedIndex=0;this.resultBuffer=n!==undefined?n:new t.constructor(r);this.sampleValues=t;this.valueSize=r}Object.assign(Yh.prototype,{evaluate:function(e){var t=this.parameterPositions;var r=this._cachedIndex,n=t[r],i=t[r-1];e:{t:{var a=void 0;r:{n:if(!(e<n)){for(var o=r+2;;){if(n===undefined){if(e<i)break n;r=t.length;this._cachedIndex=r;return this.afterEnd_(r-1,e,i)}if(r===o)break;i=n;n=t[++r];if(e<n){break t}}a=t.length;break r}if(!(e>=i)){var s=t[1];if(e<s){r=2;i=s}for(var o=r-2;;){if(i===undefined){this._cachedIndex=0;return this.beforeStart_(0,e,n)}if(r===o)break;n=i;i=t[--r-1];if(e>=i){break t}}a=r;r=0;break r}break e}while(r<a){var l=r+a>>>1;if(e<t[l]){a=l}else{r=l+1}}n=t[r];i=t[r-1];if(i===undefined){this._cachedIndex=0;return this.beforeStart_(0,e,n)}if(n===undefined){r=t.length;this._cachedIndex=r;return this.afterEnd_(r-1,i,e)}}this._cachedIndex=r;this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,e,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){var t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(var a=0;a!==n;++a){t[a]=r[i+a]}return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(Yh.prototype,{beforeStart_:Yh.prototype.copySampleValue_,afterEnd_:Yh.prototype.copySampleValue_});function Zh(e,t,r,n){Yh.call(this,e,t,r,n);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0}Zh.prototype=Object.assign(Object.create(Yh.prototype),{constructor:Zh,DefaultSettings_:{endingStart:Pt,endingEnd:Pt},intervalChanged_:function(e,t,r){var n=this.parameterPositions;var i=e-2,a=e+1,o=n[i],s=n[a];if(o===undefined){switch(this.getSettings_().endingStart){case Ct:i=e;o=2*t-r;break;case It:i=n.length-2;o=t+n[i]-n[i+1];break;default:i=e;o=r}}if(s===undefined){switch(this.getSettings_().endingEnd){case Ct:a=e;s=2*r-t;break;case It:a=1;s=r+n[1]-n[0];break;default:a=e-1;s=t}}var l=(r-t)*.5,u=this.valueSize;this._weightPrev=l/(t-o);this._weightNext=l/(s-r);this._offsetPrev=i*u;this._offsetNext=a*u},interpolate_:function(e,t,r,n){var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,f=this._weightNext,d=(r-t)/(n-t),p=d*d,v=p*d;var m=-h*v+2*h*p-h*d;var g=(1+h)*v+(-1.5-2*h)*p+(-.5+h)*d+1;var y=(-1-f)*v+(1.5+f)*p+.5*d;var x=f*v-f*p;for(var _=0;_!==o;++_){i[_]=m*a[u+_]+g*a[l+_]+y*a[s+_]+x*a[c+_]}return i}});function Jh(e,t,r,n){Yh.call(this,e,t,r,n)}Jh.prototype=Object.assign(Object.create(Yh.prototype),{constructor:Jh,interpolate_:function(e,t,r,n){var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,u=(r-t)/(n-t),c=1-u;for(var h=0;h!==o;++h){i[h]=a[l+h]*c+a[s+h]*u}return i}});function Qh(e,t,r,n){Yh.call(this,e,t,r,n)}Qh.prototype=Object.assign(Object.create(Yh.prototype),{constructor:Qh,interpolate_:function(e){return this.copySampleValue_(e-1)}});function Kh(e,t,r,n){if(e===undefined)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===undefined||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e;this.times=Xh.convertArray(t,this.TimeBufferType);this.values=Xh.convertArray(r,this.ValueBufferType);this.setInterpolation(n||this.DefaultInterpolation)}Object.assign(Kh,{toJSON:function(e){var t=e.constructor;var r;if(t.toJSON!==undefined){r=t.toJSON(e)}else{r={name:e.name,times:Xh.convertArray(e.times,Array),values:Xh.convertArray(e.values,Array)};var n=e.getInterpolation();if(n!==e.DefaultInterpolation){r.interpolation=n}}r.type=e.ValueTypeName;return r}});Object.assign(Kh.prototype,{constructor:Kh,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:At,InterpolantFactoryMethodDiscrete:function(e){return new Qh(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Jh(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new Zh(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case Lt:t=this.InterpolantFactoryMethodDiscrete;break;case At:t=this.InterpolantFactoryMethodLinear;break;case Rt:t=this.InterpolantFactoryMethodSmooth;break}if(t===undefined){var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined){if(e!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation)}else{throw new Error(r)}}console.warn("THREE.KeyframeTrack:",r);return this}this.createInterpolant=t;return this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Lt;case this.InterpolantFactoryMethodLinear:return At;case this.InterpolantFactoryMethodSmooth:return Rt}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){var t=this.times;for(var r=0,n=t.length;r!==n;++r){t[r]+=e}}return this},scale:function(e){if(e!==1){var t=this.times;for(var r=0,n=t.length;r!==n;++r){t[r]*=e}}return this},trim:function(e,t){var r=this.times,n=r.length;var i=0,a=n-1;while(i!==n&&r[i]<e){++i}while(a!==-1&&r[a]>t){--a}++a;if(i!==0||a!==n){if(i>=a){a=Math.max(a,1);i=a-1}var o=this.getValueSize();this.times=Xh.arraySlice(r,i,a);this.values=Xh.arraySlice(this.values,i*o,a*o)}return this},validate:function(){var e=true;var t=this.getValueSize();if(t-Math.floor(t)!==0){console.error("THREE.KeyframeTrack: Invalid value size in track.",this);e=false}var r=this.times,n=this.values,i=r.length;if(i===0){console.error("THREE.KeyframeTrack: Track is empty.",this);e=false}var a=null;for(var o=0;o!==i;o++){var s=r[o];if(typeof s==="number"&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,s);e=false;break}if(a!==null&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,s,a);e=false;break}a=s}if(n!==undefined){if(Xh.isTypedArray(n)){for(var o=0,l=n.length;o!==l;++o){var u=n[o];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,u);e=false;break}}}}return e},optimize:function(){var e=Xh.arraySlice(this.times),t=Xh.arraySlice(this.values),r=this.getValueSize(),n=this.getInterpolation()===Rt,i=e.length-1;var a=1;for(var o=1;o<i;++o){var s=false;var l=e[o];var u=e[o+1];if(l!==u&&(o!==1||l!==e[0])){if(!n){var c=o*r,h=c-r,f=c+r;for(var d=0;d!==r;++d){var p=t[c+d];if(p!==t[h+d]||p!==t[f+d]){s=true;break}}}else{s=true}}if(s){if(o!==a){e[a]=e[o];var v=o*r,m=a*r;for(var d=0;d!==r;++d){t[m+d]=t[v+d]}}++a}}if(i>0){e[a]=e[i];for(var v=i*r,m=a*r,d=0;d!==r;++d){t[m+d]=t[v+d]}++a}if(a!==e.length){this.times=Xh.arraySlice(e,0,a);this.values=Xh.arraySlice(t,0,a*r)}else{this.times=e;this.values=t}return this},clone:function(){var e=Xh.arraySlice(this.times,0);var t=Xh.arraySlice(this.values,0);var r=this.constructor;var n=new r(this.name,e,t);n.createInterpolant=this.createInterpolant;return n}});function $h(e,t,r){Kh.call(this,e,t,r)}$h.prototype=Object.assign(Object.create(Kh.prototype),{constructor:$h,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Lt,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});function ef(e,t,r,n){Kh.call(this,e,t,r,n)}ef.prototype=Object.assign(Object.create(Kh.prototype),{constructor:ef,ValueTypeName:"color"});function tf(e,t,r,n){Kh.call(this,e,t,r,n)}tf.prototype=Object.assign(Object.create(Kh.prototype),{constructor:tf,ValueTypeName:"number"});function rf(e,t,r,n){Yh.call(this,e,t,r,n)}rf.prototype=Object.assign(Object.create(Yh.prototype),{constructor:rf,interpolate_:function(e,t,r,n){var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(r-t)/(n-t);var l=e*o;for(var u=l+o;l!==u;l+=4){dr.slerpFlat(i,0,a,l-o,a,l,s)}return i}});function nf(e,t,r,n){Kh.call(this,e,t,r,n)}nf.prototype=Object.assign(Object.create(Kh.prototype),{constructor:nf,ValueTypeName:"quaternion",DefaultInterpolation:At,InterpolantFactoryMethodLinear:function(e){return new rf(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:undefined});function af(e,t,r,n){Kh.call(this,e,t,r,n)}af.prototype=Object.assign(Object.create(Kh.prototype),{constructor:af,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Lt,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});function of(e,t,r,n){Kh.call(this,e,t,r,n)}of.prototype=Object.assign(Object.create(Kh.prototype),{constructor:of,ValueTypeName:"vector"});function sf(e,t,r,n){if(t===void 0){t=-1}if(n===void 0){n=Ot}this.name=e;this.tracks=r;this.duration=t;this.blendMode=n;this.uuid=nr.generateUUID();if(this.duration<0){this.resetDuration()}}function lf(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return tf;case"vector":case"vector2":case"vector3":case"vector4":return of;case"color":return ef;case"quaternion":return nf;case"bool":case"boolean":return $h;case"string":return af}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function uf(e){if(e.type===undefined){throw new Error("THREE.KeyframeTrack: track type undefined, can not parse")}var t=lf(e.type);if(e.times===undefined){var r=[],n=[];Xh.flattenJSON(e.keys,r,n,"value");e.times=r;e.values=n}if(t.parse!==undefined){return t.parse(e)}else{return new t(e.name,e.times,e.values,e.interpolation)}}Object.assign(sf,{parse:function(e){var t=[],r=e.tracks,n=1/(e.fps||1);for(var i=0,a=r.length;i!==a;++i){t.push(uf(r[i]).scale(n))}var o=new sf(e.name,e.duration,t,e.blendMode);o.uuid=e.uuid;return o},toJSON:function(e){var t=[],r=e.tracks;var n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(var i=0,a=r.length;i!==a;++i){t.push(Kh.toJSON(r[i]))}return n},CreateFromMorphTargetSequence:function(e,t,r,n){var i=t.length;var a=[];for(var o=0;o<i;o++){var s=[];var l=[];s.push((o+i-1)%i,o,(o+1)%i);l.push(0,1,0);var u=Xh.getKeyframeOrder(s);s=Xh.sortedArray(s,1,u);l=Xh.sortedArray(l,1,u);if(!n&&s[0]===0){s.push(i);l.push(l[0])}a.push(new tf(".morphTargetInfluences["+t[o].name+"]",s,l).scale(1/r))}return new sf(e,-1,a)},findByName:function(e,t){var r=e;if(!Array.isArray(e)){var n=e;r=n.geometry&&n.geometry.animations||n.animations}for(var i=0;i<r.length;i++){if(r[i].name===t){return r[i]}}return null},CreateClipsFromMorphTargetSequences:function(e,t,r){var n={};var i=/^([\w-]*?)([\d]+)$/;for(var a=0,o=e.length;a<o;a++){var s=e[a];var l=s.name.match(i);if(l&&l.length>1){var u=l[1];var c=n[u];if(!c){n[u]=c=[]}c.push(s)}}var h=[];for(var u in n){h.push(sf.CreateFromMorphTargetSequence(u,n[u],t,r))}return h},parseAnimation:function(e,t){if(!e){console.error("THREE.AnimationClip: No animation in JSONLoader data.");return null}var r=function(e,t,r,n,i){if(r.length!==0){var a=[];var o=[];Xh.flattenJSON(r,a,o,n);if(a.length!==0){i.push(new e(t,a,o))}}};var n=[];var i=e.name||"default";var a=e.fps||30;var o=e.blendMode;var s=e.length||-1;var l=e.hierarchy||[];for(var u=0;u<l.length;u++){var c=l[u].keys;if(!c||c.length===0)continue;if(c[0].morphTargets){var h={};var f=void 0;for(f=0;f<c.length;f++){if(c[f].morphTargets){for(var d=0;d<c[f].morphTargets.length;d++){h[c[f].morphTargets[d]]=-1}}}for(var p in h){var v=[];var m=[];for(var d=0;d!==c[f].morphTargets.length;++d){var g=c[f];v.push(g.time);m.push(g.morphTarget===p?1:0)}n.push(new tf(".morphTargetInfluence["+p+"]",v,m))}s=h.length*(a||1)}else{var y=".bones["+t[u].name+"]";r(of,y+".position",c,"pos",n);r(nf,y+".quaternion",c,"rot",n);r(of,y+".scale",c,"scl",n)}}if(n.length===0){return null}var x=new sf(i,s,n,o);return x}});Object.assign(sf.prototype,{resetDuration:function(){var e=this.tracks;var t=0;for(var r=0,n=e.length;r!==n;++r){var i=this.tracks[r];t=Math.max(t,i.times[i.times.length-1])}this.duration=t;return this},trim:function(){for(var e=0;e<this.tracks.length;e++){this.tracks[e].trim(0,this.duration)}return this},validate:function(){var e=true;for(var t=0;t<this.tracks.length;t++){e=e&&this.tracks[t].validate()}return e},optimize:function(){for(var e=0;e<this.tracks.length;e++){this.tracks[e].optimize()}return this},clone:function(){var e=[];for(var t=0;t<this.tracks.length;t++){e.push(this.tracks[t].clone())}return new sf(this.name,this.duration,e,this.blendMode)},toJSON:function(){return sf.toJSON(this)}});var cf={enabled:false,files:{},add:function(e,t){if(this.enabled===false)return;this.files[e]=t},get:function(e){if(this.enabled===false)return;return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function hf(e,t,r){var n=this;var i=false;var a=0;var o=0;var s=undefined;var l=[];this.onStart=undefined;this.onLoad=e;this.onProgress=t;this.onError=r;this.itemStart=function(e){o++;if(i===false){if(n.onStart!==undefined){n.onStart(e,a,o)}}i=true};this.itemEnd=function(e){a++;if(n.onProgress!==undefined){n.onProgress(e,a,o)}if(a===o){i=false;if(n.onLoad!==undefined){n.onLoad()}}};this.itemError=function(e){if(n.onError!==undefined){n.onError(e)}};this.resolveURL=function(e){if(s){return s(e)}return e};this.setURLModifier=function(e){s=e;return this};this.addHandler=function(e,t){l.push(e,t);return this};this.removeHandler=function(e){var t=l.indexOf(e);if(t!==-1){l.splice(t,2)}return this};this.getHandler=function(e){for(var t=0,r=l.length;t<r;t+=2){var n=l[t];var i=l[t+1];if(n.global)n.lastIndex=0;if(n.test(e)){return i}}return null}}var ff=new hf;function df(e){this.manager=e!==undefined?e:ff;this.crossOrigin="anonymous";this.withCredentials=false;this.path="";this.resourcePath="";this.requestHeader={}}Object.assign(df.prototype,{load:function(){},loadAsync:function(e,t){var r=this;return new Promise((function(n,i){r.load(e,n,t,i)}))},parse:function(){},setCrossOrigin:function(e){this.crossOrigin=e;return this},setWithCredentials:function(e){this.withCredentials=e;return this},setPath:function(e){this.path=e;return this},setResourcePath:function(e){this.resourcePath=e;return this},setRequestHeader:function(e){this.requestHeader=e;return this}});var pf={};function vf(e){df.call(this,e)}vf.prototype=Object.assign(Object.create(df.prototype),{constructor:vf,load:function(e,t,r,n){if(e===undefined)e="";if(this.path!==undefined)e=this.path+e;e=this.manager.resolveURL(e);var i=this;var a=cf.get(e);if(a!==undefined){i.manager.itemStart(e);setTimeout((function(){if(t)t(a);i.manager.itemEnd(e)}),0);return a}if(pf[e]!==undefined){pf[e].push({onLoad:t,onProgress:r,onError:n});return}var o=/^data:(.*?)(;base64)?,(.*)$/;var s=e.match(o);var l;if(s){var u=s[1];var c=!!s[2];var h=s[3];h=decodeURIComponent(h);if(c)h=atob(h);try{var f;var d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":var p=new Uint8Array(h.length);for(var v=0;v<h.length;v++){p[v]=h.charCodeAt(v)}if(d==="blob"){f=new Blob([p.buffer],{type:u})}else{f=p.buffer}break;case"document":var m=new DOMParser;f=m.parseFromString(h,u);break;case"json":f=JSON.parse(h);break;default:f=h;break}setTimeout((function(){if(t)t(f);i.manager.itemEnd(e)}),0)}catch(y){setTimeout((function(){if(n)n(y);i.manager.itemError(e);i.manager.itemEnd(e)}),0)}}else{pf[e]=[];pf[e].push({onLoad:t,onProgress:r,onError:n});l=new XMLHttpRequest;l.open("GET",e,true);l.addEventListener("load",(function(t){var r=this.response;var n=pf[e];delete pf[e];if(this.status===200||this.status===0){if(this.status===0)console.warn("THREE.FileLoader: HTTP Status 0 received.");cf.add(e,r);for(var a=0,o=n.length;a<o;a++){var s=n[a];if(s.onLoad)s.onLoad(r)}i.manager.itemEnd(e)}else{for(var a=0,o=n.length;a<o;a++){var s=n[a];if(s.onError)s.onError(t)}i.manager.itemError(e);i.manager.itemEnd(e)}}),false);l.addEventListener("progress",(function(t){var r=pf[e];for(var n=0,i=r.length;n<i;n++){var a=r[n];if(a.onProgress)a.onProgress(t)}}),false);l.addEventListener("error",(function(t){var r=pf[e];delete pf[e];for(var n=0,a=r.length;n<a;n++){var o=r[n];if(o.onError)o.onError(t)}i.manager.itemError(e);i.manager.itemEnd(e)}),false);l.addEventListener("abort",(function(t){var r=pf[e];delete pf[e];for(var n=0,a=r.length;n<a;n++){var o=r[n];if(o.onError)o.onError(t)}i.manager.itemError(e);i.manager.itemEnd(e)}),false);if(this.responseType!==undefined)l.responseType=this.responseType;if(this.withCredentials!==undefined)l.withCredentials=this.withCredentials;if(l.overrideMimeType)l.overrideMimeType(this.mimeType!==undefined?this.mimeType:"text/plain");for(var g in this.requestHeader){l.setRequestHeader(g,this.requestHeader[g])}l.send(null)}i.manager.itemStart(e);return l},setResponseType:function(e){this.responseType=e;return this},setMimeType:function(e){this.mimeType=e;return this}});function mf(e){df.call(this,e)}mf.prototype=Object.assign(Object.create(df.prototype),{constructor:mf,load:function(e,t,r,n){var i=this;var a=new vf(i.manager);a.setPath(i.path);a.setRequestHeader(i.requestHeader);a.setWithCredentials(i.withCredentials);a.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(a){if(n){n(a)}else{console.error(a)}i.manager.itemError(e)}}),r,n)},parse:function(e){var t=[];for(var r=0;r<e.length;r++){var n=sf.parse(e[r]);t.push(n)}return t}});function gf(e){df.call(this,e)}gf.prototype=Object.assign(Object.create(df.prototype),{constructor:gf,load:function(e,t,r,n){var i=this;var a=[];var o=new kc;var s=new vf(this.manager);s.setPath(this.path);s.setResponseType("arraybuffer");s.setRequestHeader(this.requestHeader);s.setWithCredentials(i.withCredentials);var l=0;function u(u){s.load(e[u],(function(e){var r=i.parse(e,true);a[u]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps};l+=1;if(l===6){if(r.mipmapCount===1)o.minFilter=ce;o.image=a;o.format=r.format;o.needsUpdate=true;if(t)t(o)}}),r,n)}if(Array.isArray(e)){for(var c=0,h=e.length;c<h;++c){u(c)}}else{s.load(e,(function(e){var r=i.parse(e,true);if(r.isCubemap){var n=r.mipmaps.length/r.mipmapCount;for(var s=0;s<n;s++){a[s]={mipmaps:[]};for(var l=0;l<r.mipmapCount;l++){a[s].mipmaps.push(r.mipmaps[s*r.mipmapCount+l]);a[s].format=r.format;a[s].width=r.width;a[s].height=r.height}}o.image=a}else{o.image.width=r.width;o.image.height=r.height;o.mipmaps=r.mipmaps}if(r.mipmapCount===1){o.minFilter=ce}o.format=r.format;o.needsUpdate=true;if(t)t(o)}),r,n)}return o}});function yf(e){df.call(this,e)}yf.prototype=Object.assign(Object.create(df.prototype),{constructor:yf,load:function(e,t,r,n){if(this.path!==undefined)e=this.path+e;e=this.manager.resolveURL(e);var i=this;var a=cf.get(e);if(a!==undefined){i.manager.itemStart(e);setTimeout((function(){if(t)t(a);i.manager.itemEnd(e)}),0);return a}var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){o.removeEventListener("load",s,false);o.removeEventListener("error",l,false);cf.add(e,this);if(t)t(this);i.manager.itemEnd(e)}function l(t){o.removeEventListener("load",s,false);o.removeEventListener("error",l,false);if(n)n(t);i.manager.itemError(e);i.manager.itemEnd(e)}o.addEventListener("load",s,false);o.addEventListener("error",l,false);if(e.substr(0,5)!=="data:"){if(this.crossOrigin!==undefined)o.crossOrigin=this.crossOrigin}i.manager.itemStart(e);o.src=e;return o}});function xf(e){df.call(this,e)}xf.prototype=Object.assign(Object.create(df.prototype),{constructor:xf,load:function(e,t,r,n){var i=new Vi;var a=new yf(this.manager);a.setCrossOrigin(this.crossOrigin);a.setPath(this.path);var o=0;function s(r){a.load(e[r],(function(e){i.images[r]=e;o++;if(o===6){i.needsUpdate=true;if(t)t(i)}}),undefined,n)}for(var l=0;l<e.length;++l){s(l)}return i}});function _f(e){df.call(this,e)}_f.prototype=Object.assign(Object.create(df.prototype),{constructor:_f,load:function(e,t,r,n){var i=this;var a=new ji;var o=new vf(this.manager);o.setResponseType("arraybuffer");o.setRequestHeader(this.requestHeader);o.setPath(this.path);o.setWithCredentials(i.withCredentials);o.load(e,(function(e){var r=i.parse(e);if(!r)return;if(r.image!==undefined){a.image=r.image}else if(r.data!==undefined){a.image.width=r.width;a.image.height=r.height;a.image.data=r.data}a.wrapS=r.wrapS!==undefined?r.wrapS:ae;a.wrapT=r.wrapT!==undefined?r.wrapT:ae;a.magFilter=r.magFilter!==undefined?r.magFilter:ce;a.minFilter=r.minFilter!==undefined?r.minFilter:ce;a.anisotropy=r.anisotropy!==undefined?r.anisotropy:1;if(r.encoding!==undefined){a.encoding=r.encoding}if(r.flipY!==undefined){a.flipY=r.flipY}if(r.format!==undefined){a.format=r.format}if(r.type!==undefined){a.type=r.type}if(r.mipmaps!==undefined){a.mipmaps=r.mipmaps;a.minFilter=fe}if(r.mipmapCount===1){a.minFilter=ce}a.needsUpdate=true;if(t)t(a,r)}),r,n);return a}});function bf(e){df.call(this,e)}bf.prototype=Object.assign(Object.create(df.prototype),{constructor:bf,load:function(e,t,r,n){var i=new ur;var a=new yf(this.manager);a.setCrossOrigin(this.crossOrigin);a.setPath(this.path);a.load(e,(function(r){i.image=r;var n=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data\:image\/jpeg/)===0;i.format=n?Te:Le;i.needsUpdate=true;if(t!==undefined){t(i)}}),r,n);return i}});function wf(){this.type="Curve";this.arcLengthDivisions=200}Object.assign(wf.prototype,{getPoint:function(){console.warn("THREE.Curve: .getPoint() not implemented.");return null},getPointAt:function(e,t){var r=this.getUtoTmapping(e);return this.getPoint(r,t)},getPoints:function(e){if(e===void 0){e=5}var t=[];for(var r=0;r<=e;r++){t.push(this.getPoint(r/e))}return t},getSpacedPoints:function(e){if(e===void 0){e=5}var t=[];for(var r=0;r<=e;r++){t.push(this.getPointAt(r/e))}return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e===undefined)e=this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;var t=[];var r,n=this.getPoint(0);var i=0;t.push(0);for(var a=1;a<=e;a++){r=this.getPoint(a/e);i+=r.distanceTo(n);t.push(i);n=r}this.cacheArcLengths=t;return t},updateArcLengths:function(){this.needsUpdate=true;this.getLengths()},getUtoTmapping:function(e,t){var r=this.getLengths();var n=0;var i=r.length;var a;if(t){a=t}else{a=e*r[i-1]}var o=0,s=i-1,l;while(o<=s){n=Math.floor(o+(s-o)/2);l=r[n]-a;if(l<0){o=n+1}else if(l>0){s=n-1}else{s=n;break}}n=s;if(r[n]===a){return n/(i-1)}var u=r[n];var c=r[n+1];var h=c-u;var f=(a-u)/h;var d=(n+f)/(i-1);return d},getTangent:function(e,t){var r=1e-4;var n=e-r;var i=e+r;if(n<0)n=0;if(i>1)i=1;var a=this.getPoint(n);var o=this.getPoint(i);var s=t||(a.isVector2?new ir:new pr);s.copy(o).sub(a).normalize();return s},getTangentAt:function(e,t){var r=this.getUtoTmapping(e);return this.getTangent(r,t)},computeFrenetFrames:function(e,t){var r=new pr;var n=[];var i=[];var a=[];var o=new pr;var s=new kr;for(var l=0;l<=e;l++){var u=l/e;n[l]=this.getTangentAt(u,new pr);n[l].normalize()}i[0]=new pr;a[0]=new pr;var c=Number.MAX_VALUE;var h=Math.abs(n[0].x);var f=Math.abs(n[0].y);var d=Math.abs(n[0].z);if(h<=c){c=h;r.set(1,0,0)}if(f<=c){c=f;r.set(0,1,0)}if(d<=c){r.set(0,0,1)}o.crossVectors(n[0],r).normalize();i[0].crossVectors(n[0],o);a[0].crossVectors(n[0],i[0]);for(var l=1;l<=e;l++){i[l]=i[l-1].clone();a[l]=a[l-1].clone();o.crossVectors(n[l-1],n[l]);if(o.length()>Number.EPSILON){o.normalize();var p=Math.acos(nr.clamp(n[l-1].dot(n[l]),-1,1));i[l].applyMatrix4(s.makeRotationAxis(o,p))}a[l].crossVectors(n[l],i[l])}if(t===true){var p=Math.acos(nr.clamp(i[0].dot(i[e]),-1,1));p/=e;if(n[0].dot(o.crossVectors(i[0],i[e]))>0){p=-p}for(var l=1;l<=e;l++){i[l].applyMatrix4(s.makeRotationAxis(n[l],p*l));a[l].crossVectors(n[l],i[l])}}return{tangents:n,normals:i,binormals:a}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.arcLengthDivisions=e.arcLengthDivisions;return this},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};e.arcLengthDivisions=this.arcLengthDivisions;e.type=this.type;return e},fromJSON:function(e){this.arcLengthDivisions=e.arcLengthDivisions;return this}});function Mf(e,t,r,n,i,a,o,s){wf.call(this);this.type="EllipseCurve";this.aX=e||0;this.aY=t||0;this.xRadius=r||1;this.yRadius=n||1;this.aStartAngle=i||0;this.aEndAngle=a||2*Math.PI;this.aClockwise=o||false;this.aRotation=s||0}Mf.prototype=Object.create(wf.prototype);Mf.prototype.constructor=Mf;Mf.prototype.isEllipseCurve=true;Mf.prototype.getPoint=function(e,t){var r=t||new ir;var n=Math.PI*2;var i=this.aEndAngle-this.aStartAngle;var a=Math.abs(i)<Number.EPSILON;while(i<0)i+=n;while(i>n)i-=n;if(i<Number.EPSILON){if(a){i=0}else{i=n}}if(this.aClockwise===true&&!a){if(i===n){i=-n}else{i=i-n}}var o=this.aStartAngle+e*i;var s=this.aX+this.xRadius*Math.cos(o);var l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){var u=Math.cos(this.aRotation);var c=Math.sin(this.aRotation);var h=s-this.aX;var f=l-this.aY;s=h*u-f*c+this.aX;l=h*c+f*u+this.aY}return r.set(s,l)};Mf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.aX=e.aX;this.aY=e.aY;this.xRadius=e.xRadius;this.yRadius=e.yRadius;this.aStartAngle=e.aStartAngle;this.aEndAngle=e.aEndAngle;this.aClockwise=e.aClockwise;this.aRotation=e.aRotation;return this};Mf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.aX=this.aX;e.aY=this.aY;e.xRadius=this.xRadius;e.yRadius=this.yRadius;e.aStartAngle=this.aStartAngle;e.aEndAngle=this.aEndAngle;e.aClockwise=this.aClockwise;e.aRotation=this.aRotation;return e};Mf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.aX=e.aX;this.aY=e.aY;this.xRadius=e.xRadius;this.yRadius=e.yRadius;this.aStartAngle=e.aStartAngle;this.aEndAngle=e.aEndAngle;this.aClockwise=e.aClockwise;this.aRotation=e.aRotation;return this};function Sf(e,t,r,n,i,a){Mf.call(this,e,t,r,r,n,i,a);this.type="ArcCurve"}Sf.prototype=Object.create(Mf.prototype);Sf.prototype.constructor=Sf;Sf.prototype.isArcCurve=true;function Ef(){var e=0,t=0,r=0,n=0;function i(i,a,o,s){e=i;t=o;r=-3*i+3*a-2*o-s;n=2*i-2*a+o+s}return{initCatmullRom:function(e,t,r,n,a){i(t,r,a*(r-e),a*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,a,o,s){var l=(t-e)/a-(r-e)/(a+o)+(r-t)/o;var u=(r-t)/o-(n-t)/(o+s)+(n-r)/s;l*=o;u*=o;i(t,r,l,u)},calc:function(i){var a=i*i;var o=a*i;return e+t*i+r*a+n*o}}}var Tf=new pr;var Lf=new Ef,Af=new Ef,Rf=new Ef;function Pf(e,t,r,n){if(e===void 0){e=[]}if(t===void 0){t=false}if(r===void 0){r="centripetal"}if(n===void 0){n=.5}wf.call(this);this.type="CatmullRomCurve3";this.points=e;this.closed=t;this.curveType=r;this.tension=n}Pf.prototype=Object.create(wf.prototype);Pf.prototype.constructor=Pf;Pf.prototype.isCatmullRomCurve3=true;Pf.prototype.getPoint=function(e,t){if(t===void 0){t=new pr}var r=t;var n=this.points;var i=n.length;var a=(i-(this.closed?0:1))*e;var o=Math.floor(a);var s=a-o;if(this.closed){o+=o>0?0:(Math.floor(Math.abs(o)/i)+1)*i}else if(s===0&&o===i-1){o=i-2;s=1}var l,u;if(this.closed||o>0){l=n[(o-1)%i]}else{Tf.subVectors(n[0],n[1]).add(n[0]);l=Tf}var c=n[o%i];var h=n[(o+1)%i];if(this.closed||o+2<i){u=n[(o+2)%i]}else{Tf.subVectors(n[i-1],n[i-2]).add(n[i-1]);u=Tf}if(this.curveType==="centripetal"||this.curveType==="chordal"){var f=this.curveType==="chordal"?.5:.25;var d=Math.pow(l.distanceToSquared(c),f);var p=Math.pow(c.distanceToSquared(h),f);var v=Math.pow(h.distanceToSquared(u),f);if(p<1e-4)p=1;if(d<1e-4)d=p;if(v<1e-4)v=p;Lf.initNonuniformCatmullRom(l.x,c.x,h.x,u.x,d,p,v);Af.initNonuniformCatmullRom(l.y,c.y,h.y,u.y,d,p,v);Rf.initNonuniformCatmullRom(l.z,c.z,h.z,u.z,d,p,v)}else if(this.curveType==="catmullrom"){Lf.initCatmullRom(l.x,c.x,h.x,u.x,this.tension);Af.initCatmullRom(l.y,c.y,h.y,u.y,this.tension);Rf.initCatmullRom(l.z,c.z,h.z,u.z,this.tension)}r.set(Lf.calc(s),Af.calc(s),Rf.calc(s));return r};Pf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.points=[];for(var t=0,r=e.points.length;t<r;t++){var n=e.points[t];this.points.push(n.clone())}this.closed=e.closed;this.curveType=e.curveType;this.tension=e.tension;return this};Pf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.points=[];for(var t=0,r=this.points.length;t<r;t++){var n=this.points[t];e.points.push(n.toArray())}e.closed=this.closed;e.curveType=this.curveType;e.tension=this.tension;return e};Pf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.points=[];for(var t=0,r=e.points.length;t<r;t++){var n=e.points[t];this.points.push((new pr).fromArray(n))}this.closed=e.closed;this.curveType=e.curveType;this.tension=e.tension;return this};function Cf(e,t,r,n,i){var a=(n-t)*.5;var o=(i-r)*.5;var s=e*e;var l=e*s;return(2*r-2*n+a+o)*l+(-3*r+3*n-2*a-o)*s+a*e+r}function If(e,t){var r=1-e;return r*r*t}function Of(e,t){return 2*(1-e)*e*t}function Df(e,t){return e*e*t}function Nf(e,t,r,n){return If(e,t)+Of(e,r)+Df(e,n)}function zf(e,t){var r=1-e;return r*r*r*t}function Bf(e,t){var r=1-e;return 3*r*r*e*t}function Hf(e,t){return 3*(1-e)*e*e*t}function Ff(e,t){return e*e*e*t}function Uf(e,t,r,n,i){return zf(e,t)+Bf(e,r)+Hf(e,n)+Ff(e,i)}function Gf(e,t,r,n){if(e===void 0){e=new ir}if(t===void 0){t=new ir}if(r===void 0){r=new ir}if(n===void 0){n=new ir}wf.call(this);this.type="CubicBezierCurve";this.v0=e;this.v1=t;this.v2=r;this.v3=n}Gf.prototype=Object.create(wf.prototype);Gf.prototype.constructor=Gf;Gf.prototype.isCubicBezierCurve=true;Gf.prototype.getPoint=function(e,t){if(t===void 0){t=new ir}var r=t;var n=this.v0,i=this.v1,a=this.v2,o=this.v3;r.set(Uf(e,n.x,i.x,a.x,o.x),Uf(e,n.y,i.y,a.y,o.y));return r};Gf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);this.v3.copy(e.v3);return this};Gf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();e.v3=this.v3.toArray();return e};Gf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);this.v3.fromArray(e.v3);return this};function kf(e,t,r,n){if(e===void 0){e=new pr}if(t===void 0){t=new pr}if(r===void 0){r=new pr}if(n===void 0){n=new pr}wf.call(this);this.type="CubicBezierCurve3";this.v0=e;this.v1=t;this.v2=r;this.v3=n}kf.prototype=Object.create(wf.prototype);kf.prototype.constructor=kf;kf.prototype.isCubicBezierCurve3=true;kf.prototype.getPoint=function(e,t){if(t===void 0){t=new pr}var r=t;var n=this.v0,i=this.v1,a=this.v2,o=this.v3;r.set(Uf(e,n.x,i.x,a.x,o.x),Uf(e,n.y,i.y,a.y,o.y),Uf(e,n.z,i.z,a.z,o.z));return r};kf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);this.v3.copy(e.v3);return this};kf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();e.v3=this.v3.toArray();return e};kf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);this.v3.fromArray(e.v3);return this};function Vf(e,t){if(e===void 0){e=new ir}if(t===void 0){t=new ir}wf.call(this);this.type="LineCurve";this.v1=e;this.v2=t}Vf.prototype=Object.create(wf.prototype);Vf.prototype.constructor=Vf;Vf.prototype.isLineCurve=true;Vf.prototype.getPoint=function(e,t){if(t===void 0){t=new ir}var r=t;if(e===1){r.copy(this.v2)}else{r.copy(this.v2).sub(this.v1);r.multiplyScalar(e).add(this.v1)}return r};Vf.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};Vf.prototype.getTangent=function(e,t){var r=t||new ir;r.copy(this.v2).sub(this.v1).normalize();return r};Vf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.v1.copy(e.v1);this.v2.copy(e.v2);return this};Vf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e};Vf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this};function Wf(e,t){if(e===void 0){e=new pr}if(t===void 0){t=new pr}wf.call(this);this.type="LineCurve3";this.v1=e;this.v2=t}Wf.prototype=Object.create(wf.prototype);Wf.prototype.constructor=Wf;Wf.prototype.isLineCurve3=true;Wf.prototype.getPoint=function(e,t){if(t===void 0){t=new pr}var r=t;if(e===1){r.copy(this.v2)}else{r.copy(this.v2).sub(this.v1);r.multiplyScalar(e).add(this.v1)}return r};Wf.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};Wf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.v1.copy(e.v1);this.v2.copy(e.v2);return this};Wf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e};Wf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this};function jf(e,t,r){if(e===void 0){e=new ir}if(t===void 0){t=new ir}if(r===void 0){r=new ir}wf.call(this);this.type="QuadraticBezierCurve";this.v0=e;this.v1=t;this.v2=r}jf.prototype=Object.create(wf.prototype);jf.prototype.constructor=jf;jf.prototype.isQuadraticBezierCurve=true;jf.prototype.getPoint=function(e,t){if(t===void 0){t=new ir}var r=t;var n=this.v0,i=this.v1,a=this.v2;r.set(Nf(e,n.x,i.x,a.x),Nf(e,n.y,i.y,a.y));return r};jf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);return this};jf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e};jf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this};function qf(e,t,r){if(e===void 0){e=new pr}if(t===void 0){t=new pr}if(r===void 0){r=new pr}wf.call(this);this.type="QuadraticBezierCurve3";this.v0=e;this.v1=t;this.v2=r}qf.prototype=Object.create(wf.prototype);qf.prototype.constructor=qf;qf.prototype.isQuadraticBezierCurve3=true;qf.prototype.getPoint=function(e,t){if(t===void 0){t=new pr}var r=t;var n=this.v0,i=this.v1,a=this.v2;r.set(Nf(e,n.x,i.x,a.x),Nf(e,n.y,i.y,a.y),Nf(e,n.z,i.z,a.z));return r};qf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.v0.copy(e.v0);this.v1.copy(e.v1);this.v2.copy(e.v2);return this};qf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.v0=this.v0.toArray();e.v1=this.v1.toArray();e.v2=this.v2.toArray();return e};qf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.v0.fromArray(e.v0);this.v1.fromArray(e.v1);this.v2.fromArray(e.v2);return this};function Xf(e){if(e===void 0){e=[]}wf.call(this);this.type="SplineCurve";this.points=e}Xf.prototype=Object.create(wf.prototype);Xf.prototype.constructor=Xf;Xf.prototype.isSplineCurve=true;Xf.prototype.getPoint=function(e,t){if(t===void 0){t=new ir}var r=t;var n=this.points;var i=(n.length-1)*e;var a=Math.floor(i);var o=i-a;var s=n[a===0?a:a-1];var l=n[a];var u=n[a>n.length-2?n.length-1:a+1];var c=n[a>n.length-3?n.length-1:a+2];r.set(Cf(o,s.x,l.x,u.x,c.x),Cf(o,s.y,l.y,u.y,c.y));return r};Xf.prototype.copy=function(e){wf.prototype.copy.call(this,e);this.points=[];for(var t=0,r=e.points.length;t<r;t++){var n=e.points[t];this.points.push(n.clone())}return this};Xf.prototype.toJSON=function(){var e=wf.prototype.toJSON.call(this);e.points=[];for(var t=0,r=this.points.length;t<r;t++){var n=this.points[t];e.points.push(n.toArray())}return e};Xf.prototype.fromJSON=function(e){wf.prototype.fromJSON.call(this,e);this.points=[];for(var t=0,r=e.points.length;t<r;t++){var n=e.points[t];this.points.push((new ir).fromArray(n))}return this};var Yf=Object.freeze({__proto__:null,ArcCurve:Sf,CatmullRomCurve3:Pf,CubicBezierCurve:Gf,CubicBezierCurve3:kf,EllipseCurve:Mf,LineCurve:Vf,LineCurve3:Wf,QuadraticBezierCurve:jf,QuadraticBezierCurve3:qf,SplineCurve:Xf});function Zf(){wf.call(this);this.type="CurvePath";this.curves=[];this.autoClose=false}Zf.prototype=Object.assign(Object.create(wf.prototype),{constructor:Zf,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){this.curves.push(new Vf(t,e))}},getPoint:function(e){var t=e*this.getLength();var r=this.getCurveLengths();var n=0;while(n<r.length){if(r[n]>=t){var i=r[n]-t;var a=this.curves[n];var o=a.getLength();var s=o===0?0:1-i/o;return a.getPointAt(s)}n++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths}var e=[];var t=0;for(var r=0,n=this.curves.length;r<n;r++){t+=this.curves[r].getLength();e.push(t)}this.cacheLengths=e;return e},getSpacedPoints:function(e){if(e===void 0){e=40}var t=[];for(var r=0;r<=e;r++){t.push(this.getPoint(r/e))}if(this.autoClose){t.push(t[0])}return t},getPoints:function(e){if(e===void 0){e=12}var t=[];var r;for(var n=0,i=this.curves;n<i.length;n++){var a=i[n];var o=a&&a.isEllipseCurve?e*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e;var s=a.getPoints(o);for(var l=0;l<s.length;l++){var u=s[l];if(r&&r.equals(u))continue;t.push(u);r=u}}if(this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])){t.push(t[0])}return t},copy:function(e){wf.prototype.copy.call(this,e);this.curves=[];for(var t=0,r=e.curves.length;t<r;t++){var n=e.curves[t];this.curves.push(n.clone())}this.autoClose=e.autoClose;return this},toJSON:function(){var e=wf.prototype.toJSON.call(this);e.autoClose=this.autoClose;e.curves=[];for(var t=0,r=this.curves.length;t<r;t++){var n=this.curves[t];e.curves.push(n.toJSON())}return e},fromJSON:function(e){wf.prototype.fromJSON.call(this,e);this.autoClose=e.autoClose;this.curves=[];for(var t=0,r=e.curves.length;t<r;t++){var n=e.curves[t];this.curves.push((new Yf[n.type]).fromJSON(n))}return this}});function Jf(e){Zf.call(this);this.type="Path";this.currentPoint=new ir;if(e){this.setFromPoints(e)}}Jf.prototype=Object.assign(Object.create(Zf.prototype),{constructor:Jf,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;t<r;t++){this.lineTo(e[t].x,e[t].y)}return this},moveTo:function(e,t){this.currentPoint.set(e,t);return this},lineTo:function(e,t){var r=new Vf(this.currentPoint.clone(),new ir(e,t));this.curves.push(r);this.currentPoint.set(e,t);return this},quadraticCurveTo:function(e,t,r,n){var i=new jf(this.currentPoint.clone(),new ir(e,t),new ir(r,n));this.curves.push(i);this.currentPoint.set(r,n);return this},bezierCurveTo:function(e,t,r,n,i,a){var o=new Gf(this.currentPoint.clone(),new ir(e,t),new ir(r,n),new ir(i,a));this.curves.push(o);this.currentPoint.set(i,a);return this},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e);var r=new Xf(t);this.curves.push(r);this.currentPoint.copy(e[e.length-1]);return this},arc:function(e,t,r,n,i,a){var o=this.currentPoint.x;var s=this.currentPoint.y;this.absarc(e+o,t+s,r,n,i,a);return this},absarc:function(e,t,r,n,i,a){this.absellipse(e,t,r,r,n,i,a);return this},ellipse:function(e,t,r,n,i,a,o,s){var l=this.currentPoint.x;var u=this.currentPoint.y;this.absellipse(e+l,t+u,r,n,i,a,o,s);return this},absellipse:function(e,t,r,n,i,a,o,s){var l=new Mf(e,t,r,n,i,a,o,s);if(this.curves.length>0){var u=l.getPoint(0);if(!u.equals(this.currentPoint)){this.lineTo(u.x,u.y)}}this.curves.push(l);var c=l.getPoint(1);this.currentPoint.copy(c);return this},copy:function(e){Zf.prototype.copy.call(this,e);this.currentPoint.copy(e.currentPoint);return this},toJSON:function(){var e=Zf.prototype.toJSON.call(this);e.currentPoint=this.currentPoint.toArray();return e},fromJSON:function(e){Zf.prototype.fromJSON.call(this,e);this.currentPoint.fromArray(e.currentPoint);return this}});function Qf(e){Jf.call(this,e);this.uuid=nr.generateUUID();this.type="Shape";this.holes=[]}Qf.prototype=Object.assign(Object.create(Jf.prototype),{constructor:Qf,getPointsHoles:function(e){var t=[];for(var r=0,n=this.holes.length;r<n;r++){t[r]=this.holes[r].getPoints(e)}return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Jf.prototype.copy.call(this,e);this.holes=[];for(var t=0,r=e.holes.length;t<r;t++){var n=e.holes[t];this.holes.push(n.clone())}return this},toJSON:function(){var e=Jf.prototype.toJSON.call(this);e.uuid=this.uuid;e.holes=[];for(var t=0,r=this.holes.length;t<r;t++){var n=this.holes[t];e.holes.push(n.toJSON())}return e},fromJSON:function(e){Jf.prototype.fromJSON.call(this,e);this.uuid=e.uuid;this.holes=[];for(var t=0,r=e.holes.length;t<r;t++){var n=e.holes[t];this.holes.push((new Jf).fromJSON(n))}return this}});function Kf(e,t){if(t===void 0){t=1}pn.call(this);this.type="Light";this.color=new zn(e);this.intensity=t}Kf.prototype=Object.assign(Object.create(pn.prototype),{constructor:Kf,isLight:true,copy:function(e){pn.prototype.copy.call(this,e);this.color.copy(e.color);this.intensity=e.intensity;return this},toJSON:function(e){var t=pn.prototype.toJSON.call(this,e);t.object.color=this.color.getHex();t.object.intensity=this.intensity;if(this.groundColor!==undefined)t.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)t.object.distance=this.distance;if(this.angle!==undefined)t.object.angle=this.angle;if(this.decay!==undefined)t.object.decay=this.decay;if(this.penumbra!==undefined)t.object.penumbra=this.penumbra;if(this.shadow!==undefined)t.object.shadow=this.shadow.toJSON();return t}});function $f(e,t,r){Kf.call(this,e,r);this.type="HemisphereLight";this.position.copy(pn.DefaultUp);this.updateMatrix();this.groundColor=new zn(t)}$f.prototype=Object.assign(Object.create(Kf.prototype),{constructor:$f,isHemisphereLight:true,copy:function(e){Kf.prototype.copy.call(this,e);this.groundColor.copy(e.groundColor);return this}});function ed(e){this.camera=e;this.bias=0;this.normalBias=0;this.radius=1;this.mapSize=new ir(512,512);this.map=null;this.mapPass=null;this.matrix=new kr;this.autoUpdate=true;this.needsUpdate=false;this._frustum=new Yi;this._frameExtents=new ir(1,1);this._viewportCount=1;this._viewports=[new hr(0,0,1,1)]}Object.assign(ed.prototype,{_projScreenMatrix:new kr,_lightPositionWorld:new pr,_lookTarget:new pr,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){var t=this.camera,r=this.matrix,n=this._projScreenMatrix,i=this._lookTarget,a=this._lightPositionWorld;a.setFromMatrixPosition(e.matrixWorld);t.position.copy(a);i.setFromMatrixPosition(e.target.matrixWorld);t.lookAt(i);t.updateMatrixWorld();n.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);this._frustum.setFromProjectionMatrix(n);r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);r.multiply(t.projectionMatrix);r.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){this.camera=e.camera.clone();this.bias=e.bias;this.radius=e.radius;this.mapSize.copy(e.mapSize);return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e={};if(this.bias!==0)e.bias=this.bias;if(this.normalBias!==0)e.normalBias=this.normalBias;if(this.radius!==1)e.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)e.mapSize=this.mapSize.toArray();e.camera=this.camera.toJSON(false).object;delete e.camera.matrix;return e}});function td(){ed.call(this,new Fi(50,1,.5,500));this.focus=1}td.prototype=Object.assign(Object.create(ed.prototype),{constructor:td,isSpotLightShadow:true,updateMatrices:function(e){var t=this.camera;var r=nr.RAD2DEG*2*e.angle*this.focus;var n=this.mapSize.width/this.mapSize.height;var i=e.distance||t.far;if(r!==t.fov||n!==t.aspect||i!==t.far){t.fov=r;t.aspect=n;t.far=i;t.updateProjectionMatrix()}ed.prototype.updateMatrices.call(this,e)}});function rd(e,t,r,n,i,a){Kf.call(this,e,t);this.type="SpotLight";this.position.copy(pn.DefaultUp);this.updateMatrix();this.target=new pn;Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}});this.distance=r!==undefined?r:0;this.angle=n!==undefined?n:Math.PI/3;this.penumbra=i!==undefined?i:0;this.decay=a!==undefined?a:1;this.shadow=new td}rd.prototype=Object.assign(Object.create(Kf.prototype),{constructor:rd,isSpotLight:true,copy:function(e){Kf.prototype.copy.call(this,e);this.distance=e.distance;this.angle=e.angle;this.penumbra=e.penumbra;this.decay=e.decay;this.target=e.target.clone();this.shadow=e.shadow.clone();return this}});function nd(){ed.call(this,new Fi(90,1,.5,500));this._frameExtents=new ir(4,2);this._viewportCount=6;this._viewports=[new hr(2,1,1,1),new hr(0,1,1,1),new hr(3,1,1,1),new hr(1,1,1,1),new hr(3,0,1,1),new hr(1,0,1,1)];this._cubeDirections=[new pr(1,0,0),new pr(-1,0,0),new pr(0,0,1),new pr(0,0,-1),new pr(0,1,0),new pr(0,-1,0)];this._cubeUps=[new pr(0,1,0),new pr(0,1,0),new pr(0,1,0),new pr(0,1,0),new pr(0,0,1),new pr(0,0,-1)]}nd.prototype=Object.assign(Object.create(ed.prototype),{constructor:nd,isPointLightShadow:true,updateMatrices:function(e,t){if(t===void 0){t=0}var r=this.camera,n=this.matrix,i=this._lightPositionWorld,a=this._lookTarget,o=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld);r.position.copy(i);a.copy(r.position);a.add(this._cubeDirections[t]);r.up.copy(this._cubeUps[t]);r.lookAt(a);r.updateMatrixWorld();n.makeTranslation(-i.x,-i.y,-i.z);o.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse);this._frustum.setFromProjectionMatrix(o)}});function id(e,t,r,n){Kf.call(this,e,t);this.type="PointLight";Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}});this.distance=r!==undefined?r:0;this.decay=n!==undefined?n:1;this.shadow=new nd}id.prototype=Object.assign(Object.create(Kf.prototype),{constructor:id,isPointLight:true,copy:function(e){Kf.prototype.copy.call(this,e);this.distance=e.distance;this.decay=e.decay;this.shadow=e.shadow.clone();return this}});function ad(e,t,r,n,i,a){if(e===void 0){e=-1}if(t===void 0){t=1}if(r===void 0){r=1}if(n===void 0){n=-1}if(i===void 0){i=.1}if(a===void 0){a=2e3}Hi.call(this);this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=e;this.right=t;this.top=r;this.bottom=n;this.near=i;this.far=a;this.updateProjectionMatrix()}ad.prototype=Object.assign(Object.create(Hi.prototype),{constructor:ad,isOrthographicCamera:true,copy:function(e,t){Hi.prototype.copy.call(this,e,t);this.left=e.left;this.right=e.right;this.top=e.top;this.bottom=e.bottom;this.near=e.near;this.far=e.far;this.zoom=e.zoom;this.view=e.view===null?null:Object.assign({},e.view);return this},setViewOffset:function(e,t,r,n,i,a){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}}this.view.enabled=true;this.view.fullWidth=e;this.view.fullHeight=t;this.view.offsetX=r;this.view.offsetY=n;this.view.width=i;this.view.height=a;this.updateProjectionMatrix()},clearViewOffset:function(){if(this.view!==null){this.view.enabled=false}this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom);var t=(this.top-this.bottom)/(2*this.zoom);var r=(this.right+this.left)/2;var n=(this.top+this.bottom)/2;var i=r-e;var a=r+e;var o=n+t;var s=n-t;if(this.view!==null&&this.view.enabled){var l=(this.right-this.left)/this.view.fullWidth/this.zoom;var u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=l*this.view.offsetX;a=i+l*this.view.width;o-=u*this.view.offsetY;s=o-u*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(e){var t=pn.prototype.toJSON.call(this,e);t.object.zoom=this.zoom;t.object.left=this.left;t.object.right=this.right;t.object.top=this.top;t.object.bottom=this.bottom;t.object.near=this.near;t.object.far=this.far;if(this.view!==null)t.object.view=Object.assign({},this.view);return t}});function od(){ed.call(this,new ad(-5,5,5,-5,.5,500))}od.prototype=Object.assign(Object.create(ed.prototype),{constructor:od,isDirectionalLightShadow:true,updateMatrices:function(e){ed.prototype.updateMatrices.call(this,e)}});function sd(e,t){Kf.call(this,e,t);this.type="DirectionalLight";this.position.copy(pn.DefaultUp);this.updateMatrix();this.target=new pn;this.shadow=new od}sd.prototype=Object.assign(Object.create(Kf.prototype),{constructor:sd,isDirectionalLight:true,copy:function(e){Kf.prototype.copy.call(this,e);this.target=e.target.clone();this.shadow=e.shadow.clone();return this}});function ld(e,t){Kf.call(this,e,t);this.type="AmbientLight"}ld.prototype=Object.assign(Object.create(Kf.prototype),{constructor:ld,isAmbientLight:true});function ud(e,t,r,n){Kf.call(this,e,t);this.type="RectAreaLight";this.width=r!==undefined?r:10;this.height=n!==undefined?n:10}ud.prototype=Object.assign(Object.create(Kf.prototype),{constructor:ud,isRectAreaLight:true,copy:function(e){Kf.prototype.copy.call(this,e);this.width=e.width;this.height=e.height;return this},toJSON:function(e){var t=Kf.prototype.toJSON.call(this,e);t.object.width=this.width;t.object.height=this.height;return t}});var cd=function(){function e(){Object.defineProperty(this,"isSphericalHarmonics3",{value:true});this.coefficients=[];for(var e=0;e<9;e++){this.coefficients.push(new pr)}}e.prototype.set=function(e){for(var t=0;t<9;t++){this.coefficients[t].copy(e[t])}return this};e.prototype.zero=function(){for(var e=0;e<9;e++){this.coefficients[e].set(0,0,0)}return this};e.prototype.getAt=function(e,t){var r=e.x,n=e.y,i=e.z;var a=this.coefficients;t.copy(a[0]).multiplyScalar(.282095);t.addScaledVector(a[1],.488603*n);t.addScaledVector(a[2],.488603*i);t.addScaledVector(a[3],.488603*r);t.addScaledVector(a[4],1.092548*(r*n));t.addScaledVector(a[5],1.092548*(n*i));t.addScaledVector(a[6],.315392*(3*i*i-1));t.addScaledVector(a[7],1.092548*(r*i));t.addScaledVector(a[8],.546274*(r*r-n*n));return t};e.prototype.getIrradianceAt=function(e,t){var r=e.x,n=e.y,i=e.z;var a=this.coefficients;t.copy(a[0]).multiplyScalar(.886227);t.addScaledVector(a[1],2*.511664*n);t.addScaledVector(a[2],2*.511664*i);t.addScaledVector(a[3],2*.511664*r);t.addScaledVector(a[4],2*.429043*r*n);t.addScaledVector(a[5],2*.429043*n*i);t.addScaledVector(a[6],.743125*i*i-.247708);t.addScaledVector(a[7],2*.429043*r*i);t.addScaledVector(a[8],.429043*(r*r-n*n));return t};e.prototype.add=function(e){for(var t=0;t<9;t++){this.coefficients[t].add(e.coefficients[t])}return this};e.prototype.addScaledSH=function(e,t){for(var r=0;r<9;r++){this.coefficients[r].addScaledVector(e.coefficients[r],t)}return this};e.prototype.scale=function(e){for(var t=0;t<9;t++){this.coefficients[t].multiplyScalar(e)}return this};e.prototype.lerp=function(e,t){for(var r=0;r<9;r++){this.coefficients[r].lerp(e.coefficients[r],t)}return this};e.prototype.equals=function(e){for(var t=0;t<9;t++){if(!this.coefficients[t].equals(e.coefficients[t])){return false}}return true};e.prototype.copy=function(e){return this.set(e.coefficients)};e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.fromArray=function(e,t){if(t===void 0){t=0}var r=this.coefficients;for(var n=0;n<9;n++){r[n].fromArray(e,t+n*3)}return this};e.prototype.toArray=function(e,t){if(e===void 0){e=[]}if(t===void 0){t=0}var r=this.coefficients;for(var n=0;n<9;n++){r[n].toArray(e,t+n*3)}return e};e.getBasisAt=function(e,t){var r=e.x,n=e.y,i=e.z;t[0]=.282095;t[1]=.488603*n;t[2]=.488603*i;t[3]=.488603*r;t[4]=1.092548*r*n;t[5]=1.092548*n*i;t[6]=.315392*(3*i*i-1);t[7]=1.092548*r*i;t[8]=.546274*(r*r-n*n)};return e}();function hd(e,t){Kf.call(this,undefined,t);this.type="LightProbe";this.sh=e!==undefined?e:new cd}hd.prototype=Object.assign(Object.create(Kf.prototype),{constructor:hd,isLightProbe:true,copy:function(e){Kf.prototype.copy.call(this,e);this.sh.copy(e.sh);return this},fromJSON:function(e){this.intensity=e.intensity;this.sh.fromArray(e.sh);return this},toJSON:function(e){var t=Kf.prototype.toJSON.call(this,e);t.object.sh=this.sh.toArray();return t}});function fd(e){df.call(this,e);this.textures={}}fd.prototype=Object.assign(Object.create(df.prototype),{constructor:fd,load:function(e,t,r,n){var i=this;var a=new vf(i.manager);a.setPath(i.path);a.setRequestHeader(i.requestHeader);a.setWithCredentials(i.withCredentials);a.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(a){if(n){n(a)}else{console.error(a)}i.manager.itemError(e)}}),r,n)},parse:function(e){var t=this.textures;function r(e){if(t[e]===undefined){console.warn("THREE.MaterialLoader: Undefined texture",e)}return t[e]}var n=new qh[e.type];if(e.uuid!==undefined)n.uuid=e.uuid;if(e.name!==undefined)n.name=e.name;if(e.color!==undefined&&n.color!==undefined)n.color.setHex(e.color);if(e.roughness!==undefined)n.roughness=e.roughness;if(e.metalness!==undefined)n.metalness=e.metalness;if(e.sheen!==undefined)n.sheen=(new zn).setHex(e.sheen);if(e.emissive!==undefined&&n.emissive!==undefined)n.emissive.setHex(e.emissive);if(e.specular!==undefined&&n.specular!==undefined)n.specular.setHex(e.specular);if(e.shininess!==undefined)n.shininess=e.shininess;if(e.clearcoat!==undefined)n.clearcoat=e.clearcoat;if(e.clearcoatRoughness!==undefined)n.clearcoatRoughness=e.clearcoatRoughness;if(e.fog!==undefined)n.fog=e.fog;if(e.flatShading!==undefined)n.flatShading=e.flatShading;if(e.blending!==undefined)n.blending=e.blending;if(e.combine!==undefined)n.combine=e.combine;if(e.side!==undefined)n.side=e.side;if(e.opacity!==undefined)n.opacity=e.opacity;if(e.transparent!==undefined)n.transparent=e.transparent;if(e.alphaTest!==undefined)n.alphaTest=e.alphaTest;if(e.depthTest!==undefined)n.depthTest=e.depthTest;if(e.depthWrite!==undefined)n.depthWrite=e.depthWrite;if(e.colorWrite!==undefined)n.colorWrite=e.colorWrite;if(e.stencilWrite!==undefined)n.stencilWrite=e.stencilWrite;if(e.stencilWriteMask!==undefined)n.stencilWriteMask=e.stencilWriteMask;if(e.stencilFunc!==undefined)n.stencilFunc=e.stencilFunc;if(e.stencilRef!==undefined)n.stencilRef=e.stencilRef;if(e.stencilFuncMask!==undefined)n.stencilFuncMask=e.stencilFuncMask;if(e.stencilFail!==undefined)n.stencilFail=e.stencilFail;if(e.stencilZFail!==undefined)n.stencilZFail=e.stencilZFail;if(e.stencilZPass!==undefined)n.stencilZPass=e.stencilZPass;if(e.wireframe!==undefined)n.wireframe=e.wireframe;if(e.wireframeLinewidth!==undefined)n.wireframeLinewidth=e.wireframeLinewidth;if(e.wireframeLinecap!==undefined)n.wireframeLinecap=e.wireframeLinecap;if(e.wireframeLinejoin!==undefined)n.wireframeLinejoin=e.wireframeLinejoin;if(e.rotation!==undefined)n.rotation=e.rotation;if(e.linewidth!==1)n.linewidth=e.linewidth;if(e.dashSize!==undefined)n.dashSize=e.dashSize;if(e.gapSize!==undefined)n.gapSize=e.gapSize;if(e.scale!==undefined)n.scale=e.scale;if(e.polygonOffset!==undefined)n.polygonOffset=e.polygonOffset;if(e.polygonOffsetFactor!==undefined)n.polygonOffsetFactor=e.polygonOffsetFactor;if(e.polygonOffsetUnits!==undefined)n.polygonOffsetUnits=e.polygonOffsetUnits;if(e.skinning!==undefined)n.skinning=e.skinning;if(e.morphTargets!==undefined)n.morphTargets=e.morphTargets;if(e.morphNormals!==undefined)n.morphNormals=e.morphNormals;if(e.dithering!==undefined)n.dithering=e.dithering;if(e.vertexTangents!==undefined)n.vertexTangents=e.vertexTangents;if(e.visible!==undefined)n.visible=e.visible;if(e.toneMapped!==undefined)n.toneMapped=e.toneMapped;if(e.userData!==undefined)n.userData=e.userData;if(e.vertexColors!==undefined){if(typeof e.vertexColors==="number"){n.vertexColors=e.vertexColors>0?true:false}else{n.vertexColors=e.vertexColors}}if(e.uniforms!==undefined){for(var i in e.uniforms){var a=e.uniforms[i];n.uniforms[i]={};switch(a.type){case"t":n.uniforms[i].value=r(a.value);break;case"c":n.uniforms[i].value=(new zn).setHex(a.value);break;case"v2":n.uniforms[i].value=(new ir).fromArray(a.value);break;case"v3":n.uniforms[i].value=(new pr).fromArray(a.value);break;case"v4":n.uniforms[i].value=(new hr).fromArray(a.value);break;case"m3":n.uniforms[i].value=(new ar).fromArray(a.value);break;case"m4":n.uniforms[i].value=(new kr).fromArray(a.value);break;default:n.uniforms[i].value=a.value}}}if(e.defines!==undefined)n.defines=e.defines;if(e.vertexShader!==undefined)n.vertexShader=e.vertexShader;if(e.fragmentShader!==undefined)n.fragmentShader=e.fragmentShader;if(e.extensions!==undefined){for(var o in e.extensions){n.extensions[o]=e.extensions[o]}}if(e.shading!==undefined)n.flatShading=e.shading===1;if(e.size!==undefined)n.size=e.size;if(e.sizeAttenuation!==undefined)n.sizeAttenuation=e.sizeAttenuation;if(e.map!==undefined)n.map=r(e.map);if(e.matcap!==undefined)n.matcap=r(e.matcap);if(e.alphaMap!==undefined)n.alphaMap=r(e.alphaMap);if(e.bumpMap!==undefined)n.bumpMap=r(e.bumpMap);if(e.bumpScale!==undefined)n.bumpScale=e.bumpScale;if(e.normalMap!==undefined)n.normalMap=r(e.normalMap);if(e.normalMapType!==undefined)n.normalMapType=e.normalMapType;if(e.normalScale!==undefined){var s=e.normalScale;if(Array.isArray(s)===false){s=[s,s]}n.normalScale=(new ir).fromArray(s)}if(e.displacementMap!==undefined)n.displacementMap=r(e.displacementMap);if(e.displacementScale!==undefined)n.displacementScale=e.displacementScale;if(e.displacementBias!==undefined)n.displacementBias=e.displacementBias;if(e.roughnessMap!==undefined)n.roughnessMap=r(e.roughnessMap);if(e.metalnessMap!==undefined)n.metalnessMap=r(e.metalnessMap);if(e.emissiveMap!==undefined)n.emissiveMap=r(e.emissiveMap);if(e.emissiveIntensity!==undefined)n.emissiveIntensity=e.emissiveIntensity;if(e.specularMap!==undefined)n.specularMap=r(e.specularMap);if(e.envMap!==undefined)n.envMap=r(e.envMap);if(e.envMapIntensity!==undefined)n.envMapIntensity=e.envMapIntensity;if(e.reflectivity!==undefined)n.reflectivity=e.reflectivity;if(e.refractionRatio!==undefined)n.refractionRatio=e.refractionRatio;if(e.lightMap!==undefined)n.lightMap=r(e.lightMap);if(e.lightMapIntensity!==undefined)n.lightMapIntensity=e.lightMapIntensity;if(e.aoMap!==undefined)n.aoMap=r(e.aoMap);if(e.aoMapIntensity!==undefined)n.aoMapIntensity=e.aoMapIntensity;if(e.gradientMap!==undefined)n.gradientMap=r(e.gradientMap);if(e.clearcoatMap!==undefined)n.clearcoatMap=r(e.clearcoatMap);if(e.clearcoatRoughnessMap!==undefined)n.clearcoatRoughnessMap=r(e.clearcoatRoughnessMap);if(e.clearcoatNormalMap!==undefined)n.clearcoatNormalMap=r(e.clearcoatNormalMap);if(e.clearcoatNormalScale!==undefined)n.clearcoatNormalScale=(new ir).fromArray(e.clearcoatNormalScale);if(e.transmission!==undefined)n.transmission=e.transmission;if(e.transmissionMap!==undefined)n.transmissionMap=r(e.transmissionMap);return n},setTextures:function(e){this.textures=e;return this}});var dd={decodeText:function(e){if(typeof TextDecoder!=="undefined"){return(new TextDecoder).decode(e)}var t="";for(var r=0,n=e.length;r<n;r++){t+=String.fromCharCode(e[r])}try{return decodeURIComponent(escape(t))}catch(i){return t}},extractUrlBase:function(e){var t=e.lastIndexOf("/");if(t===-1)return"./";return e.substr(0,t+1)}};function pd(){ci.call(this);this.type="InstancedBufferGeometry";this.instanceCount=Infinity}pd.prototype=Object.assign(Object.create(ci.prototype),{constructor:pd,isInstancedBufferGeometry:true,copy:function(e){ci.prototype.copy.call(this,e);this.instanceCount=e.instanceCount;return this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e=ci.prototype.toJSON.call(this);e.instanceCount=this.instanceCount;e.isInstancedBufferGeometry=true;return e}});function vd(e,t,r,n){if(typeof r==="number"){n=r;r=false;console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")}Vn.call(this,e,t,r);this.meshPerAttribute=n||1}vd.prototype=Object.assign(Object.create(Vn.prototype),{constructor:vd,isInstancedBufferAttribute:true,copy:function(e){Vn.prototype.copy.call(this,e);this.meshPerAttribute=e.meshPerAttribute;return this},toJSON:function(){var e=Vn.prototype.toJSON.call(this);e.meshPerAttribute=this.meshPerAttribute;e.isInstancedBufferAttribute=true;return e}});function md(e){df.call(this,e)}md.prototype=Object.assign(Object.create(df.prototype),{constructor:md,load:function(e,t,r,n){var i=this;var a=new vf(i.manager);a.setPath(i.path);a.setRequestHeader(i.requestHeader);a.setWithCredentials(i.withCredentials);a.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(a){if(n){n(a)}else{console.error(a)}i.manager.itemError(e)}}),r,n)},parse:function(e){var t={};var r={};function n(e,r){if(t[r]!==undefined)return t[r];var n=e.interleavedBuffers;var a=n[r];var o=i(e,a.buffer);var s=ri(a.type,o);var l=new Uu(s,a.stride);l.uuid=a.uuid;t[r]=l;return l}function i(e,t){if(r[t]!==undefined)return r[t];var n=e.arrayBuffers;var i=n[t];var a=new Uint32Array(i).buffer;r[t]=a;return a}var a=e.isInstancedBufferGeometry?new pd:new ci;var o=e.data.index;if(o!==undefined){var s=ri(o.type,o.array);a.setIndex(new Vn(s,1))}var l=e.data.attributes;for(var u in l){var c=l[u];var h=void 0;if(c.isInterleavedBufferAttribute){var f=n(e.data,c.data);h=new ku(f,c.itemSize,c.offset,c.normalized)}else{var s=ri(c.type,c.array);var d=c.isInstancedBufferAttribute?vd:Vn;h=new d(s,c.itemSize,c.normalized)}if(c.name!==undefined)h.name=c.name;a.setAttribute(u,h)}var p=e.data.morphAttributes;if(p){for(var u in p){var v=p[u];var m=[];for(var g=0,y=v.length;g<y;g++){var c=v[g];var h=void 0;if(c.isInterleavedBufferAttribute){var f=n(e.data,c.data);h=new ku(f,c.itemSize,c.offset,c.normalized)}else{var s=ri(c.type,c.array);h=new Vn(s,c.itemSize,c.normalized)}if(c.name!==undefined)h.name=c.name;m.push(h)}a.morphAttributes[u]=m}}var x=e.data.morphTargetsRelative;if(x){a.morphTargetsRelative=true}var _=e.data.groups||e.data.drawcalls||e.data.offsets;if(_!==undefined){for(var g=0,b=_.length;g!==b;++g){var w=_[g];a.addGroup(w.start,w.count,w.materialIndex)}}var M=e.data.boundingSphere;if(M!==undefined){var S=new pr;if(M.center!==undefined){S.fromArray(M.center)}a.boundingSphere=new Or(S,M.radius)}if(e.name)a.name=e.name;if(e.userData)a.userData=e.userData;return a}});function gd(e){if(typeof createImageBitmap==="undefined"){console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported.")}if(typeof fetch==="undefined"){console.warn("THREE.ImageBitmapLoader: fetch() not supported.")}df.call(this,e);this.options={premultiplyAlpha:"none"}}gd.prototype=Object.assign(Object.create(df.prototype),{constructor:gd,isImageBitmapLoader:true,setOptions:function e(t){this.options=t;return this},load:function(e,t,r,n){if(e===undefined)e="";if(this.path!==undefined)e=this.path+e;e=this.manager.resolveURL(e);var i=this;var a=cf.get(e);if(a!==undefined){i.manager.itemStart(e);setTimeout((function(){if(t)t(a);i.manager.itemEnd(e)}),0);return a}var o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include";fetch(e,o).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,i.options)})).then((function(r){cf.add(e,r);if(t)t(r);i.manager.itemEnd(e)})).catch((function(t){if(n)n(t);i.manager.itemError(e);i.manager.itemEnd(e)}));i.manager.itemStart(e)}});function yd(){this.type="ShapePath";this.color=new zn;this.subPaths=[];this.currentPath=null}Object.assign(yd.prototype,{moveTo:function(e,t){this.currentPath=new Jf;this.subPaths.push(this.currentPath);this.currentPath.moveTo(e,t);return this},lineTo:function(e,t){this.currentPath.lineTo(e,t);return this},quadraticCurveTo:function(e,t,r,n){this.currentPath.quadraticCurveTo(e,t,r,n);return this},bezierCurveTo:function(e,t,r,n,i,a){this.currentPath.bezierCurveTo(e,t,r,n,i,a);return this},splineThru:function(e){this.currentPath.splineThru(e);return this},toShapes:function(e,t){function r(e){var t=[];for(var r=0,n=e.length;r<n;r++){var i=e[r];var a=new Qf;a.curves=i.curves;t.push(a)}return t}function n(e,t){var r=t.length;var n=false;for(var i=r-1,a=0;a<r;i=a++){var o=t[i];var s=t[a];var l=s.x-o.x;var u=s.y-o.y;if(Math.abs(u)>Number.EPSILON){if(u<0){o=t[a];l=-l;s=t[i];u=-u}if(e.y<o.y||e.y>s.y)continue;if(e.y===o.y){if(e.x===o.x)return true}else{var c=u*(e.x-o.x)-l*(e.y-o.y);if(c===0)return true;if(c<0)continue;n=!n}}else{if(e.y!==o.y)continue;if(s.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=s.x)return true}}return n}var i=Lh.isClockWise;var a=this.subPaths;if(a.length===0)return[];if(t===true)return r(a);var o,s,l;var u=[];if(a.length===1){s=a[0];l=new Qf;l.curves=s.curves;u.push(l);return u}var c=!i(a[0].getPoints());c=e?!c:c;var h=[];var f=[];var d=[];var p=0;var v;f[p]=undefined;d[p]=[];for(var m=0,g=a.length;m<g;m++){s=a[m];v=s.getPoints();o=i(v);o=e?!o:o;if(o){if(!c&&f[p])p++;f[p]={s:new Qf,p:v};f[p].s.curves=s.curves;if(c)p++;d[p]=[]}else{d[p].push({h:s,p:v[0]})}}if(!f[0])return r(a);if(f.length>1){var y=false;var x=[];for(var _=0,b=f.length;_<b;_++){h[_]=[]}for(var _=0,b=f.length;_<b;_++){var w=d[_];for(var M=0;M<w.length;M++){var S=w[M];var E=true;for(var T=0;T<f.length;T++){if(n(S.p,f[T].p)){if(_!==T)x.push({froms:_,tos:T,hole:M});if(E){E=false;h[T].push(S)}else{y=true}}}if(E){h[_].push(S)}}}if(x.length>0){if(!y)d=h}}var L;for(var m=0,A=f.length;m<A;m++){l=f[m].s;u.push(l);L=d[m];for(var R=0,P=L.length;R<P;R++){l.holes.push(L[R].h)}}return u}});var xd=function(){function e(e){Object.defineProperty(this,"isFont",{value:true});this.type="Font";this.data=e}e.prototype.generateShapes=function(e,t){if(t===void 0){t=100}var r=[];var n=_d(e,t,this.data);for(var i=0,a=n.length;i<a;i++){Array.prototype.push.apply(r,n[i].toShapes())}return r};return e}();function _d(e,t,r){var n=Array.from?Array.from(e):String(e).split("");var i=t/r.resolution;var a=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*i;var o=[];var s=0,l=0;for(var u=0;u<n.length;u++){var c=n[u];if(c==="\n"){s=0;l-=a}else{var h=bd(c,i,s,l,r);s+=h.offsetX;o.push(h.path)}}return o}function bd(e,t,r,n,i){var a=i.glyphs[e]||i.glyphs["?"];if(!a){console.error('THREE.Font: character "'+e+'" does not exists in font family '+i.familyName+".");return}var o=new yd;var s,l,u,c,h,f,d,p;if(a.o){var v=a._cachedOutline||(a._cachedOutline=a.o.split(" "));for(var m=0,g=v.length;m<g;){var y=v[m++];switch(y){case"m":s=v[m++]*t+r;l=v[m++]*t+n;o.moveTo(s,l);break;case"l":s=v[m++]*t+r;l=v[m++]*t+n;o.lineTo(s,l);break;case"q":u=v[m++]*t+r;c=v[m++]*t+n;h=v[m++]*t+r;f=v[m++]*t+n;o.quadraticCurveTo(h,f,u,c);break;case"b":u=v[m++]*t+r;c=v[m++]*t+n;h=v[m++]*t+r;f=v[m++]*t+n;d=v[m++]*t+r;p=v[m++]*t+n;o.bezierCurveTo(h,f,d,p,u,c);break}}}return{offsetX:a.ha*t,path:o}}function wd(e){df.call(this,e)}wd.prototype=Object.assign(Object.create(df.prototype),{constructor:wd,load:function(e,t,r,n){var i=this;var a=new vf(this.manager);a.setPath(this.path);a.setRequestHeader(this.requestHeader);a.setWithCredentials(i.withCredentials);a.load(e,(function(e){var r;try{r=JSON.parse(e)}catch(a){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.");r=JSON.parse(e.substring(65,e.length-2))}var n=i.parse(r);if(t)t(n)}),r,n)},parse:function(e){return new xd(e)}});var Md;var Sd={getContext:function(){if(Md===undefined){Md=new(window.AudioContext||window.webkitAudioContext)}return Md},setContext:function(e){Md=e}};function Ed(e){df.call(this,e)}Ed.prototype=Object.assign(Object.create(df.prototype),{constructor:Ed,load:function(e,t,r,n){var i=this;var a=new vf(i.manager);a.setResponseType("arraybuffer");a.setPath(i.path);a.setRequestHeader(i.requestHeader);a.setWithCredentials(i.withCredentials);a.load(e,(function(r){try{var a=r.slice(0);var o=Sd.getContext();o.decodeAudioData(a,(function(e){t(e)}))}catch(s){if(n){n(s)}else{console.error(s)}i.manager.itemError(e)}}),r,n)}});function Td(e,t,r){hd.call(this,undefined,r);var n=(new zn).set(e);var i=(new zn).set(t);var a=new pr(n.r,n.g,n.b);var o=new pr(i.r,i.g,i.b);var s=Math.sqrt(Math.PI);var l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s);this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(l)}Td.prototype=Object.assign(Object.create(hd.prototype),{constructor:Td,isHemisphereLightProbe:true,copy:function(e){hd.prototype.copy.call(this,e);return this},toJSON:function(e){var t=hd.prototype.toJSON.call(this,e);return t}});function Ld(e,t){hd.call(this,undefined,t);var r=(new zn).set(e);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*Math.sqrt(Math.PI))}Ld.prototype=Object.assign(Object.create(hd.prototype),{constructor:Ld,isAmbientLightProbe:true,copy:function(e){hd.prototype.copy.call(this,e);return this},toJSON:function(e){var t=hd.prototype.toJSON.call(this,e);return t}});var Ad=new kr;var Rd=new kr;function Pd(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;this.cameraL=new Fi;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new Fi;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(Pd.prototype,{update:function(e){var t=this._cache;var r=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(r){t.focus=e.focus;t.fov=e.fov;t.aspect=e.aspect*this.aspect;t.near=e.near;t.far=e.far;t.zoom=e.zoom;t.eyeSep=this.eyeSep;var n=e.projectionMatrix.clone();var i=t.eyeSep/2;var a=i*t.near/t.focus;var o=t.near*Math.tan(nr.DEG2RAD*t.fov*.5)/t.zoom;var s=void 0,l=void 0;Rd.elements[12]=-i;Ad.elements[12]=i;s=-o*t.aspect+a;l=o*t.aspect+a;n.elements[0]=2*t.near/(l-s);n.elements[8]=(l+s)/(l-s);this.cameraL.projectionMatrix.copy(n);s=-o*t.aspect-a;l=o*t.aspect-a;n.elements[0]=2*t.near/(l-s);n.elements[8]=(l+s)/(l-s);this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Rd);this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ad)}});var Cd=function(e){__extends(t,e);function t(t){var r=e.call(this)||this;r.type="Audio";r.listener=t;r.context=t.context;r.gain=r.context.createGain();r.gain.connect(t.getInput());r.autoplay=false;r.buffer=null;r.detune=0;r.loop=false;r.loopStart=0;r.loopEnd=0;r.offset=0;r.duration=undefined;r.playbackRate=1;r.isPlaying=false;r.hasPlaybackControl=true;r.source=null;r.sourceType="empty";r._startedAt=0;r._progress=0;r._connected=false;r.filters=[];return r}t.prototype.getOutput=function(){return this.gain};t.prototype.setNodeSource=function(e){this.hasPlaybackControl=false;this.sourceType="audioNode";this.source=e;this.connect();return this};t.prototype.setMediaElementSource=function(e){this.hasPlaybackControl=false;this.sourceType="mediaNode";this.source=this.context.createMediaElementSource(e);this.connect();return this};t.prototype.setMediaStreamSource=function(e){this.hasPlaybackControl=false;this.sourceType="mediaStreamNode";this.source=this.context.createMediaStreamSource(e);this.connect();return this};t.prototype.setBuffer=function(e){this.buffer=e;this.sourceType="buffer";if(this.autoplay)this.play();return this};t.prototype.play=function(e){if(e===void 0){e=0}if(this.isPlaying===true){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();t.buffer=this.buffer;t.loop=this.loop;t.loopStart=this.loopStart;t.loopEnd=this.loopEnd;t.onended=this.onEnded.bind(this);t.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=t;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect()};t.prototype.pause=function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}if(this.isPlaying===true){this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){this._progress=this._progress%(this.duration||this.buffer.duration)}this.source.stop();this.source.onended=null;this.isPlaying=false}return this};t.prototype.stop=function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this._progress=0;this.source.stop();this.source.onended=null;this.isPlaying=false;return this};t.prototype.connect=function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++){this.filters[e-1].connect(this.filters[e])}this.filters[this.filters.length-1].connect(this.getOutput())}else{this.source.connect(this.getOutput())}this._connected=true;return this};t.prototype.disconnect=function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++){this.filters[e-1].disconnect(this.filters[e])}this.filters[this.filters.length-1].disconnect(this.getOutput())}else{this.source.disconnect(this.getOutput())}this._connected=false;return this};t.prototype.getFilters=function(){return this.filters};t.prototype.setFilters=function(e){if(!e)e=[];if(this._connected===true){this.disconnect();this.filters=e.slice();this.connect()}else{this.filters=e.slice()}return this};t.prototype.setDetune=function(e){this.detune=e;if(this.source.detune===undefined)return;if(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01)}return this};t.prototype.getDetune=function(){return this.detune};t.prototype.getFilter=function(){return this.getFilters()[0]};t.prototype.setFilter=function(e){return this.setFilters(e?[e]:[])};t.prototype.setPlaybackRate=function(e){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.playbackRate=e;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01)}return this};t.prototype.getPlaybackRate=function(){return this.playbackRate};t.prototype.onEnded=function(){this.isPlaying=false};t.prototype.getLoop=function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return false}return this.loop};t.prototype.setLoop=function(e){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.loop=e;if(this.isPlaying===true){this.source.loop=this.loop}return this};t.prototype.setLoopStart=function(e){this.loopStart=e;return this};t.prototype.setLoopEnd=function(e){this.loopEnd=e;return this};t.prototype.getVolume=function(){return this.gain.gain.value};t.prototype.setVolume=function(e){this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01);return this};return t}(pn);function Id(e,t,r){this.binding=e;this.valueSize=r;var n,i,a;switch(t){case"quaternion":n=this._slerp;i=this._slerpAdditive;a=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(r*6);this._workIndex=5;break;case"string":case"bool":n=this._select;i=this._select;a=this._setAdditiveIdentityOther;this.buffer=new Array(r*5);break;default:n=this._lerp;i=this._lerpAdditive;a=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(r*5)}this._mixBufferRegion=n;this._mixBufferRegionAdditive=i;this._setIdentity=a;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0}Object.assign(Id.prototype,{accumulate:function(e,t){var r=this.buffer,n=this.valueSize,i=e*n+n;var a=this.cumulativeWeight;if(a===0){for(var o=0;o!==n;++o){r[i+o]=r[o]}a=t}else{a+=t;var s=t/a;this._mixBufferRegion(r,i,0,s,n)}this.cumulativeWeight=a},accumulateAdditive:function(e){var t=this.buffer,r=this.valueSize,n=r*this._addIndex;if(this.cumulativeWeightAdditive===0){this._setIdentity()}this._mixBufferRegionAdditive(t,n,0,e,r);this.cumulativeWeightAdditive+=e},apply:function(e){var t=this.valueSize,r=this.buffer,n=e*t+t,i=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(i<1){var s=t*this._origIndex;this._mixBufferRegion(r,n,s,1-i,t)}if(a>0){this._mixBufferRegionAdditive(r,n,this._addIndex*t,1,t)}for(var l=t,u=t+t;l!==u;++l){if(r[l]!==r[l+t]){o.setValue(r,n);break}}},saveOriginalState:function(){var e=this.binding;var t=this.buffer,r=this.valueSize,n=r*this._origIndex;e.getValue(t,n);for(var i=r,a=n;i!==a;++i){t[i]=t[n+i%r]}this._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0},restoreOriginalState:function(){var e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){var e=this._addIndex*this.valueSize;var t=e+this.valueSize;for(var r=e;r<t;r++){this.buffer[r]=0}},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){var e=this._origIndex*this.valueSize;var t=this._addIndex*this.valueSize;for(var r=0;r<this.valueSize;r++){this.buffer[t+r]=this.buffer[e+r]}},_select:function(e,t,r,n,i){if(n>=.5){for(var a=0;a!==i;++a){e[t+a]=e[r+a]}}},_slerp:function(e,t,r,n){dr.slerpFlat(e,t,e,t,e,r,n)},_slerpAdditive:function(e,t,r,n,i){var a=this._workIndex*i;dr.multiplyQuaternionsFlat(e,a,e,t,e,r);dr.slerpFlat(e,t,e,t,e,a,n)},_lerp:function(e,t,r,n,i){var a=1-n;for(var o=0;o!==i;++o){var s=t+o;e[s]=e[s]*a+e[r+o]*n}},_lerpAdditive:function(e,t,r,n,i){for(var a=0;a!==i;++a){var o=t+a;e[o]=e[o]+e[r+a]*n}}});var Od="\\[\\]\\.:\\/";var Dd=new RegExp("["+Od+"]","g");var Nd="[^"+Od+"]";var zd="[^"+Od.replace("\\.","")+"]";var Bd=/((?:WC+[\/:])*)/.source.replace("WC",Nd);var Hd=/(WCOD+)?/.source.replace("WCOD",zd);var Fd=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Nd);var Ud=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Nd);var Gd=new RegExp(""+"^"+Bd+Hd+Fd+Ud+"$");var kd=["material","materials","bones"];function Vd(e,t,r){var n=r||Wd.parseTrackName(t);this._targetGroup=e;this._bindings=e.subscribe_(t,n)}Object.assign(Vd.prototype,{getValue:function(e,t){this.bind();var r=this._targetGroup.nCachedObjects_,n=this._bindings[r];if(n!==undefined)n.getValue(e,t)},setValue:function(e,t){var r=this._bindings;for(var n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n){r[n].setValue(e,t)}},bind:function(){var e=this._bindings;for(var t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t){e[t].bind()}},unbind:function(){var e=this._bindings;for(var t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t){e[t].unbind()}}});function Wd(e,t,r){this.path=t;this.parsedPath=r||Wd.parseTrackName(t);this.node=Wd.findNode(e,this.parsedPath.nodeName)||e;this.rootNode=e}Object.assign(Wd,{Composite:Vd,create:function(e,t,r){if(!(e&&e.isAnimationObjectGroup)){return new Wd(e,t,r)}else{return new Wd.Composite(e,t,r)}},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(Dd,"")},parseTrackName:function(e){var t=Gd.exec(e);if(!t){throw new Error("PropertyBinding: Cannot parse trackName: "+e)}var r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};var n=r.nodeName&&r.nodeName.lastIndexOf(".");if(n!==undefined&&n!==-1){var i=r.nodeName.substring(n+1);if(kd.indexOf(i)!==-1){r.nodeName=r.nodeName.substring(0,n);r.objectName=i}}if(r.propertyName===null||r.propertyName.length===0){throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e)}return r},findNode:function(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid){return e}if(e.skeleton){var r=e.skeleton.getBoneByName(t);if(r!==undefined){return r}}if(e.children){var n=function(e){for(var r=0;r<e.length;r++){var i=e[r];if(i.name===t||i.uuid===t){return i}var a=n(i.children);if(a)return a}return null};var i=n(e.children);if(i){return i}}return null}});Object.assign(Wd.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function e(t,r){t[r]=this.node[this.propertyName]},function e(t,r){var n=this.resolvedProperty;for(var i=0,a=n.length;i!==a;++i){t[r++]=n[i]}},function e(t,r){t[r]=this.resolvedProperty[this.propertyIndex]},function e(t,r){this.resolvedProperty.toArray(t,r)}],SetterByBindingTypeAndVersioning:[[function e(t,r){this.targetObject[this.propertyName]=t[r]},function e(t,r){this.targetObject[this.propertyName]=t[r];this.targetObject.needsUpdate=true},function e(t,r){this.targetObject[this.propertyName]=t[r];this.targetObject.matrixWorldNeedsUpdate=true}],[function e(t,r){var n=this.resolvedProperty;for(var i=0,a=n.length;i!==a;++i){n[i]=t[r++]}},function e(t,r){var n=this.resolvedProperty;for(var i=0,a=n.length;i!==a;++i){n[i]=t[r++]}this.targetObject.needsUpdate=true},function e(t,r){var n=this.resolvedProperty;for(var i=0,a=n.length;i!==a;++i){n[i]=t[r++]}this.targetObject.matrixWorldNeedsUpdate=true}],[function e(t,r){this.resolvedProperty[this.propertyIndex]=t[r]},function e(t,r){this.resolvedProperty[this.propertyIndex]=t[r];this.targetObject.needsUpdate=true},function e(t,r){this.resolvedProperty[this.propertyIndex]=t[r];this.targetObject.matrixWorldNeedsUpdate=true}],[function e(t,r){this.resolvedProperty.fromArray(t,r)},function e(t,r){this.resolvedProperty.fromArray(t,r);this.targetObject.needsUpdate=true},function e(t,r){this.resolvedProperty.fromArray(t,r);this.targetObject.matrixWorldNeedsUpdate=true}]],getValue:function e(t,r){this.bind();this.getValue(t,r)},setValue:function e(t,r){this.bind();this.setValue(t,r)},bind:function(){var e=this.node;var t=this.parsedPath;var r=t.objectName;var n=t.propertyName;var i=t.propertyIndex;if(!e){e=Wd.findNode(this.rootNode,t.nodeName)||this.rootNode;this.node=e}this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(r){var a=t.objectIndex;switch(r){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(var o=0;o<e.length;o++){if(e[o].name===a){a=o;break}}break;default:if(e[r]===undefined){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[r]}if(a!==undefined){if(e[a]===undefined){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[a]}}var s=e[n];if(s===undefined){var l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+n+" but it wasn't found.",e);return}var u=this.Versioning.None;this.targetObject=e;if(e.needsUpdate!==undefined){u=this.Versioning.NeedsUpdate}else if(e.matrixWorldNeedsUpdate!==undefined){u=this.Versioning.MatrixWorldNeedsUpdate}var c=this.BindingType.Direct;if(i!==undefined){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}if(e.morphTargetDictionary[i]!==undefined){i=e.morphTargetDictionary[i]}}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}c=this.BindingType.ArrayElement;this.resolvedProperty=s;this.propertyIndex=i}else if(s.fromArray!==undefined&&s.toArray!==undefined){c=this.BindingType.HasFromToArray;this.resolvedProperty=s}else if(Array.isArray(s)){c=this.BindingType.EntireArray;this.resolvedProperty=s}else{this.propertyName=n}this.getValue=this.GetterByBindingType[c];this.setValue=this.SetterByBindingTypeAndVersioning[c][u]},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}});Object.assign(Wd.prototype,{_getValue_unbound:Wd.prototype.getValue,_setValue_unbound:Wd.prototype.setValue});function jd(){this.uuid=nr.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var e={};this._indicesByUUID=e;for(var t=0,r=arguments.length;t!==r;++t){e[arguments[t].uuid]=t}this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}}Object.assign(jd.prototype,{isAnimationObjectGroup:true,add:function(){var e=this._objects,t=this._indicesByUUID,r=this._paths,n=this._parsedPaths,i=this._bindings,a=i.length;var o=undefined,s=e.length,l=this.nCachedObjects_;for(var u=0,c=arguments.length;u!==c;++u){var h=arguments[u],f=h.uuid;var d=t[f];if(d===undefined){d=s++;t[f]=d;e.push(h);for(var p=0,v=a;p!==v;++p){i[p].push(new Wd(h,r[p],n[p]))}}else if(d<l){o=e[d];var m=--l,g=e[m];t[g.uuid]=d;e[d]=g;t[f]=m;e[m]=h;for(var p=0,v=a;p!==v;++p){var y=i[p],x=y[m];var _=y[d];y[d]=x;if(_===undefined){_=new Wd(h,r[p],n[p])}y[m]=_}}else if(e[d]!==o){console.error("THREE.AnimationObjectGroup: Different objects with the same UUID "+"detected. Clean the caches or recreate your infrastructure when reloading scenes.")}}this.nCachedObjects_=l},remove:function(){var e=this._objects,t=this._indicesByUUID,r=this._bindings,n=r.length;var i=this.nCachedObjects_;for(var a=0,o=arguments.length;a!==o;++a){var s=arguments[a],l=s.uuid,u=t[l];if(u!==undefined&&u>=i){var c=i++,h=e[c];t[h.uuid]=u;e[u]=h;t[l]=c;e[c]=s;for(var f=0,d=n;f!==d;++f){var p=r[f],v=p[c],m=p[u];p[u]=v;p[c]=m}}}this.nCachedObjects_=i},uncache:function(){var e=this._objects,t=this._indicesByUUID,r=this._bindings,n=r.length;var i=this.nCachedObjects_,a=e.length;for(var o=0,s=arguments.length;o!==s;++o){var l=arguments[o],u=l.uuid,c=t[u];if(c!==undefined){delete t[u];if(c<i){var h=--i,f=e[h],d=--a,p=e[d];t[f.uuid]=c;e[c]=f;t[p.uuid]=h;e[h]=p;e.pop();for(var v=0,m=n;v!==m;++v){var g=r[v],y=g[h],x=g[d];g[c]=y;g[h]=x;g.pop()}}else{var d=--a,p=e[d];if(d>0){t[p.uuid]=c}e[c]=p;e.pop();for(var v=0,m=n;v!==m;++v){var g=r[v];g[c]=g[d];g.pop()}}}}this.nCachedObjects_=i},subscribe_:function(e,t){var r=this._bindingsIndicesByPath;var n=r[e];var i=this._bindings;if(n!==undefined)return i[n];var a=this._paths,o=this._parsedPaths,s=this._objects,l=s.length,u=this.nCachedObjects_,c=new Array(l);n=i.length;r[e]=n;a.push(e);o.push(t);i.push(c);for(var h=u,f=s.length;h!==f;++h){var d=s[h];c[h]=new Wd(d,e,t)}return c},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,r=t[e];if(r!==undefined){var n=this._paths,i=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o],l=e[o];t[l]=r;a[r]=s;a.pop();i[r]=i[o];i.pop();n[r]=n[o];n.pop()}}});var qd=function(){function e(e,t,r,n){if(r===void 0){r=null}if(n===void 0){n=t.blendMode}this._mixer=e;this._clip=t;this._localRoot=r;this.blendMode=n;var i=t.tracks,a=i.length,o=new Array(a);var s={endingStart:Pt,endingEnd:Pt};for(var l=0;l!==a;++l){var u=i[l].createInterpolant(null);o[l]=u;u.settings=s}this._interpolantSettings=s;this._interpolants=o;this._propertyBindings=new Array(a);this._cacheIndex=null;this._byClipCacheIndex=null;this._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=Et;this._loopCount=-1;this._startTime=null;this.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;this.paused=false;this.enabled=true;this.clampWhenFinished=false;this.zeroSlopeAtStart=true;this.zeroSlopeAtEnd=true}e.prototype.play=function(){this._mixer._activateAction(this);return this};e.prototype.stop=function(){this._mixer._deactivateAction(this);return this.reset()};e.prototype.reset=function(){this.paused=false;this.enabled=true;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()};e.prototype.isRunning=function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)};e.prototype.isScheduled=function(){return this._mixer._isActiveAction(this)};e.prototype.startAt=function(e){this._startTime=e;return this};e.prototype.setLoop=function(e,t){this.loop=e;this.repetitions=t;return this};e.prototype.setEffectiveWeight=function(e){this.weight=e;this._effectiveWeight=this.enabled?e:0;return this.stopFading()};e.prototype.getEffectiveWeight=function(){return this._effectiveWeight};e.prototype.fadeIn=function(e){return this._scheduleFading(e,0,1)};e.prototype.fadeOut=function(e){return this._scheduleFading(e,1,0)};e.prototype.crossFadeFrom=function(e,t,r){e.fadeOut(t);this.fadeIn(t);if(r){var n=this._clip.duration,i=e._clip.duration,a=i/n,o=n/i;e.warp(1,a,t);this.warp(o,1,t)}return this};e.prototype.crossFadeTo=function(e,t,r){return e.crossFadeFrom(this,t,r)};e.prototype.stopFading=function(){var e=this._weightInterpolant;if(e!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(e)}return this};e.prototype.setEffectiveTimeScale=function(e){this.timeScale=e;this._effectiveTimeScale=this.paused?0:e;return this.stopWarping()};e.prototype.getEffectiveTimeScale=function(){return this._effectiveTimeScale};e.prototype.setDuration=function(e){this.timeScale=this._clip.duration/e;return this.stopWarping()};e.prototype.syncWith=function(e){this.time=e.time;this.timeScale=e.timeScale;return this.stopWarping()};e.prototype.halt=function(e){return this.warp(this._effectiveTimeScale,0,e)};e.prototype.warp=function(e,t,r){var n=this._mixer,i=n.time,a=this.timeScale;var o=this._timeScaleInterpolant;if(o===null){o=n._lendControlInterpolant();this._timeScaleInterpolant=o}var s=o.parameterPositions,l=o.sampleValues;s[0]=i;s[1]=i+r;l[0]=e/a;l[1]=t/a;return this};e.prototype.stopWarping=function(){var e=this._timeScaleInterpolant;if(e!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(e)}return this};e.prototype.getMixer=function(){return this._mixer};e.prototype.getClip=function(){return this._clip};e.prototype.getRoot=function(){return this._localRoot||this._mixer._root};e.prototype._update=function(e,t,r,n){if(!this.enabled){this._updateWeight(e);return}var i=this._startTime;if(i!==null){var a=(e-i)*r;if(a<0||r===0){return}this._startTime=null;t=r*a}t*=this._updateTimeScale(e);var o=this._updateTime(t);var s=this._updateWeight(e);if(s>0){var l=this._interpolants;var u=this._propertyBindings;switch(this.blendMode){case Dt:for(var c=0,h=l.length;c!==h;++c){l[c].evaluate(o);u[c].accumulateAdditive(s)}break;case Ot:default:for(var c=0,h=l.length;c!==h;++c){l[c].evaluate(o);u[c].accumulate(n,s)}}}};e.prototype._updateWeight=function(e){var t=0;if(this.enabled){t=this.weight;var r=this._weightInterpolant;if(r!==null){var n=r.evaluate(e)[0];t*=n;if(e>r.parameterPositions[1]){this.stopFading();if(n===0){this.enabled=false}}}}this._effectiveWeight=t;return t};e.prototype._updateTimeScale=function(e){var t=0;if(!this.paused){t=this.timeScale;var r=this._timeScaleInterpolant;if(r!==null){var n=r.evaluate(e)[0];t*=n;if(e>r.parameterPositions[1]){this.stopWarping();if(t===0){this.paused=true}else{this.timeScale=t}}}}this._effectiveTimeScale=t;return t};e.prototype._updateTime=function(e){var t=this._clip.duration;var r=this.loop;var n=this.time+e;var i=this._loopCount;var a=r===Tt;if(e===0){if(i===-1)return n;return a&&(i&1)===1?t-n:n}if(r===St){if(i===-1){this._loopCount=0;this._setEndings(true,true,false)}e:{if(n>=t){n=t}else if(n<0){n=0}else{this.time=n;break e}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=n;this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(i===-1){if(e>=0){i=0;this._setEndings(true,this.repetitions===0,a)}else{this._setEndings(this.repetitions===0,true,a)}}if(n>=t||n<0){var o=Math.floor(n/t);n-=t*o;i+=Math.abs(o);var s=this.repetitions-i;if(s<=0){if(this.clampWhenFinished)this.paused=true;else this.enabled=false;n=e>0?t:0;this.time=n;this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1})}else{if(s===1){var l=e<0;this._setEndings(l,!l,a)}else{this._setEndings(false,false,a)}this._loopCount=i;this.time=n;this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else{this.time=n}if(a&&(i&1)===1){return t-n}}return n};e.prototype._setEndings=function(e,t,r){var n=this._interpolantSettings;if(r){n.endingStart=Ct;n.endingEnd=Ct}else{if(e){n.endingStart=this.zeroSlopeAtStart?Ct:Pt}else{n.endingStart=It}if(t){n.endingEnd=this.zeroSlopeAtEnd?Ct:Pt}else{n.endingEnd=It}}};e.prototype._scheduleFading=function(e,t,r){var n=this._mixer,i=n.time;var a=this._weightInterpolant;if(a===null){a=n._lendControlInterpolant();this._weightInterpolant=a}var o=a.parameterPositions,s=a.sampleValues;o[0]=i;s[0]=t;o[1]=i+e;s[1]=r;return this};return e}();function Xd(e){this._root=e;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1}Xd.prototype=Object.assign(Object.create($t.prototype),{constructor:Xd,_bindAction:function(e,t){var r=e._localRoot||this._root,n=e._clip.tracks,i=n.length,a=e._propertyBindings,o=e._interpolants,s=r.uuid,l=this._bindingsByRootAndName;var u=l[s];if(u===undefined){u={};l[s]=u}for(var c=0;c!==i;++c){var h=n[c],f=h.name;var d=u[f];if(d!==undefined){a[c]=d}else{d=a[c];if(d!==undefined){if(d._cacheIndex===null){++d.referenceCount;this._addInactiveBinding(d,s,f)}continue}var p=t&&t._propertyBindings[c].binding.parsedPath;d=new Id(Wd.create(r,f,p),h.ValueTypeName,h.getValueSize());++d.referenceCount;this._addInactiveBinding(d,s,f);a[c]=d}o[c].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){var t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r];this._bindAction(e,n&&n.knownActions[0]);this._addInactiveAction(e,r,t)}var i=e._propertyBindings;for(var a=0,o=i.length;a!==o;++a){var s=i[a];if(s.useCount++===0){this._lendBinding(s);s.saveOriginalState()}}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){var t=e._propertyBindings;for(var r=0,n=t.length;r!==n;++r){var i=t[r];if(--i.useCount===0){i.restoreOriginalState();this._takeBackBinding(i)}}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){var n=this._actions,i=this._actionsByClip;var a=i[t];if(a===undefined){a={knownActions:[e],actionByRoot:{}};e._byClipCacheIndex=0;i[t]=a}else{var o=a.knownActions;e._byClipCacheIndex=o.length;o.push(e)}e._cacheIndex=n.length;n.push(e);a.actionByRoot[r]=e},_removeInactiveAction:function(e){var t=this._actions,r=t[t.length-1],n=e._cacheIndex;r._cacheIndex=n;t[n]=r;t.pop();e._cacheIndex=null;var i=e._clip.uuid,a=this._actionsByClip,o=a[i],s=o.knownActions,l=s[s.length-1],u=e._byClipCacheIndex;l._byClipCacheIndex=u;s[u]=l;s.pop();e._byClipCacheIndex=null;var c=o.actionByRoot,h=(e._localRoot||this._root).uuid;delete c[h];if(s.length===0){delete a[i]}this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){var t=e._propertyBindings;for(var r=0,n=t.length;r!==n;++r){var i=t[r];if(--i.referenceCount===0){this._removeInactiveBinding(i)}}},_lendAction:function(e){var t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,i=t[n];e._cacheIndex=n;t[n]=e;i._cacheIndex=r;t[r]=i},_takeBackAction:function(e){var t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,i=t[n];e._cacheIndex=n;t[n]=e;i._cacheIndex=r;t[r]=i},_addInactiveBinding:function(e,t,r){var n=this._bindingsByRootAndName,i=this._bindings;var a=n[t];if(a===undefined){a={};n[t]=a}a[r]=e;e._cacheIndex=i.length;i.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,r=e.binding,n=r.rootNode.uuid,i=r.path,a=this._bindingsByRootAndName,o=a[n],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l;t[l]=s;t.pop();delete o[i];if(Object.keys(o).length===0){delete a[n]}},_lendBinding:function(e){var t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,i=t[n];e._cacheIndex=n;t[n]=e;i._cacheIndex=r;t[r]=i},_takeBackBinding:function(e){var t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,i=t[n];e._cacheIndex=n;t[n]=e;i._cacheIndex=r;t[r]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++;var r=e[t];if(r===undefined){r=new Jh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);r.__cacheIndex=t;e[t]=r}return r},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,i=t[n];e.__cacheIndex=n;t[n]=e;i.__cacheIndex=r;t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,r){var n=t||this._root,i=n.uuid;var a=typeof e==="string"?sf.findByName(n,e):e;var o=a!==null?a.uuid:e;var s=this._actionsByClip[o];var l=null;if(r===undefined){if(a!==null){r=a.blendMode}else{r=Ot}}if(s!==undefined){var u=s.actionByRoot[i];if(u!==undefined&&u.blendMode===r){return u}l=s.knownActions[0];if(a===null)a=l._clip}if(a===null)return null;var c=new qd(this,a,t,r);this._bindAction(c,l);this._addInactiveAction(c,o,i);return c},existingAction:function(e,t){var r=t||this._root,n=r.uuid,i=typeof e==="string"?sf.findByName(r,e):e,a=i?i.uuid:e,o=this._actionsByClip[a];if(o!==undefined){return o.actionByRoot[n]||null}return null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions;for(var r=t-1;r>=0;--r){e[r].stop()}return this},update:function(e){e*=this.timeScale;var t=this._actions,r=this._nActiveActions,n=this.time+=e,i=Math.sign(e),a=this._accuIndex^=1;for(var o=0;o!==r;++o){var s=t[o];s._update(n,e,i,a)}var l=this._bindings,u=this._nActiveBindings;for(var o=0;o!==u;++o){l[o].apply(a)}return this},setTime:function(e){this.time=0;for(var t=0;t<this._actions.length;t++){this._actions[t].time=0}return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,r=e.uuid,n=this._actionsByClip,i=n[r];if(i!==undefined){var a=i.knownActions;for(var o=0,s=a.length;o!==s;++o){var l=a[o];this._deactivateAction(l);var u=l._cacheIndex,c=t[t.length-1];l._cacheIndex=null;l._byClipCacheIndex=null;c._cacheIndex=u;t[u]=c;t.pop();this._removeInactiveBindingsForAction(l)}delete n[r]}},uncacheRoot:function(e){var t=e.uuid,r=this._actionsByClip;for(var n in r){var i=r[n].actionByRoot,a=i[t];if(a!==undefined){this._deactivateAction(a);this._removeInactiveAction(a)}}var o=this._bindingsByRootAndName,s=o[t];if(s!==undefined){for(var l in s){var u=s[l];u.restoreOriginalState();this._removeInactiveBinding(u)}}},uncacheAction:function(e,t){var r=this.existingAction(e,t);if(r!==null){this._deactivateAction(r);this._removeInactiveAction(r)}}});var Yd=function(){function e(e){if(typeof e==="string"){console.warn("THREE.Uniform: Type parameter is no longer needed.");e=arguments[1]}this.value=e}e.prototype.clone=function(){return new e(this.value.clone===undefined?this.value:this.value.clone())};return e}();function Zd(e,t,r){Uu.call(this,e,t);this.meshPerAttribute=r||1}Zd.prototype=Object.assign(Object.create(Uu.prototype),{constructor:Zd,isInstancedInterleavedBuffer:true,copy:function(e){Uu.prototype.copy.call(this,e);this.meshPerAttribute=e.meshPerAttribute;return this},clone:function(e){var t=Uu.prototype.clone.call(this,e);t.meshPerAttribute=this.meshPerAttribute;return t},toJSON:function(e){var t=Uu.prototype.toJSON.call(this,e);t.isInstancedInterleavedBuffer=true;t.meshPerAttribute=this.meshPerAttribute;return t}});function Jd(e,t,r,n,i){this.buffer=e;this.type=t;this.itemSize=r;this.elementSize=n;this.count=i;this.version=0}Object.defineProperty(Jd.prototype,"needsUpdate",{set:function(e){if(e===true)this.version++}});Object.assign(Jd.prototype,{isGLBufferAttribute:true,setBuffer:function(e){this.buffer=e;return this},setType:function(e,t){this.type=e;this.elementSize=t;return this},setItemSize:function(e){this.itemSize=e;return this},setCount:function(e){this.count=e;return this}});function Qd(e,t,r,n){this.ray=new Gr(e,t);this.near=r||0;this.far=n||Infinity;this.camera=null;this.layers=new $r;this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})}function Kd(e,t){return e.distance-t.distance}function $d(e,t,r,n){if(e.layers.test(t.layers)){e.raycast(t,r)}if(n===true){var i=e.children;for(var a=0,o=i.length;a<o;a++){$d(i[a],t,r,true)}}}Object.assign(Qd.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){if(t&&t.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(t.matrixWorld);this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize();this.camera=t}else if(t&&t.isOrthographicCamera){this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t);this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld);this.camera=t}else{console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}},intersectObject:function(e,t,r){var n=r||[];$d(e,this,n,t);n.sort(Kd);return n},intersectObjects:function(e,t,r){var n=r||[];if(Array.isArray(e)===false){console.warn("THREE.Raycaster.intersectObjects: objects is not an Array.");return n}for(var i=0,a=e.length;i<a;i++){$d(e[i],this,n,t)}n.sort(Kd);return n}});var ep=new ir;var tp=function(){function e(e,t){Object.defineProperty(this,"isBox2",{value:true});this.min=e!==undefined?e:new ir(+Infinity,+Infinity);this.max=t!==undefined?t:new ir(-Infinity,-Infinity)}e.prototype.set=function(e,t){this.min.copy(e);this.max.copy(t);return this};e.prototype.setFromPoints=function(e){this.makeEmpty();for(var t=0,r=e.length;t<r;t++){this.expandByPoint(e[t])}return this};e.prototype.setFromCenterAndSize=function(e,t){var r=ep.copy(t).multiplyScalar(.5);this.min.copy(e).sub(r);this.max.copy(e).add(r);return this};e.prototype.clone=function(){return(new this.constructor).copy(this)};e.prototype.copy=function(e){this.min.copy(e.min);this.max.copy(e.max);return this};e.prototype.makeEmpty=function(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this};e.prototype.isEmpty=function(){return this.max.x<this.min.x||this.max.y<this.min.y};e.prototype.getCenter=function(e){if(e===undefined){console.warn("THREE.Box2: .getCenter() target is now required");e=new ir}return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)};e.prototype.getSize=function(e){if(e===undefined){console.warn("THREE.Box2: .getSize() target is now required");e=new ir}return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)};e.prototype.expandByPoint=function(e){this.min.min(e);this.max.max(e);return this};e.prototype.expandByVector=function(e){this.min.sub(e);this.max.add(e);return this};e.prototype.expandByScalar=function(e){this.min.addScalar(-e);this.max.addScalar(e);return this};e.prototype.containsPoint=function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?false:true};e.prototype.containsBox=function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y};e.prototype.getParameter=function(e,t){if(t===undefined){console.warn("THREE.Box2: .getParameter() target is now required");t=new ir}return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))};e.prototype.intersectsBox=function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?false:true};e.prototype.clampPoint=function(e,t){if(t===undefined){console.warn("THREE.Box2: .clampPoint() target is now required");t=new ir}return t.copy(e).clamp(this.min,this.max)};e.prototype.distanceToPoint=function(e){var t=ep.copy(e).clamp(this.min,this.max);return t.sub(e).length()};e.prototype.intersect=function(e){this.min.max(e.min);this.max.min(e.max);return this};e.prototype.union=function(e){this.min.min(e.min);this.max.max(e.max);return this};e.prototype.translate=function(e){this.min.add(e);this.max.add(e);return this};e.prototype.equals=function(e){return e.min.equals(this.min)&&e.max.equals(this.max)};return e}();function rp(e){pn.call(this);this.material=e;this.render=function(){};this.hasPositions=false;this.hasNormals=false;this.hasColors=false;this.hasUvs=false;this.positionArray=null;this.normalArray=null;this.colorArray=null;this.uvArray=null;this.count=0}rp.prototype=Object.create(pn.prototype);rp.prototype.constructor=rp;rp.prototype.isImmediateRenderObject=true;var np=new Un({side:u,depthWrite:false,depthTest:false});var ip=new Ai(new Ci,np);wf.create=function(e,t){console.log("THREE.Curve.create() has been deprecated");e.prototype=Object.create(wf.prototype);e.prototype.constructor=e;e.prototype.getPoint=t;return e};Object.assign(Jf.prototype,{fromPoints:function(e){console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints().");return this.setFromPoints(e)}});function ap(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.");Pf.call(this,e);this.type="catmullrom"}ap.prototype=Object.create(Pf.prototype);Object.assign(ap.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});Object.assign(df.prototype,{extractUrlBase:function(e){console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.");return dd.extractUrlBase(e)}});df.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Object.assign(tp.prototype,{center:function(e){console.warn("THREE.Box2: .center() has been renamed to .getCenter().");return this.getCenter(e)},empty:function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(e){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)},size:function(e){console.warn("THREE.Box2: .size() has been renamed to .getSize().");return this.getSize(e)}});Object.assign(gr.prototype,{center:function(e){console.warn("THREE.Box3: .center() has been renamed to .getCenter().");return this.getCenter(e)},empty:function(){console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");return this.isEmpty()},isIntersectionBox:function(e){console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)},isIntersectionSphere:function(e){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(e)},size:function(e){console.warn("THREE.Box3: .size() has been renamed to .getSize().");return this.getSize(e)}});Object.assign(Or.prototype,{empty:function(){console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty().");return this.isEmpty()}});Yi.prototype.setFromMatrix=function(e){console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().");return this.setFromProjectionMatrix(e)};Object.assign(nr,{random16:function(){console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead.");return Math.random()},nearestPowerOfTwo:function(e){console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().");return nr.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().");return nr.ceilPowerOfTwo(e)}});Object.assign(ar.prototype,{flattenToArrayOffset:function(e,t){console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(e,t)},multiplyVector3:function(e){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.");return e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(e){console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.");return this.copy(e).invert()}});Object.assign(kr.prototype,{extractPosition:function(e){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(e)},flattenToArrayOffset:function(e,t){console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.");return this.toArray(e,t)},getPosition:function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");return(new pr).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},multiplyVector4:function(e){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");e.transformDirection(this)},crossVector:function(e){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.");return e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,r,n,i,a){console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.");return this.makePerspective(e,t,n,r,i,a)},getInverse:function(e){console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.");return this.copy(e).invert()}});yn.prototype.isIntersectionLine=function(e){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(e)};Object.assign(dr.prototype,{multiplyVector3:function(e){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return e.applyQuaternion(this)},inverse:function(){console.warn("THREE.Quaternion: .inverse() has been renamed to invert().");return this.invert()}});Object.assign(Gr.prototype,{isIntersectionBox:function(e){console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(e)},isIntersectionPlane:function(e){console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");return this.intersectsPlane(e)},isIntersectionSphere:function(e){console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(e)}});Object.assign(Rn.prototype,{area:function(){console.warn("THREE.Triangle: .area() has been renamed to .getArea().");return this.getArea()},barycoordFromPoint:function(e,t){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return this.getBarycoord(e,t)},midpoint:function(e){console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint().");return this.getMidpoint(e)},normal:function(e){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");return this.getNormal(e)},plane:function(e){console.warn("THREE.Triangle: .plane() has been renamed to .getPlane().");return this.getPlane(e)}});Object.assign(Rn,{barycoordFromPoint:function(e,t,r,n,i){console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().");return Rn.getBarycoord(e,t,r,n,i)},normal:function(e,t,r,n){console.warn("THREE.Triangle: .normal() has been renamed to .getNormal().");return Rn.getNormal(e,t,r,n)}});Object.assign(Qf.prototype,{extractAllPoints:function(e){console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.");return this.extractPoints(e)},extrude:function(e){console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.");return new Ph(this,e)},makeGeometry:function(e){console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.");return new Dh(this,e)}});Object.assign(ir.prototype,{fromAttribute:function(e,t,r){console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(e)},lengthManhattan:function(){console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(pr.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(t,e)},applyProjection:function(e){console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.");return this.applyMatrix4(e)},fromAttribute:function(e,t,r){console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().");return this.manhattanDistanceTo(e)},lengthManhattan:function(){console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(hr.prototype,{fromAttribute:function(e,t,r){console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().");return this.fromBufferAttribute(e,t,r)},lengthManhattan:function(){console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().");return this.manhattanLength()}});Object.assign(pn.prototype,{getChildByName:function(e){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(e)}});Object.defineProperties(pn.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(Ai.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(Ai.prototype,{drawMode:{get:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.");return Nt},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(sc.prototype,{objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}});Object.defineProperty(gc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});dc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(wf.prototype,"__arcLengthDivisions",{get:function(){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");return this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.");this.arcLengthDivisions=e}});Fi.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. "+"Use .setFocalLength and .filmGauge for a photographic setup.");if(t!==undefined)this.filmGauge=t;this.setFocalLength(e)};Object.defineProperties(Kf.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=e}}});Object.defineProperties(Vn.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead.");return this.array.length}},dynamic:{get:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.");return this.usage===Qt},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.");this.setUsage(Qt)}}});Object.assign(Vn.prototype,{setDynamic:function(e){console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.");this.setUsage(e===true?Qt:Jt);return this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(ci.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(e)},addAttribute:function(e,t){console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().");if(!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");return this.setAttribute(e,new Vn(arguments[1],arguments[2]))}if(e==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.");this.setIndex(t);return this}return this.setAttribute(e,t)},addDrawCall:function(e,t,r){if(r!==undefined){console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.")}console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");this.clearGroups()},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().");return this.deleteAttribute(e)},applyMatrix:function(e){console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().");return this.applyMatrix4(e)}});Object.defineProperties(ci.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}}});Object.defineProperties(pd.prototype,{maxInstancedCount:{get:function(){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.");return this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.");this.instanceCount=e}}});Object.defineProperties(Qd.prototype,{linePrecision:{get:function(){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.");return this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.");this.params.Line.threshold=e}}});Object.defineProperties(Uu.prototype,{dynamic:{get:function(){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.");return this.usage===Qt},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.");this.setUsage(e)}}});Object.assign(Uu.prototype,{setDynamic:function(e){console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.");this.setUsage(e===true?Qt:Jt);return this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ph.prototype,{getArrays:function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")}});Object.assign(Fu.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(Yd.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.");return this}}});Object.defineProperties(Fn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){console.warn("THREE.Material: .wrapRGB has been removed.");return new zn}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=e===h}},stencilMask:{get:function(){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead.");return this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead.");this.stencilFuncMask=e}}});Object.defineProperties(Uh.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");return false},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Fh.prototype,{transparency:{get:function(){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.");return this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.");this.transmission=e}}});Object.defineProperties(Bi.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");return this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=e}}});Object.assign(Bu.prototype,{clearTarget:function(e,t,r,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.");this.setRenderTarget(e);this.clear(t,r,n)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop().");this.setAnimationLoop(e)},getCurrentRenderTarget:function(){console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().");return this.getRenderTarget()},getMaxAnisotropy:function(){console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().");return this.capabilities.getMaxAnisotropy()},getPrecision:function(){console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.");return this.capabilities.precision},resetGLState:function(){console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset().");return this.state.reset()},supportsFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");return this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");return this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.");return this.capabilities.vertexTextures},supportsInstancedArrays:function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");return this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().");this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().");return this.getActiveMipmapLevel()}});Object.defineProperties(Bu.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");return undefined},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.");return this.getContext()}},vr:{get:function(){console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr");return this.xr}},gammaInput:{get:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");return false},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.");return false},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.");this.outputEncoding=e===true?Bt:zt}},toneMappingWhitePoint:{get:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");return 1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(Lu.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");return undefined},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");return undefined},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");return undefined},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(fr.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=e}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=e}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=e}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=e}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=e}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=e}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=e}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=e}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=e}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=e}}});Object.defineProperties(Cd.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this;var r=new Ed;r.load(e,(function(e){t.setBuffer(e)}));return this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});ki.prototype.updateCubeMap=function(e,t){console.warn("THREE.CubeCamera: .updateCubeMap() is now .update().");return this.update(e,t)};ki.prototype.clear=function(e,t,r,n){console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear().");return this.renderTarget.clear(e,t,r,n)};sr.crossOrigin=undefined;sr.loadTexture=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new bf;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,r,undefined,n);if(t)a.mapping=t;return a};sr.loadTextureCube=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new xf;i.setCrossOrigin(this.crossOrigin);var a=i.load(e,r,undefined,n);if(t)a.mapping=t;return a};sr.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};sr.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};if(typeof __THREE_DEVTOOLS__!=="undefined"){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}}))}if(typeof window!=="undefined"){if(window.__THREE__){console.warn("WARNING: Multiple instances of Three.js being imported.")}else{window.__THREE__=t}}}}}));