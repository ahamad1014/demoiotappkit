var __spreadArrays=this&&this.__spreadArrays||function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;for(var r=Array(t),a=0,e=0;e<n;e++)for(var o=arguments[e],u=0,i=o.length;u<i;u++,a++)r[a]=o[u];return r};System.register(["./p-594ff8b8.system.js","./p-22e300c7.system.js"],(function(t){"use strict";var e,n,r;return{setters:[function(t){e=t.c},function(t){n=t.c;r=t.u}],execute:function(){var a=n((function(t,e){Object.defineProperty(e,"__esModule",{value:true});function n(t){return typeof t==="object"&&!("toString"in t)?Object.prototype.toString.call(t).slice(8,-1):t}var r=typeof process==="object"&&"production"==="production";function a(t,e){if(!t){if(r){throw new Error("Invariant failed")}throw new Error(e())}}e.invariant=a;var o=Object.prototype.hasOwnProperty;var u=Array.prototype.splice;var i=Object.prototype.toString;function c(t){return i.call(t).slice(8,-1)}var f=Object.assign||function(t,e){s(e).forEach((function(n){if(o.call(e,n)){t[n]=e[n]}}));return t};var s=typeof Object.getOwnPropertySymbols==="function"?function(t){return Object.keys(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.keys(t)};function p(t){return Array.isArray(t)?f(t.constructor(t.length),t):c(t)==="Map"?new Map(t):c(t)==="Set"?new Set(t):t&&typeof t==="object"?f(Object.create(Object.getPrototypeOf(t)),t):t}var d=function(){function t(){this.commands=f({},y);this.update=this.update.bind(this);this.update.extend=this.extend=this.extend.bind(this);this.update.isEquals=function(t,e){return t===e};this.update.newContext=function(){return(new t).update}}Object.defineProperty(t.prototype,"isEquals",{get:function(){return this.update.isEquals},set:function(t){this.update.isEquals=t},enumerable:true,configurable:true});t.prototype.extend=function(t,e){this.commands[t]=e};t.prototype.update=function(t,e){var n=this;var r=typeof e==="function"?{$apply:e}:e;if(!(Array.isArray(t)&&Array.isArray(r))){a(!Array.isArray(r),(function(){return"update(): You provided an invalid spec to update(). The spec may "+"not contain an array except as the value of $set, $push, $unshift, "+"$splice or any custom command allowing an array value."}))}a(typeof r==="object"&&r!==null,(function(){return"update(): You provided an invalid spec to update(). The spec and "+"every included key path must be plain objects containing one of the "+("following commands: "+Object.keys(n.commands).join(", ")+".")}));var u=t;s(r).forEach((function(e){if(o.call(n.commands,e)){var a=t===u;u=n.commands[e](r[e],u,r,t);if(a&&n.isEquals(u,t)){u=t}}else{var i=c(t)==="Map"?n.update(t.get(e),r[e]):n.update(t[e],r[e]);var f=c(u)==="Map"?u.get(e):u[e];if(!n.isEquals(i,f)||typeof i==="undefined"&&!o.call(t,e)){if(u===t){u=p(t)}if(c(u)==="Map"){u.set(e,i)}else{u[e]=i}}}}));return u};return t}();e.Context=d;var y={$push:function(t,e,n){h(e,n,"$push");return t.length?e.concat(t):e},$unshift:function(t,e,n){h(e,n,"$unshift");return t.length?t.concat(e):e},$splice:function(t,e,n,r){v(e,n);t.forEach((function(t){b(t);if(e===r&&t.length){e=p(r)}u.apply(e,t)}));return e},$set:function(t,e,n){$(n);return t},$toggle:function(t,e){g(t,"$toggle");var n=t.length?p(e):e;t.forEach((function(t){n[t]=!e[t]}));return n},$unset:function(t,e,n,r){g(t,"$unset");t.forEach((function(t){if(Object.hasOwnProperty.call(e,t)){if(e===r){e=p(r)}delete e[t]}}));return e},$add:function(t,e,n,r){A(e,"$add");g(t,"$add");if(c(e)==="Map"){t.forEach((function(t){var n=t[0],a=t[1];if(e===r&&e.get(n)!==a){e=p(r)}e.set(n,a)}))}else{t.forEach((function(t){if(e===r&&!e.has(t)){e=p(r)}e.add(t)}))}return e},$remove:function(t,e,n,r){A(e,"$remove");g(t,"$remove");t.forEach((function(t){if(e===r&&e.has(t)){e=p(r)}e.delete(t)}));return e},$merge:function(t,e,n,r){j(e,t);s(t).forEach((function(n){if(t[n]!==e[n]){if(e===r){e=p(r)}e[n]=t[n]}}));return e},$apply:function(t,e){m(t);return t(e)}};var l=new d;e.isEquals=l.update.isEquals;e.extend=l.extend;e.default=l.update;e.default.default=t.exports=f(e.default,e);function h(t,e,r){a(Array.isArray(t),(function(){return"update(): expected target of "+n(r)+" to be an array; got "+n(t)+"."}));g(e[r],r)}function g(t,e){a(Array.isArray(t),(function(){return"update(): expected spec of "+n(e)+" to be an array; got "+n(t)+". "+"Did you forget to wrap your parameter in an array?"}))}function v(t,e){a(Array.isArray(t),(function(){return"Expected $splice target to be an array; got "+n(t)}));b(e.$splice)}function b(t){a(Array.isArray(t),(function(){return"update(): expected spec of $splice to be an array of arrays; got "+n(t)+". "+"Did you forget to wrap your parameters in an array?"}))}function m(t){a(typeof t==="function",(function(){return"update(): expected spec of $apply to be a function; got "+n(t)+"."}))}function $(t){a(Object.keys(t).length===1,(function(){return"Cannot have more than one key in an object with $set"}))}function j(t,e){a(e&&typeof e==="object",(function(){return"update(): $merge expects a spec of type 'object'; got "+n(e)}));a(t&&typeof t==="object",(function(){return"update(): $merge expects a target of type 'object'; got "+n(t)}))}function A(t,e){var r=c(t);a(r==="Map"||r==="Set",(function(){return"update(): "+n(e)+" expects a target of type Set or Map; got "+n(r)}))}}));var o=r(a);var u=t("g",(function(t,n){if(t===0){return"raw data"}var r=e(t),a=r.day,o=r.hour,u=r.minute,i=r.seconds;var c=function(t){return t>1?"s":""};if(a!==0){return a+" day"+c(a)+" "+n}if(o!==0){return o+" hour"+c(o)+" "+n}if(u!==0){return u+" minute"+c(u)+" "+n}if(i!==0){return i+" second"+c(i)+" "+n}return"N/A"}));var i=t("u",(function(t,e,n){var r;var a=t.findIndex((function(t){return t.id===n}));if(a>=0){return o(t,(r={},r[a]={$set:{id:n,name:e}},r))}return __spreadArrays(t,[{name:e,id:n}])}))}}}));