System.register(["./p-dd4ea63a.system.js","./p-cba1ca58.system.js","./p-7d965fb9.system.js","./p-2792cb06.system.js","./p-4143ebfb.system.js"],(function(r){"use strict";var e,o,n,a,t,i,l,s,u,v,p,c;return{setters:[function(r){e=r.C},function(r){o=r.c;n=r.s;a=r.a},function(r){t=r.c},function(r){i=r.c;l=r.d;s=r.P;u=r.B},function(r){v=r.g;p=r.n;c=r.v}],execute:function(){var d=function(r){return"\nvarying vec3 vColor;\n"+(r?"varying float positionY;":"")+"\nattribute vec3 pointColor;\nuniform float pointDiameter;\nuniform float devicePixelRatio;\n\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position.x, position.y, 0.0, 1.0);\n  gl_PointSize = pointDiameter * devicePixelRatio;\n  vColor = pointColor;\n  "+(r?"positionY = position.y;":"")+"\n}\n"};var h="\nvarying vec3 vColor;\n\nvoid main() {\n  // calculate position such that the center is (0, 0) in a region of [-1, 1] x [-1, 1]\n  vec2 pos = 2.0 * gl_PointCoord.xy - 1.0;\n  // r = distance squared from the origin of the point being rendered\n  float r = dot(pos, pos);\n  if (r > 1.0) {\n    discard;\n  }\n  float alpha = 1.0 - smoothstep(0.5, 1.0, sqrt(r));\n  gl_FragColor = vec4(vColor, alpha);\n}\n";var f=r("M",13);var m=r("t",(function(r){if(r.length===0){return[]}var t=o(r);var i=n(t).reverse();var l=[];var s=new Set;i.forEach((function(r,o){var n=r.value;if(i[o].comparisonOperator===e.EQUAL){var t=v(i[o].color),u=t[0],p=t[1],c=t[2];l.push({upper:n,lower:n,color:[u,p,c]});return}if(o===0){var d=(Number.MAX_SAFE_INTEGER+n)/2;var h=a(d,i);if(h!=null){var f=v(h.color),u=f[0],p=f[1],c=f[2];l.push({upper:Number.MAX_SAFE_INTEGER,lower:n,color:[u,p,c]})}return}var m=i[o-1];var g=m.value;var _=(g+n)/2;var E=a(_,i);if(E!=null){if(!s.has(m.value)){var w=v(E.color),u=w[0],p=w[1],c=w[2];if(m.comparisonOperator===e.EQUAL&&m.value===i[o].value){l.push({upper:g,lower:n,color:[u,p,c]})}else{l.push({upper:g,lower:n,color:[u,p,c]})}s.add(m.value)}}if(o===i.length-1){_=(n+Number.MIN_SAFE_INTEGER)/2;E=a(_,i);if(E!=null&&!s.has(n)){var y=v(E.color),u=y[0],p=y[1],c=y[2];l.push({lower:Number.MIN_SAFE_INTEGER,upper:n,color:[u,p,c]})}return}var A=i[o+1];var N=A.value;_=(n+N)/2;E=a(_,i);if(E!=null&&!s.has(n)){var b=v(E.color),u=b[0],p=b[1],c=b[2];l.push({upper:n,lower:N,color:[u,p,c]});s.add(r.value)}}));var u=l[l.length-1];while(l.length<f){var p=i[i.length-1];var c=p.value;var d=Number.MIN_SAFE_INTEGER+c/2;var h=a(d,i);if(h==null){l.push(u)}else{var m=v(h.color),g=m[0],_=m[1],E=m[2];u={lower:Number.MIN_SAFE_INTEGER,upper:c,color:[g,_,E]};l.push(u)}}return l}));var g="\n#define MAX_NUM_TOTAL_THRESHOLD_BAND "+f+"\n\nstruct Band {\n  float upper;\n  float lower;\n  vec3 color;\n};\n\nvarying vec3 vColor;\nvarying float positionY;\n\nuniform Band thresholdBands[MAX_NUM_TOTAL_THRESHOLD_BAND];\nuniform float yPixelDensity;\n\nvoid main() {\n  // calculate position such that the center is (0, 0) in a region of [-1, 1] x [-1, 1]\n  vec2 pos = 2.0 * gl_PointCoord.xy - 1.0;\n  // r = distance squared from the origin of the point being rendered\n  float r = dot(pos, pos);\n  if (r > 1.0) {\n    discard;\n  }\n  float alpha = 1.0 - smoothstep(0.5, 1.0, sqrt(r));\n\n  for(int i = 0; i < MAX_NUM_TOTAL_THRESHOLD_BAND; i++) {\n    bool isRangeBreached = positionY >= thresholdBands[i].lower && positionY <= thresholdBands[i].upper;\n    bool isEqualsThreshold = thresholdBands[i].lower == thresholdBands[i].upper;\n    bool isEqualsThresholdBreached = positionY == thresholdBands[i].upper;\n\n    if (isRangeBreached || (isEqualsThreshold && isEqualsThresholdBreached)) {\n       gl_FragColor = vec4(thresholdBands[i].color /255.0, alpha);\n       break;\n    } else {\n       gl_FragColor = vec4(vColor, alpha);\n    }\n  }\n}\n";var _=r("P",0);var E=6.25;var w=4;var y=function(r){var e=r[0]!=null?r[0].resolution:null;return e===0?w:E};var A=r("N",2);var N=3;var b=function(r,e,o){var n=e.filter(t).map((function(r){return c(r,r.resolution)}));var a=n.flat();var i=r.attributes,l=i.position,s=i.pointColor;a.forEach((function(r,e){var n=r[0],a=r[1],t=r[2],i=r[3],u=r[4];l.array[e*A]=o(n);l.array[e*A+1]=a;s.array[e*N]=t;s.array[e*N+1]=i;s.array[e*N+2]=u}));r.setDrawRange(0,a.length);l.needsUpdate=true;s.needsUpdate=true};var B=function(r,e){r.setAttribute("position",new u(new Float32Array(e*A),A));r.setAttribute("pointColor",new u(new Uint8Array(e*N),N,true))};var C=r("p",(function(r){var e=r.toClipSpace,o=r.dataStreams,n=r.minBufferSize,a=r.bufferFactor,t=r.thresholdOptions,u=r.thresholds;var v=Math.max(n,p(o)*a);var c=new i;B(c,v);b(c,o,e);var f=t.showColor,_=f===void 0?true:f;var E=new l({vertexShader:d(_&&u.length>0),fragmentShader:!_||u.length===0?h:g,transparent:true,uniforms:{pointDiameter:{value:y(o)},devicePixelRatio:{value:window.devicePixelRatio},thresholdBands:{value:m(u)}}});var w=new s(c,E);w.frustumCulled=false;return w}));var T=r("u",(function(r,e,o,n){if(n===void 0){n=true}e.material.uniforms.pointDiameter.value=y(r);e.material.uniforms.devicePixelRatio.value=window.devicePixelRatio;if(n){b(e.geometry,r,o)}}))}}}));