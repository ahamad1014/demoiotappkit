import{r as t,h as e}from"./p-b5389ff3.js";import{D as i}from"./p-7e2c0687.js";import"./p-2e85d2ee.js";import{S as s}from"./p-fe9c1440.js";const r=new Date(1998,0,0),a=new Date(2e3,0,1),n={x:(r.getTime()+a.getTime())/2,y:2500},h=new URLSearchParams(window.location.search),o=h.get("dataPerRound"),d=h.get("roundFrequency"),c=h.get("viewportSpeed"),w=o?Number.parseInt(o,10):1,l=d?Number.parseInt(d,10):s,p=c?Number.parseInt(c,10):0,m=class{constructor(e){t(this,e),this.dataPoints=[n],this.viewport={start:r,end:a,yMin:0,yMax:5e3},this.viewportLoop=()=>window.requestAnimationFrame(()=>{this.viewport=Object.assign(Object.assign({},this.viewport),{start:new Date(this.viewport.start.getTime()+p),end:new Date(this.viewport.end.getTime()+p)}),this.viewportShifter=this.viewportLoop()})}componentWillLoad(){p>0&&(this.viewportShifter=this.viewportLoop()),this.dataLoop=window.setInterval(()=>{var t;this.dataPoints=[...this.dataPoints,...(t={x:(this.dataPoints[this.dataPoints.length-1].x+a.getTime())/2,y:n.y},new Array(w).fill(0).map((e,i)=>({x:t.x,y:t.y+i})))]},l)}disconnectedCallback(){clearInterval(this.dataLoop),null!=this.viewportShifter&&window.cancelAnimationFrame(this.viewportShifter)}render(){return e("div",{id:"chart-container",style:{border:"1px solid lightgray",height:"500px",width:"500px"}},e("sc-line-chart",{widgetId:"widget-id",dataStreams:[{id:"test",color:"black",name:"test stream",data:this.dataPoints,resolution:0,dataType:i.NUMBER}],size:{height:500,width:500},viewport:this.viewport}),e("sc-webgl-context",null))}};export{m as sc_line_chart_stream_data}