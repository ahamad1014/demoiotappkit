import{r as s,h as t}from"./p-b5389ff3.js";import{D as r}from"./p-063edcd0.js";import{D as i}from"./p-7e2c0687.js";import"./p-2e85d2ee.js";import"./p-fe9c1440.js";import"./p-aa8712f2.js";import"./p-45352c6b.js";import"./p-6b1d36dc.js";import"./p-89fc07b9.js";import"./p-23766e60.js";import"./p-b18ab5ec.js";import"./p-2799ada0.js";import"./p-10a191b8.js";import"./p-ce95813c.js";import"./p-14bccdc1.js";import{u as e,c as p}from"./p-1d380606.js";import{v as a}from"./p-337dace2.js";import{D as o}from"./p-5e4ba06f.js";const c=s=>t("sc-tooltip",Object.assign({},s,{visualizesAlarms:!1,supportString:!1,dataAlignment:r.EITHER})),m=class{constructor(t){s(this,t),this.gestures=!0,this.isEditing=!1,this.bufferFactor=2,this.minBufferSize=1e3}componentWillRender(){a(this)}render(){return t("sc-size-provider",{size:this.size,renderFunc:s=>t("sc-webgl-base-chart",{supportedDataTypes:[i.NUMBER],axis:this.axis,gestures:this.gestures,configId:this.widgetId,legend:this.legend,annotations:this.annotations,trends:this.trends,updateChartScene:e,createChartScene:p,size:Object.assign(Object.assign(Object.assign({},o.size),this.size),s),dataStreams:this.dataStreams,alarms:this.alarms,viewport:this.viewport,minBufferSize:this.minBufferSize,bufferFactor:this.bufferFactor,isEditing:this.isEditing,yRangeStartFromZero:!0,renderTooltip:c,supportString:!1,visualizesAlarms:!1,messageOverrides:this.messageOverrides})})}};export{m as sc_bar_chart}