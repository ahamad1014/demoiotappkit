import { r as registerInstance, h } from './index-0c943849.js';
import { D as DataType } from './dataConstants-856cb1e9.js';
import './index-b3f1c3a1.js';
import { H as HOUR_IN_MS } from './time-b732648c.js';
// viewport boundaries
var Y_MIN = 0;
var Y_MAX = 5000;
var X_MIN = new Date(1999, 9, 0, 0, 0);
var X_MAX = new Date(2000, 2, 0, 0, 10);
// test data point dead center of the viewport
var DATA_POINTS = Array.from({ length: 50 }, function (_, index) {
    return {
        x: new Date(2000, 0, index, 0, 0).getTime(),
        y: (Y_MIN + Y_MAX) / 2,
    };
});
var StatusTimelineFastViewport = /** @class */ (function () {
    function StatusTimelineFastViewport(hostRef) {
        var _this = this;
        registerInstance(this, hostRef);
        this.dataStreams = [];
        this.colorIndex = 0;
        this.start = X_MIN;
        this.end = X_MAX;
        this.idx = 0;
        this.timeRange = [
            [new Date(2000, 2, 0, 0, 0), new Date(2000, 3, 0, 0, 0)],
            [new Date(2010, 4, 0, 0, 0), new Date(2020, 5, 0, 0, 0)],
            [new Date(2030, 6, 0, 0, 0), new Date(2040, 7, 0, 0, 0)],
            [X_MIN, X_MAX],
        ];
        this.changeViewport = function () {
            var _a = _this.timeRange[_this.idx % _this.timeRange.length], start = _a[0], end = _a[1];
            _this.start = start;
            _this.end = end;
            _this.idx += 1;
        };
    }
    StatusTimelineFastViewport.prototype.render = function () {
        var _a;
        return (h("div", { class: "synchro-chart-tests" }, h("button", { id: "change-viewport", onClick: this.changeViewport }, "Change Viewport"), h("br", null), h("br", null), h("div", { id: "chart-container", style: { border: '1px solid lightgray', height: '500px', width: '500px' } }, h("sc-status-timeline", { alarms: { expires: HOUR_IN_MS }, dataStreams: [
                {
                    id: 'test',
                    color: '#264653',
                    name: 'test stream',
                    aggregates: (_a = {}, _a[HOUR_IN_MS] = DATA_POINTS, _a),
                    data: [],
                    resolution: HOUR_IN_MS,
                    dataType: DataType.NUMBER,
                },
            ], widgetId: "widget-id", size: {
                height: 500,
                width: 500,
            }, viewport: {
                yMin: Y_MIN,
                yMax: Y_MAX,
                start: this.start,
                end: this.end,
            } }), h("sc-webgl-context", null))));
    };
    return StatusTimelineFastViewport;
}());
export { StatusTimelineFastViewport as status_timeline_fast_viewport };
