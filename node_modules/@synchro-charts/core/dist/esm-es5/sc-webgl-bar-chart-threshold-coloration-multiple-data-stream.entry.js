import { r as registerInstance, h } from './index-0c943849.js';
import { C as COMPARISON_OPERATOR } from './constants-35570903.js';
import { D as DataType } from './dataConstants-856cb1e9.js';
import './index-b3f1c3a1.js';
import { Y as YEAR_IN_MS } from './time-b732648c.js';
var Y_MIN = 0;
var Y_MAX = 5000;
var X_MIN = new Date(1998, 0, 0);
var X_MAX = new Date(2001, 0, 0);
var TEST_DATA_POINT = {
    x: new Date(1999, 0, 0).getTime(),
    y: 2000,
};
var TEST_DATA_POINT_2 = {
    x: new Date(2000, 0, 0).getTime(),
    y: 4000,
};
var TEST_2_DATA_POINT = {
    x: new Date(1999, 0, 0).getTime(),
    y: 4000,
};
var TEST_2_DATA_POINT_2 = {
    x: new Date(2000, 0, 0).getTime(),
    y: 3000,
};
var ScWebglBarChartThresholdMultipleDataStream = /** @class */ (function () {
    function ScWebglBarChartThresholdMultipleDataStream(hostRef) {
        registerInstance(this, hostRef);
    }
    ScWebglBarChartThresholdMultipleDataStream.prototype.render = function () {
        var _a, _b;
        return (h("div", null, h("sc-bar-chart", { dataStreams: [
                {
                    id: 'test',
                    aggregates: (_a = {},
                        _a[YEAR_IN_MS] = [TEST_DATA_POINT, TEST_DATA_POINT_2],
                        _a),
                    data: [],
                    resolution: YEAR_IN_MS,
                    color: 'black',
                    name: 'test stream',
                    dataType: DataType.NUMBER,
                },
                {
                    id: 'test2',
                    aggregates: (_b = {},
                        _b[YEAR_IN_MS] = [TEST_2_DATA_POINT, TEST_2_DATA_POINT_2],
                        _b),
                    data: [],
                    resolution: YEAR_IN_MS,
                    color: 'black',
                    name: 'test stream',
                    dataType: DataType.NUMBER,
                },
            ], annotations: {
                y: [
                    {
                        value: 2500,
                        label: {
                            text: 'y label',
                            show: true,
                        },
                        showValue: true,
                        color: 'blue',
                        comparisonOperator: COMPARISON_OPERATOR.GREATER_THAN_EQUAL,
                    },
                ],
                thresholdOptions: {},
            }, widgetId: "test-id", size: {
                width: 500,
                height: 500,
            }, viewport: { yMin: Y_MIN, yMax: Y_MAX, start: X_MIN, end: X_MAX } }), h("sc-webgl-context", null)));
    };
    return ScWebglBarChartThresholdMultipleDataStream;
}());
export { ScWebglBarChartThresholdMultipleDataStream as sc_webgl_bar_chart_threshold_coloration_multiple_data_stream };
